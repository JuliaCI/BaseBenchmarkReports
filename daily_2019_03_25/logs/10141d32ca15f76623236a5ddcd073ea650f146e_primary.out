cset: moving following pidspec: 19548
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.322213127 seconds)
loading group "string"... done (took 0.583143778 seconds)
loading group "linalg"... done (took 7.289302909 seconds)
loading group "parallel"... done (took 0.166390182 seconds)
loading group "find"... done (took 1.162446405 seconds)
loading group "tuple"... done (took 2.038787151 seconds)
loading group "dates"... done (took 1.282816243 seconds)
loading group "micro"... done (took 0.238847506 seconds)
loading group "io"... done (took 0.983223474 seconds)
loading group "scalar"... done (took 40.474881162 seconds)
loading group "sparse"... done (took 12.768261304 seconds)
loading group "broadcast"... done (took 1.000046362 seconds)
loading group "union"... done (took 13.887455033 seconds)
loading group "simd"... done (took 4.655322559 seconds)
loading group "random"... done (took 9.377566272 seconds)
loading group "problem"... done (took 1.993528431 seconds)
loading group "array"... done (took 22.273383576 seconds)
loading group "misc"... done (took 2.006393379 seconds)
loading group "sort"... done (took 3.39291587 seconds)
loading group "collection"... done (took 19.153585452 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.555333653 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143673207 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119315072 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.140837378 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186960832 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134728703 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143839134 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086479674 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.898848349 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160981225 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141344618 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.515074894 seconds)
done (took 4.959850213 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.194641889 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089031335 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098008107 seconds)
  done (took 0.863368305 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067059444 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129436563 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08106192 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068550752 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066986317 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081558981 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067596701 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06642174 seconds)
  done (took 1.245426516 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075473036 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069569967 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084344929 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068536573 seconds)
  done (took 0.981996725 seconds)
done (took 4.043682213 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.931916716 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.251410586 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19246994 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464696896 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.151914865 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189113376 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676500631 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.34363491 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.2155302 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102476479 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106573412 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389048403 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107380271 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.67248418 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079207492 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109577373 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159387979 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.457560152 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084575037 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085055666 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105053119 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144651564 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.10523035 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079599462 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168960587 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069945638 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.153070745 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.09568718 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069404795 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.247742532 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189887534 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685707918 seconds)
  done (took 10.608144833 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099643294 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.12060431 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069787662 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141451358 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.12328344 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.074309765 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074640608 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085043636 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093968765 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.16143227 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.121094009 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.125001818 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067864823 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071430922 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.10243401 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230419039 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.095002737 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103908536 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074523278 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077661804 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.127441297 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.100896509 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083661565 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09754377 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.154328622 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196749703 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101345753 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.114897614 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071263922 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100438979 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131678187 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.13328155 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07079167 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084005541 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.158089318 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098387729 seconds)
  done (took 4.637481331 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.109471439 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.176028462 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093864092 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156173131 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086595713 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.13061339 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066781058 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101471172 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252302656 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.100652896 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.488745866 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129815878 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.088935113 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069619507 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087631284 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068939109 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.60697357 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145840612 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105575749 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103164679 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07555741 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087377496 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.358972832 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069486255 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066853095 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086073255 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061375616 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.151477644 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070787674 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.380426155 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.075124202 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.109891071 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071367975 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121985196 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.118214658 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097148862 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13143576 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068625961 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.088110094 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.180437137 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.077631358 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.086307152 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.092652716 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124464809 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12517099 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.072213325 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086327469 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.187427646 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069578128 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.10378603 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.957508099 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167218906 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081213326 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069186045 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.303427029 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104955737 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071208716 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06657984 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.271387181 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.162388089 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069694798 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.091476545 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069272272 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.087081586 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.378815771 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070993056 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.613734955 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072539077 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081002399 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088659406 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070313795 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092882257 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076337947 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.106175919 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070570848 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.070455114 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086897164 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068604075 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.087708314 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095995968 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107429692 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.067403715 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.212813704 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.089879646 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070827452 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.0825043 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090709143 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113711933 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073730303 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068142834 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120700456 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071175362 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086366302 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107334527 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088074567 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106345231 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073594325 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.131470592 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070677068 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.14172706 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068990785 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066834247 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.118529951 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.0890679 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104856554 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101268038 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076099321 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.161631523 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066830783 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.085055175 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069079776 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085153122 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071205863 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070786898 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.103207514 seconds)
  done (took 21.425337619 seconds)
done (took 38.463942093 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.313121832 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.09679544 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096957701 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07977197 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093935128 seconds)
  done (took 1.444963476 seconds)
done (took 2.18164945 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.150481555 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102616589 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080761097 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098692116 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080854513 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10292104 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117520584 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082164219 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118850178 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064595753 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113846519 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064946217 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079783831 seconds)
  done (took 2.022994375 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082629414 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085450629 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088352006 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083706194 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081298789 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084620313 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.0820059 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108074292 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082524947 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090166196 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066825583 seconds)
  done (took 1.66483014 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082320304 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084099776 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086291667 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082762625 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080799837 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083921718 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082341084 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105466985 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08238826 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091028748 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067367217 seconds)
  done (took 1.662664014 seconds)
done (took 6.078684556 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.0798216 seconds)
  done (took 0.806510583 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.740840034 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.817767176 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084856736 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.136464631 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222834129 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.157859491 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.453277275 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.111628525 seconds)
  done (took 10.660746474 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.115816527 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089389204 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073366316 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088523098 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070190174 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088657427 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071104307 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071467666 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085308113 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069814153 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084667807 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072291711 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087219682 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071022472 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087133009 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069341878 seconds)
  done (took 2.091457771 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.10490999 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.103818798 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092066146 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077096595 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090181218 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074552905 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092859999 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075761882 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087501691 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073645274 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092081993 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07603536 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089034646 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067063375 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091855569 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078221208 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088613894 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076771124 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092806457 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077033134 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09247011 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066790731 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08877146 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076487565 seconds)
  done (took 2.870866633 seconds)
done (took 17.164667938 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.134557889 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077281582 seconds)
  done (took 0.946007836 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082825498 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098985506 seconds)
  done (took 0.920556121 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083931213 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081935582 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090665449 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094672792 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08307435 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067062356 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103740705 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068127612 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082666911 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068389033 seconds)
  done (took 1.562987846 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070012443 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095287326 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071150604 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097617113 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075007036 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080521054 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074998716 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085000458 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079803225 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079460408 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072185324 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099924861 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072813313 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101509887 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090498767 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070259567 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088008515 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069093154 seconds)
  done (took 2.216890063 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067482901 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068574008 seconds)
  done (took 0.880664727 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069099745 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065001862 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082408772 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067884572 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079562562 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06455682 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080403021 seconds)
  done (took 1.253999087 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.410439677 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109849893 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.263460686 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072189411 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106216015 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.295711103 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067196051 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07202731 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089261481 seconds)
  done (took 2.269505674 seconds)
done (took 10.791190108 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080676064 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.0872801 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111607968 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.434263207 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107062633 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066967958 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.144060912 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.214761716 seconds)
done (took 1.989187369 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127312673 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.623982524 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.410078932 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214366239 seconds)
  done (took 1.992857072 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.384285388 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091469785 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074226043 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067668897 seconds)
  done (took 1.365829304 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066874064 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070497068 seconds)
  done (took 0.885300614 seconds)
done (took 5.116598159 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067778952 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067132098 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.114004827 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065244641 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084227823 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067316285 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064709777 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.08180599 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06729115 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083839096 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067599597 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067230781 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082065807 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065309644 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065347591 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082201934 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06487556 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064890697 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082312842 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065801868 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082147562 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064883863 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065677322 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08016647 seconds)
  done (took 2.546704305 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086294463 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083965133 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073220194 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088988387 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07232948 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08982307 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.076212791 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067895728 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088900517 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069623055 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086929426 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071935011 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085074521 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072055304 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08486373 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072555662 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088552712 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068229116 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070126393 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086957487 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072945393 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083454005 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.0726057 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088679874 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072479371 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08716074 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07063838 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083956401 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073570718 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086852069 seconds)
  done (took 3.124216297 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071673854 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064780566 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081474643 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072390869 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06502842 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.08220941 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065427336 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081857303 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066648765 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064656696 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082588894 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064524462 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065200051 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082316558 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065852676 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084484694 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082969363 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065068621 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081130921 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066217652 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084170943 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064731579 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065687735 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081218614 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065304816 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064416531 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08138614 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065149606 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.080997386 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065739293 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068066047 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083912905 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064692952 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071293303 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.0849967 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064879418 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069204877 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081561277 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065295302 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080347853 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.0651259 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064820579 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080143713 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07140489 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065400231 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082850699 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065577987 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082153962 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065567153 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06853737 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081018722 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064895319 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082489129 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066052069 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069156577 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080932395 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066714446 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064916201 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081358201 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064620996 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080213794 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064695162 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067448142 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082030066 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080672255 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087535641 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065048061 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066725345 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.081643593 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06749446 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067470762 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094653653 seconds)
  done (took 6.000507111 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119197562 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094172984 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083336298 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06752795 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079848955 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065341819 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068807449 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081335858 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067518084 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087157626 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065408302 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083052631 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067562808 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07995717 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081449594 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067344277 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087059415 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06391064 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065496258 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084441382 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066668464 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084367144 seconds)
  done (took 2.471789854 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.189319708 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088178336 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112231455 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090873872 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085794817 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074599806 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087650048 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07202978 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071764071 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085874988 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070436517 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086950752 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06971691 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085926146 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070567971 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086528285 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072128104 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086358766 seconds)
  done (took 2.345676507 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080205862 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067858736 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108256296 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067534133 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084492406 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070542674 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090524552 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077125071 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086198695 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067841349 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092890089 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071226048 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.195802556 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068240456 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07052877 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083731897 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070591807 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083385096 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076657335 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088439711 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073494627 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091980385 seconds)
  done (took 2.626962178 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082019622 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06911868 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10214295 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086282022 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064525011 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065980072 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090151466 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067568352 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090004541 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069963324 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083222439 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068190211 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072606408 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083558924 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07305122 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083747646 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06949434 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083832283 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070266786 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064898838 seconds)
  done (took 2.300113084 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089085367 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085123332 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069824741 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095018849 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070649743 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086701709 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07885943 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086639311 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07021911 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111588479 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069193291 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085021707 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077371912 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091393741 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069088504 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093900287 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076974714 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093510357 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085466934 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06999163 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109015797 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069881569 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093010978 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069370717 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084721477 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069024273 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085103318 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074624637 seconds)
  done (took 3.074798684 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067530411 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067903906 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081751976 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066265667 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065628677 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081981556 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065748093 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065595659 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085059016 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065887456 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083107856 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06777452 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069192415 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.086090048 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069364756 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069370542 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085892728 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066988401 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066326917 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083398496 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069487308 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085540276 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.070063027 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067194637 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083415485 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068979 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066977391 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083283174 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069195135 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066218221 seconds)
  done (took 2.956755094 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077325708 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091845712 seconds)
  done (took 0.93676557 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06578527 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081997459 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082397301 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072503098 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089114338 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068500717 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092594478 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072563969 seconds)
  done (took 1.389037986 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084475152 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079474762 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086022452 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.096963719 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079734079 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086066346 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160346262 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086370863 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075285652 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082901974 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082739555 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067618031 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091384839 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06807694 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09117207 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074821161 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.08212118 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073835865 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070605538 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083986103 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069911201 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095990918 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071547555 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.082019407 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069941032 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076948201 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096726177 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069578722 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088602746 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075919352 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090596578 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062502914 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068402354 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085545037 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066666579 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094550899 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085304982 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08778505 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078039151 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085822045 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079536606 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.079739049 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073060007 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074357962 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095304162 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068633021 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086040819 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064218984 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082030926 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071422898 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063920233 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085611643 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06300956 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09259992 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072076456 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078939109 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08413187 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069821761 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087835429 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072801711 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091446204 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070963552 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070278748 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084871038 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076024354 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08930864 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078854346 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079828626 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062856549 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067220101 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095996107 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09215046 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090985215 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06905678 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086090702 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066375935 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071390383 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085560986 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075402181 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091730166 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068636771 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091767221 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076987669 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084731593 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071084766 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076278246 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082862107 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070433318 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082885737 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086175883 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08447326 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066324993 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065619939 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.096043225 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071618899 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084440729 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065848931 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091698755 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062546484 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069412968 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085770522 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068912708 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095910006 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07375589 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090280198 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077382541 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.093002841 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068764482 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071640135 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082288712 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069516513 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083943621 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075784325 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062454437 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087586674 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068690531 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085488495 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07687057 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08316974 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06872274 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075973802 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091056283 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066858358 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081292222 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071174199 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084062246 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071342245 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075661973 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083676318 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063112618 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080037247 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072309357 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068082842 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088160625 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072729158 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087932932 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063643975 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082430716 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072512865 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094202054 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06807735 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068943082 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091072026 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069531916 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084021093 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07531077 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071415142 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084073963 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074747359 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085146453 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06356048 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088580178 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07128782 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067501879 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088820635 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072587691 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087155081 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069537917 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066515255 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089985316 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0699978 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084636074 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068771089 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083583232 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078894736 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069878546 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080559834 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065143638 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092077488 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066432892 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067911859 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08367023 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071062205 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086094244 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066887506 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083672464 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070095802 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079486763 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090064707 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068844007 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090761638 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080086934 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084324319 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07065317 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085143662 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069585921 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069237166 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094832971 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07336102 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090160092 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071412479 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081658443 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073845863 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075987526 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084976676 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066391451 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083882039 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072916189 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091100007 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072210763 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069419607 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083315626 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069096046 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089118273 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071394758 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068063762 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084238126 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073173042 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084143209 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075799698 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086484638 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07944161 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088971192 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06440122 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071035446 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083123381 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074903882 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080834778 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066924158 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067331788 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086380591 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067237211 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088179327 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062898426 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075571153 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093753377 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068328235 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084406562 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06882236 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091833751 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070415078 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072503266 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088219874 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075020475 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095987536 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068097298 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088376807 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079743334 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068157358 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079736835 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074081894 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.0842899 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067925556 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067646589 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083389064 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071883963 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094340017 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076002324 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079246141 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071608589 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067075833 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085048432 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063608852 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090324804 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072134568 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069402799 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091825231 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069058321 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086875246 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073865544 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087497621 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071319056 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071626798 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090256969 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.0717971 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090314388 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06942799 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.09050811 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069419543 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068254637 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089674886 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.07030005 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069349611 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094099131 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069931232 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088371168 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073468094 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087899728 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070885019 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.0706342 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087128521 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07374341 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087775156 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070670898 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072583088 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.082791274 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078073471 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087124155 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078635939 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070169941 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.085272574 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076151083 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.09065171 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.076224748 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088377087 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07146899 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071208557 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.088265152 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072941785 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094248836 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067805867 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098487129 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078761332 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087904548 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073248846 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07013051 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089612469 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06988795 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08778775 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071725827 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070120897 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087776787 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075119252 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090445499 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070793413 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072151022 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088861058 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07087425 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088501974 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065432919 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069808308 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08712959 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070705582 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098323531 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071043119 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087496762 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069574079 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071171946 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086688119 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067332655 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096154955 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080740879 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089204171 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077385417 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067121607 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087383818 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079427325 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.082928492 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067246469 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083062512 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066410574 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075912719 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086514324 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078391763 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085460799 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068324075 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065239089 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086897175 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067641938 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080243908 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068302554 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07453581 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084903664 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067730541 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.0857942 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071708282 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069665576 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096025603 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068003763 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086705408 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068865595 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082359488 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067599003 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067960328 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091278853 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.07147301 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067267623 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.085913816 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.07018772 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088515983 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072141397 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069665433 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090495609 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077814522 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087664518 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073463631 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091195204 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065692708 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072806562 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.088088994 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069975301 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08673382 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074353669 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073780476 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090224751 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080454657 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.088621632 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071159979 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088226665 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06795688 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069896556 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.087863198 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070445588 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086813261 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.072639833 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078549145 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08655501 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07349736 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088077133 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070912454 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095695109 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071633719 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073767489 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095786663 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070916149 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089763387 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078652886 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091928529 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07453475 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088069521 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071326176 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077023478 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087276416 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076824669 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.08803448 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071920187 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071979691 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085949268 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070655601 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.08771031 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069295798 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076823534 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089252095 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070109213 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087845082 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068762561 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070394139 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091550013 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077994226 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091260645 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074184834 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083150078 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067421547 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070995368 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086050793 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07194239 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.090625414 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077016962 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072550428 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088723006 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069747604 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.097756619 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076016665 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091349934 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06814914 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073057795 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087608781 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071002517 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086506503 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069135449 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070283658 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090414476 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070822856 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085137215 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076241877 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089753848 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069504259 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069734495 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086699216 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068754734 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080411796 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06943493 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070741708 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091118559 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071317678 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085454806 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079822355 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066288355 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086077394 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072669288 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08534357 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073077202 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.08127452 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070162545 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06966813 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08699791 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06374267 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084633372 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067139875 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071144727 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085673956 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064121803 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097098329 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078259999 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088991791 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067705983 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067462783 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081728344 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064057746 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084974842 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07006232 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070266978 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096718463 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067985043 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085016155 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064690825 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068342261 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089327396 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072220944 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083446717 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064551063 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067243702 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089655576 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074135457 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085509005 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068450588 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071717753 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089596616 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066800606 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089950697 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066608324 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089716269 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082216843 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069133372 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086762832 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075200886 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095621396 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069402739 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081783305 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069739701 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070963188 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086762754 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069522423 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087304749 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08476477 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089441958 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067727449 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084860322 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072303507 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067597736 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094501738 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070114416 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086042291 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07348981 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070140096 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095779637 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070510573 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09483972 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07172535 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089162206 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067790257 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086363257 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067088205 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067055873 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087570927 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069763151 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091151779 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076799446 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085192972 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07974851 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095243628 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071922711 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065064564 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08614135 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068647153 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064151675 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.087666534 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066842237 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084096315 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066672865 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067150562 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087527319 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074074925 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087092257 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070005669 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085722884 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063746202 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071661568 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089227091 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071099076 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065611282 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086349781 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06930484 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090404165 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072807048 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084103281 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070932446 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070358839 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087097684 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064178046 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092894732 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06779391 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072015959 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.085624349 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069189849 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087176348 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072623819 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07386305 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088205815 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071160178 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095434098 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071428112 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.083507119 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06621261 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074848932 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.084786274 seconds)
  done (took 47.502818473 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10977507 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083237992 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064720985 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081806445 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07740995 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085077383 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065616644 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066360848 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08582426 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070003551 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084434982 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066400664 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093106971 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090082283 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09743778 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08879296 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065728415 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066787395 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08425891 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067275594 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093428133 seconds)
  done (took 2.496683011 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088767365 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.102830721 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079830171 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100750556 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092100234 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.079598722 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097599538 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079244292 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10058198 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093900808 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082202176 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099027701 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07763377 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.096432487 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077874732 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097976554 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10307435 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077061325 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.100877806 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081773949 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097319866 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081599788 seconds)
  done (took 2.79829766 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068776998 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067925034 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087504075 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06324619 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.0669622 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081217101 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072113341 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083218261 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071598803 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066328186 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.0856071 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066942796 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087466482 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.074674687 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067835768 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083549602 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133502482 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071562817 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086099853 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068893068 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063377311 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088622598 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063934584 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08218992 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067020276 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072025306 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087326484 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06703324 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.08585538 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067431404 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069505691 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.086640351 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07135319 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06941229 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.088899658 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069440696 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087549527 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.0706058 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064793316 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.0871601 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070798934 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.084169566 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070489882 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070919201 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086683956 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068098301 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070340916 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088772755 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065214921 seconds)
  done (took 4.557206773 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087543445 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.141161084 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089192468 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123729546 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083495481 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094794759 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072233432 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123862608 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.084722585 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067368459 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.103933384 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.084591006 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087901695 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073079879 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093611031 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068232241 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08735742 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068118654 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090806402 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068094431 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.091328026 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074918816 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101190945 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082167963 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090774503 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066572272 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085713049 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072136905 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100401336 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.091959935 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074279067 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092532911 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083751229 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091488552 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067573646 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088108209 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085068044 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08652115 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071403197 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.083746071 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071462374 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091947544 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076449619 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104177601 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068633797 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.092429885 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068013096 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083342425 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081397451 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088585779 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076078327 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101783561 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071944933 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087563517 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071727701 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101985458 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085658849 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067365484 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069684016 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099902119 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.083435327 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072724949 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.101271604 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070476181 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093401002 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083491147 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.091415808 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072642562 seconds)
  done (took 6.747254513 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077657504 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092359483 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083265068 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101981148 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092519587 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075022466 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092183611 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075034833 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092960119 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08006044 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09385176 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115703912 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070041407 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095252189 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07512671 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09335251 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07426025 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093446697 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092429961 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074966025 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092950673 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082787049 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092620291 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100618609 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105701092 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088371942 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075060424 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09290807 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101454654 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075395807 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104703927 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074706226 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093473374 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10258949 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087632031 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093117965 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068308719 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093081242 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075640699 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093490914 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069458106 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101292208 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092951644 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070515551 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093624639 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07640768 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101877127 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.105418758 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078231427 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098206757 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07468685 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102011712 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092377646 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074992293 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101443017 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.127097125 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083350441 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101551962 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092755389 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083239073 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100821055 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.109965438 seconds)
  done (took 6.387794479 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090586704 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09598291 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098408934 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064160796 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06646684 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092217442 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066791236 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084072848 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07780961 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094781751 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08057279 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090775488 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074913528 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098757709 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090124798 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075669591 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091005944 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072486265 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095227677 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071723541 seconds)
  done (took 2.490321078 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077981059 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104508112 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070026822 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093459063 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072609282 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07542744 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090152426 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07131756 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087517705 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071370329 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097554089 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079065532 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088061723 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075070283 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098029721 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074298759 seconds)
  done (took 2.149149372 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080677032 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097950116 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083801112 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08783886 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.0668123 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084782342 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068773275 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063501685 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083705865 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082426458 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087793651 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070957319 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087076001 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06699773 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064220905 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091175762 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064370709 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084771797 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069173139 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103970438 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.081756175 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087598545 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069355865 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089306247 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.07073069 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094418782 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06962359 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065594549 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085542687 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068272559 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087903635 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076463412 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084153256 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067671161 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.085111113 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066216753 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067735784 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087426205 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070925293 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.08631602 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067242328 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.085780472 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068809613 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069501504 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083716285 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068683406 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.082624425 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.076030003 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066052133 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087349839 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067944206 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089113143 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069438375 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.096528815 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072698165 seconds)
  done (took 5.128510706 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082806729 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071025332 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083136229 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066717718 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089541165 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071186705 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070769331 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089606067 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069736482 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084336317 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07071753 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089047576 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070375844 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071281077 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089447288 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07169238 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082923287 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070703497 seconds)
  done (took 2.222324758 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074485048 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068224206 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094413262 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069217934 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087058594 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07196439 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064002164 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085942904 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067913239 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087401243 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068843711 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.07033502 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086404576 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071953466 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087193551 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070060509 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069853656 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086206973 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06847074 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083060489 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071199742 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066901833 seconds)
  done (took 2.499412226 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074670146 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095630797 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.166492928 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.108707917 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084497411 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101119734 seconds)
  done (took 1.460707845 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092985384 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101381328 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07012956 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108509267 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077364043 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089220926 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071050837 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088680059 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079379832 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102755478 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070677451 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098190898 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097827576 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081839772 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095401229 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076322443 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08923815 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070395284 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088329602 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108001167 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071197587 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0982473 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07008223 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0892521 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071108521 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097813896 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098479157 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085437078 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091410986 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081117244 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097809669 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072079583 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101329164 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106245689 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074715777 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100304776 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072151589 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111025509 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096280893 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081067935 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092566681 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078587005 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099965755 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076679504 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1009031 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090805975 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07817906 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090422853 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072575228 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116511659 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09650038 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080531987 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098300458 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080653684 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100936118 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11758063 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105820694 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080685176 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098178442 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105486333 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08099564 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097400058 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080323793 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105622401 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09750643 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080493769 seconds)
  done (took 6.763917746 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085502861 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106727839 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070966776 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103727138 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098402745 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070620646 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089811206 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072382342 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091037223 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072061107 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133601387 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072136417 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101226526 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099873981 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072756073 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091861044 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072413205 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099275238 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070061775 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114188262 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089461328 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079669534 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097943211 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097075759 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084647466 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095413303 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071793525 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091283779 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070940379 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09205646 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09653151 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07275238 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099695643 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071898055 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09991928 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07318862 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091720239 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077544642 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091809645 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077754483 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102310103 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109719291 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072607763 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092618652 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105233464 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072638877 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091434217 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072531742 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091063249 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07274258 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105706508 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086024482 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106022723 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100394107 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072832362 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092592859 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072408532 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092532929 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072679642 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099125689 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100124974 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072915655 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117884906 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072491113 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09307634 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101316951 seconds)
  done (took 6.697791893 seconds)
done (took 130.421894827 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201730867 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185268186 seconds)
  done (took 1.221646597 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070774941 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.117677957 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081207365 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130757421 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087775877 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102359413 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119561526 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082133448 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068301063 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088243648 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069450907 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089842504 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133689112 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06869486 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088114991 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071149639 seconds)
  done (took 2.310907352 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105330435 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.199967789 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111978783 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067010152 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101116948 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081275394 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086871326 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080221041 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093358261 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068474192 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099623179 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078761961 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066829523 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09819736 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093407038 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.081612724 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066788628 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099958129 seconds)
  done (took 2.526219384 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108789503 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145358907 seconds)
  done (took 1.096031768 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.203281559 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123904943 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207448049 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.432371086 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.212854656 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.292493395 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.175186455 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.176775577 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.160064808 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.1701627 seconds)
  done (took 2.992901422 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101159064 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17556125 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319616169 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.140860347 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.089644093 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.119051147 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.141024356 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.111426934 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084782886 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.1039786 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102404982 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080250236 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.119761442 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078046233 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096772758 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079575275 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.123908773 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075952631 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098624216 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077680318 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120920503 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068349692 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096556241 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075940399 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.100807901 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080809401 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.08788416 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06863394 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.096440292 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077965933 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.099747807 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116574093 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08105931 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.134123723 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103554564 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.135333755 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079506029 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094891392 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077088994 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095684097 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079422765 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098950617 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.106367437 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080126016 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068553586 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.100937997 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069491499 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.089599239 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.085061936 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.099937229 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083326816 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.102379456 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.135850544 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.099190111 seconds)
  done (took 6.350340972 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.762240143 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.136620094 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073916404 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.833029557 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116715947 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085806845 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.756970259 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098218774 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.239682817 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.777372108 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119026705 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.083122585 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.214531071 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.219783152 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.9378251 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.293272157 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.649564146 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106959518 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111591653 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136835951 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166419252 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161132769 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.152032985 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.404598551 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098625112 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074764727 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.141594006 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100934376 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144489745 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085439272 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097349879 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.158965454 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.232750266 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.184223044 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.077125886 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093124354 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073395942 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.152085926 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.248768224 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194470049 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.160891263 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070578367 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072225038 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.165171664 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133429765 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07040018 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144887116 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.158475948 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.17357618 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076796726 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.078905913 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.167163442 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144458875 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.148465839 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104146767 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.280743456 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.290819606 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093508231 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124577609 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087839885 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.243402472 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08496731 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207653103 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142093193 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193139509 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073291854 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.757255263 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.152379405 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072321344 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098895972 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12360566 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077984262 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142634601 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.147750904 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.372681998 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.14751593 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096984087 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07226083 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21942115 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086808365 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092887389 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145343545 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077655033 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126038257 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.148261937 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.171250712 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.151850092 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.21778862 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14807783 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.163862293 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077212828 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127257455 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.096911576 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.196030345 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.179416859 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.165804214 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.190104103 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.144607908 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.145968378 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.150712136 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101158385 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.155271484 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123685314 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104049052 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143600068 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.175324066 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127200348 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106091295 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076207287 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.164855272 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.129130888 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088600556 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.14282677 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.174394472 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.435096732 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.152018073 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069556514 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.11088361 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14426299 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.145124241 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09954908 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.216866127 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127110623 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172246123 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124945206 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070334041 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125115375 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.14687102 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103030439 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126726125 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143783705 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079578979 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.217343582 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.197361843 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101902818 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.200477725 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.165276675 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07823929 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174963558 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124297115 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151467366 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.08052412 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141960729 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098504479 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777387238 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.148844121 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125181179 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076542177 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169976774 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07153196 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106993499 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105358307 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070119923 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.75372874 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088278767 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104124099 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085175147 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099045012 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125598666 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140092353 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07590149 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166248585 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.187756582 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101096226 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123084456 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085032334 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.163406997 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.077397731 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106255047 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08712983 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107663718 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126463208 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076107285 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107638882 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.152415475 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.144621685 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.201968389 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.548455913 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093828514 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085658028 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.208657489 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093263418 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.246447823 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139990134 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.205499863 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14514213 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105124 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288343682 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.148029597 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.168304324 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088266977 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.154694078 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090733312 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.14191593 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.146611383 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092621935 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078739771 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.144525269 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.170019486 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149787209 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.945004097 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072444441 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.206918417 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.094765606 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.154152878 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.078389758 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100523707 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.255325622 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093523234 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151963708 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.147007736 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097070132 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.085192001 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.698225302 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.086328471 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.16384123 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.079106099 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201694609 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.146601719 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.140821834 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141667373 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100823864 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.146467947 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.193818217 seconds)
  done (took 41.418551511 seconds)
done (took 58.757877923 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284137622 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.195816505 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.257319381 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.15092758 seconds)
  done (took 1.828614812 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.14874636 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10846362 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120206231 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087530586 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.107381602 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088091648 seconds)
  done (took 1.526759059 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.43260513 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281130892 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241029717 seconds)
  done (took 1.822986295 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.30429159 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.234703634 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.459991168 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.305813934 seconds)
  done (took 2.277942079 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.198072203 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11766629 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.091243335 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086887646 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.163911025 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.266333974 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.131542276 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.196358807 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081155923 seconds)
  done (took 2.248620425 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.205789255 seconds)
done (took 10.777861745 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.121848514 seconds)
    (2/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.3650889 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.236640513 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.118676073 seconds)
    (5/309) benchmarking ("sort", Float64, false)...
    done (took 0.150821783 seconds)
    (6/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.298474164 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.148487681 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.121936441 seconds)
    (9/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.213879035 seconds)
    (10/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.249052838 seconds)
    (11/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.280467523 seconds)
    (12/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.102758613 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.107426762 seconds)
    (14/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.231291845 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080970218 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.289355905 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097470583 seconds)
    (18/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.148843458 seconds)
    (19/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.159993951 seconds)
    (20/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.249049204 seconds)
    (21/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.250343818 seconds)
    (22/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.076360811 seconds)
    (23/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.229534178 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.111938204 seconds)
    (25/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.212783903 seconds)
    (26/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.080174926 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.12026688 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066801929 seconds)
    (29/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.085081254 seconds)
    (30/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074597997 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.246996655 seconds)
    (32/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07416516 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.24615294 seconds)
    (34/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.096690069 seconds)
    (35/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054373024 seconds)
    (36/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.240598587 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.204540959 seconds)
    (38/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.258544186 seconds)
    (39/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.064159975 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070618777 seconds)
    (41/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.133485942 seconds)
    (42/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083292397 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.1450299 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09820297 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.264252697 seconds)
    (46/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.092967713 seconds)
    (47/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091634552 seconds)
    (48/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.126677146 seconds)
    (49/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.145217565 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.113983534 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.096137645 seconds)
    (52/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07870657 seconds)
    (53/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097895443 seconds)
    (54/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094146507 seconds)
    (55/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.102822551 seconds)
    (56/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054037156 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.121371067 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.093103485 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.095952894 seconds)
    (60/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.085777139 seconds)
    (61/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071095354 seconds)
    (62/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.099970226 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095405512 seconds)
    (64/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.103199752 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097607197 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.098733867 seconds)
    (67/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.1930426 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.093797492 seconds)
    (69/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.099546826 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.098324271 seconds)
    (71/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.134530229 seconds)
    (72/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07830182 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.090985448 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090741206 seconds)
    (75/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075430474 seconds)
    (76/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.311487401 seconds)
    (77/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09600707 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.171801347 seconds)
    (79/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067443982 seconds)
    (80/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.252347343 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.171549975 seconds)
    (82/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.176565631 seconds)
    (83/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054804722 seconds)
    (84/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05378411 seconds)
    (85/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054488312 seconds)
    (86/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.243710981 seconds)
    (87/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.100747974 seconds)
    (88/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.100583433 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.203815199 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.12363424 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.127480249 seconds)
    (92/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.100853424 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 0.068679995 seconds)
    (94/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.168885242 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.19731533 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093036526 seconds)
    (97/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.063857211 seconds)
    (98/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076199441 seconds)
    (99/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.103555355 seconds)
    (100/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.096656122 seconds)
    (101/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.249395737 seconds)
    (102/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.134135355 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068248196 seconds)
    (104/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.09100981 seconds)
    (105/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110250989 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.161360879 seconds)
    (107/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081234604 seconds)
    (108/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.123713123 seconds)
    (109/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072830876 seconds)
    (110/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.100159703 seconds)
    (111/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078672009 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069027562 seconds)
    (113/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.075128429 seconds)
    (114/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075974192 seconds)
    (115/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.074053476 seconds)
    (116/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079261369 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.121062192 seconds)
    (118/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054286303 seconds)
    (119/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.113468969 seconds)
    (120/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.175553634 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.098115172 seconds)
    (122/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.080544692 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.16509054 seconds)
    (124/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063893501 seconds)
    (125/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053669534 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.170065428 seconds)
    (127/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068739081 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.08966902 seconds)
    (129/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054722684 seconds)
    (130/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076421393 seconds)
    (131/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.090064528 seconds)
    (132/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077908972 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089993582 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 0.161221894 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077275867 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094672919 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.097999735 seconds)
    (138/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07579967 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.195941401 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.126273543 seconds)
    (141/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07120992 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.076147573 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.100236884 seconds)
    (144/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.262379067 seconds)
    (145/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07848624 seconds)
    (146/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.133807734 seconds)
    (147/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.056187366 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.312876463 seconds)
    (149/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076946487 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076360835 seconds)
    (151/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.261903699 seconds)
    (152/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056402915 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.07588382 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.075845937 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090125536 seconds)
    (156/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.121721596 seconds)
    (157/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.169231347 seconds)
    (158/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063658951 seconds)
    (159/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.071366475 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.093024573 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07824116 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.155135284 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076427338 seconds)
    (164/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.098529689 seconds)
    (165/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.226605995 seconds)
    (166/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.116479702 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.077010359 seconds)
    (168/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054541595 seconds)
    (169/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079671841 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139151629 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.102021766 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.070520707 seconds)
    (173/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088197205 seconds)
    (174/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.055659641 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.258526886 seconds)
    (176/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076126629 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.205188716 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136048412 seconds)
    (179/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.09124554 seconds)
    (180/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079815636 seconds)
    (181/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094538619 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.07066905 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069464956 seconds)
    (184/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.103521278 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.148429369 seconds)
    (186/309) benchmarking ("sort", Float32, false)...
    done (took 0.155833272 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.093128631 seconds)
    (188/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074066353 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069899533 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.097540009 seconds)
    (191/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.219903941 seconds)
    (192/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09902774 seconds)
    (193/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082773828 seconds)
    (194/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.076753938 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.096015953 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.137920109 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075810986 seconds)
    (198/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.24463885 seconds)
    (199/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.140511497 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.070266832 seconds)
    (201/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.055359688 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.101949498 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07567692 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.168580405 seconds)
    (205/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.080010619 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.159526004 seconds)
    (207/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.055934472 seconds)
    (208/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.099337095 seconds)
    (209/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.057595317 seconds)
    (210/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075861805 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.079491439 seconds)
    (212/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074458979 seconds)
    (213/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069426721 seconds)
    (214/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.087745946 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068627053 seconds)
    (216/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055413356 seconds)
    (217/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.196101799 seconds)
    (218/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.071358221 seconds)
    (219/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.079017783 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06996735 seconds)
    (221/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.110474311 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173697112 seconds)
    (223/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.079386945 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.097248109 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.101664483 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077978686 seconds)
    (227/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055848467 seconds)
    (228/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.261387669 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067439282 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.077910074 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073380765 seconds)
    (232/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.099331922 seconds)
    (233/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070626119 seconds)
    (234/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055661669 seconds)
    (235/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.081112502 seconds)
    (236/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069212918 seconds)
    (237/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.055654993 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.091870623 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068652875 seconds)
    (240/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.070879169 seconds)
    (241/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.078635488 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145120939 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094351581 seconds)
    (244/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.065427609 seconds)
    (245/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.056088762 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.133453994 seconds)
    (247/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.056518227 seconds)
    (248/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054969014 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.123402543 seconds)
    (250/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069361797 seconds)
    (251/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.092713996 seconds)
    (252/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.056004028 seconds)
    (253/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.075010392 seconds)
    (254/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.118551524 seconds)
    (255/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071257556 seconds)
    (256/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.088895587 seconds)
    (257/309) benchmarking ("sort", BigInt, false)...
    done (took 0.218460482 seconds)
    (258/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.22167944 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090280449 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070069396 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.148258456 seconds)
    (262/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054677719 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09720889 seconds)
    (264/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071377308 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.169226716 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054788104 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076405482 seconds)
    (268/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.19786639 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.130103059 seconds)
    (270/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068614446 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083441269 seconds)
    (272/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.098430478 seconds)
    (273/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068255624 seconds)
    (274/309) benchmarking ("sort", Int8, false)...
    done (took 0.168277161 seconds)
    (275/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.053027007 seconds)
    (276/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.075600357 seconds)
    (277/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093404734 seconds)
    (278/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076711678 seconds)
    (279/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054372911 seconds)
    (280/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076394433 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09234332 seconds)
    (282/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078465475 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.078407276 seconds)
    (284/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.077912406 seconds)
    (285/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.066081042 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069059923 seconds)
    (287/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.07864199 seconds)
    (288/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088597272 seconds)
    (289/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.199370662 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067311464 seconds)
    (291/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074694745 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.09847932 seconds)
    (293/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055051544 seconds)
    (294/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.103324161 seconds)
    (295/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07503737 seconds)
    (296/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055599284 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.125242346 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075676413 seconds)
    (299/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.101778425 seconds)
    (300/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.073008261 seconds)
    (301/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.057495869 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.122107418 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096247573 seconds)
    (304/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.080010228 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.055838001 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075637555 seconds)
    (307/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.079656587 seconds)
    (308/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.056986099 seconds)
    (309/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.069346256 seconds)
  done (took 35.9841387 seconds)
done (took 36.860977611 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08603899 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120980044 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079505582 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.121345239 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085818283 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.106389462 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078427723 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.106486998 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085503723 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.110418786 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084173591 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058380603 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102574266 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080081838 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.102536212 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099016769 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106074312 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07719393 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.100782899 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069820071 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078369955 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.093503969 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072142871 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058915967 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105348106 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077912135 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.100413084 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079558525 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069358346 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.094001176 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073853733 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.10044239 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069785005 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083099288 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.099529812 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.078777617 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.103564097 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.08135102 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072205906 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.092683395 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078424511 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.092816404 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077461645 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077753838 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.099009004 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075542932 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100560011 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.086129244 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119378229 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070644926 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078220319 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.105046972 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082281687 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.100497845 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074093561 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.100557039 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075488962 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098543231 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.102030617 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073542316 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.101299234 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079602383 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075627975 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.101310473 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078496704 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10394057 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081644036 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.098644075 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080500119 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076019203 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.092949764 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.079313259 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.096088294 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070390353 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080798836 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.104513985 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069014979 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07549687 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.100044172 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077701726 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.092078265 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073812966 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.071663775 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09924186 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072566623 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.058978646 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.096900808 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076239195 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068853693 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.101425675 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.077057579 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.100139799 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071858329 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081661432 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.092938208 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075663827 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.092834272 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070440706 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072436398 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.097572847 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069850295 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072752169 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.10198443 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072374112 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.098256754 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.085082731 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069402664 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.09935575 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069719934 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069359854 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.109456953 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079616759 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.09308545 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072992127 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091719553 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077845555 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069372424 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.0923175 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069651202 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070011478 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.099015155 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070348026 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073292199 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.100620643 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.084029817 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.095637187 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073529665 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072542478 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.093775119 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07603058 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.069626106 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.093632733 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071960641 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.090585407 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072815446 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069745918 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.101138017 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07246696 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.078225687 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.095032891 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079614792 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097677164 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076725336 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075805324 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092019057 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062518207 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072869577 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095619241 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071856364 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.092417761 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071678562 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070370634 seconds)
done (took 13.859880817 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071216229 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.180598566 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.133428682 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.103265588 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.118544247 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070815851 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.106539725 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.136875981 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072518191 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.135885604 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.094002293 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.114319549 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146116538 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069619074 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070663617 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097966212 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072235661 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.119906487 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.110176953 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.115759726 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150038923 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069730317 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129152024 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.095753407 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11855378 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.124571882 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071903092 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073928192 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.097248192 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.131385455 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.0920561 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073798476 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.094730062 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.107641159 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.125394689 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114743854 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070017542 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113178065 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070612226 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070448357 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.121625632 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131680204 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.087120237 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.111380056 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073925047 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.096092679 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071879146 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.115930601 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097581832 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.110697656 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.118258271 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.142248691 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074064793 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.112073456 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069662417 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116358397 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.088736779 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.095777192 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071196972 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072888938 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.093502751 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.074113541 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11948348 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.099271871 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.099138271 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.088752399 seconds)
  done (took 7.608178915 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089533643 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.122111896 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.089770845 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.113680231 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070775931 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070859293 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094776202 seconds)
  done (took 1.587453936 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071503311 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.098698917 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119563722 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.095722752 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.114973181 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092954594 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104887961 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071148832 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.113165616 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072174425 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.116563071 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110925195 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094484074 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077174922 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.117561571 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071676947 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095761534 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092578966 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072753901 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115197753 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072414032 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.11239449 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071649439 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069431374 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10710399 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070951684 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145409569 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076944975 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0965022 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074686899 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06942252 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.148637766 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109638456 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.083038255 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094608845 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087768032 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.110016421 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069823735 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.089446903 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100897708 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.086676056 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.095021025 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072713009 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070097309 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.100326117 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082718949 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.095516323 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072517721 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074130378 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.116184388 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.072320049 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109628478 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072893663 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07548462 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.097039523 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077851791 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.104384609 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.07322636 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.093196953 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097022259 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090674795 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114104947 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.086760464 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.113202711 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074059483 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.110650067 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.087100989 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.07414701 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097679884 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074693788 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.113837998 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069669399 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073738846 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.108042753 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072915044 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119773717 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.096377912 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096491028 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082842161 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072191185 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.096581485 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071800044 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.120131743 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075586136 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071815734 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099450074 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074206814 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.092632557 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070437876 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074636167 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.093536138 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073629438 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074376714 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.09592006 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074501012 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.114147475 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072245633 seconds)
  done (took 9.729655334 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073518683 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072540668 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097822966 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072189825 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072160408 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097303497 seconds)
  done (took 1.43080277 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.104981786 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.098725051 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086769729 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.102223424 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.114396366 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.111445647 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088438948 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11332495 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.090933178 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.109557637 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086241777 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.109351693 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090270847 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099257629 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084745583 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.09846301 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086597208 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102527775 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082117859 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099984222 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091500892 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099523748 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076389257 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.110106322 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073589482 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098482697 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080142491 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.105252944 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08280719 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.109623828 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075973219 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.096445857 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075314681 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.108331841 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086107458 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098453168 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076100164 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07454745 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103199781 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072812333 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109051532 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07695221 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.105018492 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073653599 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.110005721 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074191763 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097141581 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07969648 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.108201944 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074212305 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097779875 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07519668 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096590631 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074115021 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074237709 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.108796919 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097156708 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085970368 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076068497 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.098480066 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073176121 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096217124 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085772167 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096442826 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.083719067 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.097527762 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074870497 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.099516482 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076162865 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.098685182 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074553822 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072748815 seconds)
  done (took 7.519963154 seconds)
done (took 28.807018962 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.650747442 seconds)
  done (took 1.583952463 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.801494237 seconds)
  done (took 1.736555592 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.63126944 seconds)
  done (took 16.571173579 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.642127766 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.81801882 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.822417214 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159510453 seconds)
  done (took 3.376903476 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.880316151 seconds)
  done (took 1.837670913 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.245392339 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.255576969 seconds)
  done (took 1.44170572 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.725124633 seconds)
  done (took 1.671228832 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.298008398 seconds)
  done (took 2.240628088 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.341026363 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.188922785 seconds)
  done (took 1.483451093 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.528369454 seconds)
  done (took 1.473156233 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.485592441 seconds)
  done (took 7.435182235 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235797155 seconds)
  done (took 1.196188565 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.273699981 seconds)
  done (took 1.223606973 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.229281315 seconds)
  done (took 4.179680495 seconds)
done (took 48.394386641 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080924421 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084380841 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106981434 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081457516 seconds)
  done (took 1.296142298 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08149668 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076254634 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103277627 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075213804 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.104346098 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075566559 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100769371 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080765057 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098030059 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076637098 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075394013 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098047055 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079047054 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101223788 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074554413 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079403608 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102756609 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075773343 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101925152 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076092526 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.09597119 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079590759 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080227084 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.097333047 seconds)
  done (took 3.044261396 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080500886 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075883976 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100333838 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07544907 seconds)
  done (took 1.28869864 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079783152 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.118614604 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093102329 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.103400006 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096474453 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114365098 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07304992 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072396964 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097429109 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079382135 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093636165 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.102188912 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11533814 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079910833 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104494608 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06873628 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.094294348 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091687165 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07950495 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103570165 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073423665 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101997463 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07149238 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.11657975 seconds)
  done (took 3.182932137 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08013795 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128681997 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082744128 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.115401122 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095089524 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067510902 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.103068863 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09390371 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.153043468 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067913323 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096625377 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068007004 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098256848 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068470656 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079301274 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.135924437 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.13875185 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071819156 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12437071 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068421216 seconds)
  done (took 2.892797805 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078514874 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073435331 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09178794 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072654552 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080843081 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.1018873 seconds)
  done (took 1.464949835 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070807798 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070918042 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095639339 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071622597 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076163097 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096226339 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070197251 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071205765 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.096288198 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071354651 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094390735 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071221773 seconds)
  done (took 1.922815038 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.468566201 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.0710449 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094512841 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068488682 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074113059 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092798978 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08445856 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070670129 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117512848 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06923713 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093672956 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071202331 seconds)
  done (took 2.343706858 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268958 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079910529 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.335288548 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171799015 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142649088 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160651715 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107322384 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144686625 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.202544147 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142394983 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234335624 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204947524 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138092913 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171792957 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116604811 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.136496187 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192048551 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226661209 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133474214 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231546899 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189501186 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160603836 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210829201 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107236418 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137297266 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149333745 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.098625964 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083124762 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239006345 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18919163 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181390004 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140505056 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122017016 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240711455 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225662277 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175629177 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165621548 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112858541 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.159529591 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170785851 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268610161 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11651893 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201456658 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137513857 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108951363 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178953048 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150303832 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.150445528 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.140375865 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117734054 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180401134 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245507823 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.171357497 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11568187 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140306215 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142631194 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146935192 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106082326 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276520364 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200935415 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187935905 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074153688 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125635522 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194951889 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163460241 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.146305736 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182464583 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098297013 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199217467 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194894369 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148904148 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205311037 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.164311762 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117090919 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152253003 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176613212 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160439759 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235126131 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158147759 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.100331324 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155733573 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130224722 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0860183 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.173787976 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077960138 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24124085 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127968698 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.143352677 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141417189 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115356047 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139938775 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226485828 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209445347 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109193883 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.093008651 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133279454 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154251067 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181249879 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116541831 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139003699 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151888566 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082174244 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19597398 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07925127 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156298161 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105779657 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157165984 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166356118 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079246542 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180826671 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106934458 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.132293513 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168429828 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226894535 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11786973 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085968059 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233542114 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160070169 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135806032 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180894317 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.221312365 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.130516202 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105010269 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208260467 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250671334 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117176116 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204096246 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133699139 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112559414 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091255026 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183052228 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145781031 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.128398625 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111273512 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158317868 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235198317 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.077494814 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124258378 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16994138 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110343423 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108827864 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143526589 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104212956 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.123364593 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.130015454 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136839257 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174619243 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158840715 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137588318 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157753759 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128547961 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227206278 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117871973 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.109350096 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132514713 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.096884113 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170809586 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223402627 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083078131 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23235496 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159390094 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134401991 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151928205 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086917597 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199919884 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082740617 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073523158 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202675831 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140582524 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14092715 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.191807779 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133724975 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.159809258 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.155967262 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191591651 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166430576 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167237742 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137465892 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090445261 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143623024 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184642729 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076505978 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123630903 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.085522657 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133689792 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124062939 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109665578 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177977365 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160169687 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126699253 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143305904 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126379982 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18708636 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079565223 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18903545 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.152681462 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098483569 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.218153121 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220535047 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171191891 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130574151 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182348777 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098346388 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078105287 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.117595398 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16250307 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111605833 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087723488 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149171131 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210144076 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162520022 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17166039 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141965203 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155352583 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219800851 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074870324 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.145585409 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18710569 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157337294 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.159146026 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095155195 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.126154955 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20666865 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109694803 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281406369 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149876875 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158745312 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189940171 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.13870256 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108601162 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108179095 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19914718 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135944714 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189208287 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130615839 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118687519 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141171681 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.084541164 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134479141 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159893885 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149995261 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196585861 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148608325 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16674264 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10561031 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148816081 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15769329 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154307396 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066906599 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152154026 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227680056 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125226607 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150795391 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218583334 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08304978 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.154814823 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248387395 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206195979 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089609113 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139850432 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154567119 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163989243 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151263976 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201211199 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141803286 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169806454 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141951329 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089614524 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116693278 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128958524 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114080151 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.125787805 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.143287364 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.149038803 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124158396 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165072378 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143772054 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142485912 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150459281 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.127574438 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095958099 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128334598 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242145539 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154618803 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241837282 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.130070474 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.187829851 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233906858 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103034223 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084369263 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109225687 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178569361 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087400087 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193261315 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100695222 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135033415 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159693212 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203995862 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10041135 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.096623063 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115167622 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193824494 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140996846 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104579713 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137050188 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22985036 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.134811821 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083768418 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158507358 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13508599 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133371704 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245883159 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064313008 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126851402 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07875212 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109638053 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164402844 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220487444 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086826988 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.157761651 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152194165 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154247674 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163420812 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129838589 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125792598 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118268293 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209100303 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161235879 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.119484248 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145049604 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164879318 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222463438 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137414684 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099451556 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235034626 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218516644 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.229554438 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093165541 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147354204 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147316724 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143335964 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204507083 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087609954 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233333032 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111052025 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172667626 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13408704 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122673658 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163253117 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.125402506 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093045666 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212049463 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151515967 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085673918 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108858995 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162957368 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153829427 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13474849 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078249852 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200591621 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.0750994 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199300875 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208970869 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112007461 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136213768 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100592418 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111116825 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137849719 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134704053 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115824363 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.122863273 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240733222 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.121240696 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188924662 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202770724 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147263957 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172445308 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130623488 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.667116373 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107002259 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194144768 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15121648 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245994066 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129535938 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150980428 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143098491 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155469815 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203388129 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136631074 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182973766 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192725517 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.154604828 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083334762 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134202528 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143028736 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.120528706 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137858151 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14730037 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147510551 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131005704 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155018595 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162750691 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110212713 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100456024 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223848186 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152455706 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179266041 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203733939 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089492316 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15208685 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204619096 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084054346 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180637894 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196173192 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140246826 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130231608 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.109282192 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.112073385 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238490564 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.101341295 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202252042 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183109546 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117510175 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14631764 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.179079575 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168363886 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138492356 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160054463 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125423383 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.145902576 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149326882 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113184397 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081834812 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137251235 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144318327 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.129131117 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132823958 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.123624119 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216314531 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07495832 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125066736 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132766421 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180100501 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248229687 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.117963529 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087492713 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150861152 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145740314 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.148047663 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158595921 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.110514205 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11078886 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.086768824 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.137276185 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11711451 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147282745 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133034034 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143758428 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235180732 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087337476 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.254074594 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126110521 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139932595 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073336127 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.108072361 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101431064 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126246601 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135766136 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127219731 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211036557 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.126960418 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.120541749 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122454097 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077659382 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086298556 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190331533 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14460461 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155192379 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127823868 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067256652 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139281259 seconds)
  done (took 73.424509907 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.135400163 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.10668072 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.121255315 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.178137112 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.15004839 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241942378 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.184383185 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.226761909 seconds)
  done (took 2.383174112 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072317812 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.120510154 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105425518 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.1179418 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091674931 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071437604 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.304887092 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111532812 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068987871 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.11739014 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.122208404 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094189619 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.479946226 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068061776 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095023617 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086672332 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070242816 seconds)
  done (took 3.227292515 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.44602339 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.628313196 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.449951532 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.100622033 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.838105366 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.111762959 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.190242485 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.162522109 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092829841 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.420277564 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.737459041 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.149129675 seconds)
  done (took 17.363304424 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077155405 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071411666 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.112370208 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086651174 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099993822 seconds)
  done (took 1.484930879 seconds)
done (took 116.265811609 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081956329 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.378186067 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05597875 seconds)
  done (took 1.505558873 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087064423 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087758274 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114627642 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087305063 seconds)
  done (took 1.422540904 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076992232 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078641612 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113887992 seconds)
  done (took 1.312147953 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.295052035 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170991536 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092938833 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086125443 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080629594 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106404941 seconds)
  done (took 1.317473108 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075343043 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077749916 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102297962 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078918411 seconds)
  done (took 1.373557246 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079342001 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05654542 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058185804 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08330032 seconds)
  done (took 1.320229779 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092946209 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107865225 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083508887 seconds)
  done (took 1.326180231 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.112593412 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.115643619 seconds)
  done (took 1.273081428 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085621474 seconds)
  done (took 1.124688316 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096670735 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.145546558 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.163083062 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.14145164 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.171737924 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.141085074 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.116619818 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.09129325 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.106993347 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.119279679 seconds)
  done (took 2.33811325 seconds)
done (took 15.991779991 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081672075 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.396350952 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364408633 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.120940446 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672233402 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.387664425 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.018176672 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121986977 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111263217 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096597891 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087207647 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678534896 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.965961747 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327125476 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.986001086 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326362534 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679841216 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07089792 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094543802 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071046707 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.000537424 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095488912 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070207149 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096038002 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65146298 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374362793 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096843298 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326552437 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096025168 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073127323 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357876621 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097083737 seconds)
  done (took 16.028121101 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073720841 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.146733062 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07746938 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086716241 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099404587 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071957741 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.101642299 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072658551 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.150572547 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069925725 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114358674 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070955352 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101224843 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072158959 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089280726 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096954209 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071470522 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097046887 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07129961 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071424686 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115937185 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069987525 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096457559 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0719024 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070932681 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109235576 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071422753 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096540303 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071632441 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07275606 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09984674 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072103142 seconds)
  done (took 3.867741572 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118270285 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.156382353 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077158507 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132242021 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.142913999 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07272158 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.174524156 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097453517 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155083986 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070654052 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113825003 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070638624 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130532984 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07161575 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11671946 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071112963 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098166352 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071336242 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070901971 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097497245 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090027312 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096266252 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072117444 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071085433 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097258797 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084304219 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097576077 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074191846 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071082988 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098819607 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07377894 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097310911 seconds)
  done (took 4.18668462 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074759236 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077263823 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112090723 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087067727 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098154618 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07500341 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075047412 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099133683 seconds)
  done (took 1.74548728 seconds)
done (took 26.868679666 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081171425 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071869136 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102586187 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083500171 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100593306 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082542786 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06967067 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103662057 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07830413 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101025375 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078842927 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069652765 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099965535 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071246003 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077834349 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097069807 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082545349 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100283405 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082664803 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.108900802 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072768784 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078152318 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102634577 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082764637 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108780448 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083070283 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.108726242 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076274089 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071078753 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099423463 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079591754 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.115083258 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071621303 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.107589627 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070691076 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070033766 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.096129808 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071149481 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081794669 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.103302102 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072562047 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.103249666 seconds)
  done (took 4.712474678 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091926544 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09469844 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.1156779 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065100824 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09748452 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064459576 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.118164934 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062877297 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064417919 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.118945895 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058536994 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060399064 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.088608372 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057005036 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061014223 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058686952 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089490733 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059613644 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059668929 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087163126 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.063580465 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056437285 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088791232 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062788729 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058932266 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064559358 seconds)
  done (took 3.018816037 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078165806 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084888257 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117836279 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130998301 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.13520514 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077947258 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.10733316 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088996104 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113610142 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070034898 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.099963447 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099882566 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089313553 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103601795 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070398823 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.112513919 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085648668 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072345514 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103789926 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091443511 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114351495 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080556943 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118109463 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083356676 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069754426 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09953426 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07465522 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.110467443 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07601704 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.0789783 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.101541216 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073130234 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098608898 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082352704 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.100523377 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072297097 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089298951 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106755743 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078572971 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.097344887 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074331169 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071004821 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.117629808 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.11460094 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09705144 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077262861 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.112664435 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080241222 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069606471 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115364614 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079394643 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096613493 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074294977 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069879225 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09709834 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084333295 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.098951148 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07367136 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07929018 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100260883 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082962455 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.100501736 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086184492 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069445282 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103820714 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069737308 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.097359901 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070003442 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092291254 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097990105 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110777783 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097941184 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071540707 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.105501666 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078014366 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075703625 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.097452269 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085704058 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106299854 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074099142 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079434233 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.100324081 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07323433 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115257107 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073324092 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07158995 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.097703324 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077107353 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100032503 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072070731 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08433303 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.097006069 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072806289 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.113982003 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071019921 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072299012 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.103560159 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075190388 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09644931 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083396522 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101853113 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071765557 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079767483 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097669819 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073876824 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.105630922 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076336742 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069255941 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.101531392 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077193037 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071016169 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.098015963 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072460614 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.098909334 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080869496 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077000951 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.101292709 seconds)
  done (took 11.542483187 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.196305852 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.189780976 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073143177 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.182764306 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079110125 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.110481655 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.184213224 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099138367 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.09851029 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071351166 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071199468 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.136660506 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.131125164 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.112835377 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.108805068 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070276242 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116701129 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.111867798 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.185216683 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.179369306 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.118495876 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078316015 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.09970219 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072122534 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072349635 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.108529371 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087645862 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104113438 seconds)
  done (took 4.312393176 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084402875 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.126132348 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076686919 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088336705 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.121197657 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070124173 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101562148 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072197398 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109379108 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082952194 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09772059 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076446515 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077286218 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106298781 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072088086 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107520438 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080244618 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071457788 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100967484 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074180402 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.103763348 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.083820903 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101495436 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071270333 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077370954 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097190026 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067648211 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.116449317 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07046426 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116716007 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069322081 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10361988 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081372119 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071058788 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.098139057 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072635855 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072323083 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100249764 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072922616 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.095366302 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069568918 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059996295 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.095951602 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083770716 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.103030698 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062894266 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076205837 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.103415581 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075839307 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068783215 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100257248 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073358919 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.100418772 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078131464 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074751808 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.103741678 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074495463 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.069100716 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104099545 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07361466 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066539073 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096503444 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07536352 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.097340664 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078949222 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.101672817 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070179091 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07202939 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.102078323 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077747392 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072553771 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101509815 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068860285 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072593844 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102403887 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074840785 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.100503792 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069641305 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069737915 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098754469 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057854389 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070897647 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.083715474 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074077199 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068975709 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.096791586 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072634869 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.106357192 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084441189 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.099414467 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077385508 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070703714 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.097202149 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07441243 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065342854 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.100648116 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084739821 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.114294664 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070748388 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.09654532 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084326154 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.102330671 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070614701 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058633976 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.104649739 seconds)
  done (took 10.017884741 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.0951684 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.121852278 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073179022 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084587926 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124037961 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094864385 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105646682 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076483167 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071962176 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.115097321 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069926852 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10602576 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.074626946 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07888609 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.122787447 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078156002 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101310311 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080077739 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.078628108 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.134506701 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084174719 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111790788 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080482929 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.099429466 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075777289 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083398797 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125996898 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080603778 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.10760891 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085558605 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108987415 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099302239 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085780328 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102790057 seconds)
  done (took 4.292292464 seconds)
done (took 38.943109678 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.136195274 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.335532681 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.123605707 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.976256892 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.157101677 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.151531253 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.136477057 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.124182281 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.244858506 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.126772699 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.361679457 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.685555901 seconds)
done (took 58.628667554 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.216700798 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.260183284 seconds)
    (2/2) benchmarking "String"...
    done (took 1.392238235 seconds)
  done (took 3.72102513 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.50298292 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.063604753 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.409477945 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.123795446 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.123957806 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.581166602 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.628727841 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.919977685 seconds)
  done (took 26.919395281 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.125943873 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.46248223 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.280777547 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.306551712 seconds)
  done (took 17.245227338 seconds)
done (took 57.674073189 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.122964182 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.141419389 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.135742331 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.107161376 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.221951635 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.15288728 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.480444432 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.128619125 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.124971932 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.138164689 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.121231153 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.121347889 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.123730453 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.502254987 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.125848135 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.120480897 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.160185263 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.646169972 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.484028393 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.131040566 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.140782518 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.170364711 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.140599964 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.124260054 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.122440022 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.119600233 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.121159441 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.130719473 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.996876838 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.119491483 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.187525444 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.641360549 seconds)
  done (took 187.375102274 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.119127443 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.144829419 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.237575289 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.154602489 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.547570936 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.322909873 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.239444188 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.616216213 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.135331987 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.149506111 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.351665918 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.123256599 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.419696348 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.129879328 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.128761152 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.22570771 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.297553542 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.414525933 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.136112958 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.389419234 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.146284114 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.360095925 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.28297755 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.307059408 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.16133368 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.210538972 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.145540222 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.150552473 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.311290463 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.234160611 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.123984407 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.165308383 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.609901825 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.980077338 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.125468836 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.147373701 seconds)
  done (took 146.811229817 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.373057366 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.116908086 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.116288342 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.116057086 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.141426749 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.117480036 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.562093663 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.566565044 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.609396819 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.441555673 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.177169702 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.298707524 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.120204686 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.203845301 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.128487022 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.117673416 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.132177977 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.14330552 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.122310841 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.117067449 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.565431379 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.134656934 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.262064195 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.122694164 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.119569335 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.144093427 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.508125296 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.117372922 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.142644302 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.435264737 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.423020108 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.153876462 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.118595328 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.344119728 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.121656054 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222532988 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.119679699 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.144039782 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.117907768 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.375662931 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.119133976 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.119520187 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.12134848 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.628801987 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.122174997 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.564250127 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.123561581 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.952586018 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.122991782 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.117334749 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.582626326 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.436540234 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.120224537 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.118423079 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.121562076 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.118421893 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.11871738 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.144292427 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.540810012 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.213768761 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.120048332 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.122141024 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.144642236 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.119356713 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.149204182 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.11958212 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.499205243 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.174713719 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.236570943 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.570269021 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.122142316 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.20877085 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232792674 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.11948301 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.119504786 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.120295246 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.119442104 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.221195556 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.11915061 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.120328527 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.466578803 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.120003372 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.125610083 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.121863926 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.177245599 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.208766657 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.121335049 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.324479264 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.124089988 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.120791978 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.77637794 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.213094365 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.121724905 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.121964848 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.121623575 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.469722357 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.569752045 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.242797024 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.126969278 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.565965507 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.125017402 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.1268196 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.480345232 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.562795026 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.635567026 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.127810135 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.225266076 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.126707871 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.125665311 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.124260325 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.153399766 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.126108823 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.183173889 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.123385874 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.515905781 seconds)
  done (took 334.380270787 seconds)
done (took 671.009649398 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.742687423 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.728512505 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.825603499 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.736093261 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.700117382 seconds)
  done (took 9.802804375 seconds)
done (took 10.870578705 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.285738826 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.287383089 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.177287718 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.288308479 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.147779815 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.302762219 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.265931154 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.144914465 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.214117618 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.190432186 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.211855964 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.167305629 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.146092922 seconds)
  done (took 16.90080145 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.461063217 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.45642203 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.190600549 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.423353589 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.16436456 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.416416995 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.315806656 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.32567235 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.344091164 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.139319723 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.140919957 seconds)
  done (took 15.447493402 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.415666267 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.407975505 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.193183727 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.418791359 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.167626296 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.417169217 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.318667576 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.321801118 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.310860172 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.139467356 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.138770141 seconds)
  done (took 15.319701585 seconds)
done (took 48.735503063 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.133504404 seconds)
  done (took 2.202391371 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.168152665 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.320841032 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.147818976 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.140975694 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.134920875 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.13731812 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.140625603 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.135112422 seconds)
  done (took 10.396039553 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.133437359 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.133643904 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.133805839 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.133244055 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.131308499 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.135969643 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.131283032 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.130620009 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.131542612 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.131197093 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.131836649 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.133271713 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.136161628 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.131842953 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.13545298 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.132490511 seconds)
  done (took 19.198689555 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.134023772 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.130994893 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.13137164 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.133687082 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.132077804 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.132148707 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.131238239 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.134441809 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.131415675 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.13107071 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.132929944 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.131132755 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.132319845 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.132320649 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.132012324 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.133169169 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.134816261 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.134462402 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.138308356 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.133185735 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.133369371 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.131732318 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.133121245 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.132293543 seconds)
  done (took 28.260373794 seconds)
done (took 61.127082241 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.943603624 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.579577912 seconds)
  done (took 8.595524963 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.135418983 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.133658335 seconds)
  done (took 3.341869359 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.135123398 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.134961367 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.13505877 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.134658002 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.13556408 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.135850306 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.135164979 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.135780569 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.13546774 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.135605759 seconds)
  done (took 12.42430531 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.137763397 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.137733548 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.132928658 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.137642735 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.134991814 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.13396877 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.137429975 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.137479255 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.137873343 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.140035044 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.139232325 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.137571445 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.139390408 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.136009462 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.14008013 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.13701097 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.13799947 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.137769004 seconds)
  done (took 21.54613293 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.141250679 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.140552701 seconds)
  done (took 3.353641361 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.137835469 seconds)
    (2/7) benchmarking "second"...
    done (took 1.137146876 seconds)
    (3/7) benchmarking "month"...
    done (took 1.13749622 seconds)
    (4/7) benchmarking "year"...
    done (took 1.137790009 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.138351145 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.136244793 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.137651236 seconds)
  done (took 9.038594602 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.137602971 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.317547391 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.392887806 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.730364616 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.139360841 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.14092865 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.044485815 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.141080562 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.144743059 seconds)
  done (took 13.265596163 seconds)
done (took 72.636020425 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.098371396 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.131124672 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.925529055 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.152182226 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.150050058 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.47626573 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.142130331 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.249104163 seconds)
done (took 36.400258842 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.141843592 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.806881415 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.814231591 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.139200353 seconds)
  done (took 10.837807731 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.126658542 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.938386752 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.119238859 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.066477134 seconds)
  done (took 17.326144805 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.680158135 seconds)
    (2/2) benchmarking "read"...
    done (took 1.465246782 seconds)
  done (took 4.223849854 seconds)
done (took 39.603794323 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.140845233 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.139845843 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.137681299 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.137919611 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.142230786 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.14223371 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.139391843 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.138692814 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.13992687 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.140984884 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.142428635 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.140921199 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.140101801 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.140574867 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.139814333 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.142262295 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.137429071 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.13927042 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.140967265 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.140110462 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.143374402 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.139479593 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.138982901 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.140424827 seconds)
  done (took 28.443810861 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.142654993 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.140259881 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.14174239 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.143096575 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.141456479 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.144218484 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.142319455 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.140473553 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.141999144 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.142444355 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.137510415 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.13968054 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.140992721 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.139319648 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.141566518 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.139278596 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.145097752 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.140338472 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.142838353 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.140351465 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.141634495 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.138430349 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.139690769 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.142940436 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.139547332 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.138201332 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.141438878 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.139420032 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.141495662 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.14074161 seconds)
  done (took 35.308246366 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.144985894 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.148139727 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.141110922 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.142113166 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.141690151 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.142372437 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.142011171 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.141914392 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.144979295 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.142876751 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.142639013 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.142273299 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.14281572 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.141770427 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.142778124 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.144115719 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.141876646 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.141436889 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.140455657 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.143723999 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.142417655 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.141986724 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.142034509 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.143139856 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.142948859 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.14540791 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.143521709 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.143138342 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.145094527 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.144026442 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.144075907 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.146415883 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.145113882 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.144644242 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.145727185 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.144115439 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.148115079 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.151430666 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.144926886 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.141930718 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.144823376 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.144725514 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.14607055 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.144703374 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.145466103 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.146399724 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.145937842 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.144995319 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.144816526 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.145930206 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.145238007 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.144551994 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.145971801 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.14552864 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.146590547 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.146224954 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.146408531 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.145390274 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.142783888 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.146936237 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.145842352 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.146198641 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.145382294 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.146423001 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.146256399 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.146187945 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.14514689 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.141755269 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.146320572 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.146956372 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.148951308 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.145532519 seconds)
  done (took 83.487822553 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.145231888 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.145430206 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.146294268 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.144444018 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.144577427 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.143981177 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.14495793 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.146150809 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.143566402 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.146033987 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.146277572 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.142667856 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.144501517 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.146459736 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.144190319 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.142514701 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.146823609 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.143209995 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.147437269 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.146825501 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.145130765 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.142505615 seconds)
  done (took 26.272417432 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.144857034 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.145077206 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.144735157 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.146016472 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.143686896 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.14542348 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.14659257 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.14694825 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.147233587 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.14410311 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.143300117 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.146992095 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.144025489 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.143449107 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.14466559 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.143644468 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.147657658 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.142935074 seconds)
  done (took 21.695225313 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.145145406 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.145035759 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.146686798 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.144206301 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.145569173 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.146349762 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.144953257 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.145233772 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.14800287 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.142835466 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.14713862 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.145808963 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.147213521 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.143775497 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.147134854 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.14483098 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.1456333 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.14470549 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.147034817 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.14413247 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.144899983 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.149716628 seconds)
  done (took 26.291233349 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.147699703 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.148592948 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.144187487 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.144593576 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.14420285 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.147762887 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.148486683 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.145642679 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.147399281 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.147167194 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.146716532 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.148949534 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.145625711 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.147206351 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.145913362 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.146144037 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.149244698 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.147524031 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.148259799 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.145957626 seconds)
  done (took 24.022343919 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.149437284 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.148258715 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.148329191 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.149527348 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.151966926 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.150604753 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.147696159 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.148903072 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.152258328 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.149747518 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.149019381 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.151486425 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.150089561 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.152734319 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.152783193 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.150503253 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.151590674 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.149040625 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.150175775 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.151525253 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.152059004 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.152112578 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.150691805 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.153038817 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.150901455 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.15249532 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.153360776 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.15376574 seconds)
  done (took 33.31004341 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.152091901 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.152621775 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.148368255 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.149626658 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.14901982 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.147897731 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.151494444 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.148338623 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.151435132 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.149305452 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.151675518 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.153318226 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.153274303 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.152070436 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.154160707 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.154852436 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.150160201 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.150231512 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.149548369 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.151344126 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.153123705 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152882396 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.151624974 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.146257506 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.148641726 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.150809287 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.151875455 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.151560569 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.151398161 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.150218423 seconds)
  done (took 35.61889317 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.172459513 seconds)
    (2/2) benchmarking "in"...
    done (took 1.172034582 seconds)
  done (took 3.433825463 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.149686942 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.152403789 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.154282058 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.150021922 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.151126418 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.154625985 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.15278892 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.150110051 seconds)
  done (took 10.304572325 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.15137952 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.155619683 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.153860305 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.155619796 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.15525115 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.155127817 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.160244752 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.166196011 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.155501728 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.154544438 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.157064909 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.157008649 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.154889589 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.153972273 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.153833398 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.156011347 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.155849897 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.15031665 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.156557542 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.155305581 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.154338513 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.154681565 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.153661035 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.153230803 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.155385778 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.165706954 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.157906096 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.155344213 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.15414849 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.159710781 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.15271411 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.153015028 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.155138213 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.15672801 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.155795712 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.155889009 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.166479679 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.16331394 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.163436365 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.154062588 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.154721143 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.152489652 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.157634722 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.157675467 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.155405905 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.155566042 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.156410249 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.155140016 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.156842289 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.157531245 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.157739677 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.154032174 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.154475542 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.1573555 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.157228237 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.158541221 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.168698002 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.156214122 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.163241544 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.163239816 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.164607889 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.164200243 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.158454773 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.156168893 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.164153349 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.175130712 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.16117474 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.168467253 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.154682411 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.1567722 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.16345192 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.169533098 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.16310948 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.157429532 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.15806739 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.158596738 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.154800832 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.15595858 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.164809298 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.173925305 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.156411463 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.159066559 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.166240221 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.171176036 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.155806719 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.158539822 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.15532755 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.156312074 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.160585881 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.164609266 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.170871579 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.156173957 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.155652738 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.156750926 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.159001144 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.160439033 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.154643525 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.157246093 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.155342563 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.155824732 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.157790496 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.1579289 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.160764903 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.157004935 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.15855897 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.165973205 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.16019155 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.156966943 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.163871814 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.158977911 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.157617808 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.156979415 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.161176651 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.155318027 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.158972877 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.161789457 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.15809613 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.159456795 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.15852812 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.157775486 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.165809779 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.178781695 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.157524275 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.159065415 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.162283804 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.165047368 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.15959431 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.161356018 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.159523528 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.156186609 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.1573 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.159450576 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.161008302 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.159237017 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.158548522 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.160302059 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.158568887 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.158511658 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.158129565 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.160740193 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.161549943 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.15918445 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.160181343 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.161746316 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.16034731 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.159594497 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.166446313 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.159948831 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.161695183 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.161922341 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.158192803 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.16121646 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.160294155 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.158041509 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.162051625 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.157141612 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.161612556 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.161859368 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.162074138 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.160917911 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.160809911 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.157296069 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.16254216 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.160512079 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.165015296 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.1626189 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.16014082 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.160467948 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.158462609 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.160336337 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.162418572 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.159419146 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.163118555 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.166678286 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.161557163 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.160354972 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.163987197 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.163772365 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.162807957 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.1620674 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.164195495 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.167379321 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.161291314 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.17068975 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.163261711 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.161931735 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.159163126 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.160842667 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.161705627 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.163243002 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.164970091 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.170468614 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.17330891 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.171534775 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.16376503 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.166524355 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.162923265 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.166826407 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.167424762 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.162666155 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.164054983 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.162734474 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.162885672 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.16425448 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.164325673 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.165014626 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.163160973 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.163076315 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.160351699 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.163927809 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.164105287 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.166001424 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.164010447 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.162739027 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.163912146 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.162301141 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.163990061 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.162025174 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.160716644 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.162721169 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.164098886 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.163595852 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.170624841 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.16212019 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.164870077 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.163856925 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.163861033 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.162944877 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.16501263 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.165919302 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.159183407 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.172748335 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.176254883 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.164358176 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.172498912 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.177159986 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.163915109 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.16758734 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.164050225 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.161017457 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.165657934 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.169272806 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.163943562 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.16366424 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.16509113 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.162483674 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.165995493 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.17111093 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.164292143 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.16252234 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.166302689 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.164563823 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.163084791 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.165729169 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.16470225 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.166163822 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.168130882 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.165652853 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.165091716 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.164566519 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.164769739 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.163604555 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.168468913 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.165400275 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.16983006 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.171021694 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.162677778 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.167167826 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.165671357 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.167714397 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.164176266 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.167758904 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.16577359 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.176954255 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.171854438 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.175095916 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.166940323 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.167644913 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.170292929 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.168323854 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.167202248 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.16352004 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.16777651 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.166068655 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.166449115 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.163912759 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.165219638 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.165896091 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.166968037 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.166305081 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.169547998 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.167308623 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.164733788 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.167340636 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.166059166 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.166492149 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.165978863 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.167131883 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.168544586 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.169295806 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.164991958 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.166337966 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.174282432 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.182221508 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.170742118 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.16722199 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.165367135 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.161494267 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.168188057 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.168131554 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.169252235 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.176199022 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.170450235 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.176141909 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.166824573 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.177045199 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.163972909 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.170198073 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.174470827 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.167913269 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.167126129 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.166405795 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.169845516 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.176050459 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.183120311 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.166893388 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.172921439 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.169506592 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.169591236 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.169224413 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.168004845 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.170018758 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.16609006 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.176577088 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.182847311 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.173177451 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.172300903 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.167395969 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.169659688 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.170466682 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.170833695 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.171991397 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.171550167 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.172154024 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.168547012 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.168339425 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.171861078 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.170760191 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.16983911 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.166107524 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.169603221 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.177647427 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.182095469 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.173864581 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.171047996 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.174481947 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.170402228 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.174294981 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.186559547 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.172582459 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.170610181 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.170995545 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.172518383 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.168671261 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.168680574 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.172824304 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.16504425 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.176428827 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.173636185 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.174941585 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.172138449 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.174145807 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.169977868 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.178909069 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.191301711 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.171982899 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.173743517 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.168983913 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.171091082 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.174008148 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.172277673 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.172896771 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.174078958 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.17695305 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.176019034 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.171200629 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.172398282 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.171301594 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.171996779 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.172571456 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.170471896 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.172480647 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.172821839 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.171722237 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.171229169 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.17651746 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.170423274 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.169591654 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.174004089 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.172000823 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.180006661 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.171350758 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.17440657 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.172910381 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.172101601 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.170590392 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.170551929 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.170775797 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.170629361 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.172539362 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.17068405 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.174963446 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.174321204 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.174062549 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.17102233 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.171899961 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.172024574 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.171008514 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.170748512 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.171661116 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.171884042 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.172491351 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.171947344 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.170379057 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.170601142 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.172406461 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.171495727 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.171861555 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.172807065 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.175764899 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.169270762 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.169356735 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.172778177 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.171506229 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.170943569 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.168502383 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.178249383 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.173458597 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.177989897 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.176689301 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.173360261 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.171221809 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.172676722 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.175674088 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.169590081 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.172488657 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.171789449 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.173575564 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.172049541 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.17368808 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.172878109 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.178360774 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.171837895 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.170892711 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.181297867 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.186932587 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.173591902 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.172158972 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.175286908 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.173162086 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.171508219 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.173557014 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.172159704 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.181212584 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.188721348 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.174686157 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.1760555 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.170074639 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.173945379 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.17620634 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.17479861 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.174103246 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.171580982 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.174197404 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.173492217 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.175363805 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.17174819 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.172313351 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.173594566 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.176103798 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.17697934 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.171608826 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.175925615 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.175381924 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.174902016 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.176370577 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.17702799 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.173215066 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.173968137 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.174770961 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.174726026 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.175475844 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.177953506 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.173889274 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.174996719 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.174994473 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.174747742 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.178461375 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.181910927 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.180271889 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.17298858 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.174414875 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.17682324 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.178169344 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.175675695 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.176763364 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.175675906 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.175670533 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.177255545 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.175312054 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.176633134 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.178081332 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.188955009 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.19094482 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.176431668 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.175628443 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.180364089 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.177877135 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.173762121 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.176201521 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.178905589 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.180263246 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.1816663 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.178837385 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.183298674 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.191323461 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.176643054 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.180055232 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.179199413 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.181792886 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.180005513 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.17766673 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.177608057 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.180722803 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.188926516 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.177701996 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.184327001 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.201323414 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.191993931 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.176899045 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.177209975 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.176628419 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.175261719 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.177853346 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.17743081 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.176021817 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.178374942 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.177355212 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.176193772 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.179904455 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.177677599 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.176697973 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.178735312 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.177180288 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.178110747 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.174789057 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.177001059 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.177411628 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.176387698 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.177095369 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.177587349 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.176240461 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.189126498 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.184864014 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.17500372 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.173293177 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.170654044 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.175596663 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.175220391 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.180227002 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.178742037 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.17531351 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.162940292 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.163086422 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.162132304 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.160463866 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.1620641 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.162460436 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.161316707 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.160342279 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.1739496 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.163266249 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.159131905 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.155464993 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.155579295 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.155652662 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.155594782 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.154875836 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.155744222 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.155634748 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.151768712 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.153719138 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.152198001 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.152199724 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.1533585 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.157705701 seconds)
  done (took 696.966519891 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.152233916 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.147402127 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.146744375 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.146617446 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.147474414 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.147222899 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.14764303 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.14709422 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.14737262 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.147584548 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.145243788 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.14547315 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.1457041 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.144956705 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.145083441 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.145302454 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.144502802 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.145678174 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.145110857 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.144812442 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.143719441 seconds)
  done (took 25.161684513 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.146408724 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.143706467 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.144523102 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.147435303 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.144374752 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.146011204 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.142076626 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.145141484 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.145176034 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.143469902 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.144562365 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.145280445 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.143429141 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.14270237 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.141876625 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.145503259 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.145927265 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.142989388 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.145670539 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.144695262 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.146251639 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.143546147 seconds)
  done (took 26.263784725 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.146329963 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.145705608 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.145133951 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.144436364 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.145743621 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.144176498 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.146903986 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.14595991 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.146950234 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.146507096 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.144572856 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.146226202 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.1511481 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.150657097 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.14805267 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.146850373 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.290743629 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.146924405 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.146904703 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.146678514 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.144014215 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.150912092 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.145073118 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.144642192 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.145746247 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.147833551 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.148213289 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.147369111 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.14764305 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.147351462 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.150357037 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.147930078 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.146433529 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.148509128 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.146774182 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.147701114 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.150824837 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.148836272 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.144787828 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.147892168 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.156331112 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.164798557 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.14916038 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.15396122 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.148440818 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.148990206 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.149513157 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.154268113 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.146632611 seconds)
  done (took 57.482178391 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.148655349 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.148792287 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.146635124 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.149052368 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.148546502 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.148589806 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.148706939 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.148540541 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.146811568 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.147318485 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.149312379 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.146735094 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.146652693 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.148847637 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.150285378 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.14734118 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.146977999 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.147178215 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.148174096 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.147019585 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.1449075 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.148214259 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.147661176 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.145383561 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.147040761 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.144472208 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.145719846 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.149036891 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.143923972 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.142571262 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.146087672 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.146472284 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.146093022 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.144071235 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.143836945 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.14607646 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.14687571 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.142659893 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.144722096 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.142425152 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.145658911 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.145442038 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.145977922 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.145657402 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.142934853 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.142385971 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.142246317 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.14347381 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.142341722 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.14523064 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.144300476 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.143073606 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.14396863 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.142792827 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.145101597 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.145623971 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.142674904 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.142922847 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.144300657 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.143588486 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.142439696 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.144175043 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.144458384 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.143140779 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.143593764 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.140620818 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.140684425 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.144082822 seconds)
  done (took 78.978544346 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.146435011 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.143576109 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.145580237 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.146393903 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.148089028 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.147489465 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.146686136 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.146073138 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.147673917 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.146893625 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.147728197 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.147361726 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.147720146 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.147391647 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.14842614 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.146672561 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.143534762 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.147157522 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.14822519 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.147127286 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.147160123 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.147185658 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.147480749 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.147808188 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.146415044 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.148741878 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.144735311 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.144306204 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.146258816 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.145624726 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.144053206 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.147961865 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.146914698 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.148069989 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.14757052 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.148004513 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.148732094 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.145855199 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.147859555 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.148299206 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.146409605 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.144637086 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.148490892 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.148840376 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.147537882 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.146638287 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.149438801 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.148722974 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.149068203 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.147807029 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.148637672 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.144298422 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.148779745 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.152278119 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.148732268 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.149846447 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.15029476 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.145267797 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.148988975 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.146572816 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.147075795 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.148624473 seconds)
  done (took 72.21650185 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.150767328 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.14151698 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.138647932 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.13914224 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.141106116 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.137774557 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.141716838 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.140993676 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.140850521 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.141702728 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.140017323 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.136638191 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.136359079 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.140164565 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.137270439 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.136895505 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.137579717 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.137433092 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.139347543 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.13711287 seconds)
  done (took 23.875613035 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.136786061 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.139761624 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.13676696 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.13738588 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.139528305 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.137343895 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.140663215 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.139454878 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.137796254 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.139723246 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.140698532 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.14076655 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.138174604 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.137212792 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.14038303 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.138754615 seconds)
  done (took 19.297835306 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.137772503 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.140142607 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.140203011 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.139429631 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.138408819 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.13823193 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.140686126 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.138939124 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.138693789 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.140957266 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.141078692 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.140649573 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.140912157 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.14031667 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.138388246 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.141110287 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.138448341 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.139844912 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.141379533 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.141129594 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.138854233 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.139022555 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.141160564 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.142334433 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.138620525 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.139556083 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.13889796 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.138732022 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.139113718 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.14233675 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.139443743 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.140043631 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.140389173 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.13959115 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.141769871 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.13961967 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.141753819 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.141894871 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.141316668 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.142279467 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.142387569 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.139192573 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.143126812 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.142762771 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.140537815 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.142933128 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.140281378 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.140908348 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.139872966 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.14003175 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.143559854 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.143589618 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.142269015 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.142597682 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.14307863 seconds)
  done (took 63.810131554 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.142419931 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.144018181 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.140459265 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.143158927 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.142646924 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.140826955 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.143185086 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.140825826 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.141884411 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.142700203 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.141303448 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.143924629 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.141370278 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.143251639 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.143056369 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.14338364 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.141320393 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.141436002 seconds)
  done (took 21.641641837 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.141495834 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.142265055 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.143961867 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.140616496 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.141447936 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.144443744 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.142171432 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.143647702 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.144977037 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.142063046 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.14275823 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.143958292 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.145300323 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.14530976 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.143597688 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.141631677 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.145183612 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.144846976 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.142149165 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.142852845 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.146149033 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.144808959 seconds)
  done (took 26.237465962 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.143801843 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.143697983 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.15942348 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.180711515 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.169747229 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.143508864 seconds)
  done (took 8.023187053 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.143608558 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.144825528 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.142895718 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.146101995 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.145432195 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.142914582 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.143114885 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.144238829 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.145432856 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.143279773 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.14327425 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.14657233 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.145812184 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.142649538 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.146114953 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.146016594 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.143029384 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.144421249 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.144541131 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.145805015 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.143821291 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.145846356 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.143267011 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.144440724 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.14379034 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.144121815 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.147105614 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.144622512 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.144018657 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.147094466 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.146329384 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.144541622 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.147576878 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.144625503 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.14770261 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.147482418 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.144827902 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.146987807 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.146825033 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.144727389 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.147925522 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.147750172 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.147185576 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.145087127 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.147086736 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.14522374 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.144716599 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.145941969 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.145377244 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.147861623 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.147323971 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.145128986 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.147649564 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.148059854 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.148369746 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.148471539 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.145881825 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.146097668 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.14818631 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.145976864 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.14510665 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.148010421 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.145437876 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.144961458 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.147847759 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.146653704 seconds)
  done (took 76.697663234 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.146209709 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.14632145 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.146003399 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.147183368 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.146388532 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.146955912 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.146116457 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.146871163 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.146432516 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.147129297 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.14948919 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.146102514 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.14636617 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.146988403 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.146416369 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.146207096 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.146971466 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.146194451 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.146997584 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.150568173 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.147362064 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.146804401 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.14674857 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.146583101 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.146870159 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.149453514 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.147179955 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.146790705 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.146948468 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.147282532 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.147289967 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.146876373 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.14735129 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.146974871 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.147016147 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.146716834 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.147631138 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.147204944 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.147986415 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.15022801 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.147901145 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.150968039 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.147643662 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.148199201 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.148284389 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.148113037 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.148512048 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.148267959 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.148305376 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.148259313 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.14901409 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.148532827 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.148663396 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.149390295 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.149203327 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.148689274 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.148533896 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.148903732 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.148343632 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.151109474 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.149623935 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.148987606 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.152022771 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.148260728 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.147942823 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.148777149 seconds)
  done (took 76.841621749 seconds)
done (took 1602.760649911 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.234047357 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.182527246 seconds)
  done (took 13.501806396 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.31353373 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.266866315 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.149265095 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.151144413 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.148386198 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.172062906 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.16462149 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.148538828 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.149065088 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.150008636 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.148814757 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.338193782 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.201845276 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.150267976 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.149649558 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.241664247 seconds)
  done (took 40.141066984 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.171717745 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.160148081 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.255656671 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.174517058 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.179601608 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.318076731 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.2079945 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.15939215 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.303820393 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.194679126 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.498353693 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.179385508 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.159364625 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.114349988 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.174486884 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.318392569 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.372303457 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.504465908 seconds)
  done (took 26.533958571 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.534166669 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.185109445 seconds)
  done (took 8.811857681 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.18918462 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.20509455 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.156946463 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.184286293 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.163666861 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.180072937 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.204246825 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.208272805 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.182179501 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.173888379 seconds)
  done (took 62.953094527 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.176823345 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.162529866 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.160006403 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.158183419 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.15209195 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.151697071 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.158395124 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.155149465 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.225642694 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.268765724 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.175249143 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.166132685 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.160188306 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.161495266 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.157005706 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.193568506 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.300407956 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.157914104 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.156297291 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.166073952 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.160623384 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.238750858 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.199405137 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.1600831 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.267173538 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.240372896 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.165869679 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.16724649 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.285311839 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.158196126 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.159621103 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.160155116 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.162847541 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.703580544 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.677919287 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.175662769 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.18462425 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.169927173 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.158576471 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.281572036 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.161124906 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.167647505 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.153592998 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.657603291 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.31348721 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.26618449 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.285576877 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.164905763 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.162497372 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.219437511 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.164729353 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.161745009 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.18822174 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.875320559 seconds)
  done (took 100.479267799 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.199815965 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.640597516 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.321493952 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.17296272 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.980071546 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.754178356 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.157959727 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.398652683 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.187054738 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.155448608 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.432268297 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.622841272 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.16138187 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.201271856 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.733963078 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.157724755 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.156289157 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.055871191 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.155234694 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.159718669 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.560512764 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.173612937 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.157931263 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.276130432 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.191224006 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.578689508 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.39107951 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.542952735 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.156014406 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.155175377 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.583518547 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.165511911 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.203638625 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.156625699 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.410172811 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.470751243 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.444693223 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.162882969 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.158116343 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.154368313 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.184794041 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.573493311 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.457741157 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.166411736 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.158655916 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.581469182 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.156969679 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.156849357 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.158160754 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.359927276 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.068024023 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.160139843 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.385735895 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.156743498 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.41518289 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.155628063 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.17133046 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.605454548 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.156892837 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.255942638 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.158115044 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.158432488 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.158270853 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.157166495 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.156934709 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.462125719 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.56890691 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.160269745 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.46340097 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.578455102 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.157359853 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.647473725 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.054001205 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.183579159 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.199780028 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.157322375 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.848290336 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.605029839 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.181756338 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.157240091 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.448730167 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.160050226 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.419702615 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.172852773 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.157384586 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.57527506 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.183627293 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.201741311 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.159472366 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.161226788 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.951829236 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.162342631 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.40646224 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.178094553 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.158527642 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.158651418 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.161620491 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.157437716 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.161164923 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.159545137 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.643220198 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.161847578 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.281609491 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.177915656 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.157986933 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.174369357 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.15963355 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.160325202 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.377398148 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.721921565 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.164134439 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.161201401 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.159262405 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.166788349 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.258946115 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.163700962 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.424286176 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.160317323 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.158910779 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.163460178 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.791483924 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.208689032 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.159222414 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.163282451 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.977479241 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.37343078 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.177409425 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.164540999 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.161731079 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.173111329 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.34701073 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.162154958 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.181730744 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.162056671 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.82659321 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.182793258 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.16465054 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.72851457 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.170250403 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.02204343 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.177867296 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.16172366 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.464576739 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.420752745 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.451096616 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.15991485 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.163220227 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.810583242 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.160354385 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.299165406 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.179381925 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.191193114 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.356383854 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.324952953 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.162236825 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.715012687 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.162937898 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.373969711 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.164879226 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.469048068 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.615416356 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.161517492 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.164574184 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.834953419 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.807400579 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.814116134 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.165803379 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.424714059 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.163490294 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.619312601 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.161387047 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.161129966 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.745972484 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.165076537 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.16302129 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.162596508 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.161935835 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.223326309 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.334273525 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.836904781 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.166746263 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.583367647 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.178361075 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.163218153 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.170169065 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.162802523 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.513547816 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.173200777 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.167268501 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.189525485 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.164018579 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.166194159 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.593887898 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.021325126 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.165835677 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.313932826 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.754518662 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.166821107 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.162759358 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.913252439 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.428527225 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.670279594 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.193437109 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.43312673 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.169466172 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.200825603 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.920985352 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.162958654 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.637167146 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.164152581 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.163424733 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.737109236 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.1637326 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.208498053 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.163282111 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.163772717 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.660347132 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.163830039 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.169538565 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.379570714 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.166983596 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.434351394 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.168173817 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.178499195 seconds)
  done (took 1070.343255732 seconds)
done (took 1323.850425145 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.163519885 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.163160348 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.154057446 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.168016035 seconds)
  done (took 25.75446634 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.174955669 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.170594067 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.172538876 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.170595046 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.173508336 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.171075104 seconds)
  done (took 8.139770442 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.261638472 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.166162234 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.168331913 seconds)
  done (took 18.702833818 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.3734171 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.323445004 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.505665518 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.080240699 seconds)
  done (took 9.391495889 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.173228789 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.171861318 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.172461021 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.175519256 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.176059655 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.177543556 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.175210033 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.175170623 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.176510107 seconds)
  done (took 11.681786216 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.65934089 seconds)
done (took 79.434568446 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.83292758 seconds)
    (2/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.934068048 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.60903939 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.173195008 seconds)
    (5/309) benchmarking ("sort", Float64, false)...
    done (took 5.404980042 seconds)
    (6/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.545366143 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.429197221 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.948411145 seconds)
    (9/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.707242709 seconds)
    (10/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.605216908 seconds)
    (11/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.137977077 seconds)
    (12/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.716095816 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.425775038 seconds)
    (14/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.167340593 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.212094536 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.619005286 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.198183624 seconds)
    (18/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.854168177 seconds)
    (19/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.375278136 seconds)
    (20/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.268993269 seconds)
    (21/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.13313583 seconds)
    (22/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.615932152 seconds)
    (23/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.663699637 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.382792637 seconds)
    (25/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.487172124 seconds)
    (26/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.25788908 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.763360174 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.835673643 seconds)
    (29/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.439062081 seconds)
    (30/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.370452906 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.168554017 seconds)
    (32/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.254697759 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.65838911 seconds)
    (34/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.261905532 seconds)
    (35/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.588329304 seconds)
    (36/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.3396474 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.171822649 seconds)
    (38/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.224381506 seconds)
    (39/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.535918954 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.66265693 seconds)
    (41/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.165766538 seconds)
    (42/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.151492441 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.157017164 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.290274912 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.924580245 seconds)
    (46/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.276886854 seconds)
    (47/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.271666564 seconds)
    (48/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.178822905 seconds)
    (49/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.173178913 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.882556228 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.309856836 seconds)
    (52/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.183160697 seconds)
    (53/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.177713035 seconds)
    (54/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.250477061 seconds)
    (55/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.275181323 seconds)
    (56/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.477144605 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.758296517 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.858934001 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.284255088 seconds)
    (60/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.859127358 seconds)
    (61/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.205906297 seconds)
    (62/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.720420329 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.430916986 seconds)
    (64/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.292663247 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.53405047 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.564742985 seconds)
    (67/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.697262276 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.408614311 seconds)
    (69/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.181171462 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.509203776 seconds)
    (71/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.345311442 seconds)
    (72/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.184827839 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.23174223 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.487637238 seconds)
    (75/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.212672474 seconds)
    (76/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.367840583 seconds)
    (77/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.188938381 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.173974765 seconds)
    (79/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.273075885 seconds)
    (80/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.754064402 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.27783238 seconds)
    (82/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.158399758 seconds)
    (83/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.208279588 seconds)
    (84/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.40627597 seconds)
    (85/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.997171727 seconds)
    (86/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.864707614 seconds)
    (87/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.180286157 seconds)
    (88/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.350163989 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.173280753 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.188179268 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.251863844 seconds)
    (92/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.229697236 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 5.283326399 seconds)
    (94/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.318400027 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.174000208 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.129445644 seconds)
    (97/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.430612672 seconds)
    (98/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.745044315 seconds)
    (99/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.507568802 seconds)
    (100/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.256980646 seconds)
    (101/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.558919282 seconds)
    (102/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.888175799 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.997373713 seconds)
    (104/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.306702315 seconds)
    (105/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.449687827 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.470209684 seconds)
    (107/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.19933224 seconds)
    (108/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.711218569 seconds)
    (109/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.240267552 seconds)
    (110/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.298377505 seconds)
    (111/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.256276971 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.171056877 seconds)
    (113/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.887735109 seconds)
    (114/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.259662494 seconds)
    (115/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.158754223 seconds)
    (116/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.174467896 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.011418221 seconds)
    (118/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.923873211 seconds)
    (119/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.496611766 seconds)
    (120/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.197244829 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.375348894 seconds)
    (122/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.173101075 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.315947559 seconds)
    (124/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.839174653 seconds)
    (125/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.910206739 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.174355206 seconds)
    (127/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.678182169 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.764519857 seconds)
    (129/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.922905521 seconds)
    (130/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.202476501 seconds)
    (131/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.175616874 seconds)
    (132/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.203969781 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.554647952 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 1.70201929 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.198196049 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.290377636 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.43422059 seconds)
    (138/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.188427475 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.18502573 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.224259307 seconds)
    (141/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.231467696 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.844398489 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.445684772 seconds)
    (144/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.158105438 seconds)
    (145/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.241256558 seconds)
    (146/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.530444756 seconds)
    (147/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.654682893 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.39793943 seconds)
    (149/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.978328994 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.281114442 seconds)
    (151/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.383874193 seconds)
    (152/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.177981906 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.388483713 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.961516576 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.521496083 seconds)
    (156/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.366691753 seconds)
    (157/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.335660324 seconds)
    (158/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.526176418 seconds)
    (159/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.192988519 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.857456808 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.200099656 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.169489681 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.206096268 seconds)
    (164/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.199066063 seconds)
    (165/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.293359151 seconds)
    (166/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.190553774 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.83790823 seconds)
    (168/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.685365381 seconds)
    (169/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.688684716 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.179884068 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.209606034 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.012380761 seconds)
    (173/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.158564416 seconds)
    (174/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.933124206 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.471401236 seconds)
    (176/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.414358004 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.174512268 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.175215137 seconds)
    (179/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.301221391 seconds)
    (180/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.184612417 seconds)
    (181/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.238109441 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.174816169 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.699664722 seconds)
    (184/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.296690449 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.269691137 seconds)
    (186/309) benchmarking ("sort", Float32, false)...
    done (took 5.138718589 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.175152084 seconds)
    (188/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.280420761 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.578769297 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.029339562 seconds)
    (191/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.516453675 seconds)
    (192/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.204693286 seconds)
    (193/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.679947977 seconds)
    (194/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.749880053 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.013259836 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.177675791 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.208063221 seconds)
    (198/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.673755506 seconds)
    (199/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.833543732 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.714162355 seconds)
    (201/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.372610555 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.232274316 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.599643916 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.175656192 seconds)
    (205/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.209572416 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.285647081 seconds)
    (207/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.572260166 seconds)
    (208/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.205784946 seconds)
    (209/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.16145913 seconds)
    (210/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.311502367 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.161902338 seconds)
    (212/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.287739488 seconds)
    (213/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.938939125 seconds)
    (214/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.52535975 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.237501161 seconds)
    (216/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.717049159 seconds)
    (217/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.757363227 seconds)
    (218/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.277478826 seconds)
    (219/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.73600617 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.962466989 seconds)
    (221/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.424789413 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.265605383 seconds)
    (223/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.338473276 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.223607396 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.80452779 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.384952545 seconds)
    (227/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.327169315 seconds)
    (228/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.167076275 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.584107336 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.205525833 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.208325372 seconds)
    (232/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.203597509 seconds)
    (233/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.185774162 seconds)
    (234/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.37832768 seconds)
    (235/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.176514852 seconds)
    (236/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.866043864 seconds)
    (237/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.766971893 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.516214376 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.229826274 seconds)
    (240/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.180707301 seconds)
    (241/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.405091381 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.183307002 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.208618948 seconds)
    (244/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.318709388 seconds)
    (245/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.519595508 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.254979347 seconds)
    (247/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.178977178 seconds)
    (248/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.403076625 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.231276142 seconds)
    (250/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.426164767 seconds)
    (251/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.182522248 seconds)
    (252/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.404325724 seconds)
    (253/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.246565058 seconds)
    (254/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.195236395 seconds)
    (255/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.178494155 seconds)
    (256/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.352686182 seconds)
    (257/309) benchmarking ("sort", BigInt, false)...
    done (took 6.180806684 seconds)
    (258/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.462649289 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.377423793 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.280924093 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.202812683 seconds)
    (262/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.16383144 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.225434158 seconds)
    (264/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.241488453 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.199760049 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.163249315 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.574605676 seconds)
    (268/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.179413008 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.251443374 seconds)
    (270/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.178534159 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.351359821 seconds)
    (272/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.205280234 seconds)
    (273/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.40897083 seconds)
    (274/309) benchmarking ("sort", Int8, false)...
    done (took 4.231148134 seconds)
    (275/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.463446394 seconds)
    (276/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.339387201 seconds)
    (277/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.211023342 seconds)
    (278/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.701577076 seconds)
    (279/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.689808723 seconds)
    (280/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.208697871 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.58324328 seconds)
    (282/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.20456673 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.271268389 seconds)
    (284/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.306464705 seconds)
    (285/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.328049441 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.267073379 seconds)
    (287/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.207534415 seconds)
    (288/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.410169479 seconds)
    (289/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.186992446 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.296618419 seconds)
    (291/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.26476942 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.893598319 seconds)
    (293/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.167014601 seconds)
    (294/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.194696666 seconds)
    (295/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.210328445 seconds)
    (296/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.632570596 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.209461256 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.230689607 seconds)
    (299/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.189632853 seconds)
    (300/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.333524756 seconds)
    (301/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.165680621 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.320865045 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.013599428 seconds)
    (304/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.864296993 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.555183438 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.20305864 seconds)
    (307/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.477119599 seconds)
    (308/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.490437182 seconds)
    (309/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.296133921 seconds)
  done (took 858.024264179 seconds)
done (took 859.134647391 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.214238757 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.207783267 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.191334233 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.212541134 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.304523105 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.227368015 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.20179394 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.193288592 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.238295219 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.240201752 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.190042368 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.226866902 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.194300384 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.191435855 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.190431019 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.205370383 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.143944365 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.197371038 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.209170046 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.201574876 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.207636583 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.191218062 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.240858274 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.228405797 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.194833912 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.193709002 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.195864899 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.210562599 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.304092742 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.194595781 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.195682406 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.204371049 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.143133564 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.195639985 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.186940177 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.212355982 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.204297623 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.202050403 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.195341984 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.223704122 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.493275929 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.194660702 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.194244402 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.193438905 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.193620775 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.196337467 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.194402784 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.199799876 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.205889147 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.206462953 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.499666677 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.212982936 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.195474255 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.193128927 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.203583229 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.193013186 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.196371714 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.210787968 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.214237285 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.211073868 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.134572544 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.203010657 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.19579355 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.210260492 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.201480303 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.543130002 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.193335463 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.19839356 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.501424056 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.202200213 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.545754184 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.205362448 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.195488381 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.209009191 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.226627609 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.151307618 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.194013637 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.194586304 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.202005589 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.192944503 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.20455084 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.207003724 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.199320596 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.195499114 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.208225583 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.230662136 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.205697263 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.196990085 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.204797091 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.214871876 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.202547729 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.206737494 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.198691039 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.190330665 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.205562636 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.199938844 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.198940006 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.199408831 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.201583071 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.20635683 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.502427947 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.216689303 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.193183653 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.193590265 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.194637875 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.210473957 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.506643587 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.203293679 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.217840444 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.244341011 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.199165171 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.143432411 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.205210743 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.212935252 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.206340593 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.200058469 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.192019573 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.144335388 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.518060268 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.219277126 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.198238912 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.195126858 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.213447397 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.200024348 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.194928715 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.157009116 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.205320321 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.212210124 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.318697322 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.20880716 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.228978567 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.195737632 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.200449724 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.231080526 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.213159978 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.228325635 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.199469453 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.212448868 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.212920288 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.195471059 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.209699411 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.207985954 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.199179762 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.20263065 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.194243635 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.235351109 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.209374203 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.211133105 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.219112732 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.319077224 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.195273796 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.147256221 seconds)
done (took 202.713895782 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.258937931 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.192100593 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.276442503 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.194879091 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.294104382 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.290622513 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.192315497 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.19284767 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.193502449 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.599143026 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.193878072 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.193431537 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.195712988 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.193588075 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.279610312 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.196164865 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.193592368 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.534183578 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.196094912 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.271622052 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.19534813 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.194621233 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.195784629 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.576877543 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.192474561 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.193283009 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.266896125 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.197315466 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.543611671 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.195617648 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.196823238 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.54387587 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.285394997 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.214119355 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.207056877 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.204033135 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.294743925 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.211564271 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.278634526 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.280150498 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.279911262 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.234561404 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.190228805 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.195160836 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.199175854 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.197957692 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.195344332 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.223755567 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.192697334 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.195214043 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.537023759 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.207653688 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.195950982 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.196728902 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.196549831 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.226062349 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.195611139 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.198354345 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.293145125 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.198826154 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.259828242 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.578488632 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.575057081 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.198024936 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.189897194 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.19770874 seconds)
  done (took 139.282874512 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.267051119 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.274005065 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.303120871 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.201926594 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.249966769 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.30689991 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.204870909 seconds)
  done (took 9.940460284 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.20349575 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.199399955 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.247501314 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.248384049 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.199453099 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.372240182 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.199845148 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.208983615 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.197593807 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.251597605 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.202282344 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.200234004 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.205487359 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.195252916 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.246984409 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.209081676 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.313154662 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.199180027 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.200342821 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.355737954 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.19806092 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.2062934 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.250575996 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.210935555 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.202388518 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.205001508 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.843372323 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.200495617 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.197658458 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.199678728 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.197718166 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.237612787 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.200033023 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.200931204 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.197484315 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.363534466 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.200991071 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.199047992 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.20078308 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.196880738 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.201306326 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.201591324 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.201171333 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.198855027 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.200320329 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.222959776 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.201269804 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.201001249 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.201156922 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.202066402 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.252578784 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.201729912 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.199659127 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.199021662 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.256633785 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.208400816 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.202500465 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.199473645 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.201811104 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.19874359 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.358019064 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.249459938 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.202495312 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.24988693 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.202354891 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.201773881 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.20303243 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.202088238 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.26997498 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.201979247 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.24984615 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.200697736 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.357200091 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.224146704 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.202460215 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.204810546 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.204978594 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.202426465 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.202546563 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.206878206 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.199584259 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.202869653 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.207600401 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.199294774 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.20049952 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.34483876 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.338722083 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.200292977 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.215122641 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.208658414 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.200212738 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.255561239 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.203115882 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.200438992 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.255251004 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.316397407 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.256552264 seconds)
  done (took 140.457684508 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.207125663 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.211478536 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.205087855 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.218854449 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.204582433 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.204052597 seconds)
  done (took 8.38809142 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.205086659 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.204854297 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.203796054 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.204029625 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.204263836 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.205657867 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.203593163 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.205412356 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.207188461 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.204372723 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.205989842 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.206404416 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.206632174 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.20521967 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.205427216 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.204431109 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.205151758 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.203315325 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.205272899 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.20494991 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.308962802 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.204912595 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.20548595 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.205582455 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.209817424 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.205854947 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.21192621 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.205158266 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.20484583 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.211450538 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.207298882 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.207179737 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.207035396 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.210642996 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.20874788 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.206902191 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.209435339 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.207997279 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.203187891 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.209237954 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.208651003 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.206792079 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.206812656 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.209041441 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.207962783 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.210877636 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.211883066 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.21665955 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.20661695 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.209330779 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.209493045 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.208452809 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.209359596 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.2091524 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.208748953 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.211403752 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.212025507 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.208037264 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.207847725 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.207900977 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.207871858 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.208366609 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.208888026 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.210563096 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.20605109 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.208714561 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.208472962 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.211534453 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.207167689 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.207362458 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.211100445 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.208236317 seconds)
  done (took 89.184109426 seconds)
done (took 388.378282539 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.393614155 seconds)
  done (took 7.532982824 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.37021802 seconds)
  done (took 7.510053508 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.0880085 seconds)
  done (took 20.235592503 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.238703208 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.260182854 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.219496437 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.206170153 seconds)
  done (took 26.065789342 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.223289333 seconds)
  done (took 7.36268121 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.212651094 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.213945513 seconds)
  done (took 13.57029496 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.409618708 seconds)
  done (took 7.552618242 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.532507277 seconds)
  done (took 7.680770607 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.22986024 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.229365782 seconds)
  done (took 13.843749527 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.192162285 seconds)
  done (took 7.338877897 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.786853171 seconds)
  done (took 7.928443341 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.214635877 seconds)
  done (took 7.361421114 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.260972366 seconds)
  done (took 7.40305424 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.613056226 seconds)
  done (took 8.757606755 seconds)
done (took 151.287861337 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.207358577 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.206529104 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.206151482 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.204566655 seconds)
  done (took 25.968253432 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.246881886 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.250373107 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.253240808 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.258745317 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.25174061 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.248448598 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.244302179 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.240844996 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.262906273 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.254578179 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.25218523 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.251399305 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.251354831 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.242462486 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.253805643 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.252382211 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.260242661 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.251285269 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.243658331 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.256064651 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.21690131 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.258754106 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.257692851 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.216498547 seconds)
  done (took 31.123769501 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.413280376 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.288421932 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.368478378 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.269723562 seconds)
  done (took 6.48708445 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.269295585 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.269386044 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.282867316 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.318353681 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.347599137 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.281701348 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.245914383 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.240223155 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.223815797 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.271333652 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.344151968 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.286815463 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.353681031 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.219235719 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.399023378 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.217836477 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.21995135 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.268410608 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.320196994 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.34203046 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.217790451 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.271724995 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.277866401 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.286083042 seconds)
  done (took 31.921706438 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.216531753 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.22768561 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.223962602 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.216404712 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.216696388 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.216129121 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.222663679 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.217460922 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.239626745 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.221585675 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.217014011 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.218347144 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.217285885 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.216829357 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.217214592 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.22793822 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.231080607 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.219662004 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.223089215 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.224653562 seconds)
  done (took 25.579474948 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.215121126 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.065781654 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.564058166 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.463918304 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.21332364 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.211701713 seconds)
  done (took 26.881261999 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.279373647 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.404951162 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.213820678 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.532358274 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.613477244 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.214372158 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.216667982 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.44615323 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.709307607 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.696289768 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.267270222 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.278822963 seconds)
  done (took 18.019670435 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.214345797 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.212637984 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.212985275 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.227904196 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.268038144 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.224793906 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.227312042 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.210330396 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.26765065 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.270934707 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.225128888 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.269110159 seconds)
  done (took 35.980013411 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.301374045 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260980629 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.096545979 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.000385498 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.932347953 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.423301381 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.941646936 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.043227345 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.216520691 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.488058958 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.92439843 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.313961585 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.471678975 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.213242373 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.216035746 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.135709411 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439284965 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.660516472 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.213242079 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.921800865 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.240907621 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.216757068 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.092925224 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.240890664 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.427226055 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.19210104 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.477948462 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.99299162 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472189472 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.227405758 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.227437973 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.216280156 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.486775763 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847481567 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.312396769 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.227650824 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.902705441 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.758517197 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.203818008 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.0090398 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.766092524 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.215005659 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.226987125 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.215151223 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.151436901 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.224863613 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634650513 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.21755529 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.928182239 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.215379818 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.224856235 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.313016001 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.220536656 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.786646164 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206981455 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.216983079 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.214798427 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.224875008 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.793211979 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.382349925 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.229553083 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.152223434 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.567745904 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.018727932 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.784743053 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.314079989 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.222747302 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.223621604 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.155115385 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.998446457 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.235473597 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364012193 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.241630505 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.870063716 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892003422 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.983448367 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.156925582 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.720497829 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.219227263 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.155109673 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.445140068 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.991215736 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154966525 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.165786271 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.153101394 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876513985 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.224090055 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.557596661 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.219745295 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.624001043 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.227217124 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.236851917 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.238714057 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.443380615 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.108936147 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.217205397 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.746155742 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352309747 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.236984668 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.629002437 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.151786617 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.217219592 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.475806865 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.427993764 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.225572481 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.138300749 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404237237 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.226431371 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.23454596 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.231355528 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.229995073 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.744013124 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.232290296 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.395463751 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.237906431 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.006284768 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912746694 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.228535254 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.321149855 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.989884485 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.459557542 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.935093742 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.108983967 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.288618157 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.223570615 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.221798708 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.042694115 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.068231945 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.10827786 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.226091697 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.220159327 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.232024981 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.220392601 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.170379084 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.219325091 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.025520235 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.991025465 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.445081689 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.223134754 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.496809773 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.156629746 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369033844 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.226369186 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.440507066 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.341390423 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.220185808 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481200276 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.221704418 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.221108845 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.232085256 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.237066357 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.316866799 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.243311687 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.221989507 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.480948102 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.225230056 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.226491849 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.046805393 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.001948388 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.226869943 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.227991197 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.033079822 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.746499792 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.210503704 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.227835401 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111770291 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.23685677 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.289012329 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.225583874 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.234947194 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.876010258 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.032419321 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.228272616 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.228441524 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.443152635 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.233031544 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.03643882 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.303449569 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.400138051 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.752976642 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.235398235 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.158353578 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.93347247 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.917332333 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.222018365 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.413784614 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.219756018 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.230514048 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.234985958 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.699948201 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.750856987 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.22530927 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.949201459 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.228735988 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.234856213 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.227080986 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.221769878 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.851629905 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.413235267 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.230927137 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.235046217 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367442085 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.237711308 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.158894944 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.738558072 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.231067624 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.225087522 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.993825259 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.259627776 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.957279256 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691107719 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479715127 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.880239854 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.235299541 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.048504357 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.250896408 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.219983471 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.749207984 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.241733844 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.2443911 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.229969734 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.235553978 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.976633452 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.663586252 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.789786586 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894095234 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.701948853 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102448947 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.236068918 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.126180945 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.642722447 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.157362337 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.880360108 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398729765 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.642408021 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.163820748 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401323933 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.345405181 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.929364452 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.231040063 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.453684733 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094612566 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.772714504 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.248376225 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.438523982 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262233071 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.226710095 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.154837533 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.524225264 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.440154935 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.818128771 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300602988 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639709084 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.76992911 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.018056132 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.224276449 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.501241928 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378901135 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.771414736 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.614221154 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.234007483 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.013197855 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.697995832 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.232633317 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.753116126 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806034628 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.231867038 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.406850083 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.163225871 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.238258036 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.236199332 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.227168441 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.364580609 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.22591366 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.49249092 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.238987893 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.16194137 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.225956561 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.70614243 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.081685005 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.233201215 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.229338679 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923797222 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.225733265 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487730812 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.241074718 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.837544578 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.232519388 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.161534147 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.161873525 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.920410714 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.231673353 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202751774 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.676937749 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.555492482 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.208552374 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.242135987 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075871277 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.484425827 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.241835965 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.761030377 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453482068 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.985332453 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.250799413 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.32862431 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.800067119 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.227674853 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.125808561 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.466351515 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.040533601 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.452622139 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.152716538 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.131316899 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.228807518 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.442239476 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.111824063 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.025055059 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467092278 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.940803078 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.240129064 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885712219 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.2561101 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.016870128 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.252338881 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.573239496 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.235936842 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.30072729 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.241821325 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.239802427 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.241321558 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386234801 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.032075922 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.244989972 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.244654226 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.324555079 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.4436448 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.84675839 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.00460953 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768701896 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90949085 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.767694143 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.245207536 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.230139004 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.231782997 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.163157774 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378560286 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.755897937 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505533489 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362547776 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.633224781 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.252382214 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.821564862 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.257744685 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.444902857 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505569538 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.10244665 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.237396565 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.965575602 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.123901541 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.24390594 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.443251367 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689013832 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.753074384 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350730179 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.235291889 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642308324 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.507159366 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.324275878 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.23294178 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.82195786 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.253394309 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.521235104 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.234620835 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.061174626 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379805435 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.241283005 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867825496 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.242111204 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.388527309 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.006818973 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.995747921 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.489614252 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659743036 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.244494717 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.769455287 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.875328343 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.49667885 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.303461944 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.242828554 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.342926768 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378497491 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.23316325 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.113668089 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.234150687 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078157118 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.941107304 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.242278939 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77145342 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.496263544 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.230253722 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.231742901 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.25580999 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.243142905 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.456576634 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904082208 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.455044237 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.242417237 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.236290444 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.80363455 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.771672362 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.244979992 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.168514087 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.235319597 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455979516 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.470797802 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.257377294 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.6871117 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.946455331 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.754781792 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.207369775 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.25597181 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.233992147 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.874357101 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771644053 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.855819186 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.687966084 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.894484975 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.234492963 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.510595373 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.241004497 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.247428188 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.509785548 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.23751804 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.241509853 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.246261275 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.769184673 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93995214 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.251081724 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.009268138 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.169819058 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.461830633 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.839281125 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.171553137 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.234752942 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.402865607 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.237081693 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366019556 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.244834206 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.241858266 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.248254024 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.990912248 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507679916 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.239931098 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.226612142 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.883613999 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.248246122 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.241985904 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.456248646 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.239799005 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.911622981 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.589383176 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.492378147 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.250816871 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.220395338 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.241104339 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.236584355 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.954458813 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.205349121 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.710762262 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.760466757 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.247488932 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.245393806 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.242128693 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.453727607 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448534195 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.063937368 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.262780152 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.247971101 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.251297362 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.140171757 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.004331719 seconds)
  done (took 1517.347520859 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.288642511 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.276858308 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.260914231 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.305224395 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.262265297 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.363470658 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.311906701 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.265705587 seconds)
  done (took 51.508734649 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.248765166 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.387529514 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.265959339 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.237992933 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.247714837 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.244416783 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.665386518 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.248899918 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.243922483 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.248335025 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.240560392 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.243244783 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.85563437 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.247705804 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.243066253 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.227575132 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.24537746 seconds)
  done (took 63.518444388 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.244129451 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.415627155 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.33007982 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.239611796 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.869016306 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.238294566 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.406353157 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.240957656 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.243212524 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.538993223 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.894626387 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.266690506 seconds)
  done (took 82.101029779 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.244235819 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.24559644 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.24730973 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.246172622 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.247400647 seconds)
  done (took 7.404539666 seconds)
done (took 1924.987396695 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.483715557 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.862131633 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.846336866 seconds)
  done (took 4.881680912 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.387166434 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.43521234 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.557143207 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.561288442 seconds)
  done (took 7.113964907 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.516343246 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.625383013 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.436412364 seconds)
  done (took 5.750053958 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.525077578 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.252608217 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.357356264 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.238370775 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.23775825 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.238815853 seconds)
  done (took 19.889419647 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.242675836 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.24536426 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.244498192 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.247244441 seconds)
  done (took 6.154410193 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.223867312 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.955682325 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.226584295 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.240260787 seconds)
  done (took 17.820722554 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.990547476 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.002285917 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.98618812 seconds)
  done (took 7.154705824 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.248680074 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.083200995 seconds)
  done (took 9.507188286 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.52167297 seconds)
  done (took 2.693688541 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.376522166 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.568006209 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.222918212 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.137756063 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.208896152 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.695115635 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.712826452 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.334476277 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.116758729 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.210027506 seconds)
  done (took 25.75959763 seconds)
done (took 119.518002392 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.77100972 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.469010135 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.441298701 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.738988061 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.465700095 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.441959199 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.666629335 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.708950295 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.29025727 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.239687138 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.739039756 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.467529394 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.405402254 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.485967687 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.40446638 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.484636544 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.470688045 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.812762415 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.454324444 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.61616353 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.663062798 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.38322349 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.571299065 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.400400919 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.46776443 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.39439864 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.953434648 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.48603761 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.627306074 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.968585514 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.390962972 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.791690963 seconds)
  done (took 186.848908612 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.254388901 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.238320713 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.238940619 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.250207891 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.239595291 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.242851421 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.250951181 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.247423785 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.240605053 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.251352557 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.249162973 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.243871214 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.244971861 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.239425474 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.242132466 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.248768321 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.252466118 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.261218606 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.238907568 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.240167892 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.243866369 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.240591178 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.240759732 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.244423343 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.242216264 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.249570562 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.240239777 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.239643955 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.244146851 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.24153527 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.239998047 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.240802321 seconds)
  done (took 200.998765718 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.249798462 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.240092604 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.243521104 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.244241085 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.239869653 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.243625178 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.241417312 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.239362081 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.240050805 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.257430384 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.246739528 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.241989055 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.242287131 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.241077466 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.24113891 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.253675136 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.242274695 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.256114321 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.242117347 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.241391142 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.241513615 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.241118535 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.24231582 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.252269581 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.254946606 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.242638038 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.241165024 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.256231651 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.240589025 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.248468636 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.244745497 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.24523083 seconds)
  done (took 201.016622769 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.447302178 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.251888999 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.254166846 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.204885053 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.253673914 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.252643363 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.24946686 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.444195674 seconds)
  done (took 13.535908111 seconds)
done (took 603.571611676 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.455614919 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.181272877 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.439784713 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.272405707 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.957251067 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.270480264 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.274035782 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.430762053 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.141743424 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.431119099 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.429615664 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.268326349 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.567958453 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.268435501 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.507145254 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.360103597 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.078912137 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.193407813 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.57096605 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.729129072 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.515134431 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.683593409 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.424872289 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.141374189 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.584135941 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.70303223 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.901894379 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.087903713 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.273768354 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.577939357 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.821805438 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.152873122 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.323538029 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.308625179 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.361491293 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.345490791 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.12148706 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.304413689 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.45130409 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.450525136 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.726537407 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.955980787 seconds)
  done (took 86.225773592 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.241521667 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.241664742 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.239716846 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.24182346 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.243593237 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.240245189 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.240174232 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.240938079 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.241659176 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.241173913 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.241923705 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.241097766 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.241106946 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.243552438 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.243099324 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.240774576 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.243978956 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.244071213 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.242590655 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.243560044 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.243168029 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.241644977 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.242438126 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.241445631 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.242678384 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.242038449 seconds)
  done (took 33.475927135 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.256446489 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.491982607 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.644608058 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.257306748 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.255271904 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.260881091 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.32639594 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.256909701 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.25930434 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.258772318 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.403829412 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.257731828 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.291953833 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.670583963 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.254868811 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.25825636 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.258039663 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.256218214 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.509526262 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.265152563 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.343540905 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.25825845 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.325989812 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.267852929 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.27144769 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.257860118 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.263860272 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.761977082 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.256262437 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.406408813 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.953202509 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.323456706 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.716358423 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.655305452 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.955767681 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.260381753 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.25798016 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.407510388 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.255160499 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.259767282 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.32795092 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.259062087 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.667953914 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.865863664 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.26935998 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.260292025 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.791023503 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.40989432 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.476757823 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.267175009 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.68951869 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.259474314 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.259871055 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.259062283 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.480038868 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.267045523 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.260823273 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.780765737 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.274851851 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.328495913 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.259621599 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.260650526 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.522263684 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.25628648 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.502700759 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.256131951 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.268568103 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.261474012 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.674706303 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.263044693 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.90974361 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.270307377 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.259590699 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.406842227 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.500311763 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.811909062 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.259832106 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.513180719 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.729635534 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.327390289 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.264068568 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.751662314 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.329301938 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.266341063 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.264217646 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.264923594 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.26047239 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.308866249 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.327671879 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.830897435 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.884931349 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.786551489 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.341667312 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.275378945 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.261929316 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.7728146 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.273736377 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.260524437 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.653971998 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.893612852 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.272254631 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.269916187 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.877999199 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.272383764 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.333368062 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.266341237 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.66340736 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.259296791 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.335017068 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.261990965 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.270351829 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.266579029 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.333371423 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.264495369 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.260132442 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.868649 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.431606375 seconds)
  done (took 166.089360237 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.255928796 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.253450985 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.25701546 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.250194866 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.255796014 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.263558653 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.250839211 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.256202838 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.260644936 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.253572464 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.257093796 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.259206074 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.258936886 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.258010207 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.276752758 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.262414462 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.866011831 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.255570059 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.253136932 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.250419782 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.033620672 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.259801126 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.257048329 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.254740537 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.255313719 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.256861942 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.265320413 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.255835905 seconds)
  done (took 149.783265178 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.26457334 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.779855308 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.267275438 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.377157994 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.282727718 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.261080332 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.37996073 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.31580467 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.262418018 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.259680262 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.258156235 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.540470615 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.265758691 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.733513939 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.431560036 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.380860537 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.733088061 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.266080501 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.263077612 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.262961102 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.384294081 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.268353985 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.544667068 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.787301658 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.267586942 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.786870886 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.253528697 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.266588372 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.264990585 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.786691985 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.264308714 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.545231555 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.333187728 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.314183853 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.787137672 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.73716197 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.737254387 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.39513516 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.263278447 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.260861977 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.261849686 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.256598261 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.786602817 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.266230949 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.266251634 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.779378968 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.279799926 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.270126954 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.271218304 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.263893618 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.317567235 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.319840835 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.547752681 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.79199077 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.335089324 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.283096068 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.381697049 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.636590097 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.26338685 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.7367058 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.253563965 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.786917044 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.269969855 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.251308117 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.26487227 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.269210634 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.398567384 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.380193125 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.741234924 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.267114265 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.737661502 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.401660991 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.262247525 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.267612402 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.267738672 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.78495041 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.741328089 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.400093123 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.387726206 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.435451195 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.257673517 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.267029847 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.258239778 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.33667309 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.262397983 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.788864692 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.734785684 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.268451946 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.267495837 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.268477224 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.270745938 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.421612711 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.784916552 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.333774867 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.729553514 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.554720566 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.547481076 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.27089689 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.320238777 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.267569873 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.548424649 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.264838605 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.316205882 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.700364774 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.542113685 seconds)
  done (took 150.497532721 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.501079043 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.375961951 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.349060461 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.376246151 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.825847667 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.829562556 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.537960241 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.387129113 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.365080287 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.497372733 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.340593519 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.35473163 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.418056009 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.358642485 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.976788086 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.331335492 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.353084917 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.39235744 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.356762979 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.241264372 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.865513923 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.533482924 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.425394465 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.157046338 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.351450968 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.994369079 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.789685703 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.798148998 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.428894414 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.483121098 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.790054853 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.335561585 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.17104809 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.88014172 seconds)
  done (took 61.369706287 seconds)
done (took 648.620225704 seconds)
SAVING RESULT...
DONE!
