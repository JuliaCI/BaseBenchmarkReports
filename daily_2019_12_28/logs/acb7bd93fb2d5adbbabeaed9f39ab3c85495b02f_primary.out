cset: moving following pidspec: 9043
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.384787465 seconds)
loading group "string"... done (took 0.582281872 seconds)
loading group "linalg"... done (took 7.179779535 seconds)
loading group "parallel"... done (took 0.15912219 seconds)
loading group "find"... done (took 1.135321986 seconds)
loading group "tuple"... done (took 1.748237786 seconds)
loading group "dates"... done (took 1.223846279 seconds)
loading group "micro"... done (took 0.216322803 seconds)
loading group "io"... done (took 1.016856649 seconds)
loading group "scalar"... done (took 37.477113448 seconds)
loading group "sparse"... done (took 11.78936304 seconds)
loading group "broadcast"... done (took 0.940257146 seconds)
loading group "union"... done (took 12.105132613 seconds)
loading group "simd"... done (took 4.476638572 seconds)
loading group "random"... done (took 9.027658481 seconds)
loading group "problem"... done (took 1.834524198 seconds)
loading group "array"... done (took 20.768147402 seconds)
loading group "misc"... done (took 1.673384337 seconds)
loading group "sort"... done (took 3.314004812 seconds)
loading group "collection"... done (took 17.209484117 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.518847188 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124716652 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117952316 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119497808 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147556162 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112462686 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124690771 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085753068 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.817162308 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148182163 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117063213 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.428514228 seconds)
done (took 5.163026847 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17479466 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082568081 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082699249 seconds)
  done (took 1.298373381 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065191976 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122535511 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067156332 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066800524 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067116569 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066431648 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06645455 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066224223 seconds)
  done (took 1.655533715 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073059706 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069140536 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06691265 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068046934 seconds)
  done (took 1.410629234 seconds)
done (took 5.746814226 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.782012565 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.20599354 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187966772 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.410790943 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130844344 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157773239 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.63899328 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.316008574 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188119317 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080911624 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108707685 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.327556372 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110252998 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.633047814 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075480269 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090342864 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137647716 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.398001989 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067446839 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081974103 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088629109 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128701923 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087868526 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074313271 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146250294 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067549982 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136320206 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080310479 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066038921 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.21312792 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17253126 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.645218215 seconds)
  done (took 10.208551321 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095545902 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096463528 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067974781 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123424281 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.0961398 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069278679 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070500246 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067369719 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08668805 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127071671 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088204675 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100697459 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066065886 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06868208 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084876918 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202749908 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080640909 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080829607 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071252793 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075313035 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104556612 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078169178 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076792787 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076986122 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12916672 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178291111 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09652782 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096752289 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066547558 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079173755 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114901054 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125001783 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065901908 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066062183 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123453811 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094282857 seconds)
  done (took 4.556469355 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.996089439 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143144042 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090280914 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134596342 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06442012 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109162166 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065645376 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080677043 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.208890173 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.45084207 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.591122964 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111306685 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103696562 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067366275 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068155088 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06643323 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.494251942 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096038501 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107245062 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081230586 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069890766 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069342375 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.353360346 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0668489 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063664439 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068367089 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057682351 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124877886 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068114792 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.939913726 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126289152 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065957415 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100569217 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160762002 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087266499 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14053093 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066364586 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.194051907 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153342329 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070095692 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066734049 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083554036 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104060135 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113180702 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065439486 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067057519 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161537921 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067903798 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079405556 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.111149426 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.633168992 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151505572 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076503618 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064243398 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.253977088 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087304962 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069666489 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064344444 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.174243743 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132892691 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067372864 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067327779 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067308838 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063894978 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068431273 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.369852497 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06797279 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.881417038 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070393919 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07697823 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069109392 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069464478 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072614266 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072335154 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087879614 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066104757 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075419469 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06569423 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066135288 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06701424 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083424356 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.379408043 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066976848 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068221596 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064052368 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064967655 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.0890449 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096978922 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066686117 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065413828 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099719947 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068239546 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066334685 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107344107 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065944355 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083101743 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068996854 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113375742 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065845825 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.182686771 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066774398 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064485812 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096584585 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069593896 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09838863 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080195622 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068484696 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.421698569 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065692172 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064986786 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068877445 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065255405 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067446332 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067025919 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079161242 seconds)
  done (took 21.037711435 seconds)
done (took 37.930742272 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.234864483 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078789074 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074012684 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076273959 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073892851 seconds)
  done (took 1.762779127 seconds)
done (took 2.965864001 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122016116 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099907928 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064617589 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096722059 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064355207 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101972884 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100757613 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082008826 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100416583 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064017137 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098067166 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064174316 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06430167 seconds)
  done (took 2.346911811 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083758625 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083867237 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069630257 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083257184 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063315536 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082948388 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081862167 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088705691 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081625997 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072807064 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063463996 seconds)
  done (took 2.052440392 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082627408 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084185174 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069210153 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082209306 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063368007 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081995503 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081676356 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085800039 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082098624 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07423294 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063596936 seconds)
  done (took 2.045296935 seconds)
done (took 7.635980187 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077820504 seconds)
  done (took 1.265338464 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.586932713 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.089640302 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081338073 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.1110013 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189582599 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117858204 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.269758376 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086040655 seconds)
  done (took 8.899823052 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103165053 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070893894 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069646178 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071539025 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067499292 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070865957 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067980526 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068250669 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068866838 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070813264 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06943384 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071615896 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069654729 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071755227 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070957776 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068595435 seconds)
  done (took 2.410574083 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09266489 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091681133 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072774369 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074374212 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072000884 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071473606 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074188694 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072887205 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070711776 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071557283 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074783987 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073261253 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071178011 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065049702 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073921791 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074653862 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070517055 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07313661 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074732323 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074620228 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074293249 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064297613 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071134321 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07341925 seconds)
  done (took 3.069032176 seconds)
done (took 16.839695738 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114507147 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072045686 seconds)
  done (took 1.381208614 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08118722 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082967263 seconds)
  done (took 1.366245197 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082249658 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064958659 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089933705 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077068607 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065903759 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065653005 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087359292 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06575703 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065707259 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066003945 seconds)
  done (took 1.933202866 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06800868 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077619207 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069582799 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081155266 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072954507 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063915571 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071561635 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067143396 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076859836 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062283368 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070720811 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082388349 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071147761 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083609204 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07181536 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068602262 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070326889 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067180623 seconds)
  done (took 2.502687302 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064980921 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066898835 seconds)
  done (took 1.340157355 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066975328 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064168562 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066546417 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066549461 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063572357 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062334195 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063095598 seconds)
  done (took 1.658457294 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.382157041 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112918283 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.311138078 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070835966 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081961361 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.25529622 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065342543 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070585834 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070067171 seconds)
  done (took 2.669428996 seconds)
done (took 14.060088543 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080624351 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086976581 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096374282 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.373070613 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091557212 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065506071 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113647123 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185958759 seconds)
done (took 2.312620523 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213094696 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.633457637 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.400224638 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.203221487 seconds)
  done (took 2.445842922 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342788311 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087857842 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058957761 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06648767 seconds)
  done (took 1.777256214 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065697285 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069041478 seconds)
  done (took 1.351352163 seconds)
done (took 7.001577604 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066464856 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065700635 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063616094 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065835437 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.062750916 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063389966 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082834064 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066061492 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065643753 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066447287 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067548538 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065705608 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065719864 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06342462 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063260915 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065936296 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063561963 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063519766 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063137182 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065721553 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0658796 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063885433 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063776492 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065981603 seconds)
  done (took 2.828091164 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084845172 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065738352 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071314088 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070933236 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068731379 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070541377 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070912981 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065655486 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070891306 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067501813 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06861379 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069309469 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067761306 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069579986 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067755854 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068981187 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071035262 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065772866 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068105328 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068542139 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070905759 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065758216 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069185376 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070683231 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069100876 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070192003 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06841684 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065770638 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071205983 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068798763 seconds)
  done (took 3.306771822 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069158585 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063670685 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064199063 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070618357 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063108732 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064546841 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062902009 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063689072 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06373515 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062952364 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06472054 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06249378 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063571869 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063741011 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063872865 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067794384 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079111912 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063909439 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063395145 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063674489 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067004179 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063560419 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063385981 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063463174 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063520495 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063101508 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063551506 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06373541 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063908826 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063294249 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066764217 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067266585 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063390842 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070268568 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06735536 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062931307 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067426767 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062755301 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064030431 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062616699 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063014924 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063215118 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063155933 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070301243 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064006392 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064693259 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063366996 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064881613 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063308437 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.177846442 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063082008 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063022712 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065181055 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064308206 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067166715 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062547098 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063793953 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062455223 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063850315 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062818138 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062593838 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062581702 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065414195 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063993251 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077460058 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069897279 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062938831 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064747569 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063690103 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.0656502 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064487442 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07635385 seconds)
  done (took 6.020154141 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090537568 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087206315 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064761016 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065011359 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061674764 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06374881 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069203063 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06360742 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064796236 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081167914 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063844932 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064793462 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064971289 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066898193 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063837626 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064700312 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07185885 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061447111 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063375482 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06737394 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063727372 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068929385 seconds)
  done (took 2.734961332 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155862501 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070158445 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104885753 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07544802 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069480609 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074676483 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069856618 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069686097 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069950933 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066827047 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067263604 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069895124 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069415421 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06670242 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066836491 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067055434 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06943482 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067468439 seconds)
  done (took 2.604432986 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075410018 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065113574 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086399734 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065780446 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065440628 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067996436 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070508924 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07373437 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067714009 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06526018 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073319178 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068114533 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067430165 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065422093 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068422791 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066048618 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067724712 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065490376 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073005363 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069751135 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069395455 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073566974 seconds)
  done (took 2.766467377 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079644543 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067660064 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080514427 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067186614 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060904589 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063179896 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069762404 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065214247 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069310312 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067088447 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065014902 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063430369 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067803541 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065283102 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067980488 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065705495 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067239269 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065075951 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067071893 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061180204 seconds)
  done (took 2.580346367 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085630837 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067691179 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068646027 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0749188 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066996274 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067398124 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07456109 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067249273 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067764775 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08812461 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067851149 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06707339 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07525085 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072010582 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066900158 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07478634 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073952474 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074182641 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067082478 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066993732 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087536704 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067482856 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074223767 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067199561 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067313841 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06717841 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067333142 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072125686 seconds)
  done (took 3.240728958 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066366574 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065669749 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063663717 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063074975 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063361595 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063866587 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0630795 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063158667 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065579535 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063449946 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066028211 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065605773 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065375155 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065550163 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065428591 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065634565 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065816124 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063062857 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063761632 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063779813 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065516964 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065930758 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06544205 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063431318 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063461463 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065598887 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062996899 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063084984 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065667864 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062879207 seconds)
  done (took 3.173999045 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075260649 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073230476 seconds)
  done (took 1.388410624 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063048171 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079854801 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062870428 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070596938 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06941447 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066258014 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073048402 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069103442 seconds)
  done (took 1.790649042 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081815888 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07804564 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066705744 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079376141 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076763006 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082597164 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13445112 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066432031 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072658176 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064289129 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080034043 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065535947 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072522116 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066383013 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07217868 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072958538 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063617571 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071515566 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06818352 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065003333 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067287601 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074449243 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069042981 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061454294 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067391271 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088279095 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076576031 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06527365 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06903667 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073488498 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071471824 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059830538 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065732053 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066613726 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064380492 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075643216 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08094828 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06932782 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074561793 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066820032 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075489599 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061606731 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07052956 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07257594 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07599505 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066277843 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066700378 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060679059 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063808774 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068094297 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06111686 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068348779 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060430964 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072391352 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069831229 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076474938 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06451805 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067068964 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068482047 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068995793 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072266446 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067611159 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068594168 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065588804 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075762387 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070748293 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07484178 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061089807 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059812593 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063990959 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075858283 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089077966 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072274982 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066721447 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066867669 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064054543 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069140736 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066600886 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071735406 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072827699 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066158247 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070898901 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073169615 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066724931 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068438063 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073786059 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064590271 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068697125 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064066414 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082268877 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065094522 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06391283 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064086407 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075948347 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069575628 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065746984 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063785469 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073348489 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059832721 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06603347 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066895617 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066620273 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075880727 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069971887 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069867538 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073482907 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072374076 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065085389 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067365325 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061761238 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065735114 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063832897 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071759112 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059309851 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067527181 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065800557 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065929343 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073117924 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062906779 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064887906 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072761637 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070542328 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.189175298 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063419997 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069705173 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066915449 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070074212 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074839974 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065096993 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061438396 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060919877 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070559358 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065744423 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070525183 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071890274 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069577601 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060825408 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064280884 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071404005 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075717716 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067795948 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067668449 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073028058 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067733657 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066176301 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073451155 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069270369 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06568747 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072567303 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067569558 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060651184 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06992547 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069696013 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065888509 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070201898 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069879381 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068122044 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067048652 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064716071 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072387664 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067023501 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065943655 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066525961 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065321987 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077371435 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06888406 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061507101 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063349357 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07550369 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065171671 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066181511 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065826312 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068532146 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06715102 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064258298 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065936652 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069350558 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07691723 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070829788 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067747486 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072278573 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078274792 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066416795 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068739392 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066550544 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06766865 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067449301 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075425954 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072126838 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07113469 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068965991 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062728102 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071665622 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07360535 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06544436 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064105921 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065438353 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069546583 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.0713503 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069631002 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066567336 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064081372 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066915908 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068945641 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068593365 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065431271 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06491554 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071751073 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064471865 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072255653 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066441024 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075948244 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069205145 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060940344 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068692372 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064342992 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071924758 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061083035 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063922709 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06522508 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066846111 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065149294 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068594324 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060111702 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073451113 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073848174 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066769564 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06559353 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066203172 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072877987 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067591419 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069529324 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068728145 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070885941 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075096131 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064557905 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068627683 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074875924 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064550765 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059600782 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070372999 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063398483 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063787721 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065220739 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063362858 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067980979 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072551653 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.19659837 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062637681 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069809081 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065522661 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066866266 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062689266 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070958285 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069969078 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067793525 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074341704 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067214372 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066872388 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070687435 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066695127 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06661537 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067871323 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069210285 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067155824 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069291553 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066359489 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07036979 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065661814 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065209246 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070327033 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06721004 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067192962 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072038502 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066387904 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066868152 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069724054 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066992642 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067487617 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067110376 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066714423 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069720584 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068295476 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066546409 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069000422 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061605851 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073517951 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065681534 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07435832 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067660204 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063768356 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072981323 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069053029 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071544433 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067219775 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067230302 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067389595 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066532921 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069975924 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072906492 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065008263 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076817079 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074126083 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067324622 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069541413 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067318855 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068359002 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066004 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068124196 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067138693 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066771152 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066635771 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.0719561 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069405082 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067423686 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068703771 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067187109 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066827897 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068378614 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06139499 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06636467 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065828279 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066266814 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075692753 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067090337 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066173996 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065572774 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067181141 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065337432 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06354301 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073629022 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074924634 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067462541 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073448272 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065639757 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067964106 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077086397 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060427945 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064563257 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064019359 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064589386 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074205862 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066862427 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075946496 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066780537 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065666875 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063642284 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066737366 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065291375 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060891544 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064036592 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070074272 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065608944 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065475266 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06639873 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069172703 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067555644 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075769137 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065712268 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067548811 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066227852 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06272112 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065278828 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064386966 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068389051 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066056504 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063478885 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06245803 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064549148 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066247818 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067125792 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067687127 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067406675 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072133139 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064858087 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068226907 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0677651 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059912992 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.200681418 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068204986 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068125613 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067341154 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071947166 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070427125 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06854907 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07579205 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066493013 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067855904 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067157733 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065069494 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066079935 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067012407 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067111198 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066923186 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068498617 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07493738 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065103302 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069979328 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067693416 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067636849 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073573822 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068581525 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070791506 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073504492 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067274761 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069042014 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075481883 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071854209 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070064343 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067829132 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068110728 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072632381 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06620411 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074032903 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066843619 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067367177 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068590495 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064977522 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06666502 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067096061 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06651372 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072597572 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067026178 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066786028 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066006883 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064337709 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06781824 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069367831 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074829241 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06942739 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070370301 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062161938 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064004113 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067103231 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064953661 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068500872 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069410268 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072857598 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069480428 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068004356 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065957869 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076237924 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072543129 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069893354 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064737923 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070593593 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067407693 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069002884 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067784863 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067034346 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068255011 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070464714 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068438952 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066486956 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072961878 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069868906 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067307931 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068353905 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067462067 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06664524 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061468525 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066496871 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068196312 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071324382 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068497585 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067080366 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076758479 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064818749 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066960363 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069230104 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065313598 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070852193 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061774552 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068297732 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067247302 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066986955 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061449455 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06608505 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064719697 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06894865 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065548479 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061818234 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077559004 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075305094 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070003748 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065911161 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064825585 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061290602 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061661158 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065999865 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067373643 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067436226 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076083151 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065495733 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064896975 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060401514 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065646651 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068301431 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068538377 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062877662 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06043888 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064461554 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067815948 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070964236 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064214386 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065343261 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068653069 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067437864 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.195582945 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071143351 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064548036 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07109196 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080376184 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067976884 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067954719 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073247548 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074552885 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067274557 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061726913 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067108098 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070636412 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067786593 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068335762 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067886396 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082560319 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069809493 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066592264 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065647702 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070170251 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066725927 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075036733 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067680644 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067796314 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072397996 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069574384 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075720849 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06980312 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07492587 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070128535 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070584497 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066645822 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067660066 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065349611 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066282438 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068289949 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068024722 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071587438 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075342896 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066414736 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077764459 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076105329 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069008757 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064457713 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065663183 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066901642 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062074823 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068473715 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065145153 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066288186 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065160112 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066603997 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067691918 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072705357 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068659931 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067533586 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066633483 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060923212 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069225351 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068659585 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067858557 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063724567 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067224179 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067350773 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07076449 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069651573 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064523979 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068530974 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06929948 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068293523 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061548642 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073613754 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065933796 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068430768 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066039107 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067060565 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06729246 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070217995 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071294889 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067255691 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068507464 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070076603 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068615352 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063924599 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063999768 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071709653 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064747778 seconds)
  done (took 42.560056699 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101023058 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063370011 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061995398 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062246917 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073091589 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062600823 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061992108 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062977967 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062939328 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06511829 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061728859 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061891669 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070336952 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077587815 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073880259 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066188356 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061795734 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062773315 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062537195 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062939119 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070044199 seconds)
  done (took 2.751623934 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073390918 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.0776751 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075569627 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081539382 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070610083 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070243575 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075605072 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070778632 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078089703 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072447007 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078488917 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070466807 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07275073 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072281057 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07235929 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070729644 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077746646 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07093496 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070298258 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074932224 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070710404 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075317178 seconds)
  done (took 2.938186515 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067379958 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066621274 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068798134 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061845465 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066075744 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060966311 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069565911 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06446393 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069987805 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06602256 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065453717 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065712722 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068111802 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061246615 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066286976 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064402057 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107103392 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069766765 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066849376 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067176744 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061737739 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067935053 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061558729 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062098252 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065072428 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069063546 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066749013 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064108121 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065738293 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064923413 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06599223 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064071344 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067556269 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066802313 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065070712 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066302361 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065301911 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06578091 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060779177 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064002478 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066347717 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061693355 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066191093 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066760257 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063591095 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063504201 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067372489 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065364396 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060561675 seconds)
  done (took 4.564175914 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079969342 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109362307 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067582718 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091756283 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079423953 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072445161 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06972551 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.0896085 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06309526 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064004866 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08229082 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078884708 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065879547 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070342482 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071943233 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065507138 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066722419 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064475789 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069673604 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064965676 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069316602 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07194172 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079292304 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077983405 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068891217 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064127205 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064858133 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06920384 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077030903 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069474458 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070122851 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070565419 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080186725 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070346697 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064369112 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066979966 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080265748 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065949346 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067368333 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063390105 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066970568 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069650599 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071952906 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080983423 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065572063 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070406909 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065480692 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062239421 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077556556 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068030507 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073029514 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078594025 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06905349 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065217291 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069465138 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079647275 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065026254 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063629079 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067940358 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076655624 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062887952 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068771866 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078412936 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067333738 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071878853 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078364186 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069757575 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068925547 seconds)
  done (took 6.331797689 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076560441 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095379511 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08414789 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083012899 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075494484 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075539549 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075097301 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075715809 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075798668 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080049172 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075390356 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114620463 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070971407 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077096475 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075623427 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075734958 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075524413 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075571602 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075155352 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075570069 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075172808 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082011541 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075146937 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083355119 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079036062 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071053192 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074746843 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075043019 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082770951 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07550888 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088043324 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075200476 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07549815 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082403881 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078988876 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074963798 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065212898 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074493443 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075333904 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074668306 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070325114 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08264796 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074893258 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070204704 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07504658 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074612979 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082287469 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079079219 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077374878 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079702785 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075255043 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082672519 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074777536 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075025365 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082715562 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085127136 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082468053 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083324276 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075584017 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082178275 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0826344 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085460648 seconds)
  done (took 6.200066713 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083002567 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074756868 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082268936 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061216218 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064466729 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071416289 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064317456 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064489025 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073949614 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073539477 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076246428 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07178921 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074473178 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07592485 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071079892 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074039802 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071130281 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071455595 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073665831 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071411664 seconds)
  done (took 2.781965741 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074210639 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083245279 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067297725 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070937778 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068672832 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071267809 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068384814 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068905686 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066797611 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06911686 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075699984 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075707197 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0668386 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07119999 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075528023 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071009085 seconds)
  done (took 2.475737119 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084279898 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073280825 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080690279 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066209106 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066428438 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062600117 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065685645 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061765161 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062329421 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078595972 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065912774 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075865911 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066019197 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064491669 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062621362 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070765153 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062389898 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062776927 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065594316 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078156101 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069306659 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063887633 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068617506 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065427277 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068663596 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070396893 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064992969 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065551681 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062925791 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065596851 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068203945 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068612496 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062888025 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063020911 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063976394 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063335138 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065185038 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065517273 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070219245 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065048247 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063821133 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067331562 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065075729 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066110858 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061513864 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065495594 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061609753 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067171958 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063218488 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06759467 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065591959 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067623558 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065577312 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072211125 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067983167 seconds)
  done (took 5.017501849 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079318831 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069575102 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060882933 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064057797 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068404751 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066667026 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069265955 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066440933 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067250837 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063589218 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067303784 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068171344 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066630725 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069575678 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067076746 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068771268 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061955914 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06692321 seconds)
  done (took 2.553496424 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071528247 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065982202 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072504123 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065997608 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065118529 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068023726 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062184873 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063877526 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064232224 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065489091 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06598574 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067803514 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06444054 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068004564 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065365139 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065337825 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068632805 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064362473 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065755284 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061487751 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068031206 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064175074 seconds)
  done (took 2.791262053 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094075843 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082292284 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141578636 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078415234 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084286374 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071538197 seconds)
  done (took 1.890184196 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090884125 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100048033 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066873295 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069427363 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075737522 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069523931 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06988816 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070099237 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077798448 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075368053 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069566702 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078503919 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078202672 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077107021 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075448979 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075362708 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069846399 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069662362 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065768269 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083079752 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069845702 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077708422 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069955858 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069389976 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069642775 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077038857 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078194116 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075405344 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069214109 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077308517 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075180759 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069467008 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077994654 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075867944 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068409357 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077387586 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069889808 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082977925 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07503895 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077162589 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068914991 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074893934 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077592621 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07388505 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077763665 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069868371 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074067462 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06944846 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070022768 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085033132 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075683457 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077382677 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078058327 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078046946 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077906149 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085508332 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076026234 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077367647 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075627198 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075745723 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076805261 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075397043 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076922922 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075538243 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075394123 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077512289 seconds)
  done (took 6.309408346 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103137033 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067534978 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07009348 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075916452 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076740154 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070184827 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069700408 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070117872 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071007456 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067019013 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107460317 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070298665 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077462892 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077228402 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070464556 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069740065 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069987409 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076948776 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066658629 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084953402 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06999636 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076388193 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076875403 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076989301 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076271614 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075538156 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06963115 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069587414 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070049401 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069435284 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074564453 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069869832 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077314044 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066195717 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077056818 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069989614 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069870005 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073984515 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069729336 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075070054 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076809362 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083126155 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069701051 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069637941 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075603068 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069608711 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069656085 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066652895 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0694752 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066446165 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075673934 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075666164 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075280458 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07717838 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069685519 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070009046 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069799212 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069828143 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06978577 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075485565 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077004489 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069535782 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08524501 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069969524 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070007948 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077223319 seconds)
  done (took 6.218672595 seconds)
done (took 129.033304866 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187535636 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165412117 seconds)
  done (took 1.689758146 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069266163 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098192897 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076415321 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128184824 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066322964 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100018118 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099592328 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078495483 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066802866 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065814913 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066566407 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068714574 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131282299 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06609239 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066197162 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068732806 seconds)
  done (took 2.666311965 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099006822 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161683584 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102159257 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06561737 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099034655 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07306927 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064866111 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07546187 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071145926 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065319761 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073256292 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070634716 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064939643 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071102588 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071095518 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072779158 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065174219 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072782876 seconds)
  done (took 2.791189718 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099430905 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091590761 seconds)
  done (took 1.544833171 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160413545 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106925648 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.146410437 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.356273631 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162942109 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149035464 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145612979 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146551419 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.123613334 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140319186 seconds)
  done (took 2.987202748 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099534313 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154163795 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.265437907 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118025723 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072702175 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093233576 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118317046 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078163338 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080547888 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079760549 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079574455 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076054379 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09952063 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072801149 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073899024 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076088283 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103174821 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073200726 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074135533 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075561179 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10008397 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065873831 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073079397 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072429842 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076947688 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076661765 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065747659 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065617927 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075412747 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073785375 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075813209 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091930582 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076748507 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105178149 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070436056 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105805272 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076319067 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072715557 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075072119 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072976984 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077594769 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077190517 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072588443 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076072909 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065498165 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07629502 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065306499 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065426666 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076976484 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06679053 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077264555 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076070831 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105041128 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066805073 seconds)
  done (took 5.954740591 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103502057 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105460245 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071817365 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11219487 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103847351 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07222008 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103223735 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095628586 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103691357 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070348032 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068286209 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070146991 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081652529 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083261837 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115452926 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106223998 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07423111 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070999157 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105633927 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104917523 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068287275 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097082619 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090604648 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102856322 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067179053 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0704652 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068321069 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070067382 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076604764 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078326088 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069609787 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080176593 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084261368 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077524202 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067460293 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068352065 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068202353 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079546284 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078964875 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079024785 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077555235 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067754485 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068150455 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069281846 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070100587 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067429653 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077981327 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08024822 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078192208 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069514889 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070171285 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068376437 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069708963 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079766969 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.0772728 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07999587 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079757104 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06811151 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068936863 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072383481 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079655891 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078579541 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078904806 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069385036 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078424364 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067878471 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079339812 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084526909 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067886599 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069638668 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068598538 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069532349 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069693282 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077503192 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077224768 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069622083 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069619309 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068101766 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079667429 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077843184 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068381468 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07678323 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066803247 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068124441 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069353394 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069234233 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077234006 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079843632 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069745401 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06812585 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069027056 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068231648 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067119558 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076469252 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079503162 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079072073 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077085399 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068144002 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077160525 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076906385 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068914722 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077175948 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067003752 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068616697 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068363803 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076504271 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075483877 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076933261 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.197684139 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068973382 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079365815 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082275378 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068266806 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078282163 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080915226 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079180537 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068403404 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082471064 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069239305 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080583563 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070600505 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079600248 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068938438 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079430166 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069548484 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068579188 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06941405 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079701055 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072893261 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069222719 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070778826 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070377111 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079426528 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083342274 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070741391 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078733646 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078541422 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070576625 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079308143 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069532787 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078969526 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069700348 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070536947 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06731448 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082216956 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06924943 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068980151 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070349421 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081006234 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069335833 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080275487 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077659413 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0686105 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081032668 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080563077 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077308981 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081081299 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070732906 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068736845 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068105151 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069635404 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07792236 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079994721 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070743317 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068762304 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077669211 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080085881 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067476547 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078593986 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078750442 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078399317 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068709728 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069871105 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08058355 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08156633 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078683656 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078419175 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078106626 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068800731 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077530186 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078785287 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068443279 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084546828 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068179401 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082050319 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078586531 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07613493 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078864933 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080091315 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079727235 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079859723 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082177617 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068962066 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067812435 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079160208 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068788404 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069291975 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078004616 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069807474 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069579927 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083122447 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068609101 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079828727 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067750488 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078735704 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066971873 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069321284 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08156977 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06684657 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06844185 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077082149 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068741901 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075301616 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078449387 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076265238 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066784814 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068820268 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208661406 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080299454 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06929737 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06901144 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071086201 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078352814 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078357606 seconds)
  done (took 18.632381745 seconds)
done (took 37.625069172 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208011201 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152061399 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.181940026 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118636869 seconds)
  done (took 2.115645213 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.117686687 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100836453 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092792533 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065290316 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099107488 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065249135 seconds)
  done (took 1.931827657 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309966722 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210501176 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.187369501 seconds)
  done (took 2.096457452 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200171625 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187469044 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.415890429 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.262377661 seconds)
  done (took 2.564310461 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144084379 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088441973 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067923398 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083970756 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133507831 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160368499 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100426111 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12500391 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078760104 seconds)
  done (took 2.424835709 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150635613 seconds)
done (took 12.672543862 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.111056896 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.255513312 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108564714 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.104985643 seconds)
    (5/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.193206042 seconds)
    (6/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.204973753 seconds)
    (7/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.101782783 seconds)
    (8/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.224923491 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071725721 seconds)
    (10/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.082984797 seconds)
    (11/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102723365 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078026883 seconds)
    (13/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076626016 seconds)
    (14/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070668773 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074087537 seconds)
    (16/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079632697 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.164778525 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.101340955 seconds)
    (19/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.074730323 seconds)
    (20/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068956437 seconds)
    (21/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072053469 seconds)
    (22/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.142230656 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.103869898 seconds)
    (24/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.0716654 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191919806 seconds)
    (26/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074624966 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092342928 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122040085 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123690098 seconds)
    (30/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.238252924 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124875976 seconds)
    (32/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073853744 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071211989 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071874682 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067106689 seconds)
    (36/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.161660436 seconds)
    (37/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076574545 seconds)
    (38/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.177508461 seconds)
    (39/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.182766082 seconds)
    (40/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.178894932 seconds)
    (41/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109294787 seconds)
    (42/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.183125099 seconds)
    (43/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.089308461 seconds)
    (44/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.164000237 seconds)
    (45/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.141023548 seconds)
    (46/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075434034 seconds)
    (47/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.213195719 seconds)
    (48/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.172084278 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073309636 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.107631347 seconds)
    (51/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066724975 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085191147 seconds)
    (53/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081769626 seconds)
    (54/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080140766 seconds)
    (55/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.166691557 seconds)
    (56/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074017414 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051671603 seconds)
    (58/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081230462 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067394449 seconds)
    (60/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.163351286 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072823968 seconds)
    (62/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.161640103 seconds)
    (63/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075868812 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141564409 seconds)
    (65/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075983987 seconds)
    (66/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.090615259 seconds)
    (67/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081105302 seconds)
    (68/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07457823 seconds)
    (69/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.152992162 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.090252602 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064887023 seconds)
    (72/309) benchmarking ("sort", Float32, false)...
    done (took 0.130961631 seconds)
    (73/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075180162 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08767964 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072292057 seconds)
    (76/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.143009454 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137166101 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.09368615 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.203031253 seconds)
    (80/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075211717 seconds)
    (81/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069532023 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.137941874 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.065532135 seconds)
    (84/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.193911748 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095668948 seconds)
    (86/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.196820941 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.115230258 seconds)
    (88/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053520682 seconds)
    (89/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051269367 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089894674 seconds)
    (91/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072702104 seconds)
    (92/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.157119265 seconds)
    (93/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072254609 seconds)
    (94/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051284954 seconds)
    (95/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.117973389 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065998266 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.182409466 seconds)
    (98/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052109909 seconds)
    (99/309) benchmarking ("sort", Float64, false)...
    done (took 0.130789509 seconds)
    (100/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.102707424 seconds)
    (101/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076276408 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092789651 seconds)
    (103/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.165665217 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073340879 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090761221 seconds)
    (106/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.180780747 seconds)
    (107/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074950421 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065855104 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145203472 seconds)
    (110/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070688972 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069258326 seconds)
    (112/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06721325 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09036282 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065532525 seconds)
    (115/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072238241 seconds)
    (116/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072422161 seconds)
    (117/309) benchmarking ("sort", Bool, false)...
    done (took 0.138637584 seconds)
    (118/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066777064 seconds)
    (119/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074633934 seconds)
    (120/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072357902 seconds)
    (121/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.15516234 seconds)
    (122/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.201303308 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07300344 seconds)
    (124/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.099577973 seconds)
    (125/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074476129 seconds)
    (126/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051306368 seconds)
    (127/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051719043 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072114682 seconds)
    (129/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.183131916 seconds)
    (130/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06668539 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.085185349 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06556051 seconds)
    (133/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050308335 seconds)
    (134/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120253683 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.14595074 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.076508123 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137770243 seconds)
    (138/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051145309 seconds)
    (139/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064558094 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098234902 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071896869 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06660858 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074551566 seconds)
    (144/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.19578025 seconds)
    (145/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.07785857 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111033429 seconds)
    (147/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.193798932 seconds)
    (148/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.123022058 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.076133453 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064495182 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065292049 seconds)
    (152/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066637699 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073437353 seconds)
    (154/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060902118 seconds)
    (155/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052101283 seconds)
    (156/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089749204 seconds)
    (157/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068316407 seconds)
    (158/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.193870518 seconds)
    (159/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.09960623 seconds)
    (160/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.181586349 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.0731113 seconds)
    (162/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06549155 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064499997 seconds)
    (164/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.396885346 seconds)
    (165/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065441655 seconds)
    (166/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075864269 seconds)
    (167/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07465105 seconds)
    (168/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065211137 seconds)
    (169/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.0699357 seconds)
    (170/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05163302 seconds)
    (171/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073152349 seconds)
    (172/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051774201 seconds)
    (173/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052857261 seconds)
    (174/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051566512 seconds)
    (175/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078099211 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066184577 seconds)
    (177/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.150015302 seconds)
    (178/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100039379 seconds)
    (179/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084928407 seconds)
    (180/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051644516 seconds)
    (181/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067992914 seconds)
    (182/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051162903 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06517526 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050713828 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070479473 seconds)
    (186/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074438641 seconds)
    (187/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060844049 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072312918 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087030309 seconds)
    (190/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050551622 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12912399 seconds)
    (192/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052476443 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073610131 seconds)
    (194/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052377316 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17554845 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138967634 seconds)
    (197/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087853206 seconds)
    (198/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.062583026 seconds)
    (199/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072454158 seconds)
    (200/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061205954 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063217324 seconds)
    (202/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061595716 seconds)
    (203/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078215825 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.0517319 seconds)
    (205/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17271573 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180220744 seconds)
    (207/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072334377 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073331854 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071341591 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.08874319 seconds)
    (211/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071242042 seconds)
    (212/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.064721146 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144155882 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140718928 seconds)
    (215/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064995122 seconds)
    (216/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066344399 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065640159 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069470208 seconds)
    (219/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070783842 seconds)
    (220/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.062744007 seconds)
    (221/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.049844297 seconds)
    (222/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.049686257 seconds)
    (223/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108714866 seconds)
    (224/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.0497738 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06279688 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088796239 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.124864944 seconds)
    (228/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.106327594 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136574156 seconds)
    (230/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067364291 seconds)
    (231/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070571389 seconds)
    (232/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.049801696 seconds)
    (233/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066908049 seconds)
    (234/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.105447071 seconds)
    (235/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.10917237 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085923764 seconds)
    (237/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.061650884 seconds)
    (238/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.08684732 seconds)
    (239/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071355307 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06446205 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050484055 seconds)
    (242/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087481011 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.08718468 seconds)
    (244/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051052622 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168135479 seconds)
    (246/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.050294776 seconds)
    (247/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059409581 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063646624 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.063392181 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.064125233 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084448514 seconds)
    (252/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07317652 seconds)
    (253/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06499205 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.06971194 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087863799 seconds)
    (256/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.049826726 seconds)
    (257/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.049148338 seconds)
    (258/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.15012148 seconds)
    (259/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064546277 seconds)
    (260/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.0848062 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.049840588 seconds)
    (262/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.049435576 seconds)
    (263/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.049709863 seconds)
    (264/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.050159979 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07158654 seconds)
    (266/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06539467 seconds)
    (267/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.049589141 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.093467582 seconds)
    (269/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.175557751 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.063080699 seconds)
    (271/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050188425 seconds)
    (272/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.049481985 seconds)
    (273/309) benchmarking ("sort", BigInt, false)...
    done (took 0.179494173 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.062895866 seconds)
    (275/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050079203 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063899428 seconds)
    (277/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.049697119 seconds)
    (278/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.050297882 seconds)
    (279/309) benchmarking ("sort", Int8, false)...
    done (took 0.135337238 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.063878519 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087260845 seconds)
    (282/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.050262545 seconds)
    (283/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051104582 seconds)
    (284/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050146691 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091078813 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071934102 seconds)
    (287/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.049370012 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088084672 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062537753 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.062863253 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062460375 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.0710809 seconds)
    (293/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071611212 seconds)
    (294/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.1789713 seconds)
    (295/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053020859 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069631088 seconds)
    (297/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08334101 seconds)
    (298/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.060118534 seconds)
    (299/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.049078359 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.063997994 seconds)
    (301/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.050598092 seconds)
    (302/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.050664574 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069470683 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063533294 seconds)
    (305/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.063376746 seconds)
    (306/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.050568155 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088164254 seconds)
    (308/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05040928 seconds)
    (309/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072218579 seconds)
  done (took 30.484552037 seconds)
done (took 31.885426929 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.091058237 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093607944 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07605243 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094970532 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08179058 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077841784 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073775975 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080121035 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081897684 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084029443 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080090045 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055644557 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075912027 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075840735 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076988278 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093273757 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079492398 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07429985 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074638777 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065403261 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074050002 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066621305 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067999377 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055754776 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.08006145 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072947495 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073028655 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075031732 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066051619 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066354526 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069956245 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074332519 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066130709 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079269353 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073570755 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074209053 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075412837 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077096551 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068043352 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066470618 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075271025 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066173863 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073935783 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074204959 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072919519 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072296448 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07405959 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078425564 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091578483 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068218207 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074638335 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077000143 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076824698 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073163139 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070642916 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073484182 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071123277 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091668588 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073572718 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068934319 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075174837 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07428308 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072313327 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074120546 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073690195 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075899462 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076530212 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071715776 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075776854 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071656532 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065735427 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073243714 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069074807 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065671003 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076690311 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077822329 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064127111 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072422247 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073638164 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071031473 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065071882 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068023159 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067338651 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07228748 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067852077 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053977388 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069972704 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072757644 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064644236 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074255398 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072250238 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073311277 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068282968 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076991186 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065386204 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071103863 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065817071 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065734482 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067345824 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070789378 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06528303 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067285422 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075609482 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066893384 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072269732 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07949096 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065428205 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072071431 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064637407 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064806174 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079720545 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075485851 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066239754 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068051722 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065194727 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073492869 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065181341 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065490692 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065641397 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065362467 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071633955 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065699438 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067297827 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073056823 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07825396 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065882722 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068692451 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06722859 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065176562 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071254461 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065730274 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064944763 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067515113 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061512932 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066764632 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064900031 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072884428 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067244996 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.20569398 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067601881 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074139879 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070409494 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071851007 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070919237 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064505431 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058623763 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068003095 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067269135 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067583281 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065144703 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066590605 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06511402 seconds)
done (took 12.702159472 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066716885 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139055484 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096975051 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096098844 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08545929 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066676099 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075841215 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.1013705 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067425125 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101693289 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088108197 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086100928 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114932947 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064487759 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065656503 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069569187 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067432169 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081589932 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100561617 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086550972 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115252509 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065194066 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092365351 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089575726 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088447732 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103712669 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069450336 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069766574 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069620529 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093410924 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087783775 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069626442 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067410714 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.09846376 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093773496 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.0838982 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065997905 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083537633 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066460282 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066074828 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067161377 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098578579 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080758924 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080829937 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069881089 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069504791 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067793915 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083693312 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09000147 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079290648 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086094025 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101335661 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068849051 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065385751 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064690319 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086238746 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06527228 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069084199 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066042911 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06875872 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065964268 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069110838 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08149076 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080590484 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070245284 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079879087 seconds)
  done (took 6.84903262 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084261948 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091519294 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08309589 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084344472 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065261598 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06627456 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066503945 seconds)
  done (took 2.082913599 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066987668 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087781122 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089329333 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089883103 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081680358 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087890223 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075377136 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066990607 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087953129 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067660671 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08733689 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100785369 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069822416 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073854285 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090339492 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066479929 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090647379 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06620214 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069432708 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090437733 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068834464 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095947407 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069381292 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067515651 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081262929 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066932891 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113642634 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070734538 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06810938 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069497608 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064136322 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107235096 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080077731 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07426244 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066667045 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081809112 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081554343 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0648553 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082839341 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074990964 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080016558 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066407327 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066895197 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065043146 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070576132 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076891651 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067502794 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067220817 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068624038 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086269708 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067265753 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080178583 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069476038 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071765692 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067722131 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072789416 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076486006 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067305513 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086550433 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067452721 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083485605 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082448731 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079811467 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082918445 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068691819 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080014213 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080248371 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06941864 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068620194 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069913927 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082992296 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064885067 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067873803 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076825611 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068576684 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089348168 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089177939 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068235455 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079755148 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066834741 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067083747 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066293598 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089706592 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071790878 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066790617 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070299214 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069289715 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064736902 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064930995 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070536307 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064795698 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068151059 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068883388 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069141958 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069018237 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082773879 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068901292 seconds)
  done (took 8.845029428 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067857189 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067477355 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069067764 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068022891 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067680054 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067606382 seconds)
  done (took 1.970548767 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092927807 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069208515 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080377121 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072418244 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104623373 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086610231 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086440508 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07811091 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083243795 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077977643 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086603175 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088348297 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091795864 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071878299 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086155189 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071429084 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086968425 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074472918 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077819442 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072249742 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086171473 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072049089 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072054478 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081476055 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075922875 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071109037 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067517573 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078678038 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078100589 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078203326 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071821953 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075472739 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070393699 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077375217 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086804946 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070374755 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072005382 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076662949 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072244292 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075831168 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087725649 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072267478 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073783755 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076778764 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077972654 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070675462 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076774007 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074687971 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086094845 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076651742 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07636742 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070362803 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075179537 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076642512 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070039019 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077451938 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076253752 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086381685 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071305072 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07046544 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068392771 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075539893 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077051762 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075368551 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078588802 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076371709 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070502043 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071792861 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07234237 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071014947 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076867681 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068518287 seconds)
  done (took 7.098978362 seconds)
done (took 28.374687241 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.528902977 seconds)
  done (took 2.062618034 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.611298075 seconds)
  done (took 2.166766707 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.435622095 seconds)
  done (took 7.988619698 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.399693202 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.522565735 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.728441798 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131103506 seconds)
  done (took 3.376078426 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.71112114 seconds)
  done (took 2.275074023 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.213119233 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201653267 seconds)
  done (took 1.986022092 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.373531372 seconds)
  done (took 1.928569163 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.123648984 seconds)
  done (took 2.679894725 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.25615182 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174440923 seconds)
  done (took 1.99385707 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.470155966 seconds)
  done (took 2.02986229 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.855721031 seconds)
  done (took 6.417130493 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.209616386 seconds)
  done (took 1.814992933 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238598708 seconds)
  done (took 1.802879723 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.71166488 seconds)
  done (took 3.278162965 seconds)
done (took 43.361186869 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080132197 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08085336 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080746366 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078694163 seconds)
  done (took 1.873647678 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076835511 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073734361 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076506723 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073377819 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076645297 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073844955 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074221333 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075735019 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072947771 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073649575 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07298995 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073237109 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075234215 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075234419 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071606883 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075148886 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076578944 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072911319 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076079932 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072906766 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070793332 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075330833 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075824591 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071973349 seconds)
  done (took 3.351494194 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077794491 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072894336 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075603719 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072268425 seconds)
  done (took 1.871868256 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079014084 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.0960781 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090126569 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078267921 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093366134 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086830697 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068989127 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068952829 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.0709915 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078179439 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068454774 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096098835 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088929765 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077716034 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080021005 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065993706 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.0684348 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087906901 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078454672 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078227396 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070503225 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078185326 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068217221 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088687086 seconds)
  done (took 3.475540234 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086355249 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105594248 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081656753 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089723333 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092110595 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065752343 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087991351 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091151866 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127514421 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066198609 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070878589 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065602718 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073231948 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06550431 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080957445 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107823839 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111328083 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068852987 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097164021 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065485148 seconds)
  done (took 3.279135399 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073867142 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071041964 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066341161 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069871955 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077787719 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072948999 seconds)
  done (took 2.012271672 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069031077 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068600184 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067711306 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067570834 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072868853 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067902664 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066788655 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067884441 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067799516 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067426412 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067169942 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066402191 seconds)
  done (took 2.392778778 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.202404778 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069261862 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069090976 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066645515 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070674323 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066895171 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081591713 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068495274 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092148507 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066806524 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067080121 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069109667 seconds)
  done (took 2.571014092 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207357498 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076266002 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239663722 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150882198 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111148344 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115933997 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11268537 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113975508 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141872389 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100391232 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167882701 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167393073 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107869089 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137077006 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089406134 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.101090371 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154485308 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163311892 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105291505 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167271699 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145973319 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126356258 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148786223 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106813923 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106181007 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122120911 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071107251 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080116026 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169570606 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133341799 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143753981 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111266023 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09216405 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17733573 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17167172 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140985896 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147977708 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084710365 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104599497 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135238795 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200615581 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088739802 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162249651 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109073633 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218362778 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134685719 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120836616 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120306606 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106629103 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090277019 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146890829 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184656438 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138256231 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088254375 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12518686 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113055015 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116175032 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113531409 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184291846 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164008433 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128382231 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071958685 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108850802 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154728695 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135448703 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108916125 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125766911 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092313665 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13561026 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156467858 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121670586 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145664332 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117480992 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088990553 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120076224 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140910485 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127739669 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161963842 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124775248 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073365275 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123616631 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101729576 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080828684 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145971428 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075643239 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177063317 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09983894 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10993846 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125045273 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109768895 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109195413 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159089996 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14559064 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103226815 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065498776 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246449794 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122300286 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14678532 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088179173 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109860562 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118977672 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078743221 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137577217 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076109433 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123504395 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078333314 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128800456 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130000111 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077861898 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12322833 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104663825 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101593612 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133578874 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162622763 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088593167 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082110762 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171025278 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122709437 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103495216 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145429014 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157677279 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102705937 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101490312 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150017621 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178755817 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089996804 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164135409 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10669276 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083966194 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088754199 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124042431 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112293343 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123915462 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08186747 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118567219 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169486911 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075442051 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096020667 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134928579 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079085428 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080956083 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105611918 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105471669 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096088225 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100373367 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102865827 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136108554 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123419243 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10592595 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123288031 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098131382 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168211796 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087234602 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100987283 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102826613 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06923832 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.132691404 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155697725 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078010343 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159238196 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119986926 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112978053 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116267688 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081996773 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136125417 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077265251 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068559364 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138231327 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107834707 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106588058 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.146645081 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11230297 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120793226 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.114462229 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127528413 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125690993 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127041105 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102983926 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08645987 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109490367 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122903179 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071743401 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.087524251 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077547237 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101471266 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092922839 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080997753 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136301376 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119426316 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106100407 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109327961 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093441875 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143686593 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074092744 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123530647 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116195054 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092183895 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144208636 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144914704 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124858282 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094369671 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128596607 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068062883 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07175357 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.083529442 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11657365 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079970125 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080332799 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.367636601 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153191623 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13418017 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139190531 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128102904 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12351603 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160070997 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071827906 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120975897 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15192606 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123573374 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105966639 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092011262 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101674341 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146703193 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108374837 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185410885 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119285216 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126369374 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15647622 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.103457051 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081463038 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105819843 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137927571 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104838569 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145370685 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100558764 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089030986 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111325244 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075581167 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099272313 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127714816 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118801361 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13625196 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116623157 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132505767 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078024228 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116022846 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1213382 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121798031 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064601588 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120821378 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162853497 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095396865 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120100323 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154451688 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078930574 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133258995 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174956561 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144851335 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08461881 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257983506 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121303651 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130298191 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121417886 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140849358 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108424643 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13877855 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111654324 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086699531 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088543366 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098277976 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106026992 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095920862 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105669383 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113297805 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09559811 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131227784 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103753894 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110618955 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118176299 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098243001 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091493298 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096958276 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177637815 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118458719 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170375027 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099932394 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144737466 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163674786 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075093859 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07935285 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078161396 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140651026 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084761386 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13032729 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107603213 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117696585 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123809305 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142512056 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095716558 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068664844 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109154978 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133097632 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124884667 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098806773 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103930637 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16388907 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101591346 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079504686 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114390745 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116539267 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103459091 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171700488 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06176604 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105759401 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076384993 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080568791 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127839625 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.298926231 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080799775 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10262635 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121098301 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113482074 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129908439 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101308337 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111928153 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127443327 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150446624 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129325602 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091030972 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111934535 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12899118 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15679343 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105443539 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096501154 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173035616 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154188809 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160719195 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088184945 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115248164 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114820474 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109083759 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139195301 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083820967 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163660026 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08282698 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136873366 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104005321 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089186821 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129341441 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108384784 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088355785 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148472169 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117946921 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083235354 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077776828 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118059324 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119934484 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106284967 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075739616 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139525473 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074212373 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132788673 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160670017 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081300815 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108693052 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096281512 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079371318 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105902056 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101457821 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087320685 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.241681478 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176346327 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088482849 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151390964 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134671493 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114703775 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138134225 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102859897 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63950939 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078812067 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152873965 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116159054 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174189331 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100593698 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1184442 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110612621 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122518221 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145504602 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104100557 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180899176 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13193842 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11571982 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080150294 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102577135 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103644866 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087703085 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107712677 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114341417 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115257427 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09301844 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115652431 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124293311 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082903237 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096393017 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156843611 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117033965 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143898824 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140678251 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086016397 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118533445 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138151363 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080230704 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120653689 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153122455 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107244001 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100024429 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080372185 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099762009 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157780614 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073427725 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160083806 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119367861 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.255435908 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114666519 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112871671 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131968734 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107034918 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12151167 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092489444 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110840326 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114474285 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082575628 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077946905 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105783564 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11218389 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099140113 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097706397 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097596977 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152806563 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073136258 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099399993 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115350208 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144184727 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173934181 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.09046205 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08315376 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118377649 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114043161 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112978149 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121424523 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079133685 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082006852 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080976515 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078626519 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109652027 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113643576 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114702393 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111519795 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164445226 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083332357 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.230513117 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096105386 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105444577 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070311848 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078440742 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096376263 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098421924 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107797439 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110380838 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15938705 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09622298 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090472271 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092119084 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074686593 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083616197 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129319609 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11023491 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119449175 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099852073 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063013592 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107168585 seconds)
  done (took 58.993601726 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110060076 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083181053 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095231783 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14614698 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123375221 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20289045 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15434585 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189184511 seconds)
  done (took 2.8299226 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06830244 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096374559 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104233924 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084683013 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06784801 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069967094 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233560677 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082481401 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067370231 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099290215 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079156302 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069572415 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.430040199 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066862219 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067941033 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062566216 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067634107 seconds)
  done (took 3.519388713 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.389734145 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.612828624 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.351875605 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072832909 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.463356872 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085787297 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.135052513 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128825661 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073552231 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537628168 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.402155633 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125775396 seconds)
  done (took 18.095391766 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076010979 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069847065 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084076076 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084420761 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073122792 seconds)
  done (took 2.099904914 seconds)
done (took 107.985584214 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08145039 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.605328162 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053938909 seconds)
  done (took 2.398666803 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083445366 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086234929 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086019444 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084314111 seconds)
  done (took 2.062595245 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07507883 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076800235 seconds)
  done (took 1.868661663 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233869517 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165590967 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097067111 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084813939 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080038003 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080890019 seconds)
  done (took 1.97023044 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072802077 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075459772 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074084419 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077166725 seconds)
  done (took 2.018637798 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077344764 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053045676 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054837118 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058574445 seconds)
  done (took 1.964036263 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087476267 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080757184 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080159093 seconds)
  done (took 1.969951935 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103414742 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087114983 seconds)
  done (took 1.911554819 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082403152 seconds)
  done (took 1.804979266 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101035472 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102223085 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133030366 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112099229 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14038895 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110222475 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085178456 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086051102 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076934565 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087190843 seconds)
  done (took 2.756373369 seconds)
done (took 23.013121406 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080150761 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.369744589 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360611324 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091333204 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670158142 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357275394 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.017871804 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093566633 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115871672 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068428544 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08564191 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647961645 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.009328385 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323898644 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.996048233 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323476408 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652810022 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068684908 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068352799 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068952414 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.005295768 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068163506 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068560199 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068784639 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650503991 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372931927 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068753337 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318904423 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068678108 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071075115 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355518529 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069081352 seconds)
  done (took 16.366768387 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071276317 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121472133 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074337578 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085832614 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071714046 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070484972 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072537689 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069329015 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121701898 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068470026 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086233819 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068459944 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072470093 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086670999 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088874412 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068481938 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069345459 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069451822 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06870283 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069266952 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087863574 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068294386 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069016522 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069233954 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068848469 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081210859 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068455594 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068736525 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069855467 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070480111 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071523737 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069085415 seconds)
  done (took 4.173724412 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116095904 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12600556 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074015091 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104893505 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113395849 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070529298 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144176516 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094262647 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127618921 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068393233 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086054563 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068739753 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102719738 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069155123 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089295464 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069061695 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069801664 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069188118 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068736408 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069273077 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088371377 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068493503 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068785796 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069019478 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06885063 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.0827658 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068858626 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068897353 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069207661 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070655807 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071602109 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069526845 seconds)
  done (took 4.407869541 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073283865 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076740335 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083820653 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085050845 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070021662 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073058984 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073394514 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070220239 seconds)
  done (took 2.350378122 seconds)
done (took 29.027567466 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080247819 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070094422 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073077473 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083636914 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074104174 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079348937 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068406316 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075964719 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073124783 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073626987 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075920849 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069039874 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072089146 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068130435 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074795404 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068318716 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079742213 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072082045 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079780536 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08013296 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07023178 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073516969 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075268638 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079864093 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.08008824 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079755852 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078371402 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073532139 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069562005 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071440647 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077584564 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084742259 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069270361 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079469811 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068115874 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067966672 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072080918 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068296607 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080327675 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077076788 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069955636 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076713006 seconds)
  done (took 4.858214941 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088074858 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093197864 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08618123 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062098372 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067343731 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066112094 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089520763 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060246216 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.05969648 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088761402 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056165896 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060065005 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066139144 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053891894 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061029143 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057049299 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062680459 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056012795 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061392062 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060314162 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089670184 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05437761 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.07834264 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064336979 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056257595 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062099071 seconds)
  done (took 3.503921146 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075154785 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086048869 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091615595 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132543199 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10717322 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08003369 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079769292 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096246876 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089748764 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067323147 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071406023 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093869865 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090244126 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074486043 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067844888 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086819719 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084190642 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070224595 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073781881 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095970593 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08766829 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086959651 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097924971 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084946683 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067751197 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070467106 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072395499 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082457706 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073898192 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078201141 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072403371 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072030717 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070645232 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080639278 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07255001 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070609053 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094247182 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078898298 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080357143 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069083725 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076771072 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069871641 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094159549 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128570859 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068114274 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075095448 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072566456 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079050378 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068636375 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090198097 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080169374 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068398767 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071584171 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068165358 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068603318 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082675813 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07097766 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.0707254 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078102889 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074659692 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094170892 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07417719 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084532742 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068420298 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077178763 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068476261 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069531943 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068222552 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097612707 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070166145 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112567332 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07027181 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069876867 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077823476 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077074452 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075565547 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069097071 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084860245 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079789577 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072529252 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077919785 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072128348 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07159688 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092834919 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071049523 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070534347 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070163446 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074475783 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072692816 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.081393846 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082078214 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068340201 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071405482 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086359001 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068518578 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07041802 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074134638 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073244661 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067505844 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079965182 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073483321 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069088616 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078134892 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068613015 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.0716636 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081008132 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074580987 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067474123 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072381537 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073846673 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069285437 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070049252 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071553598 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070654005 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077272499 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07515824 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07360032 seconds)
  done (took 10.878884427 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165637396 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159740944 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071268308 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150301454 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077091504 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079920026 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152244238 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096370123 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068762544 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06912849 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069656505 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111266361 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107337991 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117845066 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079713401 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068434233 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086272754 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116473398 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153600953 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148753347 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086615175 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078387825 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070753594 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069502939 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07103627 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079726814 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086691917 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.0772388 seconds)
  done (took 4.541424625 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082040129 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.108136655 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075344293 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092713619 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09210889 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068560243 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.0707442 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070413374 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082707614 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078951359 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068190317 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073848141 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075149625 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072493378 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069420523 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075537058 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076172511 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07009281 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071818984 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073988084 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079199755 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093290037 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07206779 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068271496 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073590428 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067695468 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063980751 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084935233 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069117463 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09613338 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066502403 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073639922 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083316462 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069514421 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068483942 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068544606 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068428825 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068663569 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070384075 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066760566 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067035497 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057768647 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067536428 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079777474 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075389154 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056734509 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073131216 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073918888 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073621262 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065834845 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071724994 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071357135 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07157617 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07593456 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07255319 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073507578 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069730329 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074989097 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07808124 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068800474 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065561375 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067250783 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073223718 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06600746 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077488012 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073493522 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06663169 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068080556 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070447072 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075550113 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068152542 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072574719 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065635433 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070117518 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073046198 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070820548 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069938042 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067097607 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068169102 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068795327 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055711005 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068258434 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053905203 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071484893 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06676225 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067104126 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068188261 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073334997 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080090769 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069766484 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075019938 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069533244 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067640295 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071491827 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061092734 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071954199 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084017875 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083842049 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06879199 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06617605 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082387211 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073359198 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067638315 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056382685 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07387904 seconds)
  done (took 9.353077084 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091339493 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070962548 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085734837 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092143817 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088807856 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075923126 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078776518 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069819554 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084290947 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074694527 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077945543 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068474881 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078865424 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077953904 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070820219 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078794401 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072697053 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086314013 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083902954 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068613943 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077535606 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081326655 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091365935 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083931467 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082249962 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083094086 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091603663 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078908215 seconds)
  done (took 4.030491651 seconds)
done (took 38.903385246 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.824106664 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.994645103 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.818263328 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.181507546 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.094876568 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.839451834 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.00244891 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.812897339 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.071949135 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.847647122 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.025979434 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.941225896 seconds)
done (took 66.207281651 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.827767231 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.957636708 seconds)
    (2/2) benchmarking "String"...
    done (took 2.059547931 seconds)
  done (took 5.773680681 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.048290071 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.37593043 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.064219268 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.816182979 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.820813539 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.153983966 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.605902746 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.3727159 seconds)
  done (took 30.966940683 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.930752065 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.051548218 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.492585408 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.519839696 seconds)
  done (took 15.796148846 seconds)
done (took 64.243709324 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.844402758 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.879642262 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.832590714 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.803878734 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.874085882 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.826060964 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.286557879 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.836332108 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.817379287 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.805231013 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.816680038 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.258841455 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.829969728 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.170161286 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.816044088 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.816997697 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.828305747 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.373078922 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.974405339 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.835695517 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.838839027 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.859335365 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.816619323 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.821331841 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.853301442 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.816101027 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.247671018 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.822894791 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.438106002 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.820649727 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.843924599 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.342305246 seconds)
  done (took 205.806009652 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.817543609 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.987557997 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.020881007 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.823491174 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.402834835 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.996283749 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.934979303 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.508934359 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.818861617 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.818800105 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.147254576 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.817363294 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.169905752 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.76487773 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.84746294 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.899769042 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.112595315 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.158963232 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.852057087 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.990556333 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.828570049 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.003875811 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.955112707 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.118450275 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.821660975 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.821145039 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.973458647 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.833179393 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.007966985 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.087431583 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.837427011 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.847847721 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.040748532 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.693993151 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.842008581 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.821330176 seconds)
  done (took 173.185879788 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.190534577 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.819637324 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.818403764 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.818450934 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.830687323 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.817925412 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.942792777 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.94129863 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.419346208 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.555071695 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.872442408 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.652447458 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.820658274 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.886294499 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.832490707 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.81963999 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.83525203 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.847131862 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.820894124 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.819663391 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.942919857 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.833100003 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.880184398 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.826501836 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.820510342 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.82481583 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.194557281 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.81950467 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.826230637 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.078503715 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.821391916 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.82062721 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.700704928 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.449507821 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.904232029 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.82206848 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.826900334 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.820836535 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.039913709 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.821466177 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.821415761 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.8234574 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.989222793 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.820474728 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.942869983 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.820736436 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.316670149 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.820968659 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.820699332 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.820880562 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.718189044 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.487703387 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.821149989 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.820821486 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.825132478 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.820404638 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.820837056 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.827116271 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.564706536 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.895801761 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.823045278 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.824579274 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.826492519 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.820483725 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.821775312 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.897719017 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.822090135 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.161849738 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.880310068 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.05831479 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.943250119 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.824029266 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.88915672 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.915636678 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.821988714 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.821540771 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.822547083 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.821736844 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.904281445 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.822861012 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.944734204 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.831339342 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.823229719 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.873796466 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.82300382 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.89092716 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.823477927 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.708340738 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.823456493 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.823326343 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.121304063 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.88988928 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.823940392 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.82329813 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.82358498 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.94985297 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.945554359 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.597773321 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.825252958 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.629293249 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.824789087 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.823344737 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.968529962 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.824368834 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.008358982 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.825346139 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.905498783 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.830156011 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.82619732 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.823789737 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.857164453 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.825116103 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.882020792 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.824703276 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.19845826 seconds)
  done (took 408.183851719 seconds)
done (took 791.175468335 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.488007737 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.445494485 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.558609477 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.466813163 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.438533739 seconds)
  done (took 14.163156064 seconds)
done (took 15.925295678 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.91271261 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.918578198 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.849164784 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.915096321 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.847205504 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.913989324 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.898524431 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.850846837 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.883424808 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.851360065 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.884757138 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.8506464 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.83662535 seconds)
  done (took 26.179133427 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.058832496 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.065209857 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.897804662 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.06034537 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.876584207 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.054408308 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.985315468 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.976815736 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.975440656 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.842901514 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.839264305 seconds)
  done (took 23.400113314 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.058774678 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.0653178 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.903832588 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.068124158 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.877570056 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.057142682 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.989784237 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.978406916 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.980417005 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.84239227 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.840364563 seconds)
  done (took 23.429320331 seconds)
done (took 74.771143218 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.83503353 seconds)
  done (took 3.603006926 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.859721063 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.016258634 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.841496487 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.839464482 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.834990472 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.837049556 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.838440004 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.834309557 seconds)
  done (took 16.670895913 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.835139205 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.835219483 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.832672254 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.834955985 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.832932075 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.835082095 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.833160868 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.831899926 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.832844316 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.835844596 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.832360449 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.836145053 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.833493015 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.836207399 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.836436163 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.832694988 seconds)
  done (took 31.116183902 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.834251232 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.83306395 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.832284654 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.832966228 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.833464168 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.833685741 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.835119902 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.832450036 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.834127367 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.833284069 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.834220584 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.833236566 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.834074583 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.833211539 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.833815906 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.835327755 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.83371845 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.83381239 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.839426317 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.83410588 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.834614947 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.834313813 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.835298121 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.834693907 seconds)
  done (took 45.790777658 seconds)
done (took 98.945221231 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.733576515 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.214464812 seconds)
  done (took 8.717793613 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.838423647 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.837342079 seconds)
  done (took 5.477798294 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.837525819 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.837159257 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.837621379 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.837134826 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.837097105 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.837439801 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.837811999 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.837990674 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.837627827 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.837716944 seconds)
  done (took 20.145968654 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.838141805 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.838108725 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.835798838 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.837821201 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.838380681 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.836235014 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.839159242 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.838952168 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.839012788 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.83578384 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.837754703 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.83568275 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.838843818 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.836029733 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.838375845 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.83573872 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.834943761 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.836344967 seconds)
  done (took 34.842734486 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.838474921 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.839162361 seconds)
  done (took 5.449251748 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.836361877 seconds)
    (2/7) benchmarking "second"...
    done (took 1.835944284 seconds)
    (3/7) benchmarking "month"...
    done (took 1.836941857 seconds)
    (4/7) benchmarking "year"...
    done (took 1.835757524 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.836344849 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.836125243 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.83572328 seconds)
  done (took 14.625350182 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.840583011 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.000138623 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.066964853 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.500454948 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.841041383 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.843080492 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.75884404 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.843950098 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.844552303 seconds)
  done (took 20.312330941 seconds)
done (took 111.33828321 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.650996353 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.834746296 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.222842131 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.883352557 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.930780924 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.178725223 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.843147199 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.147480545 seconds)
done (took 43.461806323 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.916237249 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.378973297 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.406836384 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.207380455 seconds)
  done (took 12.766212174 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.821598864 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.399472594 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.880023689 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.49447063 seconds)
  done (took 20.552839523 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.204615242 seconds)
    (2/2) benchmarking "read"...
    done (took 2.183905912 seconds)
  done (took 6.168507369 seconds)
done (took 48.176301591 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.841154119 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.84089055 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.837932983 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.84107833 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.838113592 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.838657027 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.838570173 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.840918688 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.841777769 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.841244631 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.8395343 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.842193271 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841969564 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.838451602 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839208636 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842162628 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.838964336 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839237007 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.839274664 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.841347114 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841850533 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.838634852 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.839755465 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.842715685 seconds)
  done (took 45.939570543 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.843096853 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.840877742 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.843600038 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.843177366 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.839673054 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.843173192 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.843195775 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.839203204 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.842087298 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.842127082 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.839423741 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.840907743 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.84285699 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.840693304 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8423288 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.84069693 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.842560895 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840694365 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843485936 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.840207827 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.843640316 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839958119 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.840487666 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.843304063 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.83994702 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.841325232 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.843073764 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.84091478 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.843349287 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.841238955 seconds)
  done (took 57.028408988 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.848344776 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.851705998 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.844461357 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.844654589 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.844849667 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.843701195 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.843608957 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.845035346 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.844214072 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.844705886 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.844603985 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.844555924 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.844912948 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.844414754 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.844491159 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.844924819 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.845446614 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.84514418 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.845180414 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.846223367 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.844902925 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.844461035 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.84546582 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.844673069 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.844815968 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.844156749 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.844297237 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.845367236 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.844943811 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.846048141 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.845607007 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.845044578 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.845356967 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.845727308 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.845225441 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.846778285 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.850590075 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.854465032 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.845811092 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.845424104 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.845896403 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.846834432 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.84593439 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.846059341 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.845762452 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.845822337 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.84554503 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.846470571 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.847861222 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.847383703 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.846831394 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.847034233 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.847479053 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.855699489 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.847337453 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.846969255 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.846306337 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.846766096 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.846452235 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.847073666 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.846660343 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.846868823 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.846348174 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.847022619 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.847478065 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.847647127 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.845710137 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.847618178 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.847852579 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.848888911 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.848398952 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.848403053 seconds)
  done (took 134.714253242 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.847810897 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.845823329 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.844876768 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.845866385 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.845511477 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.847198259 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.845367352 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847764058 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845653088 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.84734293 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847449283 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.845522806 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845568217 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.848151818 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.847904849 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.845790212 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.848867858 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.844661667 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.848183629 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.84853796 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.848914186 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.846278134 seconds)
  done (took 42.409913718 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848660398 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.84830856 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.845847163 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.848548203 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.846599012 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.849183702 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.848877462 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.84918772 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84877093 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.84520554 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845856134 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848612543 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.845978529 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.846946174 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.846912009 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.84590397 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.84901617 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.846738344 seconds)
  done (took 35.03673729 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.847277534 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.847181157 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.849712909 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.84707407 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.848055428 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.850338406 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.847438573 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.849955935 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.850206683 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.847324322 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.850384816 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850582303 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.849392061 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848751076 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850457971 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.848099856 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.850247133 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847880893 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.851223097 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.847987571 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.847862497 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.851103888 seconds)
  done (took 42.461563949 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850100279 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.850374566 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.847350483 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.847526586 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.84715341 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.850498353 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.851105168 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.848182589 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.850776403 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.851357379 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.848021368 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.851219675 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.848877093 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.84891479 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.848394575 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.84920188 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.850771931 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.850220411 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.851091284 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.848750727 seconds)
  done (took 38.773375698 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.85213382 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.85257264 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.852446366 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852490633 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.85259276 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.852249268 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.852370493 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.85276346 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.852240716 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.853297223 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.853064132 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.85215301 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.852608071 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.853236716 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.853501542 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.853378692 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.853344847 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.853042092 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.853101449 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.854166419 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.854166582 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.852889307 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.853386525 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.85357839 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.854165596 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.853507385 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.85373687 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.854508976 seconds)
  done (took 53.672062861 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.852608734 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.852572808 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.850517643 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.850770257 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.850165776 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.849749231 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.850895105 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.850568224 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.85333625 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.85069859 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.853481449 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.853211388 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.853945685 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.853506298 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.852850794 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.853194119 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853880605 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.85062335 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.851107938 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851100287 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.853286726 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.854311276 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.854443728 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.851320911 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.851955949 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.854566707 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.851249567 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.851565974 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.855161328 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.851122323 seconds)
  done (took 57.354426241 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.871990321 seconds)
    (2/2) benchmarking "in"...
    done (took 1.873008394 seconds)
  done (took 5.532038131 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.851452036 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.853998723 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.85406084 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.852574409 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.852395436 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.855498642 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.855370264 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.851934822 seconds)
  done (took 16.614402227 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.85486642 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.855920848 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.856231232 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.856255904 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.856782495 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.85577181 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.860101433 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.856449476 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.856472816 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.856063033 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.863194535 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.863845472 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.858815116 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.854946855 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.855496263 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.85730068 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.856597915 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.857997267 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.856734609 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.856746326 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.857395589 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.858026962 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.858373205 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.853831499 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.857694547 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.865525417 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.859726746 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.857049421 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.855832828 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.859015454 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.856174639 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.853441482 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.857642192 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.85810107 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.856371603 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.857728499 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.863225173 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.856850012 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.86163254 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.858071028 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.857403594 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.854088209 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.857253137 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.85799449 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.857762195 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.857738606 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.857649813 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.854885777 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.856843789 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.859905095 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.864298809 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.857939593 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.855611231 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.862117855 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.858620597 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.863558154 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.859108573 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.860935123 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.866324106 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.86661195 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.871191355 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.865549892 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.858273475 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.858549234 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.866836069 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.880789037 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.863400584 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.85565152 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.856241281 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.859617799 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.863308186 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.871501719 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.868101064 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.859127201 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.85928365 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.859058171 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.859134016 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.859394409 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.865048733 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.861191178 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.859603379 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.860165774 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.869841734 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.882179711 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.858824822 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.860678741 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.859353819 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.86057131 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.859819478 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.869998346 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.861065536 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.859449755 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.858848194 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.860342262 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.860368368 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.859696373 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.859719923 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.859037438 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.858561679 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.860262375 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.86173909 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.863271865 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.868855479 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.860860265 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.861734187 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.866183974 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.860666226 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.860218757 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.867404534 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.861908532 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.861537433 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.861892694 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.867278318 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.858536405 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.865371395 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.870422155 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.861847078 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.862965712 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.863371048 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.861431081 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.87077882 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.887365517 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.863129466 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.861554419 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.865852029 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.874279188 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.862576282 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.86406615 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.862004692 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.858764255 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.860098847 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.863464863 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.862191876 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.86256657 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.863106518 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.863089091 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.859461076 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.862320262 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.863872648 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.863405243 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.863619415 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.862356121 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.864772809 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.863747082 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.862791257 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.863753143 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.868195235 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.862592614 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.863369074 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.864788302 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.860506487 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.864254065 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.864236958 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.865043794 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.863746205 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.864678281 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.862497792 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.863536361 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.863393105 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.863756063 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.86423303 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.86406469 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.867473545 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.866037636 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.866891248 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.862790254 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.861327855 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.863880565 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.865531983 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.864405195 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.864746472 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.862941575 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.866839785 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.872804005 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.864979767 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.865256438 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.866738128 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.865164811 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.864687334 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.864992846 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.867729477 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.872069394 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.86525343 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.869991345 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.865349883 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.865706893 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.864559915 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.864476474 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.863933013 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.865570455 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.866963024 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.873239788 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.876330129 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.872757089 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.867624723 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.868980102 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.867509094 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.870992078 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.868495001 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.866417569 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.866214855 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.866570968 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.864740399 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.866356071 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.866390243 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.866449698 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.864729659 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.866920759 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.866698537 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.867480112 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.866743099 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.866267148 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.866584804 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.863170701 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.866604309 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.866256898 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.865559174 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.863545495 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.865199746 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.866574777 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.866260712 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.867902108 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.872763104 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.863995113 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.868700537 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.866988761 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.866644544 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.866157579 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.86715945 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.868500074 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.865860003 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.873070028 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.867688826 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.867675446 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.872731821 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.867459011 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.866000176 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.870560969 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.868121979 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.864724788 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.870397418 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.875598795 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.868804203 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.869334286 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.868122057 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.866951207 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.868360414 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.873582909 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.865731408 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.867050177 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.869160203 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.869148556 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.865739517 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.868933471 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.868453669 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.868640145 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.870250008 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.86862906 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.869075517 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.869621591 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.869376554 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.869020443 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.869558773 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.871323101 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.877746815 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.872573474 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.868707428 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.871453337 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.87065757 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.873422361 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.869328432 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.869842734 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.870244327 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.882381654 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.878422462 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.875572154 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.87129096 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.870374045 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.874528049 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.871133143 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.8751094 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.869625214 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.870903479 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.870475359 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.868618186 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.867310041 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.870236978 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.869929594 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.871432632 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.871292001 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.874970449 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.870395229 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.869251481 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.871461178 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.87109232 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.87034833 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.869742359 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.870749443 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.87265719 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.872308995 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.869214207 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.869413664 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.876435319 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.869982388 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.871003074 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.870332339 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.870672934 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.870092874 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.873057044 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.871895886 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.873624376 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.880198767 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.874404758 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.880399282 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.872486552 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.880071238 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.871756339 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.87481931 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.880816723 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.868765651 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.871286914 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.872916482 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.872913433 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.878527363 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.87487332 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.872632115 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.877057274 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.873015253 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.872938012 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.872335186 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.873161522 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.872198479 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.873686367 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.879143709 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.873260013 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.875721562 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.874631752 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.871048477 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.87422349 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.873102699 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.872366033 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.875886112 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.874065612 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.872876674 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.872572621 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.87352626 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.8738475 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.874311586 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.874537828 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.871062251 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.873793053 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.879123324 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.87431281 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.879025627 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.874233889 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.880502039 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.873864944 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.879001374 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.87449659 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.874351266 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.87503504 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.874292886 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.8754807 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.873171429 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.874023217 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.875471512 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.87519281 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.878796316 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.874990141 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.875841245 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.875230505 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.875314332 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.875556901 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.884433627 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.899941845 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.875350961 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.881066396 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.872150809 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.876197027 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.880813819 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.876608866 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.873892427 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.877902039 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.885561005 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.884154504 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.875721333 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.876018115 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.876015945 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.878320541 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.876072289 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.875703973 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.876290108 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.876504419 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.876435752 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.876160883 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.879332031 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.876308762 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.876313424 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.876807179 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.877545201 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.885410914 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.877771751 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.877473485 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.877459739 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.877187013 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.875300281 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.876461536 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.877196466 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.876422457 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.876537728 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.877313449 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.882810815 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.883338765 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.880049237 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.876723945 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.87750352 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.876891279 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.8782009 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.877652508 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.877919173 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.879386868 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.878297716 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.877781167 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.878423011 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.875455138 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.877588616 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.878384878 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.878368191 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.87970912 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.885131335 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.877318646 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.875456478 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.878636245 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.879072996 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.877679062 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.878110154 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.885396952 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.881350385 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.889867569 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.886282581 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.883527259 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.878474839 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.881301492 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.886392137 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.877514391 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.87895536 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.879520402 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.878994105 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.879687732 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.881790322 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.879874375 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.88424798 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.878624152 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.878254353 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.886335182 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.879980085 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.878885779 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.880019348 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.882243204 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.879034452 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.876472885 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.879546397 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.878056992 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.885124433 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.880783082 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.880737164 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.880885655 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.879016796 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.880174576 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.885118034 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.879834277 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.880603273 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.877694383 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.879506442 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.880506555 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.881389959 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.877549452 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.879084544 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.879197718 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.882622702 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.887576293 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.877544732 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.881781023 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.880154205 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.881259909 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.881876722 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.881129134 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.878548733 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.878341351 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.880025882 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.881977021 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.880928334 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.884037351 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.880681999 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.88244697 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.883218447 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.882585667 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.884329718 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.891283807 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.889407643 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.879736593 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.880897813 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.881396533 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.883834305 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.882334018 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.88212011 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.881772329 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.882032662 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.882702465 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.882473871 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.882309648 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.884974768 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.896761948 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.882774281 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.881970018 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.881547158 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.885334 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.882874182 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.879617564 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.882219806 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.883953646 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.885431617 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.891409829 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.883605659 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.888405028 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.881692774 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.884019258 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.887174224 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.885401554 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.891459245 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.885511134 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.883235222 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.884820623 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.887364331 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.898011811 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.884381916 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.893225479 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.912585593 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.883774653 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.884527395 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.885689709 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.882489557 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.884407711 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.884970538 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.884888797 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.884856931 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.884666953 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.88466311 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.884962225 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.890341119 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.884919517 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.884310441 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.883902611 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.883052649 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.885101645 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.881867221 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.884591495 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.884197138 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.885562491 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.885204795 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.88530935 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.884476652 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.897271939 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.894697964 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.885239166 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.885429522 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.882300629 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.887676366 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.887413834 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.895456254 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.892817827 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.886172276 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.886017838 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.887206163 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.885695173 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.882016211 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.885563774 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.885085647 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.884538961 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.882608429 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.898550593 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.895137075 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.889586899 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.885242801 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.887267363 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.886461994 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.886371774 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.886224343 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.886512683 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.887361144 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.886976482 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.890627678 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.886386248 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.885882611 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.890124246 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.894583219 seconds)
  done (took 1117.888824774 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.885075431 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.883324286 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.883696979 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.883702936 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.883920665 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.883738842 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.884735306 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.884724348 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.885427165 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.884005108 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.883676313 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.884235166 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.885002416 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.884901907 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.884397205 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.885165666 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.884577396 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.884673219 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.884970955 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.884482485 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.884553898 seconds)
  done (took 41.391968959 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.887839741 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.884188922 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.88558374 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.887649918 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.885478636 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.888730374 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.885547874 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.887848631 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.887777847 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.885363123 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.887789752 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.888268946 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.885496476 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.885965447 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.88541267 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.888498446 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.888280136 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.885031434 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.887837502 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.885725525 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.88843555 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.885952214 seconds)
  done (took 43.328934318 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.890304818 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.890414516 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.888199821 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.885991002 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.889817794 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.886257055 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.890202032 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.889959317 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.890000088 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.889922974 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.88869051 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.890688462 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.896063491 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.894996942 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.891275404 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.890602553 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.033909803 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.890096548 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.890897351 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.889635839 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.886423809 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.894134826 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.887010648 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.886185563 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.888122104 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.890739059 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.889754293 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.890935148 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.89080241 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.891301099 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.896573034 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.8895392 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.889368546 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.891994635 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.889399364 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.890506959 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.893746941 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.891386455 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.887818404 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.890291844 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.899863742 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.911159804 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.891941971 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.894846548 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.890730411 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.891715712 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.894396229 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.900009137 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.888268189 seconds)
  done (took 94.639301664 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.891679944 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.890582116 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.888955734 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.891477714 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.891892054 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.892196479 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.892499078 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.891319884 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.889382989 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.889764428 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.892279915 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.889988898 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.889867323 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.892171939 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.891447781 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.889164047 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.88858846 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.88838898 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.888320961 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.889129049 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.888905164 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.891167751 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.892020962 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.889832961 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.891832875 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.889110686 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.889186285 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.891981538 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.890931074 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.888985274 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.892098805 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.892540335 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.8924606 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.889937468 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.889660164 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.892281248 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.892515625 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.88974713 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.892964829 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.890466605 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.892693369 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.893357786 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.893510027 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.893347849 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.890282213 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.890713165 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.890565546 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.889815295 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.890436338 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.893795084 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.893099355 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.890970894 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.89261487 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.89099159 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.893137349 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.892606491 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.890597775 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.88981896 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.893641747 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.891531601 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.890644453 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.894157976 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.891488232 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.894344967 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.894226232 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.891225906 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.892388642 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.894529886 seconds)
  done (took 130.433057701 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.894361321 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.895531523 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.896684965 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.896170214 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.895381479 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.895591744 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.895883258 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.895356645 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.895569238 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.894749491 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.895816552 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.894926907 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.89585979 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.89607549 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.895599184 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.895680336 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.896097493 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.895724584 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.896633063 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.897144458 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.896607182 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.896085983 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.896487984 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.896250302 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.896854703 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.89631288 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.897707393 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.895969978 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.896689413 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.896964381 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.897165807 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.896769209 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.897288822 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.896733819 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.897257993 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.897036362 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.89691126 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.897467847 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.897092884 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.897608123 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.897473095 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.897261938 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.898212431 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.897750754 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.897560929 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.897368911 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.89790717 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.898723921 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.897630001 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.897997719 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.898571851 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.89833596 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.897126677 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.898766177 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.898609659 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.898435133 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.897900407 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.89886086 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.898665845 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.898293019 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.899130418 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.897884339 seconds)
  done (took 119.439059074 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.897316129 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.89706127 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.895135171 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.896491479 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.897151754 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.895227541 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.898533474 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.898486352 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.89828229 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.898769832 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.89752428 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.897154677 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.896655684 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.899360496 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.895900612 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.896591715 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.896223793 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.895998972 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.898685629 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.896100744 seconds)
  done (took 39.772287099 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.895872819 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.899879147 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.896352175 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.896838538 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.898710981 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.896743273 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.900012899 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.899593352 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.896353336 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.899098481 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.900273895 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.899635854 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.897215902 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.896751706 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.899378028 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.896706207 seconds)
  done (took 32.200234689 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.897815261 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.899059542 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.900248852 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.901093932 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.897945193 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.898974591 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.900161664 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.897623161 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.89733599 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.901276621 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.901334627 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.900230403 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.899651708 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.901235791 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.897608404 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.900502239 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.897983656 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.89761336 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.900794309 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.900228292 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.898533475 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.898544966 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.901513529 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.901084653 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.898071486 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.899231272 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.899288019 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.898781218 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.897579421 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.900343896 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.8989233 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.899232879 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.899253096 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.898325092 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.902017112 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.89878333 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.902102411 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.902071947 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.901855797 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.902151112 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.900912168 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.898606124 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.902004705 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.901204794 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.89932579 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.902182424 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.900013526 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.899434616 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.899723649 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.900213751 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.902157848 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.903897678 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.904155475 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.903740459 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.902304996 seconds)
  done (took 106.339123563 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.901988666 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.902234815 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.899806147 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.903312995 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.903736568 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.900131773 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.903129564 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.899257758 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.90080098 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.902657335 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.901207614 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.902750316 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.901547722 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.902830331 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.901479348 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.902535706 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.89999746 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.901641459 seconds)
  done (took 36.066631038 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.900893656 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.900941555 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.903495589 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.900325716 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.900326448 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.903326455 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.899782302 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.902406262 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.902793585 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.902635597 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.899839299 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.903505312 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.902874469 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.902627951 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.900583808 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.899895661 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.903647601 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.902779512 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.900066312 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.900117397 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.902808642 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.903371496 seconds)
  done (took 43.674338462 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.902053006 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.901974193 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.918829906 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.921354836 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.923156609 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.934500875 seconds)
  done (took 13.33741429 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897882635 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900519804 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.898382215 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899970327 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899657997 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897854099 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898272707 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898234503 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900607412 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898080823 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899296406 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899038632 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899442861 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89625257 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899415392 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899519517 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896512553 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895676265 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895579994 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897558142 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894955316 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897536655 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892358437 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893149076 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892872552 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893308001 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898431906 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893594655 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892580046 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894441455 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895051709 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891870695 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896434752 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891798709 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893045686 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893945786 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891231113 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89454592 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893363655 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890279944 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.893115351 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893545568 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894154883 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891218672 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893563155 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.890850197 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891460016 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.892288453 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.891516615 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894339138 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893718566 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891457462 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893907769 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894979427 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894341317 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895063674 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892522203 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.892343427 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894712927 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891906334 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8918327 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895077662 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892889211 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892899389 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894116118 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891208716 seconds)
  done (took 126.896986196 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89164312 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.891245429 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.892452544 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892081034 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891928473 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.892636433 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89184494 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892520016 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.892170061 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.892654722 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895498746 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891872006 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89252523 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.892259425 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89287834 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892403514 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.892334039 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893702623 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89234293 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89585245 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.892427439 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.892816067 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.892470155 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894471175 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893396316 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895228825 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892024841 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892716625 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892935711 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.892254612 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89359584 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893312879 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892403955 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.894340369 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893510765 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892636354 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893624416 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893683524 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893251549 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898836891 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894082107 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896370584 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89402417 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893527933 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895577603 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893713696 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893856998 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893751228 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893606858 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894781641 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8932515 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894229407 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893992295 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893825171 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894455026 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894326317 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893752197 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893982238 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89394706 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896153486 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893803582 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.888803318 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89097778 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.889566612 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8889859 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.88925029 seconds)
  done (took 126.778630629 seconds)
done (took 2603.4952578 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.95171423 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.960418662 seconds)
  done (took 15.734358186 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.051545674 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.003172321 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.887555755 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.932784038 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.888025874 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.903413999 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.887033746 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.888087664 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.887955011 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.887526525 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.887381987 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.073793026 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.891377609 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.887131129 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.886996237 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.981532152 seconds)
  done (took 52.652142882 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.89100593 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.891193054 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.901858337 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.892988738 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.891269626 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.903507508 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.923627131 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.893648715 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.933811626 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.905081652 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.967893318 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.903365083 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.890188261 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.944443158 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.907166647 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.905901905 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.986326999 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.971870108 seconds)
  done (took 36.32816708 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.974266883 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.900672208 seconds)
  done (took 10.705802603 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.907634169 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.899356196 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.89668898 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.917549488 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.890668976 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.889462537 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.884574944 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.919431011 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.890615909 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.881973989 seconds)
  done (took 70.803496527 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.88878857 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.883639439 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.882896267 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.880455327 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.877079497 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.880327563 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.880583355 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.879278574 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.576130746 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.918139955 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.888085218 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.88626114 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.885211315 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.882839906 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.878743012 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.904239352 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.00132878 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.87981838 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.87815972 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.886256702 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.881077928 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.936729955 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.894683075 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.884922945 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.91023647 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.572021152 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.888961391 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.887122339 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.001190626 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.877186111 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.879827573 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.880839358 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.881883111 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.257336712 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.156234135 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.880446095 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.89220196 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.887673319 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.87675077 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.005957899 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.883040055 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.884882263 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.821380554 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.129531971 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.995281668 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.924251332 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.261367243 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.884428876 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.881028033 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.909497577 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.881239752 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.880336289 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.891763822 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.387610853 seconds)
  done (took 133.290778827 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.872207805 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.137466564 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.029169642 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.873685632 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.164074369 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08471704 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.875777344 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.922580092 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.875807499 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.104804547 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.09495928 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.983778237 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.878453398 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.870551276 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.870275327 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.873967562 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.032930739 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.950037467 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.875801447 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.869647052 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.903776799 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.118188422 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.002389283 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.873065457 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.893537226 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.086086504 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.000850154 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.981138751 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.316392984 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.873901291 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.937716264 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.87807367 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.874067134 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.87098528 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.033218613 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.970463348 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.963580054 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.873528917 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.869794238 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.871455572 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.545512537 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070388765 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.974685325 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.015271834 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.120741677 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.077530867 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.662630584 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.868604552 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.614755691 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.033407746 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.107826381 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.1039439 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.997135303 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.874440038 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.147737219 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.869026323 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.872367853 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.106639021 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.114591915 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.976131333 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.871552646 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.872821734 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868676256 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.122076036 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.871574449 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.966149894 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.871580123 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.873653438 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.967338866 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.979050997 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.119417628 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.083817806 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.904542824 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.167176968 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.333770123 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.119881261 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.941959787 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.106430663 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.874073182 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.872653481 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957122005 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.723707518 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.070603676 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.122269875 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.1284977 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.911466916 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.59847203 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.869345613 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.103958134 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.098485111 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.127669073 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.110626372 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.023262337 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.174141327 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.869264641 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.869877941 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.107410996 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.010975235 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.871713013 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.232299974 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.105967672 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.457184717 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.904807192 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.18268595 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006005194 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.872806048 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.516391312 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.871497146 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.099287976 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.913892555 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.871055358 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.871019785 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.094899246 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.854640007 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.869479131 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.582381985 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.936595706 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.876739676 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106907604 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.875931638 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.137739894 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.875856178 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.115025848 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.903095481 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.906323797 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.045813355 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.113307603 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.873926276 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.132521024 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.120115797 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.995516311 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.146615109 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.801306926 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.874328519 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.164302081 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.876491628 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.871187361 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.045204625 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.873191633 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.107506576 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.874525936 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.16274981 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.900538515 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.027190665 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.873184212 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.133663201 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.912074529 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.925363751 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.880391503 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.00665979 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.876580107 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.747524301 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.027069482 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.876398602 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.871905177 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.418147073 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.879300753 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.031019496 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.109397738 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.899224616 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.949533974 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.545014046 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.872775339 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.96289088 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.900131154 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.221192622 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.87419175 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.088843573 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.877177713 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.41453774 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.873127178 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.118276564 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.108644836 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.874844098 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.874264436 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.77821937 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.872747528 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.872830862 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.035777113 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.693260104 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.872866751 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.078748169 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.875709628 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.008090293 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.876831461 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.953322307 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.228243857 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.873819164 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.874461372 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.873591187 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.876110732 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.874306218 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.083905109 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.906185579 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.398593519 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.014893763 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.14614519 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.196021396 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.127335388 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.921824259 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.876647822 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.123216329 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.878080708 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.940426272 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.877103982 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.8998186 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112821378 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.879205239 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.090907397 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.158026385 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.809984595 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.926875836 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.877103664 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.874761024 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.794177297 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.029423458 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.968695506 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.877196917 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.875196816 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.993838231 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.003151788 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.093621662 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.877089288 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.107055011 seconds)
  done (took 904.275267611 seconds)
done (took 1225.608001061 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.875294713 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.877082154 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.868486038 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.878955159 seconds)
  done (took 29.315485762 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.885704586 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.882241039 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.88483905 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.881898783 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.885789638 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.88276467 seconds)
  done (took 13.11748845 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.926841914 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.877519112 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.878815354 seconds)
  done (took 21.499549001 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.951451337 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.298979146 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.996904226 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.325820959 seconds)
  done (took 10.388575906 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.885888412 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.885177981 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.885256512 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.885990896 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.885626567 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.886763318 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.885393559 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.885481558 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.887495005 seconds)
  done (took 18.790290299 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.306857064 seconds)
done (took 99.22984497 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.785186376 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.177520074 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.525601751 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.518416448 seconds)
    (5/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.435326017 seconds)
    (6/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.15485409 seconds)
    (7/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.969326921 seconds)
    (8/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.42339455 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.039070524 seconds)
    (10/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.12153187 seconds)
    (11/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.709264284 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.928058129 seconds)
    (13/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.963701193 seconds)
    (14/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.941257423 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.902884847 seconds)
    (16/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.55588811 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.996126941 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.210992317 seconds)
    (19/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.217478631 seconds)
    (20/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.943742159 seconds)
    (21/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.282499252 seconds)
    (22/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.875939731 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.960662209 seconds)
    (24/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.994426565 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.877206901 seconds)
    (26/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.906792548 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.877409965 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 9.206618757 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.962907563 seconds)
    (30/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.913337101 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.988092395 seconds)
    (32/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.986718789 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.979584819 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.064744596 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.880531569 seconds)
    (36/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 3.555414701 seconds)
    (37/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.883990116 seconds)
    (38/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.133408825 seconds)
    (39/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.186993589 seconds)
    (40/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.050736234 seconds)
    (41/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.389826002 seconds)
    (42/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.074336047 seconds)
    (43/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.889428885 seconds)
    (44/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.948896469 seconds)
    (45/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.017224771 seconds)
    (46/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.967512598 seconds)
    (47/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.865015472 seconds)
    (48/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 3.86052474 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.993440634 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.883692289 seconds)
    (51/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.984116373 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.12930332 seconds)
    (53/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.387938993 seconds)
    (54/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.026285759 seconds)
    (55/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.984527115 seconds)
    (56/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.414822726 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.960636777 seconds)
    (58/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.79103769 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.944788015 seconds)
    (60/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.978974569 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.216036839 seconds)
    (62/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.078543108 seconds)
    (63/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.997203193 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.880210293 seconds)
    (65/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.883718481 seconds)
    (66/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.944142729 seconds)
    (67/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.44249082 seconds)
    (68/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.953200484 seconds)
    (69/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.239846235 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.26006899 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.026689574 seconds)
    (72/309) benchmarking ("sort", Float32, false)...
    done (took 5.629914755 seconds)
    (73/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.969191389 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.797508605 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.91618479 seconds)
    (76/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.224945024 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.883182273 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.88284733 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.952612363 seconds)
    (80/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 3.274515413 seconds)
    (81/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.373749411 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.873068199 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.65843827 seconds)
    (84/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.34815133 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.956611893 seconds)
    (86/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.95394966 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.043279744 seconds)
    (88/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.699061274 seconds)
    (89/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.254751749 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.093861549 seconds)
    (91/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.01325957 seconds)
    (92/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.116713327 seconds)
    (93/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.105389052 seconds)
    (94/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.981211667 seconds)
    (95/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.873615031 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.168072241 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.249417262 seconds)
    (98/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.370479512 seconds)
    (99/309) benchmarking ("sort", Float64, false)...
    done (took 5.640119793 seconds)
    (100/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.044371805 seconds)
    (101/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.973167927 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.265377842 seconds)
    (103/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.513780826 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.093069019 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.204891062 seconds)
    (106/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.869868872 seconds)
    (107/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.930847058 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.666281404 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.88552098 seconds)
    (110/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.974626522 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.948946153 seconds)
    (112/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.966658998 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.095500723 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.182648625 seconds)
    (115/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.006916044 seconds)
    (116/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.136889593 seconds)
    (117/309) benchmarking ("sort", Bool, false)...
    done (took 2.332524105 seconds)
    (118/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.963359531 seconds)
    (119/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.904646035 seconds)
    (120/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.972509437 seconds)
    (121/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.994196026 seconds)
    (122/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.44651436 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.140803396 seconds)
    (124/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.015280876 seconds)
    (125/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.911213796 seconds)
    (126/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.070464027 seconds)
    (127/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.448358059 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.10376562 seconds)
    (129/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.071158818 seconds)
    (130/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.88974805 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.207612151 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.272749046 seconds)
    (133/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.15150296 seconds)
    (134/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.88682219 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.992454817 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.184035828 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.889562911 seconds)
    (138/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.074791724 seconds)
    (139/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.973136188 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.951344785 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.988265023 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.171049215 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.961451713 seconds)
    (144/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.958118087 seconds)
    (145/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.02358225 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.962804425 seconds)
    (147/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.492581152 seconds)
    (148/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.174854289 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.18237619 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.022938367 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.108924973 seconds)
    (152/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.017507387 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.912132862 seconds)
    (154/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.39845958 seconds)
    (155/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.875761337 seconds)
    (156/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.915773805 seconds)
    (157/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.874923743 seconds)
    (158/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.501879887 seconds)
    (159/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.035305741 seconds)
    (160/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.175671434 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.916622746 seconds)
    (162/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.555882098 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.936959281 seconds)
    (164/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.82296115 seconds)
    (165/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.889727511 seconds)
    (166/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.953850414 seconds)
    (167/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.914226383 seconds)
    (168/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.161205013 seconds)
    (169/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.45067511 seconds)
    (170/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.876518076 seconds)
    (171/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.952007809 seconds)
    (172/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.357368429 seconds)
    (173/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.897001831 seconds)
    (174/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.986814543 seconds)
    (175/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.40687431 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.894635533 seconds)
    (177/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.068184188 seconds)
    (178/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.062176945 seconds)
    (179/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.729829932 seconds)
    (180/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.232020268 seconds)
    (181/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.083062218 seconds)
    (182/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.875447331 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.211152934 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.271751131 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.912947912 seconds)
    (186/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.88972181 seconds)
    (187/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.124007782 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.922103535 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.801050526 seconds)
    (190/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.186551691 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.999657709 seconds)
    (192/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.877001572 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 3.580750881 seconds)
    (194/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.831658364 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.972386211 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.890917066 seconds)
    (197/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.054175131 seconds)
    (198/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.19492106 seconds)
    (199/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.917212934 seconds)
    (200/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.197289698 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.95004821 seconds)
    (202/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.104551865 seconds)
    (203/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.581591949 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.883380965 seconds)
    (205/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 8.391851918 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.890854409 seconds)
    (207/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.910588253 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.685103967 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.103188109 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.685259028 seconds)
    (211/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.925015902 seconds)
    (212/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.88973961 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.943905553 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.917810027 seconds)
    (215/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.942096568 seconds)
    (216/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.067260144 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.890533207 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 3.322949886 seconds)
    (219/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.000299598 seconds)
    (220/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.972713175 seconds)
    (221/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.197983094 seconds)
    (222/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.941109707 seconds)
    (223/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.183354654 seconds)
    (224/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.040802146 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.938749654 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.578797925 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.935898891 seconds)
    (228/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.06761264 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.887361353 seconds)
    (230/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.917261154 seconds)
    (231/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.916837326 seconds)
    (232/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.257773872 seconds)
    (233/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.955523994 seconds)
    (234/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.059703891 seconds)
    (235/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.153237451 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.834174628 seconds)
    (237/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.032006859 seconds)
    (238/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.89399255 seconds)
    (239/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.969130102 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.277954039 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.059984353 seconds)
    (242/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.982715048 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.001580522 seconds)
    (244/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.265294768 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.992740545 seconds)
    (246/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.043824187 seconds)
    (247/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.077773865 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.136899177 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.984667344 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.895470995 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.954766816 seconds)
    (252/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.745800949 seconds)
    (253/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.123409592 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.918533647 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.532684187 seconds)
    (256/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.980100679 seconds)
    (257/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.094237186 seconds)
    (258/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.208823996 seconds)
    (259/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.598319646 seconds)
    (260/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.013363721 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.274240342 seconds)
    (262/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.127478952 seconds)
    (263/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.269921771 seconds)
    (264/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.042716708 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.261444088 seconds)
    (266/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.435680362 seconds)
    (267/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.452263215 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.885104121 seconds)
    (269/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.932260156 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.225334633 seconds)
    (271/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.99994771 seconds)
    (272/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.819482298 seconds)
    (273/309) benchmarking ("sort", BigInt, false)...
    done (took 6.895810901 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.233592061 seconds)
    (275/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.143446133 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.275047732 seconds)
    (277/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.085133279 seconds)
    (278/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.030122428 seconds)
    (279/309) benchmarking ("sort", Int8, false)...
    done (took 4.892867138 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.596586339 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.878435794 seconds)
    (282/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.042840052 seconds)
    (283/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.378279242 seconds)
    (284/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.201978131 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.004357534 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.976345506 seconds)
    (287/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.322445015 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.705696309 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.987815039 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.220666633 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.043561937 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.626824866 seconds)
    (293/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.904156555 seconds)
    (294/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.896780791 seconds)
    (295/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.884822234 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.237172369 seconds)
    (297/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.9113877 seconds)
    (298/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.190041284 seconds)
    (299/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.188162097 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.902103762 seconds)
    (301/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.522355293 seconds)
    (302/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.288579338 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.919974049 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.138706861 seconds)
    (305/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.299737311 seconds)
    (306/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.361948754 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.016958454 seconds)
    (308/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.348179086 seconds)
    (309/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.009108243 seconds)
  done (took 1025.870339622 seconds)
done (took 1027.75742672 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.928563936 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.924471706 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.907056017 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.927967835 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.019323014 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.939838474 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.916687611 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.908880858 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.953356346 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.955855776 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.906843653 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.936403598 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.910068668 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.908246622 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.906450724 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.922706115 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.215327033 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.931764424 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.924675455 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.915820995 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.923822072 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.907045376 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.956854471 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.938530094 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.910039778 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.909886241 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.911400815 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.929155714 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.020552734 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.91099822 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.910458088 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.920000358 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.215149159 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.929017166 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.902771544 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.928555774 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.91957638 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.916418609 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.910759809 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.941418305 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.353850723 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.913667575 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.912172257 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.908800326 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.90891378 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.913246658 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.910675685 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.914832321 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.922785013 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.922975402 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.348618826 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.930141113 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.913702276 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.908991182 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.919376851 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.911232855 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.912253436 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.925336559 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.929461621 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.924855103 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.206225219 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.935870988 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.911060871 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.926716555 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.919300587 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.387793623 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.910340486 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.91291672 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.356609111 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.91984878 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.387648769 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.924948347 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.910758469 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.924632881 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.941810109 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.218185289 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.928272857 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.908485802 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.919326946 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.909839973 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.920142085 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.92419779 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.915581137 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.910447346 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.92521693 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.942123553 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.921099571 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.912785213 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.920100867 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.93075317 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.920208119 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.922391389 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.913667996 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.906038059 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.921605028 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.91486936 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.915650459 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.914199227 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.915994709 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.922051824 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.35503916 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.933691428 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.908364136 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.909004589 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.910863428 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.927029702 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.354429328 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.91857254 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.934163107 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.960188406 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.913841416 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.209783395 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.939568965 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.928931971 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.921321443 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.916276373 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.907828793 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.210415368 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.377445169 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.933252214 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.914052317 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.91183381 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.92897172 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.914713925 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.90956961 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.2219035 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.93735348 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.927116087 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.03511364 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.922668679 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.946115081 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.912719358 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.916886947 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.946046968 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.929796315 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.945060839 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.915853066 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.930066441 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.929815525 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.911182805 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.925908628 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.924338518 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.915217741 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.919550768 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.907161626 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.947277152 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.926922155 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.926907185 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.934728585 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.035563795 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.910861818 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.211555151 seconds)
done (took 300.229433762 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.981222196 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.904608409 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.010825912 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.91128977 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.000245348 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.99790402 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.909358527 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.908765397 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.908498196 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.287326136 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.908613961 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.910140688 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.907533011 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.909367745 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.004016538 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.911153147 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.907931587 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.272510573 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.912198912 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.982810251 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.905116604 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.908678252 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.91105027 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.36249193 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.904684541 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.9115558 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.983617861 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.911068877 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.24949338 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.909740392 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.907914063 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.273550511 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.003820357 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.929796133 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.920937446 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.918339815 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.994180783 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.914847562 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.992860678 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.001133444 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.011891554 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.952382416 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.913067795 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.906533703 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.914640036 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.913951164 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.909472586 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.941114788 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.904964349 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.909927205 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.251211169 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.922004743 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.911275549 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.910914029 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.910362418 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.944259095 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.910168631 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.913562041 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.002875318 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.91394082 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.975424361 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.335291738 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.315229674 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.913429239 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.911619539 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.910530403 seconds)
  done (took 187.334666344 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.978872482 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.986532961 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.980128869 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.915974404 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.963323024 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.979675205 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.916122305 seconds)
  done (took 15.564009682 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.920263413 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.914199537 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.964192603 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.963888282 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.91449821 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.063798811 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.914981281 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.926090194 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.911514856 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.966048542 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.915568438 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.913635349 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.921011247 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.914910257 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.962814649 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.925171191 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.029971915 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.915269882 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.916132361 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.065429823 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.91147984 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.920143637 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.96794076 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.925530824 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.915421379 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.92115553 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.498400421 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.916129732 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.91210943 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.91458238 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.912840868 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.956960584 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.915540133 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.914024367 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.91259149 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.030782152 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.914872434 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.912401992 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.915824308 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.913707284 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.916404108 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.916001934 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.914949541 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.913862214 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.916226591 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.938806115 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.915654441 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.915742651 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.916551676 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.915826492 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.966271698 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.91689063 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.914274991 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.913916244 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.970741179 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.923506929 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.917832213 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.913448202 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.916812442 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.914384414 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.067797791 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.963994373 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.916262698 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.96445473 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.916253809 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.916489802 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.91626947 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.916362666 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.011362795 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.91706397 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.964782228 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.915208074 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.07441398 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.939998653 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.917738607 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.920802595 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.920052778 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.918149119 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.912487836 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.923483486 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.914720968 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.918929762 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.923231489 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.915449298 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.914603419 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.029679547 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.024613194 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.915941312 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.930901248 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.92516222 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.915492838 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.969931697 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.918013803 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.915694271 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.972745072 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.033094614 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.973210883 seconds)
  done (took 210.362092303 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.923294769 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.926902106 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.918775316 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.935969203 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.919297525 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.918784764 seconds)
  done (took 13.392675412 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.920763766 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.91945496 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.918556139 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.919552396 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.91924089 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.919670246 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.918743467 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.920452204 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.922361973 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.918869862 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.91950661 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.919117927 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.919979545 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.919721602 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.920785211 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.918579822 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.919755801 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.916578383 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.919151369 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.919582565 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.078812778 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.920026231 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.919469131 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.919984268 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.923260296 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.919510694 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.926415669 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.919596582 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.920330522 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.929101308 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.923051387 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.92096699 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.920965577 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.924256604 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.92299712 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.920228924 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.92355234 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.921293104 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.917690664 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.92182379 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.921393912 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.922532418 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.920345022 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.921657834 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.922250168 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.924886178 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.924821619 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.927811018 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.921032556 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.921390577 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.922013319 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.920921734 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.921236747 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.921678305 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.922626219 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.924931697 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.925600282 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.92131925 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.921411491 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.921964588 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.922121321 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.922293745 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.922560449 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.925796722 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.919131252 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.922632972 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.921656618 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.924812437 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.922475183 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.922392317 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.922574829 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.91835396 seconds)
  done (took 141.355100131 seconds)
done (took 569.861545803 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.030232063 seconds)
  done (took 8.882395454 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.069096505 seconds)
  done (took 9.015464249 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.252861053 seconds)
  done (took 10.105670591 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.924049706 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.942017119 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.917489118 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.915138792 seconds)
  done (took 29.561415883 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.014068631 seconds)
  done (took 8.867222199 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.927740305 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.914440997 seconds)
  done (took 15.727720747 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.937254623 seconds)
  done (took 8.790418175 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.990446759 seconds)
  done (took 8.851301434 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.933896221 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.954984485 seconds)
  done (took 15.754127009 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.903873187 seconds)
  done (took 8.756590409 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.622753314 seconds)
  done (took 11.480341866 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.929847396 seconds)
  done (took 8.796210999 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.005595525 seconds)
  done (took 8.859298532 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.090149058 seconds)
  done (took 9.943818123 seconds)
done (took 165.240993119 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.91972571 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.916437421 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.916666927 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.916011525 seconds)
  done (took 29.52204524 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.95633345 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.956723224 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.958701915 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.966870693 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.959914917 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.956422631 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.949003193 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.949191604 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.968106911 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.959698319 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.960139879 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.959231707 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.957028265 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.949678527 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.959122471 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.959313431 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.968740042 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.959760841 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.949912022 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.961189796 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.925090243 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.969020267 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.960323518 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.924244002 seconds)
  done (took 48.798144356 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.123091219 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.996688586 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.077835501 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.97579452 seconds)
  done (took 10.028746546 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.976858557 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.979114822 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.98957123 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.029949284 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.052127879 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.987647904 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.948257788 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.94687685 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.933479974 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.978434173 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.054001606 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.975273889 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.078556085 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.925272203 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.112296725 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.924332287 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.925817594 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.976538927 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.029402369 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.04243321 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.925476376 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.978171879 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.98141057 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.970710258 seconds)
  done (took 49.578074519 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.924322693 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.93312417 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.931152393 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.925065559 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.924986776 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.925573535 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.931407158 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.926132243 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.945715961 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.926775885 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.923898995 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.92419336 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.923971703 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.92508009 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.924226509 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.937921106 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.938196862 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.927528219 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.928971703 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.932502475 seconds)
  done (took 40.437373527 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.920308277 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.774491351 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.272199727 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.176067906 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.918824045 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.920530865 seconds)
  done (took 31.839610946 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.937869561 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.931365135 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.926257561 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.981993805 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.064110858 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.933504242 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.926384566 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.935607885 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.968690721 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.990925303 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.946057275 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.952166691 seconds)
  done (took 25.351207213 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.92113054 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.923441464 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.923848711 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.940265704 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.936648945 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.934780529 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.933807429 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.921655372 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.941023196 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.946073602 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.934588772 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.939355655 seconds)
  done (took 45.057578942 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011721358 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.812792945 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.976534448 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.637250827 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.393978723 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.134275389 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.433016353 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.262412577 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.927381923 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196558694 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.051276925 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028440727 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.176934793 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923056281 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.948811084 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.4142693 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.219942474 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152387428 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.948052282 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.69623826 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971780827 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385302316 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.772181462 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.980228654 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13507772 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.054963495 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.185252058 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.883908337 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062780552 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964338042 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934206482 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.923821537 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198355744 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305406532 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023807992 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935892806 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.579380366 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.645073266 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.915963356 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.697355819 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.742227538 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.043590257 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933766581 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924371793 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.859152073 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382443488 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301956199 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.931318519 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.636181544 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.925093758 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936770408 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0140483 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.929301945 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.741872881 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.879789315 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.206437761 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.92340841 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932298613 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.49830554 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.050086297 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418291021 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.899070583 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.120148008 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.735613713 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.323110384 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.072223529 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.929773192 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.930184846 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862301716 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.706739987 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978522474 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.488638608 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.946547264 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.57695829 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233030059 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.075501358 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.86952004 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215606587 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.66130431 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.90046835 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156244356 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.877866881 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861871946 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.786993558 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.863731004 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193657471 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960978858 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.577971179 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964478574 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.264096355 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.940112236 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943788629 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935593941 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.151538721 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.496019929 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927952874 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.763866913 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.072590151 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94988332 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.268086268 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863233283 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.932413147 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183675096 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.13972818 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.120685606 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.452852873 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087241013 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.99507251 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.94299185 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.793486611 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.976122336 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.206824562 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986641441 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.04865049 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987183296 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.89180072 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228888491 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.012918633 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.029650761 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.04366985 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055808156 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.257619581 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.220613199 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994939338 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.930412686 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.93096604 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.755126216 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.48205559 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.198318643 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.934988179 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376603997 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.976703481 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.931592413 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865589749 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.555210555 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.031257913 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.905327936 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.154831816 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.82502234 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241843332 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865044122 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.075626054 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.044376834 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.154616336 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.584278781 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.008730152 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.188628637 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373267919 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.141460045 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97798915 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9510335 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02208671 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953277304 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.289505674 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.220915947 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.93504396 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.936283213 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.773073514 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.934286246 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931938894 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.937250558 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.728551398 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217935897 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.956882739 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.936183227 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.820772887 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.946726846 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999289237 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.938300117 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.943006983 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.477247748 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.681780748 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.944198789 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.554413024 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157798053 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943649319 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.697160659 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043789499 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.014771216 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.211138156 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991506512 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.869729354 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.643692129 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.626427405 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934569794 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.869124448 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.934254506 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943199591 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945319627 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.313600938 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.217183599 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.978050822 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.828060057 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.975787619 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944738617 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.939873787 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934329443 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.477598281 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.064926174 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44411991 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.979802784 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071572001 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.947058347 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.868805717 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.938080256 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939129529 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.935353647 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.89208233 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988580168 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.717384949 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319687789 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.195884246 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.58127252 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957990039 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.85741115 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.00093459 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.027131352 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.798074951 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823374967 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.026544349 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947450239 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.945881251 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.724532944 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.643433242 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.505051977 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255179979 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.248069294 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379523884 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.363338905 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.237965606 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.27472516 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173696264 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.466520458 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.995663452 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.282821776 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.881506266 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020594489 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.589522864 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.288041037 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952325549 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16513087 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327308419 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.864335185 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95929107 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.148448332 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971665008 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.800010487 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.89773152 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.1442186 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077314674 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.749838235 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133835735 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270925482 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.666933477 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.051570742 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.93632268 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.634793963 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018287153 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.652563247 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.298499819 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410851518 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.942370053 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403139142 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.944192797 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.38366524 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29349779 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.201145249 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.056750349 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874390831 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.94896114 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.948521183 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.940685151 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.933123011 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.812165155 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.190081184 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949176389 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173732956 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.163418532 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236717314 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.844151299 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.944744068 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939080134 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236354858 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.681602561 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108784377 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.342305978 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.466535938 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942380377 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.874252663 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873625204 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.635752114 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.946852912 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.916217293 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163450133 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.118056052 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.924614291 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39749707 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182008798 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.193368053 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.953571742 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.218310185 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213622945 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.67350373 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968445166 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.040043348 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.650535081 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.046683448 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.208861027 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.176439776 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.73902128 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.170709524 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.993002053 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.756737336 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.940261701 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156215493 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.211028818 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.90355272 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165344127 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.663256368 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.022157417 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258939486 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996658367 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.909151807 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.086526491 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.135754676 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950343443 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026161723 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951701532 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.952070985 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.952462683 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989297763 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.917992368 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.060461062 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.954754508 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030091531 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.072527404 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.477294089 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.947841164 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224584875 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303640779 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.272148242 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999643215 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.943840977 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943228231 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876030059 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079657228 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.388062413 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216691006 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.072871183 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.243651065 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966522624 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.826018881 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.267770559 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182174833 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217200497 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.837711712 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942875589 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.970318392 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.208929988 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954095823 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.153734911 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173666326 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25581244 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410394756 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.141370573 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.309334481 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21855623 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.311677751 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.94427145 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.532191134 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.034679385 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.646587119 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.983690554 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.01392434 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207437445 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958226118 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.333714549 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.968668421 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.144236604 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.459942786 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.730851608 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.233176852 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.92841966 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.00403429 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224180376 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.332399702 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255040546 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015914258 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955690795 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.659760793 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081916801 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.818174472 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.214619473 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.945153292 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157131572 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.655884966 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.956053766 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227488168 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255213282 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.943283087 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.816767002 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954582464 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.955004724 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.170375185 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.213136512 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.194502666 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95595362 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.953159076 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.760997678 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.227675813 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003398736 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.880981683 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.949353968 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044308489 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.193541742 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967711503 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.464051276 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.657155802 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243519402 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.860333663 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968096083 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415769065 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.323597597 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275303854 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.504944789 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175314768 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.502048102 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.853213178 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248280558 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.952328202 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.41725359 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.252909893 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.951509589 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.525478205 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986730184 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.222862929 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.263858404 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.057662056 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733077816 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.915570244 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17092183 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.539112183 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.889066805 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.948028277 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.011569489 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.948859167 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.07622716 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959433281 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.818706716 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839347794 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.694560836 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.441375596 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.953688535 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.942881107 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.710336711 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.548231556 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981187943 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08957194 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958950914 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.660076099 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.24062312 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.202715089 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.52632871 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.95986657 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.95218228 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949574265 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.877112053 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.145153751 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.32841822 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246432956 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.352258885 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.985485209 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.95338334 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.165637856 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161650011 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.899834465 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082914179 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399400428 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989588429 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.715891987 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.629522873 seconds)
  done (took 1717.995420573 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.975895625 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.968539908 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.963971937 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.037702099 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.006931459 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.977047583 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.061304161 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.002042554 seconds)
  done (took 57.879573724 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.948944028 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.14785714 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.959703014 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.951035526 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.960100674 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.951221323 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.117736562 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.959176303 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.96006092 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.961058066 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.968503105 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.950429845 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.26368476 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.973664463 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.951546913 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.938338524 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.959556584 seconds)
  done (took 75.853934954 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.950832295 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.160699452 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.985519221 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.974218109 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.919002995 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.960037575 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.956603618 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.963712109 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.958520863 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.178972127 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.286118444 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.973621257 seconds)
  done (took 91.156193098 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.962792975 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.958270151 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.957927983 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.958900246 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.958351597 seconds)
  done (took 11.687884716 seconds)
done (took 2237.065875313 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.207362482 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.174633754 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.178059538 seconds)
  done (took 6.240969737 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.097774715 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.145552503 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.264955702 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.27141092 seconds)
  done (took 10.666877725 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.243648998 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.3342753 seconds)
  done (took 6.462056386 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.35848151 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.964628252 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.345082543 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.947811258 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.950407556 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.949131333 seconds)
  done (took 22.737006859 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.95241358 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.955393353 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.953809259 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.956024995 seconds)
  done (took 9.701002513 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.937267393 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.679008505 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.939293176 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.954470056 seconds)
  done (took 21.39506312 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.703085841 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.351970689 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.696207862 seconds)
  done (took 9.636288865 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.560059876 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.838593384 seconds)
  done (took 9.283799421 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.208526353 seconds)
  done (took 4.094626739 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.981269785 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.222963747 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.475801539 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.465370649 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.568958971 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.840063222 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.26339645 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.193098562 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.367712385 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.372631387 seconds)
  done (took 25.636976044 seconds)
done (took 141.614986271 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.33264076 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.185902043 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.154207146 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.29975745 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.172236009 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.153616666 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.370546652 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.283012081 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.796650573 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.793098309 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.29887881 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.172098732 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.309996049 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.189544772 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.309616563 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.188645128 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.171253815 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.339706502 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.037498865 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.233094634 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.374186138 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.927067439 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.140006247 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.94137352 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.172752431 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.105575612 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.517996654 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.187569902 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.189963542 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.52401026 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.106668193 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.3863616 seconds)
  done (took 176.252225393 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.688004516 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.953025634 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.951618661 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.952275187 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.334620936 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.954022461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.954479475 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.952536224 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.042872374 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.023140468 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.953032098 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.321283304 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.953331057 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.952542507 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.952593923 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.952491632 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.213315175 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.712939756 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.952588643 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.957600763 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.959614904 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.171861957 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.965045091 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.210367447 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.237426445 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.971741554 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.953295611 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.974260254 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.95871504 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.962226191 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.962272993 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.953808173 seconds)
  done (took 209.898549564 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.953508513 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.953931687 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.953313487 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.955262037 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.954539807 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.953382926 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.956847478 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.954534446 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.55556378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.551521965 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.961208134 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.960900349 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.964496663 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.954603463 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.956393499 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.954331285 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.960171072 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.960059877 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.957061482 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.96391985 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.969736168 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.725857541 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.968004383 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.729328671 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.966852492 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.966876833 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.95537775 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.973034927 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.978966381 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.979350904 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.974496296 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.955601053 seconds)
  done (took 223.382406055 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.149715365 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.961985612 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.963032783 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.910328354 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.963896932 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.962063929 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.916272831 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.160647463 seconds)
  done (took 19.9041606 seconds)
done (took 631.329520798 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.419453269 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.271722038 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.138770149 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.986637439 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.239692597 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.020822265 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.981992214 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.045498629 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.71781051 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.051315623 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.627515185 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.997073975 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.726528011 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.002717745 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.109784473 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.03861805 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.528649447 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.622492549 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.156677676 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.065472768 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.161953929 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.945891267 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.059327412 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.736844383 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.745711839 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.983572344 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.161459453 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.534997919 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.991053927 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.141961862 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.802778769 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.373980779 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.994457516 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.979394749 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.037596565 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.016392885 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.336319541 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.991222046 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.09952032 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.7495874 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.065102482 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.597780564 seconds)
  done (took 107.149611632 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.955709081 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.95509222 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.953579828 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.955048148 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.955315521 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.95546068 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.953767905 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.953994863 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.9550108 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.954152391 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.953455687 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.956021712 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.95455671 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.955614668 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.953780311 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.954215984 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.955110583 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.957113939 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.954666527 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.955102889 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.955682363 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.954673 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.966320824 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.954624773 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.955634634 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.955029061 seconds)
  done (took 52.745487432 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.966213016 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.11722921 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.218336646 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.981810514 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.965369843 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.969028943 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.983255904 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.970669558 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.968247663 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.969186812 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.073347415 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.971822403 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.986297039 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.221118319 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.978805209 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.966755726 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.966935618 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.967774228 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.125127449 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.980373206 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.986000378 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.970295111 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.985305831 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.979552201 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.969081324 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.966595765 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.970437549 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.443093893 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.97365732 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.073272874 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.009984861 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.988054841 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.383940929 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.229571009 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.018346181 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.976005056 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.968300912 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.076225191 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.972529697 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.967844864 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.985489531 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.971870013 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.22031152 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.448067708 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.978637041 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.968630652 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.45560091 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.083745532 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.007905488 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.979922855 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.2214634 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.9821223 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.970365437 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.96847033 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.004372086 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.980512337 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.968382875 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.285341006 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.978313417 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.98642697 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.973654467 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.97001888 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.129466789 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.976307598 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.117582217 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.977727624 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.976738208 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.969932358 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.221786002 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.982231742 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.458235579 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.980354481 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.970474218 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.075582418 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.120283861 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.482480943 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.981822444 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.130473556 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.403061422 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.991518561 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.976845975 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.434599558 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.996077155 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.976633024 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.972168711 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.972656889 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.970659386 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.014180242 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.985846219 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.392987666 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.465033578 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.299796512 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.994986705 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.984988854 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.970456239 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.287118201 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.97759225 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.971146097 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.216407761 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.470940929 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.982331905 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.978873798 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.446796713 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.984390001 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.989769995 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.978536293 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.227765787 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.984922561 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.015088905 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.973164688 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.978889749 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.974631077 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.99055221 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.977410195 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.972272499 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.434974709 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.094307992 seconds)
  done (took 243.80643025 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.967154647 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.966126313 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.964665762 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.983678175 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.964416043 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.970746341 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.964492025 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.965742228 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.971019709 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.965466115 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.966898931 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.966594361 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.965578444 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.96921445 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.486583531 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.988587073 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.591153422 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.983304207 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.981867311 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.982125994 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.666656418 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.990920269 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.981263611 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.982183468 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.982379997 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.98251462 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.987045629 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.024979206 seconds)
  done (took 171.067135507 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.988229423 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.168424595 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.006251147 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.026783098 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.999444133 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.986790308 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.011952682 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.009041695 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.992991432 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.988026607 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.98813861 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.049884509 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.004120793 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.131100654 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.020634959 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.020789693 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.096025174 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.998101934 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.987665218 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.987487925 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.017774913 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.986372212 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.051126471 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.121135623 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.008217026 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.10607565 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.99616576 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.990276369 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.988745761 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.108425845 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.004045879 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.049248181 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.020493678 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.007530458 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.112732696 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.109339009 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.099593931 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.020745069 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.995118202 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.988145644 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.988222837 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.980303826 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.109617925 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.009180342 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.990959875 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.100366466 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.008563367 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.992118505 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.999061084 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.987706661 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.003731473 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.00772511 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.059175168 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.125826054 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.024140354 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.01616677 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.016506192 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.282642599 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.001018635 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.093491105 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.987586266 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.110618153 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.013503308 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.980761972 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.991114252 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.995524733 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.020889113 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.022411585 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.098569327 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.998995637 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.094670089 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.028053787 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.997627558 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.990452166 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.993268251 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.108569194 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.112925959 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.028608224 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.02937978 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.023066584 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.989835501 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.990883346 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.982918976 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.009380019 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.995683103 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.108470491 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.115516331 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.002225912 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.993574441 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.993780044 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.993639744 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.018125123 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.119963675 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.028929635 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.09532427 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.062520877 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.07140245 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.008014927 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.006577499 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.995267091 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.056133783 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.008399183 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.003974151 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.332576272 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.065064917 seconds)
  done (took 215.634777751 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.463986854 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.049630783 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.051649599 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.322850143 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.425243172 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.89854434 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.042408219 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.042832033 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.066260425 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.229974279 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.119426926 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.06201979 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.028785583 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.016751849 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.041520005 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.062113128 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.058939048 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.358522901 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.168798134 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.166831949 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.02354746 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.336605108 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.365541813 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.474399317 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.078438292 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.385604368 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.730050594 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.186076977 seconds)
  done (took 65.185870591 seconds)
done (took 857.477419315 seconds)
SAVING RESULT...
DONE!
