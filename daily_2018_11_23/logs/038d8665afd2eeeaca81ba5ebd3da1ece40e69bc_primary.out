cset: moving following pidspec: 13764
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.226041904 seconds)
loading group "string"... done (took 0.547673648 seconds)
loading group "linalg"... done (took 7.625571529 seconds)
loading group "parallel"... done (took 0.170511961 seconds)
loading group "find"... done (took 1.161989505 seconds)
loading group "tuple"... done (took 1.83095063 seconds)
loading group "dates"... done (took 1.248347449 seconds)
loading group "micro"... done (took 0.232225506 seconds)
loading group "io"... done (took 0.764845377 seconds)
loading group "scalar"... done (took 40.758907467 seconds)
loading group "sparse"... done (took 12.873296642 seconds)
loading group "broadcast"... done (took 1.148263628 seconds)
loading group "union"... done (took 13.416247119 seconds)
loading group "simd"... done (took 4.773055222 seconds)
loading group "random"... done (took 9.657301861 seconds)
loading group "problem"... done (took 2.147735816 seconds)
loading group "array"... done (took 22.61712143 seconds)
loading group "misc"... done (took 2.110588755 seconds)
loading group "sort"... done (took 3.459420499 seconds)
loading group "collection"... done (took 19.473928372 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.57780067 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141746547 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149327782 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147006823 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18909061 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156195681 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157138151 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.096513092 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.008350589 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.175146574 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151046579 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.518830834 seconds)
done (took 5.27032998 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.283895711 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094089996 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104466582 seconds)
  done (took 0.9489603 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076262295 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143665586 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094299948 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.076870634 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094360653 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076401351 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094551825 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078778692 seconds)
  done (took 1.410614483 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.085444508 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097208542 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.080685573 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096991571 seconds)
  done (took 1.110806859 seconds)
done (took 4.58919567 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.733182163 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.270611298 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201956652 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.460651853 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195186774 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214212653 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678633669 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.371809055 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252414481 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09976261 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142227562 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.384221766 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136778261 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686083726 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088426144 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122941344 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177792807 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.491207126 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081678235 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.11024121 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117210141 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141182922 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129088592 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092573642 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.187238385 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080956232 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193965345 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108511164 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079942404 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.285818456 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200039544 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688113224 seconds)
  done (took 10.993140894 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110505764 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132770794 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098036193 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136660856 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134139773 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09910363 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083678461 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096105987 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121204798 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174863749 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113637557 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136325323 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094087006 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080905666 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115063099 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243614976 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118921412 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10232917 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101471359 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103675512 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120263551 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112777813 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10814554 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091190122 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16676025 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.22313789 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109351562 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125755404 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096422438 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111097846 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143028564 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.140605339 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094167204 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079311063 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171672909 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124561273 seconds)
  done (took 5.179319492 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.073634151 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189065347 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120771773 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169474472 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.078876519 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142511014 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094619574 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112907877 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25483438 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.181259107 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.174896904 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140902013 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.152621603 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098192322 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099016414 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080426211 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095691998 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078358602 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.642387892 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.120636737 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148559674 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113407021 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102149334 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083168774 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367320505 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102093881 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078779424 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097410868 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064130936 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157618839 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098431973 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.137764456 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120575828 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080646947 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134922066 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.206604988 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108526088 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094585152 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.132478143 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079564393 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096610119 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173642324 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085898409 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097116928 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101080998 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135175139 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132662914 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097981743 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095709585 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.2030697 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078350526 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114113418 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.927263102 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180471544 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.102942252 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094853735 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.32474295 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097786966 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097276069 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076801795 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.285337185 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.187699398 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097909701 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078399574 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096609395 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.074398342 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098013694 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380447782 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09664189 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.737752915 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082721986 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106983568 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082317619 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096853161 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101927664 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086020651 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114509559 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078927441 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098290746 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078581018 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096528411 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080299521 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110943188 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101910158 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079347843 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164601069 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079058113 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115708373 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12562147 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082505109 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096264795 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129503456 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082901814 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098132985 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.131875887 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079838282 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109405641 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098905494 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142241862 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080365367 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.150731296 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079840642 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123603409 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099398003 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113717976 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112616942 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098594129 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083760148 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095447399 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076459128 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165813665 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080517254 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097766953 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080117371 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110167599 seconds)
  done (took 22.466901551 seconds)
done (took 40.463666855 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.316639804 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102708635 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103107408 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103141314 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100603571 seconds)
  done (took 1.548509042 seconds)
done (took 2.345965445 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287943679 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172396899 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095790386 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16746526 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09362464 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173048309 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159559818 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111842665 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.199752919 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095430238 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163778776 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094845396 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075933839 seconds)
  done (took 2.71446993 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095636474 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115717366 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081908592 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111445317 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07551941 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111925411 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091516521 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118065376 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109370463 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087399442 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093653359 seconds)
  done (took 1.886342606 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094948911 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113963801 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08181364 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111061872 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075411323 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110321258 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091856167 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11633285 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109776072 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085216423 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094142617 seconds)
  done (took 1.879361495 seconds)
done (took 7.267600406 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090641763 seconds)
  done (took 0.881405547 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.930344204 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.971606752 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112848163 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149478748 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.298503414 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.19145771 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.477617126 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125092475 seconds)
  done (took 11.252080244 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.145422079 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086186792 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100861758 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086002794 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104256959 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.080747854 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099815381 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100131899 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086053544 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100695477 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.081910151 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102474793 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101541591 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084260122 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099490682 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081426847 seconds)
  done (took 2.395207986 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117317407 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116412127 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107677883 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108665375 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.084712212 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106466301 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10675906 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087217372 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102951897 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104066918 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088449182 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107142255 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103073928 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078359394 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106390248 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107322565 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084409526 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106886152 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10656554 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088950137 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10738986 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095328718 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085324903 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106981923 seconds)
  done (took 3.317816311 seconds)
done (took 18.642470367 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160019376 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107948394 seconds)
  done (took 1.065300345 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095327801 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114009113 seconds)
  done (took 1.011181263 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097458568 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095879345 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120750385 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108785198 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.078830435 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096888106 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120042057 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.078970496 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096929623 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078201113 seconds)
  done (took 1.777451732 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082377168 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10873493 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100772507 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094469915 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106600067 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09520086 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087147756 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099856313 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109010441 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076673488 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103645796 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114092038 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084507291 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116721439 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104231658 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082900464 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102515341 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099339457 seconds)
  done (took 2.573804972 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079876938 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097103562 seconds)
  done (took 0.98016003 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081880969 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094922411 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080370956 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098195781 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093545963 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076705635 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093700937 seconds)
  done (took 1.422022926 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.491934501 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135858036 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.2613011 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101884978 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120325119 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.299097565 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099146355 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.082824317 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103575038 seconds)
  done (took 2.538395464 seconds)
done (took 12.169524822 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092814546 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117720797 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110203633 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.466133195 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106201873 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099283732 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146761842 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.247276015 seconds)
done (took 2.198718889 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.142972225 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325709622 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.116407869 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066851807 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098147556 seconds)
  done (took 1.417558933 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080336493 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099576431 seconds)
  done (took 0.988793465 seconds)
done (took 3.365568094 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080933831 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096651016 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.112193513 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097943773 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079025059 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.097422261 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.076696123 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097337334 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.076031502 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098293931 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095744583 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.08087593 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095459286 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080251196 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094022499 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077039699 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09663763 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07962274 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093683841 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077209694 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094220119 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079231727 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094209619 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077386877 seconds)
  done (took 2.974163269 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099140483 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098710511 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102494802 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085829518 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101540993 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084820684 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103165492 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097175272 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084970805 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099610858 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099147648 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084247452 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099918941 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082620486 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099342507 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100141906 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085290363 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098194193 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081184947 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100876776 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102921761 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079671156 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101694527 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101498377 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084098143 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101345342 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081101593 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098185186 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101528597 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08355955 seconds)
  done (took 3.63776055 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084709533 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094388318 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078549268 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101424855 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077163473 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09738532 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076538452 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095833673 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07795612 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095442703 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077999135 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096272927 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076883618 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097017545 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07737859 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100097153 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106641374 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077569491 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09502641 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.07841719 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098612969 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077065142 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095677773 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077384211 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095640138 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076601681 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095466213 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076332394 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096264107 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076426022 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098851703 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080402189 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096083613 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.082293236 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099698686 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07662397 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099513881 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.075896465 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096748361 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093794105 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079147762 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093596107 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078005424 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100925257 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078459481 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096607751 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077549518 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097277226 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077424989 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098503813 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076793771 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095942237 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078325773 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09714278 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.080751069 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095645269 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094686816 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078323743 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096331998 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077998406 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09468309 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077113036 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097356905 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078525922 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111632579 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084301182 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095778264 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078239298 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097256873 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079230408 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097907783 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108460224 seconds)
  done (took 7.197370499 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.0828184 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106533835 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07868117 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098685235 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074879015 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097175991 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098414704 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079012569 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096513542 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084715761 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097510566 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078535248 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09914417 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107005596 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079871362 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097591774 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084154663 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094742981 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077225994 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100104306 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077186053 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100930427 seconds)
  done (took 2.809624552 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207957342 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106100677 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141740873 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106463145 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081946154 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107075054 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100679255 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085965299 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103093308 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082191595 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101203693 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103029362 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082593186 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102043909 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099971017 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084586825 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102384248 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084038789 seconds)
  done (took 2.704183909 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093437058 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099016529 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100818628 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099971929 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098880497 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082538106 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104487978 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107769349 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083083978 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098570496 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088851594 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101758319 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100184067 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08053806 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10095076 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080476616 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101732716 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079806689 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107575852 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105550905 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102661444 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091167943 seconds)
  done (took 2.933519955 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095939784 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100903549 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116424308 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083827413 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094383874 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078394379 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106085608 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.079967272 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106959891 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099994638 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08076078 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097796491 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086741853 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099317435 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104111617 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080682082 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101678455 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080922953 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101751952 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075385012 seconds)
  done (took 2.697371583 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101601646 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.212011549 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099226927 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091373103 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100856795 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080335973 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109830189 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100906931 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080701716 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125726982 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100355012 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080694889 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110066304 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105631575 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098922192 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09113135 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109125229 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109745149 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081035279 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101055923 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125012869 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081107073 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110724083 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100564323 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081027097 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100661571 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099386236 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08748543 seconds)
  done (took 3.70473024 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081309828 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097924238 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079034015 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095830977 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078167782 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095963313 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078103763 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096250742 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080743811 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096009565 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080425804 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099118025 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08239828 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098851601 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079770928 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100185176 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079787641 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097432057 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078291162 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097389728 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080361374 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099741553 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.079510173 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097426733 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077559652 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099790057 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076748952 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096605601 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079395972 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097138118 seconds)
  done (took 3.488077238 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090253366 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106908618 seconds)
  done (took 1.025390171 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07867166 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11500981 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078001601 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103559053 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08399762 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101287965 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107569456 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085343433 seconds)
  done (took 1.5829941 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09626031 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110144999 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081525696 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112616901 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110149852 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097103071 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169479695 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101113676 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08558301 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099286578 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112366426 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080329335 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106407133 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080391932 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106182706 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086054423 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097786226 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104488507 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084823181 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09811355 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082048236 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108678134 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081874312 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097134698 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099965605 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090961216 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112197614 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.080896804 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103646391 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106142726 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087243781 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09419603 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080644097 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101318985 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078081692 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109480268 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115739297 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083427456 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109573188 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081585916 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110023098 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095876502 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.084495175 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106244011 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108945622 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082410586 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100158843 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076353103 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098726374 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082731608 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09570979 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081207971 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094943562 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087598112 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104761097 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11037606 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079705719 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101838299 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08378621 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103558057 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086564142 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102561336 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101117926 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.080577451 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106113763 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08504382 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109651308 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093292684 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.076828406 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.09730147 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093514543 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123099846 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.086402023 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102332651 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100169056 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079528867 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103137031 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081886548 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106505451 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105322719 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082752936 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106421771 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088313537 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101096321 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.082755427 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110148746 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098620189 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082805685 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098423447 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11815012 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080554764 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097510885 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079128455 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111053066 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084421771 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100095628 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.077530409 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108616679 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093241788 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083608198 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100708485 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081597461 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112799629 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105143067 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086664472 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110204734 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087351533 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101429311 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102296114 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078382972 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101584192 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084230218 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107106275 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.0748188 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104026293 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.080965978 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101388196 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107959916 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080443309 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100637975 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08940097 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10677618 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078720124 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09737733 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102343859 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081515185 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103888103 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.088889235 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099627554 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.075236028 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097099819 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102351411 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081457911 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104060217 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086959646 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10424156 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07484014 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099670606 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10452175 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.090979179 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101688238 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081450415 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107648996 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101152824 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081320101 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106713048 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.083753034 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100380562 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.086971481 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102277411 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075532786 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106182016 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103262874 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080172634 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105619928 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086038326 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104676415 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.08121834 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09967896 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105346397 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082818851 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100580805 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080816361 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099758014 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109939115 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084535256 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095600284 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.07898513 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108303716 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.07887035 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101433092 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.079948166 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10418751 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099812505 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080860326 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099622891 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084233528 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113785217 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103924281 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083679159 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105955476 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092607334 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101158083 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084300274 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101771435 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10018285 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083160882 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109963728 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087074385 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106739107 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102180568 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078755136 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105769065 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089356785 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099778347 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079249205 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10086519 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.083758928 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106426932 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103589422 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.082239217 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099799699 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082216481 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105266041 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10217159 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.08178143 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099014096 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086229887 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100319486 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.086757614 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10193669 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.1126539 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0849609 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096955894 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085206119 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099473969 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105902967 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078531245 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098167902 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081446129 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102670582 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.08032662 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103622385 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.075848863 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108410037 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107707406 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082304759 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.098875647 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083202389 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107274246 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083515783 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105299741 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084243849 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108241251 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11195411 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081239589 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104395536 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.091277673 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101758662 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.074977822 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107390061 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098728436 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082523871 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100163694 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079777023 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105265704 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109079952 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090738829 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094821796 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084497669 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100952462 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.079585841 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097175047 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.084755522 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104383897 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100337081 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089275248 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102649239 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083167897 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105699681 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.080605091 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104476614 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101665977 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086120603 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102985337 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084191655 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100915339 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.084645859 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101166482 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081954649 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103117532 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100506597 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08213797 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107507023 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081191325 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101469044 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084036599 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102340433 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081415169 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103025148 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.099870872 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085585996 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101679754 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082098886 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104387095 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.076458434 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10905719 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.080428545 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109354341 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100497561 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079671499 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.1064897 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084033159 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107115854 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100809252 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083870984 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102065559 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.08159488 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104414322 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.087937316 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100379526 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111817721 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090733029 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102066777 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084341489 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101863019 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08294723 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101065616 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.081419481 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10281958 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100995317 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082292325 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106142344 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08450762 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101911429 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082572851 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103177424 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081026024 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103332433 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095546886 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08219902 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100453511 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082200204 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112736641 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.081335564 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10643003 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099265412 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083830321 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100965672 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079215095 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10961844 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109551191 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083931624 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109126954 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.080331402 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104367739 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111320029 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077251236 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.09903945 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081118012 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098753015 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090462391 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103740247 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.090513921 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10180534 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.080202537 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100014651 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101978039 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081438327 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.0958307 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080142588 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105354397 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083999449 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101423174 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.081484358 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105103203 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101716317 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101431106 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101541575 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081801023 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103151602 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079663945 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102268452 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08031136 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105547086 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101771036 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079949726 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09849655 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081911503 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102676501 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083588639 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101650236 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.082764924 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10954928 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100375159 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08496537 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105008074 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.076433034 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104882441 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081720781 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101805371 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.079499919 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106179107 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104429327 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083740923 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111417032 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081614066 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103123348 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100659632 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08146954 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100194543 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082207263 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101674882 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081800565 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103596671 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08932956 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100624979 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103355277 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083595196 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101865341 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089052015 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10332898 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084329617 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111197456 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104976238 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08381471 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109935326 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.084995413 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105863163 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102822822 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084345943 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108548948 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.080863304 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109040516 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.081645674 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103584686 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.082948717 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100474379 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100600154 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082643385 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100158138 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088576828 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103380851 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.080388207 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102873058 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.079208767 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103726756 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106201703 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090260565 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104975094 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084885139 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098895018 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.07889923 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104106774 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079009046 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104959383 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105133012 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089679487 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104646742 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082881329 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102268272 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090608557 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109713519 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106521788 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080239817 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106088668 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.082910483 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105542858 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083069757 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103785893 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102736351 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087072786 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103364852 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081351783 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110380608 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085498322 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104730893 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10262398 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084449292 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102463045 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078246728 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102934114 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084206888 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109092351 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.083309818 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102843033 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112982318 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08171065 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10261052 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085535619 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102111929 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.08679047 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098045915 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102872302 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08521126 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103873592 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077196935 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101974294 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.079156135 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105665199 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.080521975 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097813442 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112540611 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09213292 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105445648 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081003392 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101857571 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077996219 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098561143 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080512376 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103791102 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103747497 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093428476 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102166761 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.080517516 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098807859 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081422442 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106232821 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104871229 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08071384 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097114625 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082155701 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105590478 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088213455 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102108864 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.081265369 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106276182 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103330913 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082222309 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105631473 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079145167 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105859308 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094528545 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103753665 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101932362 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089386279 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11123081 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.082752726 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098745775 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.082435954 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106490667 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103170789 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.083376312 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103436148 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097523906 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106785729 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101234623 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082463863 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105342189 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082930915 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111242978 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083271523 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103834368 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106909178 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084575328 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111861816 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08410975 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111790518 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105404624 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086424088 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102460787 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082589639 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101354054 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.080682819 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104404567 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08283639 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108089351 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11021237 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08133301 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115087022 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.1114775 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087239001 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099577663 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082504861 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102559729 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078236298 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104148387 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.080083742 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102287473 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080558735 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103047265 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102333592 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090245361 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104108465 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.083846933 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103640074 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076664283 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.108348241 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.084460331 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104886476 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079053221 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105147408 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103419151 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08737773 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10749237 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08306914 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106145538 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084163702 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105161401 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078086721 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110168946 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101917911 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085743299 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10269212 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083767005 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105353566 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086617625 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10884021 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104081741 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086678571 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115969097 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085582717 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101987923 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.080055944 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.110586689 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101235028 seconds)
  done (took 57.584980668 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146181738 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08070788 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099342309 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07834878 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11216287 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098140795 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079286753 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099749034 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08011995 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102017216 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077892741 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100244424 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107512018 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124339254 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092603051 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104650937 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077260244 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100919298 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09852205 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080619323 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109841866 seconds)
  done (took 2.929918475 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104356318 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11763477 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114866699 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118928112 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088520011 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115576893 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114002746 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114314144 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098444063 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111577707 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118699378 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114776938 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091015923 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111338633 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110867123 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091853107 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118953427 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110059142 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115765344 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094049263 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113619227 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113456578 seconds)
  done (took 3.282607992 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08354009 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102435075 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084544507 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097405387 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082105932 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098934593 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086764718 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101816377 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085798772 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103446839 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080562126 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102493637 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103851222 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079067943 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102650379 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080996097 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.14942464 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107450064 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082761587 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106444849 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077122047 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106585126 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098154567 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.07938314 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102166316 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087608122 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105374762 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080798844 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104235661 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081587938 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10425754 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.07955983 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106139345 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102743962 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082757736 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102232874 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082673094 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102666248 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078426328 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101207992 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083158149 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099699799 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082319022 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105617917 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08079204 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102046547 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083280276 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104192146 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097804549 seconds)
  done (took 5.510909809 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103164876 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160535263 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085894369 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144885006 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120607054 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112464775 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087394555 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142700702 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102676077 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081620548 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122832282 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119929597 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103414144 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088486331 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108357732 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102924955 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085383664 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103457851 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087214709 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104829757 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108925774 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.0889992 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119804978 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117849651 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107927571 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08227531 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104827917 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107394814 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098077276 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109236281 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108102566 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09025183 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120078816 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109317238 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.081994111 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10658335 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121440229 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102491889 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086651726 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101588826 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085232608 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110347756 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110076237 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.099625006 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10482439 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108817475 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082469999 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10203658 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116697859 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.085502315 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11307843 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.1189461 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.086302318 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105681398 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109221517 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119549831 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.08424305 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102834408 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086630827 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117854381 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102530386 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086651832 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.1180464 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106589715 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111140797 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098265246 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109208599 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107515224 seconds)
  done (took 8.155641368 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093387552 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110731648 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12078138 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121076506 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089627677 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111821873 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110422791 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089631686 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111211449 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116583549 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1098298 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132999281 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087061485 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115605918 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111276917 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090153737 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111619371 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111751013 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089373278 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11134075 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111135227 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120467189 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089258577 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120830539 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14141701 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106345628 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088712148 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111665255 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119674145 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111411582 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122139045 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091052587 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111435037 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.1206239 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122788549 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090144593 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104519178 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109395364 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091233306 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111828982 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105419541 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099037669 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112769547 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106305738 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089081707 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112187848 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120863757 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.122535404 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114942286 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095968555 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111939843 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12012697 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109349784 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090151451 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121431833 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146145198 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120200861 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120595256 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110658527 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098611339 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119470095 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127978262 seconds)
  done (took 7.710377282 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105882475 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114917837 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117997384 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100139433 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082771723 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108896248 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081820677 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103417774 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112586827 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093776864 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116736428 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108828505 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089736316 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117190408 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10946432 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112180232 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088164361 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109111696 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113692884 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106698474 seconds)
  done (took 2.990613583 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093290627 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124623325 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083427936 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112340987 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108518331 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090145132 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108380185 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107381567 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085379993 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108079286 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094353205 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117007892 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105029536 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089565346 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116732491 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111184971 seconds)
  done (took 2.551233195 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095074926 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117065429 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120910444 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083930821 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105148901 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079785651 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107007885 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100336792 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081315065 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120986838 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083028114 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111165265 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104682124 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082619215 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101720002 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087258745 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102011374 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.080883988 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105789007 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119130239 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.094836095 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104768894 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105215761 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087207911 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104860319 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088345312 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106551353 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102137428 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082432648 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105619235 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084114259 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113676559 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101129752 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084135514 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10286238 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082014633 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10517948 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083611103 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108832555 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105165811 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083817823 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104512495 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.083418302 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106887571 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079995499 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106343007 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10085509 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090714491 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103264712 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.083005011 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105338978 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085429136 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10709761 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116428211 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087767489 seconds)
  done (took 6.288031277 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098785722 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110027651 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079239555 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103968723 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087214754 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108571333 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108418953 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087499164 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106665756 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081956337 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107525207 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088001764 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107520958 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107700392 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086250171 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109692287 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078839778 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106843961 seconds)
  done (took 2.671725243 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09067633 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105031788 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091935467 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106552133 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083223266 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10924274 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078696037 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105073264 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103034077 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085048363 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105264297 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086647261 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10475376 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086661401 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106533909 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083580341 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108617932 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103144602 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085540976 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100542582 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087403164 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104149716 seconds)
  done (took 3.026551062 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.11797243 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126547939 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09078035 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231042122 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103533596 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132780579 seconds)
  done (took 1.709343212 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108611041 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120220528 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105536603 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107209569 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115273975 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084664063 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107858849 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107681332 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11635482 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099940637 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10864324 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117822778 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116756691 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095561823 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115604037 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114498602 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106896771 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087212559 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106817405 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126989559 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086583933 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117928544 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107948542 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086218838 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108788702 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117019388 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116700939 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120405366 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086798163 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118184867 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113241529 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086225398 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118862592 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122389354 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108448099 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096952004 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108707617 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128986357 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113758374 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095724154 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110274801 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113623813 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096453906 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113501804 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118235436 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107252286 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092469366 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108920436 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107540844 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13421684 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092702361 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117031258 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114360468 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117514282 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095303824 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.155278114 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100830175 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117717772 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114877807 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122431407 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116476857 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092977845 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117633748 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122178285 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115109402 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116121594 seconds)
  done (took 8.169293033 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10133593 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127083608 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107765215 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122886133 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096021575 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109002528 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107699649 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086450073 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108321711 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105990956 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152065755 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087960573 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117798147 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118292742 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086084915 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109468135 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108469425 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117140925 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086750012 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134749924 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108669048 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117356804 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11726611 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097091648 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122879787 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114872535 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107085709 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087174407 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108654395 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107291862 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09255428 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108734635 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117270288 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085455712 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118617882 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109271724 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084946232 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115043205 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108348043 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114354823 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095796521 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128037156 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109168858 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107046309 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100592124 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108913749 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108104109 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085609974 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109162079 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106711025 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1005052 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122992118 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122850647 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117471782 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10858651 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086729183 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109642735 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108175894 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086688003 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114876605 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117704398 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086052448 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156625557 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088219664 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108983412 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116771988 seconds)
  done (took 8.05953059 seconds)
done (took 156.204152618 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.240737393 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.232723051 seconds)
  done (took 1.383855078 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097671551 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136912767 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094980077 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169153858 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106341237 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119126779 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138543261 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096550792 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107851406 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085044056 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108441678 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.085047685 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171506015 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.104849526 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086315499 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108031923 seconds)
  done (took 2.730893991 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199735233 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254986389 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100656174 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107044344 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087710118 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112143858 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104399846 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091614376 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.10962985 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084977314 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110003317 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085556864 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106327047 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085313569 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111071473 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.086575428 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107503768 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086507295 seconds)
  done (took 2.947463309 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112310706 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150083866 seconds)
  done (took 1.181908345 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118174437 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178167319 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.3165937 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154866225 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.104682844 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126513059 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.1569402 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130301866 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196087131 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.121866656 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12169538 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096503007 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140048763 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116221419 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.092684965 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119114454 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141589197 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.091056916 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11637442 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.1154043 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11544227 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107608453 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115464975 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.09305691 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181024235 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120578639 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083857634 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107437615 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116049156 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093617741 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113741305 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124251741 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096831046 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178416077 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100700654 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17553147 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.095586486 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112598139 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114684817 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090595808 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119400243 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117615977 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102668041 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118314347 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083685345 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118786145 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105857851 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085105048 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115116954 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096364606 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115429844 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113350146 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154536385 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118023528 seconds)
  done (took 7.571141037 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.79222632 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154997571 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088730083 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.880510614 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136870889 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101582556 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.773014013 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13363447 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231665755 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.753191269 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133986 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120763176 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223067524 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.234550956 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.924691946 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.303448154 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.666380261 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101394679 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151458365 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151139317 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1187413 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13544506 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.128533574 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.42962316 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.093573671 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111829401 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.093568973 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119907974 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157007307 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124897471 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113644567 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176406295 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.243048915 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203841614 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115274081 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088781061 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111377352 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.166636191 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262118669 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212086056 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17884125 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086270051 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110241523 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.097954295 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132095027 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108256018 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163461233 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.170533932 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193113841 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090426936 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120688718 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118957108 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.098216351 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.184462576 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.096287093 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.307068987 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318201804 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11113899 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097066184 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126879534 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258724024 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121959916 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.219396756 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115807769 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210692629 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110411477 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754600772 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.187076991 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089112425 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122020137 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117891002 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093982909 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12173416 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168113256 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406792481 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122861931 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092535047 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110755446 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203339563 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124969077 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109652002 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160443466 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092026891 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121211179 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124228777 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121128628 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168544125 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.229210844 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123837921 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118587676 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092522333 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12573929 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115494662 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.208617769 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216012442 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161056166 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208766042 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122650193 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162089103 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187704066 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096985796 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.19155005 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097313152 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125024712 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121746862 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.212465849 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144739543 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.099716735 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115356503 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117537214 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147075321 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10346739 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118629673 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166506138 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479686312 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.165196943 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108593409 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104972073 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119686021 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160428302 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117201075 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258824392 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098580189 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190182607 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096672212 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109374242 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119616643 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162677488 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121063876 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097576314 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122555348 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118510098 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.229915298 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214916772 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099641454 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243570928 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.1842938 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118019627 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171340454 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120151358 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16635153 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11938872 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097847653 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116581899 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769349549 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121508927 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099065014 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114989904 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186460661 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088391202 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123433406 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124265581 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08502858 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795415519 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127003611 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120269607 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101506774 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11910115 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119023242 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0952941 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116738069 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160658181 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227234317 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120589149 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09592754 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12431344 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158052471 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117583192 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124776109 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12293126 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102622227 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122023855 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114075814 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101809315 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189582649 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.160853577 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.217218925 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.570542948 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112846762 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123683525 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223674329 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089496885 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287761326 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11843367 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.196596709 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185844459 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097728457 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316266824 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186816429 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185451606 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105213693 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192785373 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087350884 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118560628 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163959459 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111570278 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094111639 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.181720497 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101591413 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124115557 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.954941255 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088350944 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248716254 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086326278 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190371237 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095186313 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121350172 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.2847705 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088556176 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12910958 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162292462 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116312149 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124626069 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.851451704 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125945581 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121170509 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096024495 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219794484 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.160549533 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120092729 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119749687 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119674159 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163204181 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206320596 seconds)
  done (took 43.857169382 seconds)
done (took 60.588943862 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275568172 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214465466 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.264609131 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169215618 seconds)
  done (took 1.937046873 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17214881 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149928214 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119458951 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108266216 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150226141 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083888355 seconds)
  done (took 1.726877922 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.356625352 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273968582 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240852945 seconds)
  done (took 1.81766364 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.316166858 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.245313265 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473038957 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323311413 seconds)
  done (took 2.39794222 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209017556 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133732042 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111828097 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.102831478 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197399374 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245241551 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141714346 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20145319 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097743456 seconds)
  done (took 2.433489229 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196074114 seconds)
done (took 11.45795155 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.249351368 seconds)
    (2/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.15867508 seconds)
    (3/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.247911867 seconds)
    (4/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.168659093 seconds)
    (5/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.118947543 seconds)
    (6/286) benchmarking ("sort", Int8, false)...
    done (took 0.196484941 seconds)
    (7/286) benchmarking ("sort", Float32, true)...
    done (took 0.228039265 seconds)
    (8/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091773639 seconds)
    (9/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.133534097 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.12433247 seconds)
    (11/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.168222576 seconds)
    (12/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.102214489 seconds)
    (13/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.245872926 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124551779 seconds)
    (15/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.225837795 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117796717 seconds)
    (17/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.259705166 seconds)
    (18/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.140475078 seconds)
    (19/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097202645 seconds)
    (20/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.137930989 seconds)
    (21/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.226554099 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.136047236 seconds)
    (23/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.09823033 seconds)
    (24/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125058211 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.13442172 seconds)
    (26/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.227456985 seconds)
    (27/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094027318 seconds)
    (28/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.229006355 seconds)
    (29/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.198426728 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.221860155 seconds)
    (31/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.090351518 seconds)
    (32/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.136164499 seconds)
    (33/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.20530813 seconds)
    (34/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.229366142 seconds)
    (35/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138135783 seconds)
    (36/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.096092246 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116497841 seconds)
    (38/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10185661 seconds)
    (39/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.193209006 seconds)
    (40/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.199992088 seconds)
    (41/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.258807225 seconds)
    (42/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.121253628 seconds)
    (43/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.095201901 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.137204966 seconds)
    (45/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.211281285 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.136471763 seconds)
    (47/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.099517222 seconds)
    (48/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.188160047 seconds)
    (49/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.1398274 seconds)
    (50/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.202096463 seconds)
    (51/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084396046 seconds)
    (52/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.139586947 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09263944 seconds)
    (54/286) benchmarking ("sort", BigInt, false)...
    done (took 0.216888639 seconds)
    (55/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114074515 seconds)
    (56/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.115315151 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094163248 seconds)
    (58/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.171952417 seconds)
    (59/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.195211626 seconds)
    (60/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.100847297 seconds)
    (61/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.172002826 seconds)
    (62/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.164034063 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087884414 seconds)
    (64/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.065359311 seconds)
    (65/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.119601441 seconds)
    (66/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.228060417 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108239643 seconds)
    (68/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.156473905 seconds)
    (69/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.126206624 seconds)
    (70/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.233977783 seconds)
    (71/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117323185 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.085458171 seconds)
    (73/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.10985308 seconds)
    (74/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.134254307 seconds)
    (75/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121478268 seconds)
    (76/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092113214 seconds)
    (77/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.14279985 seconds)
    (78/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136341185 seconds)
    (79/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.179649466 seconds)
    (80/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.086381261 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 0.109586754 seconds)
    (82/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100702244 seconds)
    (83/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.174364113 seconds)
    (84/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.092139253 seconds)
    (85/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.150468568 seconds)
    (86/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.120950925 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086049045 seconds)
    (88/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132717473 seconds)
    (89/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065611013 seconds)
    (90/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.141264349 seconds)
    (91/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.179715362 seconds)
    (92/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067469573 seconds)
    (93/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065110773 seconds)
    (94/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.186718523 seconds)
    (95/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.17062266 seconds)
    (96/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092490621 seconds)
    (97/286) benchmarking ("sort", BigInt, true)...
    done (took 0.230276801 seconds)
    (98/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.153765176 seconds)
    (99/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066995724 seconds)
    (100/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.080505416 seconds)
    (101/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.107292472 seconds)
    (102/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.090911345 seconds)
    (103/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120819422 seconds)
    (104/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.186139962 seconds)
    (105/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.089863892 seconds)
    (106/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.090875008 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.085711847 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.134181653 seconds)
    (109/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.065744186 seconds)
    (110/286) benchmarking ("sort", Float64, false)...
    done (took 0.171879148 seconds)
    (111/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108627534 seconds)
    (112/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.159366249 seconds)
    (113/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.119166985 seconds)
    (114/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067098958 seconds)
    (115/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.122371463 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.181417909 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.116727528 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095457345 seconds)
    (119/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.144753959 seconds)
    (120/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066364932 seconds)
    (121/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.143353552 seconds)
    (122/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.165365261 seconds)
    (123/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.112509975 seconds)
    (124/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148302882 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09214177 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116605307 seconds)
    (127/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.119995146 seconds)
    (128/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.203361466 seconds)
    (129/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.137026564 seconds)
    (130/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13614566 seconds)
    (131/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092255109 seconds)
    (132/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.158864101 seconds)
    (133/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.11736845 seconds)
    (134/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090819144 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093841352 seconds)
    (136/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065840312 seconds)
    (137/286) benchmarking ("sort", Float32, false)...
    done (took 0.173203755 seconds)
    (138/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.121293666 seconds)
    (139/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065542234 seconds)
    (140/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.122634831 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.084568651 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.114239828 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093195295 seconds)
    (144/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175667974 seconds)
    (145/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.152737577 seconds)
    (146/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.132959118 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.117378015 seconds)
    (148/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.171967486 seconds)
    (149/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067608435 seconds)
    (150/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.074966867 seconds)
    (151/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.113071552 seconds)
    (152/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.098785322 seconds)
    (153/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.14630472 seconds)
    (154/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.11609922 seconds)
    (155/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.121195149 seconds)
    (156/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118149134 seconds)
    (157/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078223338 seconds)
    (158/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.173127314 seconds)
    (159/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067172452 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.137129942 seconds)
    (161/286) benchmarking ("sort", Float64, true)...
    done (took 0.229771302 seconds)
    (162/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.138535407 seconds)
    (163/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.112359304 seconds)
    (164/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.084643176 seconds)
    (165/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.092207714 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.085259615 seconds)
    (167/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.110763581 seconds)
    (168/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.077394987 seconds)
    (169/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111378931 seconds)
    (170/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094067429 seconds)
    (171/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.110547413 seconds)
    (172/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.097660268 seconds)
    (173/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.091033369 seconds)
    (174/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.084099379 seconds)
    (175/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06550221 seconds)
    (176/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.387871909 seconds)
    (177/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.117385047 seconds)
    (178/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066072197 seconds)
    (179/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.105921985 seconds)
    (180/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092500116 seconds)
    (181/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.064344944 seconds)
    (182/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.184757873 seconds)
    (183/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.089496826 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.085937607 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118062166 seconds)
    (186/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093078063 seconds)
    (187/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.110280557 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.097444926 seconds)
    (189/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.090433636 seconds)
    (190/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067731291 seconds)
    (191/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.135298838 seconds)
    (192/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068983335 seconds)
    (193/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088916206 seconds)
    (194/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.117038517 seconds)
    (195/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.085226708 seconds)
    (196/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135312186 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109898435 seconds)
    (198/286) benchmarking ("sort", Bool, true)...
    done (took 0.218686327 seconds)
    (199/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084254394 seconds)
    (200/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.090190761 seconds)
    (201/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085824116 seconds)
    (202/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065499892 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.111189547 seconds)
    (204/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.121286857 seconds)
    (205/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.088863223 seconds)
    (206/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.064902852 seconds)
    (207/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.093242958 seconds)
    (208/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111769449 seconds)
    (209/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.102259297 seconds)
    (210/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088688312 seconds)
    (211/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120437325 seconds)
    (212/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.092659019 seconds)
    (213/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.183751503 seconds)
    (214/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.06551713 seconds)
    (215/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.091006397 seconds)
    (216/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.084308842 seconds)
    (217/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.091224218 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085716528 seconds)
    (219/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.089998489 seconds)
    (220/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067533392 seconds)
    (221/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.092778915 seconds)
    (222/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.115525954 seconds)
    (223/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.089855475 seconds)
    (224/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.112625028 seconds)
    (225/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.074261678 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.110412409 seconds)
    (227/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.083334519 seconds)
    (228/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.090718248 seconds)
    (229/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068129694 seconds)
    (230/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.075127188 seconds)
    (231/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.174900548 seconds)
    (232/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115617144 seconds)
    (233/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.093911268 seconds)
    (234/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.109968048 seconds)
    (235/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067441801 seconds)
    (236/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112459883 seconds)
    (237/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068262456 seconds)
    (238/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.087105029 seconds)
    (239/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123667561 seconds)
    (240/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.086048304 seconds)
    (241/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.111987249 seconds)
    (242/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.11563038 seconds)
    (243/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066413837 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084102056 seconds)
    (245/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.090226181 seconds)
    (246/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.092755879 seconds)
    (247/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109488785 seconds)
    (248/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.066716198 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115479487 seconds)
    (250/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085100052 seconds)
    (251/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181163383 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.093161133 seconds)
    (253/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.120023018 seconds)
    (254/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.152200373 seconds)
    (255/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.08885123 seconds)
    (256/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.163844801 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.085770589 seconds)
    (258/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.09320928 seconds)
    (259/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092385369 seconds)
    (260/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.091216086 seconds)
    (261/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068026242 seconds)
    (262/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.086567468 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119006443 seconds)
    (264/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.135115039 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084830477 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109025227 seconds)
    (267/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.087206699 seconds)
    (268/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187092222 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.117706888 seconds)
    (270/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076543435 seconds)
    (271/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.086668944 seconds)
    (272/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.092769466 seconds)
    (273/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068395344 seconds)
    (274/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112438766 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091085095 seconds)
    (276/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.065683438 seconds)
    (277/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.093362264 seconds)
    (278/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.084200366 seconds)
    (279/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.093688578 seconds)
    (280/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.067188618 seconds)
    (281/286) benchmarking ("sort", Int8, true)...
    done (took 0.217681941 seconds)
    (282/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.074801433 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.118085018 seconds)
    (284/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.076428217 seconds)
    (285/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.092487929 seconds)
    (286/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068603678 seconds)
  done (took 36.05238311 seconds)
done (took 37.006548585 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099877127 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148675173 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.093811044 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136040805 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123778971 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.089806417 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118811757 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096095941 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123985225 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123932845 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.096760194 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09321186 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095333124 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121135259 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096935901 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139531847 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123386187 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092993831 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119013166 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084806289 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119885791 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08558467 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113099428 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06877838 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12177013 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092199639 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117091861 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118495357 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087608018 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109263024 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090093358 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117629865 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085655752 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124157085 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092292588 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120502988 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095734896 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121402689 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087836313 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110816267 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117711834 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086985413 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116070093 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094089549 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11490178 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091855459 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119093433 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098170696 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139743985 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114069925 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094783178 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119937487 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.094597391 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117634294 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.088994247 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119411267 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090193671 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139104765 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118514022 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091386459 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117674809 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093297653 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115973234 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.093750453 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.11984929 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119186673 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09779725 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115425765 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096034539 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116385576 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085642696 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119967166 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.088437931 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111680515 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094118566 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12250366 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08440003 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117136466 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.09177817 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117080255 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109005714 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089590831 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111329673 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093315926 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112304941 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070377911 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.088763285 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117574749 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.084699348 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.12072043 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11551863 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093489269 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112051438 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097652289 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110801808 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09112996 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111359772 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086041725 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113164328 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.089367678 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110414466 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088164773 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.12021921 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.086845469 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117925718 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.096469184 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.111508902 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116280469 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085779632 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.108559788 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100419009 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121243794 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.085691336 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115578242 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.084149506 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118171139 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085108308 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.11160709 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085164098 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111503577 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091145695 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111800255 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087505019 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118727213 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123737054 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087486939 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113318981 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089222027 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109680146 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092272473 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110117765 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087109186 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113333947 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077395361 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112912462 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086958088 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117782876 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08982132 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118250157 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088292099 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119764543 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.090758009 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117686976 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091602148 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.1105659 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073472181 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117054303 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088874813 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11374712 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086578554 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112715941 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08613537 seconds)
done (took 16.906459885 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087739819 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182818963 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149436266 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.140936056 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.105480221 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112048628 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120753673 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117147009 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113945039 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141155255 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109007988 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132629415 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146844151 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085645271 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111502501 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090238601 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112854692 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.100780963 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144502398 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132119652 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.161790059 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.084267378 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145284886 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134358532 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118765092 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113554707 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112445247 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091005913 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115839391 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101081056 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132803582 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.08858961 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113014838 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133201198 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103917002 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.1199514 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086081031 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119289315 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.085163273 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113170668 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138902611 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106555067 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117167511 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116895165 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090627065 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113477476 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088123523 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120330753 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096447587 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117357828 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125078083 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154988771 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090175154 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121611406 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085564786 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123025653 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119450096 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089781505 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111304017 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089883845 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111009986 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090648772 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126209366 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.139457397 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090437997 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122031418 seconds)
  done (took 8.610937964 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10434946 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13943313 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.102591526 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129984645 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111503233 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088103639 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114391567 seconds)
  done (took 1.802386478 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088899808 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133418638 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110517595 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136859743 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131853084 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109048272 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123265765 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088026237 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132214056 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.087303676 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.1341031 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150016468 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088155845 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121509832 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136496712 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088497651 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136919976 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087440392 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116080006 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110326273 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117323506 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133525621 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089927929 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113225046 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101213857 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114697201 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161163198 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092585614 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114352906 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091456575 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11222378 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165075028 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100743478 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126218323 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086775042 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129598739 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.144539281 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085923859 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129595746 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09253652 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127748093 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.087066387 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115717758 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085061816 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118539881 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123093724 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089947845 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113804641 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.09159868 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132922249 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088145736 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127149747 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08781838 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118523137 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.08839143 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120220985 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121746929 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089723128 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133025273 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089331308 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13041306 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104187145 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128655846 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129965444 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090907908 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127790434 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101279271 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117463199 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088479863 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11784613 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129668438 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087124959 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114281867 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099118077 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114767785 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.110641365 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137483629 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088530792 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125058609 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113381085 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.088740008 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113077888 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111084932 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118115777 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088169153 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121151396 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090551315 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112861439 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.086409516 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118259395 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.085888716 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115922343 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09001259 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114902991 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115272668 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105732002 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116491741 seconds)
  done (took 11.829707273 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091234821 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114148322 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091319778 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113969911 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089835528 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114816647 seconds)
  done (took 1.641270834 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113057137 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117747562 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102335177 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122088885 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155572532 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102064051 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129991651 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123270811 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106032656 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126953433 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127914033 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.103601929 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135327504 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120447255 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.102933559 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121249186 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.102273377 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125825441 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126935559 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095127707 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136423706 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120698332 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0958808 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131650654 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116438597 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096077157 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124335592 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101069555 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128094849 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122603202 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095149902 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117798088 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.093393376 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124279977 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129072188 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094369735 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121627895 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.116853309 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100372284 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117465585 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.102567513 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122038448 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125521306 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093015214 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123474936 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119059212 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094132738 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124321508 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.101989651 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119278291 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.117962224 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094855016 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11820575 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.091972015 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121741776 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122389953 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093624683 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129635492 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.093870247 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122067455 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117271546 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.091875303 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123401607 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116675066 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10471513 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118692615 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094602427 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122266894 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120122155 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095164578 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118842855 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.091394197 seconds)
  done (took 9.216718378 seconds)
done (took 34.110398898 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.69506315 seconds)
  done (took 1.714629743 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.833594895 seconds)
  done (took 1.855756133 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.249957811 seconds)
  done (took 18.303795908 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.502577671 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.589465038 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.997990641 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179077913 seconds)
  done (took 3.295533043 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.969319239 seconds)
  done (took 2.015390419 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284512035 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232684981 seconds)
  done (took 1.544861521 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.792844631 seconds)
  done (took 1.830718376 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.364427538 seconds)
  done (took 2.399044035 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.328285826 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183952723 seconds)
  done (took 1.550657079 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.549171273 seconds)
  done (took 1.586173672 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.003507721 seconds)
  done (took 8.047901717 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268972552 seconds)
  done (took 1.322201073 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302107505 seconds)
  done (took 1.347384982 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.585716079 seconds)
  done (took 4.629873274 seconds)
done (took 52.47768569 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100058032 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126999728 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102345401 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124277611 seconds)
  done (took 1.488365197 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101918284 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121475472 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099782567 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120937747 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125211353 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096137662 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12226874 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.0997067 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12130499 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.094692725 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121516644 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118282744 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098560174 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122295497 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092785147 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124701193 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.097104733 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121862242 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123142561 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096261296 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118704602 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09620841 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124645082 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093139955 seconds)
  done (took 3.696336381 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099540718 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118316187 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097045272 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117605384 seconds)
  done (took 1.483874315 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099417071 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142624485 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.137240757 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099153824 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142674021 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135293061 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092213319 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116843274 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093558739 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125396067 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089027054 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149299842 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13662766 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.097525182 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127454913 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.086582642 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116790644 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136531364 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099077438 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12643339 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.09094464 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125590106 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.088649936 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140375418 seconds)
  done (took 3.841878125 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169842661 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127969342 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138944331 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095320611 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160358317 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139951078 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087425602 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141612863 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08680013 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131692016 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.11632287 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132814898 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129049527 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.086708709 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114731616 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086786437 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129620755 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128115608 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090376265 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128500045 seconds)
  done (took 3.477486555 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098474614 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116777528 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088270988 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115602765 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098245437 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120500155 seconds)
  done (took 1.690990412 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09140565 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114233849 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089648824 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113530315 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093938428 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114670429 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088344306 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113884246 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089839552 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113885456 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088998131 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115379968 seconds)
  done (took 2.278921384 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.501626898 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121747374 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119479215 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089059083 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121499107 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.0897149 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.12883503 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091648785 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141795596 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087217217 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116783841 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089422843 seconds)
  done (took 2.747862843 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233370612 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125572961 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284080249 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368047933 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156030434 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176181335 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283100237 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163968712 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.223188948 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165737119 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200285083 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222876598 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150687069 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188315385 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138118967 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144480496 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203096208 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244508829 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152552578 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205770894 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225656812 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166098024 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180361915 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150393008 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137823271 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170997049 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09276463 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129985511 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232027067 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173735115 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213884402 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160781521 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144817222 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207422326 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251246768 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219491995 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280733981 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137683561 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.147530537 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167837514 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265260707 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139275612 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200281847 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153865065 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131218827 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21592636 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166974686 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175413675 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151532824 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13716035 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194929368 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237870565 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.190504026 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138074899 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301927857 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150053291 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.199808952 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192653541 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249286586 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19829844 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210159881 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094809887 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187114864 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22026109 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185049221 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.172993487 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.206361692 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146604371 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200307695 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188690313 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163597868 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219860206 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185157636 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141327119 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16875907 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171474861 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170287776 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255560235 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210945825 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.094871281 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167445584 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148684799 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133917183 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193869062 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097099033 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238464255 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143434092 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162370079 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214123401 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159909458 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159352928 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199278786 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229957216 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148773592 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082632436 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153806479 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154930032 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189597153 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139625845 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157777262 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160224948 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130423578 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181947981 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125271583 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18208095 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118181529 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172314307 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181467182 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126947343 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159760376 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150502503 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.124580558 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200330228 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197493305 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14150117 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130843432 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208536394 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176226623 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150317676 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176435999 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227915587 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116783537 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1484528 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22670975 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213907941 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140443909 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2274991 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155927448 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10759894 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131969837 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180372289 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154310691 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161629375 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133681342 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182085438 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232444014 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.09765905 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138629799 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191032149 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134571411 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132912652 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162306674 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147122782 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.10998742 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.152122081 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152263166 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208118835 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177832472 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153384599 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164961531 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152101389 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252226805 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139926096 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.123653309 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149428305 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120249012 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191507092 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196040341 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131667094 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230500102 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170626633 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203009682 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169539424 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134280938 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176216807 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129946574 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.091523043 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22117696 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166864658 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161052129 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19478515 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225268295 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18087522 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.180483559 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198825866 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173320723 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164092028 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156361137 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110839171 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160009569 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168860134 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12449798 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144174729 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132135549 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146783211 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115713669 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133873727 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22061745 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170063313 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189432142 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160194687 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149761203 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181323877 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128186623 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172434113 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177097902 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14791708 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197694414 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220966542 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185541265 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144014967 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198645748 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122483623 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123629854 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.113442697 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197163932 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106675848 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136048444 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162238653 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180600822 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179636597 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202226881 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210567701 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199915516 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190436277 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094771378 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168716081 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183839385 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175805817 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.19305731 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142529844 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150352019 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179389307 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157828925 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254815101 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167891634 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175174251 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234738805 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.148526693 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104067212 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151636857 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191362472 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152556956 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203728065 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118870291 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142054161 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161523976 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132997578 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159487619 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1810364 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161957982 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21666843 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149491939 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18483107 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127900074 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163050372 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159214776 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164685751 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081026358 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173963714 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232776994 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148616875 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167618314 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18832758 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131577827 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308873927 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243312368 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194410465 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137946354 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15519655 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161141533 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163734731 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1700789 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177790303 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158418189 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187074563 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158873048 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136910233 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138650287 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120938417 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149972005 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131595251 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148171398 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176156266 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139831365 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18470036 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161606602 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15960237 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171585806 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149820866 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143471801 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148960746 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214455457 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182304116 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238145623 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151303409 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178973394 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233026985 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097837494 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132535481 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131490019 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178172692 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107977915 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221737801 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.187393338 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233024229 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183633582 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192501107 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140230816 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119978688 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128806193 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20099357 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206919196 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153803116 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158915387 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231324601 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.117698265 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133705171 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176220524 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291894513 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144550193 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22375686 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080011268 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281198263 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129457287 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102939768 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163270288 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234904885 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135689672 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.190122022 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172580771 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171123759 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164149227 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149689694 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190798095 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245362795 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200727635 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180045198 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133557117 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155742655 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175933167 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218820922 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157354384 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111392979 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230236017 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194966375 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194822283 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14272692 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168316984 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167963686 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157420722 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215107581 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106695325 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234130164 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133647476 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19369792 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153212204 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143588973 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175079455 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.188342337 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142563635 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21663235 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18292926 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134819407 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104598453 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168189637 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208039242 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157633613 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099449907 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207001715 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097360027 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221571448 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229979278 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136271634 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155173809 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147793131 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134651833 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153430748 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158143762 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113030864 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167940378 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204192082 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135195842 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189095144 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231136611 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168033096 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172791936 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146003495 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691907095 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131976374 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193623141 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159626307 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233833084 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148864907 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172637936 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157513483 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166689014 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193628036 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159294245 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230204301 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219768984 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178417688 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10250339 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186147233 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162542993 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.114902603 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151840669 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167320915 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158768903 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154303223 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.204928374 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172648765 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.105406858 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141221503 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197661507 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159720983 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212386121 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179296148 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109516322 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202720579 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188268942 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134767526 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179543991 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237050241 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113125613 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151820688 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13431052 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157730714 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262780146 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.095028359 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234929386 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185566264 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160250362 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167960561 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146592931 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223513766 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156988124 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185273936 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14856141 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159934353 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156316376 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137913037 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101196166 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156424401 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166603148 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150980207 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158365328 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166089867 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196779251 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12245386 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116275731 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315749476 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193630539 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242476742 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106570642 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136698582 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16182227 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151245006 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176019216 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177898185 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135490178 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135892666 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.10645344 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159818737 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112138664 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156332903 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223113234 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165170465 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207480239 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136991075 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276859276 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110736676 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155559187 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116632074 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.103328415 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150474319 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145584934 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15809549 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191507864 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265848753 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148965691 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.134357376 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14868072 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097348192 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136554484 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164944374 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165190335 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177219549 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145079977 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079793668 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156175492 seconds)
  done (took 83.104337285 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164638176 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133942985 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147873402 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203010465 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177434063 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26928637 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210763556 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254411988 seconds)
  done (took 2.703881392 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.09375961 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147461676 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156865111 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13303505 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09151655 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118565462 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.347619481 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133046913 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117941163 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120644487 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174909835 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094079423 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.55432436 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.09021497 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118601606 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109469852 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091588373 seconds)
  done (took 3.832574736 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.474989574 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.73991478 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.514617722 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097011784 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.2850778 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.111980485 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.947230546 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.201297801 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.116593451 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.495148438 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.778664043 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.162042716 seconds)
  done (took 19.073189554 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114818219 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135981679 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122841058 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152733728 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140770248 seconds)
  done (took 1.820812336 seconds)
done (took 132.276426005 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104614361 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404014762 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07088018 seconds)
  done (took 1.659901779 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107128288 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136867273 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107641455 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136172792 seconds)
  done (took 1.646229017 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097853886 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126170511 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108238818 seconds)
  done (took 1.48668249 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.323194109 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189913269 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.169990684 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105975446 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128806223 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102348218 seconds)
  done (took 1.494590011 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097927028 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127146309 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097030727 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130140952 seconds)
  done (took 1.610793266 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095103087 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070607321 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100604588 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074612808 seconds)
  done (took 1.496440817 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11389592 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132061549 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102052902 seconds)
  done (took 1.509030848 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.127977667 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139730888 seconds)
  done (took 1.428252064 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105805068 seconds)
  done (took 1.260265036 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.116942341 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.168441191 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.188075122 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165868231 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.236591323 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.164973668 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141385507 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113667656 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131580107 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145176653 seconds)
  done (took 2.73366187 seconds)
done (took 18.265043454 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103148917 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.419363175 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411431592 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116795625 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723088509 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.378707272 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.033548095 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146194676 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164873516 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092556868 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139138022 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.669424551 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.025664797 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.370209451 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983030379 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377140625 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676754091 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121483495 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118404331 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093897319 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018545126 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090933928 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121599328 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092014812 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702422479 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424947676 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094662385 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.375191652 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092204254 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125654253 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381274238 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123249286 seconds)
  done (took 16.957166111 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095725088 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17292323 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096734296 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137667359 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.1232708 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093642226 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123916382 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092723518 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17862488 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122842804 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109919739 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12180767 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125519324 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094695495 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142041996 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091181009 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125712744 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09206282 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121756963 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120050627 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.1121252 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120055476 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094272303 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121716151 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093405211 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135636286 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092815524 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121932129 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12029016 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098405483 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127780204 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093615315 seconds)
  done (took 4.875364252 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14009083 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181635705 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128294917 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125091019 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168046437 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12371167 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197889602 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116358945 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181955574 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122768427 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138497507 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09188104 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156331439 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.092799173 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142691839 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121191573 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095882193 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122188809 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091470614 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123019428 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139115877 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09287788 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121158563 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092939355 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122664771 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10633128 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123695071 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119711527 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092914219 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126663346 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099022369 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123781961 seconds)
  done (took 5.189723405 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097552304 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12550986 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108259651 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138505136 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.093734576 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125929118 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09686086 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124911719 seconds)
  done (took 2.078223878 seconds)
done (took 30.258970039 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110939991 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126703291 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105926965 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134841398 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101181348 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131657351 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.089952468 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134518745 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132095474 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102196043 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136842191 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091387468 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122194971 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091433576 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135028492 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096693794 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132539421 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100550433 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133629503 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131264538 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094933774 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133456319 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102727843 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132982204 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103035931 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133858277 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13635336 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099091877 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122719189 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09327629 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124588309 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104066828 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123747338 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104654619 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126862162 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.095811932 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.12382766 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09271989 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132975004 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131567449 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099422398 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132444527 seconds)
  done (took 6.047478556 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107579072 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139023892 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104690403 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080026825 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117304654 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079701125 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137893313 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078552683 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109800028 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107461573 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072960824 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107206854 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077581004 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100895078 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078064228 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075037128 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108935011 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076212784 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075607534 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105748572 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079955886 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071980554 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108369081 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078209768 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07380578 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111148619 seconds)
  done (took 3.636207819 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099472983 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133791022 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112404791 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183729427 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161218302 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098161027 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131488394 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.109182472 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.137445168 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118821032 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095683423 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147974921 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108110437 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128917533 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090896479 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136656215 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134430025 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.092960633 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127409402 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111072876 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138241173 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.100927621 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141036701 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131235754 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092152992 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121583204 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096477551 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133965085 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.095913763 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131117846 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095242516 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125069285 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120911681 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105483594 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125066003 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093273261 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142134862 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10137424 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131515649 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.090560088 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.12980009 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120836384 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114415829 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161478183 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090805278 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.13014964 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.093868283 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132929023 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120099965 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111455343 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130792065 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091505235 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124618176 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.0909055 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121452055 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10506687 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125079003 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093143294 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131673247 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12556768 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105319643 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124199578 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108397778 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120922036 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099253618 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121179692 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091669486 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12163842 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.113098583 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124124131 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160402244 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092190899 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123512177 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100459178 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129513038 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126232982 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093676096 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136164382 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101605417 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125493813 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100684754 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12628712 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094871536 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140839839 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.093716261 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124819834 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092036477 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128559318 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122956668 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09420705 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135283291 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091725957 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124938059 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.108974095 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122319 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092656635 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128964835 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124939142 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09250122 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136072972 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.09630747 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122771538 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101008853 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122618752 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.093541313 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.13235327 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12567094 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092422206 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125263419 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098115133 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12285611 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092891447 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12554568 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093690856 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132431865 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098163419 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127173742 seconds)
  done (took 14.79879813 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228520007 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214089665 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.235129768 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.260757428 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135138516 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.112823831 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209118415 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155149708 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123085374 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158971362 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174020946 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.1797606 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.166956784 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.18372689 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170732329 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093120569 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142222625 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.131812036 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.244253901 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.256315862 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144001589 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099571826 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159806076 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159847048 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136922055 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.100455072 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140441565 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135593114 seconds)
  done (took 5.839850722 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107584092 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155193317 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097866487 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144881349 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147816562 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09165808 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128366458 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093035359 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135909078 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13441215 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092717801 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129359025 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.098445374 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133439948 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122305188 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102837352 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131805448 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094561277 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125378086 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.095928204 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134533901 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100136266 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127751751 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.08991173 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.132356814 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120034194 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086249366 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141684494 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091356483 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.144997799 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120475824 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101120605 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13603365 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092610824 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123323176 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094588429 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125407415 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094013376 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124487353 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090429781 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122056022 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076936415 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120830124 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105226509 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128741962 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079283237 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129395489 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.096610898 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.124539782 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119107413 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096446885 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124278512 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097190541 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129447516 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095244728 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123391003 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096166024 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115117205 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100296773 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124815365 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084483003 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090502094 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128689768 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117166282 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10127862 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128509356 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092095857 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12570084 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09681008 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128441149 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.09458152 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129733177 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090238256 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126399694 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094794786 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128887029 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.09563046 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123127672 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.091775677 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.124812697 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074749648 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123858098 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073467813 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125863726 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092559322 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121952704 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094058822 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129429599 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136829766 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095108352 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131804527 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093738516 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122079418 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095523048 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112728836 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096447342 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139075644 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139836359 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094202506 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121483083 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107914162 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125800725 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092051068 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105736395 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102434943 seconds)
  done (took 12.975106817 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127375174 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154007463 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.093829594 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142038044 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156343455 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156088432 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100816566 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13004352 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096055031 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141367897 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092843406 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131950519 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092431397 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137717658 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156128712 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103414217 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125249434 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107521768 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128878922 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.167745096 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.1113823 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142168983 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109397096 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124934693 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.097416133 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.140951355 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160232234 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106245586 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136969706 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140580821 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108127398 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161001832 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111424244 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128802371 seconds)
  done (took 5.525267914 seconds)
done (took 49.989508734 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.293487847 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.50417989 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.266718115 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.258202499 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.285738474 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.295412134 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.276235822 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.266322029 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.419441 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.267899103 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.503090403 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.974417176 seconds)
done (took 59.811193661 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.290476335 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.404004771 seconds)
    (2/2) benchmarking "String"...
    done (took 1.536994622 seconds)
  done (took 4.135802793 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.638156142 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.261751912 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.536979925 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.270208907 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.270548128 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.559661902 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.094776279 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.656900274 seconds)
  done (took 28.842617746 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.279308269 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.360452049 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.297480105 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.278005527 seconds)
  done (took 6.410246421 seconds)
done (took 49.510105396 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.252300588 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.303402543 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.280251205 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.250511067 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.408326834 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.307507799 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.607377369 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.281933174 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.28881226 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.255029394 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.301393599 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.284015362 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.273001015 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.671626184 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.271719805 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.279597695 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.296249452 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.785270762 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.708108584 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.288835359 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.296831536 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.316812556 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.272062225 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.270101833 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.3413719 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.272862246 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.281219424 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.27214683 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.02405733 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.275322534 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.298567831 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.816456423 seconds)
  done (took 193.325975447 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.272344724 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.24769235 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.343746754 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.313810758 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.646595004 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.474068025 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.406260011 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.889137301 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.2944345 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.288686309 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.426650417 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.273916708 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.521561166 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.256073147 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.304457445 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.376116572 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.453000442 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.552578546 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.326702928 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.453173418 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.28285659 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.305892499 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.239990268 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.422205038 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.283570176 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.356350923 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.305049731 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.299852796 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.460078305 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.360196256 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.30247807 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.331910127 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.927335747 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.134006654 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.299963393 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.300525998 seconds)
  done (took 151.928437041 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.338488827 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.274878717 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.273775602 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.276562266 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.310871915 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.274528239 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.86833473 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.889750599 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.778841015 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.658616036 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.773948908 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.60912221 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.276761853 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.275225804 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.372760282 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.288124285 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.274771684 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.276502032 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.290833617 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.322199364 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.274715315 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.276685775 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.893310709 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.290376321 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.422271329 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.473728398 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.295881339 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311912086 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.668009133 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.275729006 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312473963 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.612913083 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.328291941 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.277125339 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.705942915 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.431630733 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.394344668 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.275224752 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.277420983 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311265137 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.276632013 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.561264911 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.276494512 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.278405948 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.281442174 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.988413327 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.280866541 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.870356758 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.278520288 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.255306726 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.278346874 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.276134055 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.797134864 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.952416624 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.293709035 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.27800739 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.281022865 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.278856598 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.278761608 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.312713164 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.802027907 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.374241781 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.296243751 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.28254163 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312681341 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.278211006 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.27924852 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.478004751 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.294561206 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.675796182 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.351859759 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.496123169 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.896782432 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.280930865 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.378245014 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.402294398 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.278966495 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.277372351 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.280047668 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.279200031 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.39454786 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.278531289 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.72202379 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.46028135 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.30112796 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.785114336 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.381733854 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.279126967 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.732079735 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.282357632 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.280323628 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.066273274 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.379063818 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.280747746 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.279101355 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.281245388 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.725161469 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.89721468 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.579875638 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.282381407 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.870797547 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.280381772 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.742907295 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.866788261 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.0191676 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.282328997 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.393669939 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.46247739 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.300751292 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.281240583 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.785516537 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.282186954 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.340012658 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.279901228 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.680761723 seconds)
  done (took 376.587489243 seconds)
done (took 724.373772486 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.885365966 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.876710976 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.993167747 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.865800193 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.829857117 seconds)
  done (took 10.653690883 seconds)
done (took 11.858401037 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.487733469 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.484122183 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.348412737 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.485523491 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.312258378 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.504411188 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.465609063 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.302269338 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.390769231 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.370471238 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.390207674 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.339004836 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.314366276 seconds)
  done (took 19.398723982 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.626169886 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.652107857 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.344853357 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.618594375 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.321279027 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.620189081 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.488100475 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.510153932 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.502139763 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.317489161 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.295231294 seconds)
  done (took 17.501384351 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.617513488 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.620013467 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.347625794 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.614312404 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.32274515 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.608158159 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.490659147 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.5074052 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.507040692 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.316346698 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.2956617 seconds)
  done (took 17.451864801 seconds)
done (took 55.557007665 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.293383602 seconds)
  done (took 2.497276112 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.33028729 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.492796237 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.312705822 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.296358147 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.295116472 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.292865146 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.29709593 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.293460048 seconds)
  done (took 11.816684988 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.292544566 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.293357681 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.290299557 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.293436168 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.292057801 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.290164327 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.290899399 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.29085977 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.29250773 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.29058058 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.291289678 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.296571055 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.293105046 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.292855544 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.292430055 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.290761633 seconds)
  done (took 21.879926489 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.29449972 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.291917779 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.290197674 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.290831642 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.29408279 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.292231976 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.292926748 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.292563919 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.292373162 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.29169938 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.292408943 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.29002273 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.292946371 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.293813387 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.292918603 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.293290706 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.290527462 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.291066011 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.296640568 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.291463582 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.291623828 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.291605503 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.292875694 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.291760455 seconds)
  done (took 32.225795019 seconds)
done (took 69.62376489 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.503382643 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.028764093 seconds)
  done (took 9.736748102 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.296680999 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.294671044 seconds)
  done (took 3.799315971 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.294470735 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.294452219 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.293394931 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.294183025 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.293764848 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.295263076 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.295619048 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.295049657 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.295006528 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.294951325 seconds)
  done (took 14.153565166 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.293790662 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.294048652 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.292756639 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.295229904 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.296112708 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.292426609 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.295682597 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.29537562 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.2965502 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.293644623 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.295484422 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.295093411 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.294869175 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.29445916 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.294689814 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.293396618 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.293721502 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.294883324 seconds)
  done (took 24.512150448 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.296007756 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.297430278 seconds)
  done (took 3.802550031 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.294065113 seconds)
    (2/7) benchmarking "second"...
    done (took 1.294933531 seconds)
    (3/7) benchmarking "month"...
    done (took 1.295070871 seconds)
    (4/7) benchmarking "year"...
    done (took 1.29457697 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.296013052 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.293176174 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.293640183 seconds)
  done (took 10.270708756 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.29848763 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.466557768 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.548776624 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.908438673 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.298745659 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.302116383 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.161413229 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.30182188 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.303474289 seconds)
  done (took 14.799221249 seconds)
done (took 82.281018776 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.348622733 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.306559548 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.494760182 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.297068151 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.307689851 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.634193489 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.315551036 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.428166157 seconds)
done (took 38.344443128 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.308021429 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.284115602 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.09259806 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.271040247 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.37968193 seconds)
  done (took 19.238018488 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.3598906 seconds)
    (2/2) benchmarking "read"...
    done (took 1.629359578 seconds)
  done (took 5.201430892 seconds)
done (took 31.959481634 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.299590202 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.299687741 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.298091289 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.296326011 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.298150633 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.296288138 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.295250633 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.295604325 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.295995986 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.29903702 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.297484878 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.299485947 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.29987471 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298217516 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2974727 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297183375 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299133125 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.299619037 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.29739956 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296547497 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296140048 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297914797 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.297059656 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.295165993 seconds)
  done (took 32.353184828 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.299858617 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.29740591 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.29804238 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.299391109 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.297445245 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.301347241 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.298872588 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.2957122 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.301315835 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.299782848 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29707913 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.298783617 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.29987666 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.298658633 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299593017 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.297296727 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.300580343 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298033361 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297983596 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.299688818 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.301756167 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295432628 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.29928208 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300622199 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.298106808 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297404206 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.30091588 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.300233332 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30138207 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.298875894 seconds)
  done (took 40.185289655 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.308746993 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.309151528 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.300648793 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.301160133 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.300704649 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.300666438 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.302150147 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.301665555 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.30256243 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.301345597 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.301723875 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.300997044 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.300189803 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.301501127 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.302583474 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.301457404 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.303700481 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.303472063 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.301987923 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.30191875 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.302886073 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.301094778 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.303863279 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.302741111 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.301767192 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.30249525 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.30446012 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.30404411 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.304019142 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.301985718 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.302401496 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.30360803 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.303610636 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.303631717 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.304225561 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.303632594 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.308954334 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.309494984 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.305039015 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.304383583 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.303068508 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.304784391 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.305077045 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.304184456 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.304295239 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.303007285 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.304271096 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.304825128 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.302847078 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.303903717 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.304762084 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.306538468 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.305542499 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.303887259 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.305867949 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.304590858 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.306385605 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.304974404 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.304506497 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.30331827 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.305270602 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.306586374 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.305654732 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.30444173 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.305927398 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.305026994 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.305042586 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.305072315 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.305827262 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.306708718 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.305935858 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.304221815 seconds)
  done (took 95.100862576 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.305664302 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.303533388 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.302658668 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.304915194 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.302973012 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.30662666 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.30332053 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307154968 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302903169 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.305018024 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307219601 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.304009773 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302836944 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.307462256 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.308516106 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.30447567 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.305301577 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303538656 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.307061347 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.307204474 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.308631584 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.305614417 seconds)
  done (took 29.936632229 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308395421 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.310493815 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.305678724 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.30852193 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.305072186 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.306878341 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.308996669 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.309191158 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307258616 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304574306 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305066521 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307548286 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.303179027 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306623113 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.305632918 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.307539499 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307746958 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.307635723 seconds)
  done (took 24.74666626 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.306085733 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.304438939 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.309408453 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.305722494 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.306145053 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.307333408 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304622603 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.3092102 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.308412487 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.303938308 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.309776608 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309575242 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.310035381 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306044979 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309900419 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.304057417 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.308673212 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307002996 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.30944431 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.308630272 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.307019463 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.309819183 seconds)
  done (took 29.986824425 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.3111675 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.308868398 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.307122668 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.306562528 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.307083357 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.3100609 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.310119278 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.306795942 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.311719846 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.310330717 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.3047559 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.308763627 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.308769062 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.309386998 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.306496679 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308078852 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310490541 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.309826836 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.308472868 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.307271547 seconds)
  done (took 27.396759119 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.313433572 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.312265091 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.312334293 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.312950005 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.312518778 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.312716616 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.313086603 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.313173544 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.314103937 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.31207612 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.312821631 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.313870743 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.312056225 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.313885171 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.313818418 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.314330503 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.313312699 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.314128716 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.312613914 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315502507 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.316064681 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.312370496 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.314390258 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.314683181 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.313828944 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.31515828 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312116279 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.315313284 seconds)
  done (took 38.002082959 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313035185 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.315424983 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.312162083 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.311845692 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.312273481 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.311408637 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.31148183 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.313562936 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.313986601 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.311992475 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.31566609 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.314943406 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.314016651 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.314127004 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.314510169 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.313052265 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315224367 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.310830017 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.313165398 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312053738 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.31478827 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314280755 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.315619861 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.312506435 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312754924 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.315459341 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.311272176 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.313599817 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.315939131 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.31287723 seconds)
  done (took 40.631461237 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.334005024 seconds)
    (2/2) benchmarking "in"...
    done (took 1.333397399 seconds)
  done (took 3.894792728 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.312968871 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315440704 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.315052936 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.313907742 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.313057411 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.314380588 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.315726379 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.313511369 seconds)
  done (took 11.742107427 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.315336344 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.3158377 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.315747117 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.316414822 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.317391517 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.316483811 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.321582179 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.33851709 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.315924071 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.316489822 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.322659549 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.323279515 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.318382216 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.31733919 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.316566779 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.316918845 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.316262833 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.318881745 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.317813608 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.317104669 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.317804663 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.319572753 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.319368519 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.316160496 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.320069742 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.328323536 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.341786497 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.318148529 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316464364 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.319945551 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.31794595 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.314737869 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.318641033 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.318590011 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.324716578 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.319140329 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.324995493 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.336056614 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.32241397 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.339612089 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.317515475 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.315613551 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.319124072 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.318720743 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.320038824 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.319152628 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.31938985 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.31492776 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.317773158 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.322988064 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.322627649 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.317380423 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.315449848 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.319558316 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.319108535 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.326269384 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.34027041 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.322315668 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.329033471 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.327745316 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.352173049 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.34419161 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.32135605 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.322229577 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.331420281 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.343909854 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.328357072 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.340411199 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.316999878 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.320631589 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.326777131 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.353027287 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.345778665 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.32137052 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.322747046 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.320893696 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.319547349 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.319956426 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.327533991 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.343610264 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.32129351 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.321706871 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.332322815 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.345274352 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.321976097 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.321762961 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.321926442 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.321852429 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.324292541 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.330375471 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.3428178 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.323139143 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.320486031 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.321801815 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.321180426 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.323712785 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.32262531 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.324386641 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.317834547 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.323259351 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.322307299 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.326566806 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.332517285 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.322962632 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.324132262 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.327485757 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.344641183 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.320796769 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.328142078 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.323634823 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.323451544 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.324445034 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.328291767 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.321413429 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.326568061 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.331818426 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.323632693 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.324786158 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.326018319 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.32426332 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.332063207 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.349895873 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.3255723 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.323612336 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.328711427 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.33474012 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.324892082 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.325826469 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.322670398 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.322330974 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.32210582 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.325515669 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.326387539 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.32370937 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.324185579 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.326762025 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.321193679 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.325106627 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.325546425 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.324739723 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.324515474 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.326348682 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.323856922 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.327528624 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.325926038 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.326436141 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.330490667 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.344702165 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.326873785 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.325261115 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.323778821 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.326442756 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.327027553 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.328001391 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.323381499 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.32573163 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.327024856 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.325782378 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.32630291 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.324930898 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.327216422 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.327012607 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.328568472 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.32763731 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.330037686 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.324948385 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.325082063 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.327563456 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.327654776 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.32543471 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.32770846 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.32615013 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.330706474 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.337053723 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.329378625 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.328161392 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.32941643 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.329272948 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.327956034 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.330526182 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.330074405 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.334386651 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.329280701 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.333583038 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.349300281 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.328530983 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.328655258 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.328610945 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.326961774 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.329775884 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.331694625 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.33576942 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.339921894 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.353305682 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.329291152 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.332625147 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.327613897 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.333685996 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.33193499 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.329707898 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.329687706 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.330422185 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.327870434 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.328666902 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.330589694 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.329194347 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.328829021 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.32931769 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.329735055 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.329801628 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.331061253 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.330787845 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.329615615 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.327674957 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.331219376 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.330633049 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.330452823 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.328313774 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.329622684 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.33007491 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.328819514 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.331281519 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.336109583 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.328550192 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.332627067 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.332668623 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.330813141 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.329203223 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.33148959 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.332007843 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.329624397 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.335492716 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.350847787 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.331230458 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.336072288 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.352609881 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.330527411 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.332788138 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.331919028 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.328887594 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.335309629 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.340446419 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.330957707 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.333650869 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.334359146 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.332148399 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.330186271 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.336841366 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.350050457 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.332349781 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.333282853 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.333353853 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.329374858 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.333429762 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.333678422 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.33265134 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.334718768 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.333529562 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.333010678 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.33271856 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.332539314 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.333910172 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.332871428 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.335760095 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.340597921 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.337691563 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.331703506 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.334046503 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.33439352 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.338247491 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.332186993 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.33458008 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.333053066 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.34591522 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.361459497 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.338922489 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.353825101 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.334183313 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.338555769 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.356070361 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.336440996 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.33425038 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.336424432 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.332029704 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.332770048 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.332086973 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.333776441 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.335359188 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.334858746 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.334594549 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.339723162 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.334842258 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.333679352 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.335378214 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.335713769 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.336018662 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.332694589 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.334518997 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.337049281 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.337951491 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.333823477 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.336269903 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.340338195 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.355532521 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.337590905 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.335580799 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.335705194 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.334279573 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.335250762 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.336328861 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.340802261 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.344257217 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.339175944 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.345855731 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.337844025 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.344143008 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.335888067 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.339535036 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.345021359 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.335697296 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.335569451 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.336107169 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.338189188 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.343125787 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.358472389 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.339482598 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.342352114 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.33879136 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.338946242 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.338547442 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.338464724 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.338888575 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.339846706 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.343692512 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.35943839 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.339396936 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.339923503 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.335983126 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.338806448 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.33839928 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.338747469 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.340438693 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.339980501 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.338422789 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.337253645 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.339299369 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.340261162 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.342420675 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.33913239 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.336580647 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.340074291 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.344934378 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.363361318 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.343703542 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.34181753 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.345654652 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.36052028 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.346993019 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.362495083 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.340709289 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.339545592 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.339024011 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.340846746 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.339722498 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.340920049 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.340324741 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.341455339 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.343890478 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.340623611 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.340759441 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.339535823 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.341142295 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.339613175 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.350204864 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.364092121 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.342715155 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.345534355 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.338610661 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.342813267 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.346062673 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.341835932 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.341104349 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.343004176 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.351615067 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.348512786 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.340558679 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.341866079 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.341776166 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.341221444 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.342561564 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.342307215 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.342461046 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.341349211 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.338925552 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.343275802 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.343668497 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.342660189 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.343662021 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.341868628 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.342586795 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.350604443 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.362293356 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.343927348 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.34373656 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.344110369 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.342615427 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.341734555 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.34276438 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.343635839 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.343972662 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.344717005 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.350203403 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.349835784 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.34303712 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.341668826 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.34304971 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.342672347 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.34435832 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.343049943 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.345042452 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.345605252 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.343218443 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.3425662 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.342110584 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.342105164 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.342764066 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.341977108 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.343709308 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.348116362 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.349921989 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.344955434 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.341754598 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.34220584 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.343890809 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.341795713 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.346279823 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.350871076 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.366970541 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.353998849 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.351889548 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.349853647 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.348479618 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.348161057 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.351267348 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.343574788 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.344621716 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.345228806 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.344232374 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.344782038 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.347743251 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.346858251 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.350127299 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.366589485 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.343821214 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.351056612 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.367146287 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.346198276 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.347454875 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.34854937 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.343724962 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.34209829 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.347283421 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.345048858 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.352128264 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.367882909 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.346927764 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.348820055 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.345655302 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.349283866 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.351136206 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.347346431 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.346259081 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.344160854 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.346410257 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.348309293 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.348091177 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.345287031 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.347594717 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.34519999 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.350346768 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.35500721 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.346479163 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.348107205 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.346739678 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.348200959 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.349732154 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.348429922 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.346485353 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.344068728 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.347441802 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.349219081 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.346776298 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.348668085 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.34792335 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.35190152 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.351743989 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.348610563 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.35172383 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.359479682 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.356945539 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.346727965 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.348068274 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.348729653 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.350215442 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.349420511 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.350462847 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.348778278 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.349360656 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.349986641 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.349855808 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.348973621 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.350475682 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.363267467 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.369183459 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.350741007 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.349815553 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.351180601 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.350242225 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.347748193 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.34964298 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.349912391 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.351071891 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.358091234 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.350522252 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.35499902 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.37116382 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.35048412 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.35548225 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.353032297 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.357671916 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.351707047 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.349341191 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.352486895 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.354944885 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.365867824 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.351815606 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.359399944 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.379330009 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.372954619 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.350926108 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.350737566 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.350676681 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.352034327 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.352219893 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.352109366 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.352369845 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.351686684 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.351318727 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.352174987 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.358231928 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.352620178 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.354298297 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.351319904 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.349367841 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.353351801 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.347463708 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.352718177 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.352312269 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.351559003 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.353869506 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.352305552 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.352928114 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.363839512 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.379327571 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.35444478 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.352898376 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.349841274 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.353850118 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.35609966 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.363669284 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.360303626 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.352148846 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.354525747 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.35329087 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.35274902 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.352696645 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.35481262 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.350631712 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.353174929 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.35200666 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.364273294 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.380294351 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.355984094 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.352401472 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.354260946 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.353414425 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.353193969 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.353539632 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.353499588 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.353317437 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.355372413 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.358032619 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.354527909 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.35296972 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.356286802 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.359115536 seconds)
  done (took 798.912544692 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.351557601 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.35216295 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.351288825 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.351642386 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.351485905 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.351569841 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.352367092 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.350768299 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.351315921 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.353452027 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.351647011 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.351834228 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.353328617 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.354076974 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.35252265 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.3516855 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.352505135 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.351303478 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.35342082 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.354223561 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.353483447 seconds)
  done (took 29.661613364 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.357503331 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.35369086 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.352679652 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.356003487 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.353631198 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.355475197 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.353036602 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356261816 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.353869665 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354192279 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.355800416 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355711285 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.354807387 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.352690363 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354393793 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.355881383 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.357382966 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.352026764 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.357701049 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.353866432 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.356580608 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.355166913 seconds)
  done (took 31.073302055 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.357638635 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.357486339 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.35560489 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.353501491 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.359137331 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.356170892 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.358421666 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.357942265 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.357593314 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.356204069 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.356443701 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.359390271 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.364079113 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.36306263 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.357291904 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.358120488 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.501575939 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.357934388 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.358469207 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.358460945 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.356931152 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.361262364 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.375529008 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.356573347 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.357435115 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.358368943 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.358880704 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.357401276 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.357051806 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.359537675 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.362406279 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.357697152 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.358225075 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.360680928 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.356653338 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.358727477 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.362493427 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.360436857 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.356315343 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.360064249 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.368465677 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.380301144 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.361411047 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.364449825 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.380963827 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.357878122 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.361461847 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.369014281 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.357984328 seconds)
  done (took 68.067990093 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.359400755 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.35903708 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.35804075 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.36025311 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.359008298 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.360320168 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.360664256 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.360553156 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.358779322 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.357390937 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.360472557 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.359378171 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.359905692 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.360801219 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.360742854 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.358177777 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.358755579 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.359757658 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.3586094 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.360066873 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.358359564 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.359543293 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.362646638 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.358930076 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.361659004 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.36053619 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.35972145 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.361653035 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.359081818 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.359895002 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.361177232 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.360607836 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.362995406 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.359864805 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.357257652 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.362527614 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.360586554 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.358320526 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.362984068 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.36150628 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.362891846 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.363459185 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.364128351 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.363470247 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.359235193 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.359740953 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.361757358 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.358540566 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.360956346 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.362526937 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.36425627 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.360714383 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.363630165 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.361693872 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.363481036 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.364255633 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.360201093 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.362008183 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.363410728 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.360432527 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.361898061 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.362215534 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.361567523 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.36435116 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.364792116 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.362059299 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.361876844 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.365100309 seconds)
  done (took 93.816468286 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.362986254 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.364266797 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.362416088 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.363970573 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.362946171 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.365534963 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.363428453 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.364484024 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.364696323 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.364065921 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.364595185 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.364144028 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.364980594 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.365060621 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.364741163 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.364401267 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.362100259 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.361197106 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.36299548 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.365345181 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.363014984 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.363717783 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.364230266 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.364361396 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.361896105 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.365342491 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.365050158 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.364542249 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.363604136 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.365190967 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.366437229 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.363295083 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.363812964 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.365785184 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.365008314 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.365436612 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.366471972 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.364576346 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.363345265 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.365198925 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.366161769 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.363963682 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.364308906 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.367118949 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.364042202 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.364704718 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.365900281 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.364018203 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.362867976 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.363702861 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.363735571 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.362853222 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.36279775 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.361948133 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.363200338 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.363005075 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.362146021 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.362431329 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.36208025 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.363620399 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.362646846 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.365204634 seconds)
  done (took 85.845301942 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.363068942 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.366014158 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.357657071 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.357599468 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.360124611 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.357285461 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.360485737 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.361616488 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.361799818 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.36040975 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.361839588 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.358649773 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.357923286 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.362486794 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.359257147 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.359214478 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.358378481 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.358318349 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.360199591 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.356364193 seconds)
  done (took 28.466957766 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.357720901 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.359240925 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.359081924 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.357772818 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.360828166 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.359201115 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.361915254 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358425709 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.360544653 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.362459597 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.360531316 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.358657839 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.357367126 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.358079194 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.361140861 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.359037365 seconds)
  done (took 23.021026037 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.358928752 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.361402537 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.360359916 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.360045611 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.358270433 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.357631903 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.361157552 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.357541181 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.358451104 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.360653148 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.36096996 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.361331679 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.360650129 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.359871262 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.357536059 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.361804819 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.35916639 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.358471949 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.362529782 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.361475038 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.360089133 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.360094975 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.359724625 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.362070328 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.35660843 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.360141319 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.35968715 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.359114089 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.359423828 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.361865436 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.358491287 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.358565982 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.359571592 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.35858867 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.362690863 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.359535111 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.362728942 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.362184311 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.36260418 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.361792708 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.363568967 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.360880886 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.36329266 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.362702356 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.360835343 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.36347033 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.360081396 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.360524183 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.358082801 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.359715281 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.363172305 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.363561225 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.364021897 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.363945105 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.361863261 seconds)
  done (took 76.101464747 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.36430749 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.36421628 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.361741298 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.363234362 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.364034602 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.361185041 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.365715681 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.363452375 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.362345939 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.363026607 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.363139245 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.366737942 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.360725928 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.363767084 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.362729704 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.365457094 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.362265016 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.360715747 seconds)
  done (took 25.811372581 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.364049104 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.362655835 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.363850838 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.359806115 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.361016075 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.363882297 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.361092469 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.363200709 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.363773438 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.363273129 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.361305302 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.367084545 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.366447796 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.366219516 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.362914343 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.36327455 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.364420201 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.363902072 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.361661635 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.363946715 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.365883802 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.366141995 seconds)
  done (took 31.27231177 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.365950579 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.363828905 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.366759875 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.381526332 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.384396341 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.390290661 seconds)
  done (took 9.525881197 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.373221878 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366171411 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.364571646 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36797033 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366573801 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364266782 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366173915 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364972462 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.366141757 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364609256 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364138203 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367507911 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.365932848 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363597743 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367740812 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365294702 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366709974 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363691331 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363865555 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367459584 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364960547 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368339706 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364806125 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364397316 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365494347 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366067559 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368833255 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36628756 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366199415 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369271051 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368923828 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366190414 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367387945 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365084034 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368130227 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367115484 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365209331 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366871015 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368667277 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365263992 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.367564289 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366914256 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368567433 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36642253 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368393585 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367299287 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36643894 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366252001 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366740947 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371583863 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368227374 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367333279 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369930227 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368913422 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368514079 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370146714 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369467412 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366857263 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369964004 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366327272 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367756606 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36943525 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366123849 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366633951 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368870866 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364769554 seconds)
  done (took 91.51936161 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367219481 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.367116542 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368115047 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370211964 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36641098 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367204117 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365512623 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367008657 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368908071 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367533621 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370120335 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370579308 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366426912 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36760547 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368098266 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367549975 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368343031 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367785305 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369707264 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371451007 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367924179 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367533731 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368496542 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366379185 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367783881 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368793871 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369264955 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365016439 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366917252 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365856976 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365676889 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365270778 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369428395 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.369689061 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.366994513 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368085606 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366611785 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368056699 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369495314 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371017852 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368104056 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370576253 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369067684 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368164595 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369209034 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368046528 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369026197 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367408372 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372024711 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367958135 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369495053 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369094466 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368953164 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368047949 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36694115 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371504537 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363916867 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364378286 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363794868 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367778601 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362567829 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.364002927 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367302448 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365493214 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365368548 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364424348 seconds)
  done (took 91.547462343 seconds)
done (took 1859.833477466 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.420321897 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.398034985 seconds)
  done (took 14.091360339 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.52773797 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.485001654 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.365355176 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.400889509 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.365466354 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.379709677 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.383515699 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.364456302 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.365174335 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.366401284 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.367731856 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.556252158 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.414797365 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.366975241 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.370259948 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.460485646 seconds)
  done (took 43.818290283 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.396484511 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.372435865 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.496204227 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.388369946 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.394824439 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.569194023 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.4295078 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.375979228 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.560234999 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.414143592 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.0254343 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.393893679 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.372644067 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.547397422 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.389145491 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.570198211 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.630659414 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.117304487 seconds)
  done (took 31.718484717 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.856286769 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.370642718 seconds)
  done (took 9.502087013 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.390746031 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.371759399 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.372321119 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.369357088 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.362419823 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.364303737 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.369744246 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.366197205 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.240820864 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.504002349 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.373883743 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.379349116 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.38782733 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.367901522 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.369444165 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.405136493 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.543470669 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.367376512 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.367227543 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.374416341 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.368500512 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.455244178 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.412565802 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.368239517 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.503671325 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.21274594 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.370044337 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.375421882 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.523967166 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.367331989 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.369362419 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.370771337 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.372033877 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.982298784 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.81701909 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.379579152 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.393155436 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.378312971 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.368421789 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.51450305 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.370893048 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.375709422 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.362900319 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.809497459 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.507662045 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.493238385 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.706161369 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.386647529 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.373229806 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.431238373 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.369463318 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.372929023 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.400517454 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.166031953 seconds)
  done (took 113.957443513 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.390815716 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.752942271 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.532088831 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.387614508 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.007343494 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.063591144 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.378141582 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.670862428 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.442282703 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.362133606 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.668530374 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.887737178 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.379328017 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.380537966 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.010972862 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.406931595 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.360224755 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.060623152 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.37406316 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.360031525 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.863327978 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.357547314 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.358732885 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.510152894 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.394935504 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.816201916 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.785488635 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.812255983 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.370060227 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.353060275 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.823060073 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.372422029 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.375367434 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.354316307 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.620308157 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.714619158 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.715225107 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.373722248 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.398492927 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.353162859 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.384294794 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.809805305 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.717288152 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.373378646 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.353858474 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.81194234 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.368829399 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.354364199 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.356460986 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.553024506 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.028925329 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.356341236 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.726449504 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.352233484 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.732650335 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.429189445 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.393410182 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.842195346 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.370352783 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.432022824 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.397505518 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.354533696 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.359916543 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.355479046 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.360283922 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.706240169 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.502149794 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.361597423 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.704645231 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.831773228 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.372105478 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.869803095 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.265113615 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.374639607 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.469135628 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.356498958 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.915125622 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.850730221 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.399513828 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.354227035 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.694681152 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.371882308 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.635402777 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.370696867 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.374659486 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.877097702 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.362106436 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.421774033 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.357262299 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.374405769 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.989254393 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.369116182 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.623354578 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.418671637 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.357159758 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.355790035 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.392712093 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.355537051 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.36034643 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.360173933 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.873166112 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.378440997 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.469688523 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.37575975 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.356565338 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.373221506 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.360657604 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.356719607 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.576089267 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.82707605 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.380628872 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.362203623 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.357256859 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.374115986 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.526005629 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.362890631 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.668564178 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.380164761 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.357925384 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.359289417 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.999889036 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.381261717 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.353744393 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.38107789 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.251099068 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.566832845 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.392958886 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.356733173 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.358924301 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.376750323 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.637125019 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.377653849 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.438063488 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.362440156 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.055337951 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.408639633 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.396407783 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.697415719 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.364231144 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.288474129 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.38546175 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.362958642 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.651635431 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.624904097 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.413889143 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.357380727 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.376360978 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.054250607 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.422369664 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.498820164 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.382690615 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.450058352 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.55931477 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.797301324 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.362744312 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.003978599 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.361196763 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.575814242 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.363804463 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.67702985 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.844012728 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.377606732 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.365855551 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.06578078 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.083759371 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.164853967 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.362334443 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.635063232 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.307933631 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.842223771 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.362676189 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.364213841 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.811892422 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.369474992 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.361554538 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.363046374 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.361166287 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.505729874 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.535494507 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.938261881 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.367528137 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.816328079 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.399848627 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.361593967 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.371365686 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.366608554 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.708682328 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.430055574 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.363115159 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.399652743 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.367046701 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.366173907 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.839924519 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.299262131 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.366123485 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.516366807 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.990488585 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.381519984 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.364763405 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.970844956 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.648957442 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.873988652 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.384976425 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.674582539 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.38915166 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.405631037 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.931552792 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.447307141 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.877721835 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.382295473 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.362510552 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.953764675 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.3795513 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.722742319 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.363648414 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.366074137 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.889914051 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.382298915 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.369353779 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.648512705 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.385648133 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.611120436 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.365691637 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.369024368 seconds)
  done (took 1117.673755332 seconds)
done (took 1332.034911958 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.364004705 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.365818543 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.35015683 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.36710464 seconds)
  done (took 26.723934254 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.377763831 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.375095123 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.374984004 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.371886834 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.373206965 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.372037078 seconds)
  done (took 9.524113876 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.397560576 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.363389038 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.366413221 seconds)
  done (took 19.40690904 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.576104535 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.67601496 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.723875641 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.601588063 seconds)
  done (took 10.856277318 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.375012007 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.376643268 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.373590383 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.375953846 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.378182166 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.378652238 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.376038576 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.374450505 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.377248106 seconds)
  done (took 13.663535823 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.379479729 seconds)
done (took 82.831785091 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.399438658 seconds)
    (2/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.371082057 seconds)
    (3/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.349584084 seconds)
    (4/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.846076461 seconds)
    (5/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.45131301 seconds)
    (6/286) benchmarking ("sort", Int8, false)...
    done (took 4.424648519 seconds)
    (7/286) benchmarking ("sort", Float32, true)...
    done (took 6.371389505 seconds)
    (8/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.188044868 seconds)
    (9/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.373471697 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.621715767 seconds)
    (11/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.43524186 seconds)
    (12/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.754406435 seconds)
    (13/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.441648951 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.43035344 seconds)
    (15/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.554744137 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.395150755 seconds)
    (17/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.952592818 seconds)
    (18/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.748644696 seconds)
    (19/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.395038984 seconds)
    (20/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.735691347 seconds)
    (21/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.356511622 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.291245577 seconds)
    (23/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.367890648 seconds)
    (24/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.757492854 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.772463461 seconds)
    (26/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.362712733 seconds)
    (27/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.395296282 seconds)
    (28/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.661587516 seconds)
    (29/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.314852614 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 6.383738994 seconds)
    (31/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.492062682 seconds)
    (32/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.861726056 seconds)
    (33/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.350390709 seconds)
    (34/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.29738483 seconds)
    (35/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.859206225 seconds)
    (36/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.431362359 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.474814767 seconds)
    (38/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.204055759 seconds)
    (39/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.731730613 seconds)
    (40/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.34865198 seconds)
    (41/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.218125223 seconds)
    (42/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.412226248 seconds)
    (43/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.368874303 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.775508351 seconds)
    (45/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.362642778 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.020717127 seconds)
    (47/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.45427208 seconds)
    (48/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.349047353 seconds)
    (49/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.369065077 seconds)
    (50/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.34912295 seconds)
    (51/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.927669307 seconds)
    (52/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.366184784 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.481623829 seconds)
    (54/286) benchmarking ("sort", BigInt, false)...
    done (took 6.373278164 seconds)
    (55/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.447077339 seconds)
    (56/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.474401999 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.64860477 seconds)
    (58/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.35323246 seconds)
    (59/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.369850818 seconds)
    (60/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.495114964 seconds)
    (61/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.486459785 seconds)
    (62/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.394464033 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.42727812 seconds)
    (64/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.353521354 seconds)
    (65/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.515711216 seconds)
    (66/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.372499065 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.236186365 seconds)
    (68/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.358072887 seconds)
    (69/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.622419441 seconds)
    (70/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.684748492 seconds)
    (71/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.415773532 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.288805414 seconds)
    (73/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.378936223 seconds)
    (74/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.360308882 seconds)
    (75/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.380077309 seconds)
    (76/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.397674275 seconds)
    (77/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.556063329 seconds)
    (78/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.236579971 seconds)
    (79/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.489318766 seconds)
    (80/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.388149272 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 5.56227419 seconds)
    (82/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.083776021 seconds)
    (83/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.368243887 seconds)
    (84/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.476858051 seconds)
    (85/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.82251512 seconds)
    (86/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.475074957 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.782341169 seconds)
    (88/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.401748647 seconds)
    (89/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.848437494 seconds)
    (90/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.486709305 seconds)
    (91/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.36142505 seconds)
    (92/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.188752179 seconds)
    (93/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.809610509 seconds)
    (94/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.125460146 seconds)
    (95/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.354739098 seconds)
    (96/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.433999684 seconds)
    (97/286) benchmarking ("sort", BigInt, true)...
    done (took 6.374256074 seconds)
    (98/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.752163184 seconds)
    (99/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.363977666 seconds)
    (100/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.891311891 seconds)
    (101/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.351803789 seconds)
    (102/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.84946505 seconds)
    (103/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.386453107 seconds)
    (104/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.351621449 seconds)
    (105/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.388587839 seconds)
    (106/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.356923288 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.801773442 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.609241021 seconds)
    (109/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.742920759 seconds)
    (110/286) benchmarking ("sort", Float64, false)...
    done (took 5.715493954 seconds)
    (111/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.822129677 seconds)
    (112/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.352891513 seconds)
    (113/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.382156717 seconds)
    (114/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.359038826 seconds)
    (115/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.37542592 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.892515867 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.413196988 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.654007529 seconds)
    (119/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.983707427 seconds)
    (120/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.572853526 seconds)
    (121/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.984221608 seconds)
    (122/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.354729121 seconds)
    (123/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.407555294 seconds)
    (124/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.191606953 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.14090157 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.637292184 seconds)
    (127/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.006546405 seconds)
    (128/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.421279111 seconds)
    (129/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.389949954 seconds)
    (130/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.458509529 seconds)
    (131/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.395521095 seconds)
    (132/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.522706588 seconds)
    (133/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.574439232 seconds)
    (134/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.356545112 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.480422957 seconds)
    (136/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.243389762 seconds)
    (137/286) benchmarking ("sort", Float32, false)...
    done (took 5.3912202 seconds)
    (138/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.425444682 seconds)
    (139/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.439647434 seconds)
    (140/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.463904837 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.144977453 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.065085578 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.404000669 seconds)
    (144/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.358582329 seconds)
    (145/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.179456881 seconds)
    (146/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.170197045 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.586977969 seconds)
    (148/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.368617174 seconds)
    (149/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.35349113 seconds)
    (150/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.723685143 seconds)
    (151/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.375575197 seconds)
    (152/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.744559588 seconds)
    (153/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.184767827 seconds)
    (154/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.558897896 seconds)
    (155/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.491400617 seconds)
    (156/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.402800098 seconds)
    (157/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.894707985 seconds)
    (158/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.382411173 seconds)
    (159/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.592603427 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.235638106 seconds)
    (161/286) benchmarking ("sort", Float64, true)...
    done (took 6.381788593 seconds)
    (162/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.377172895 seconds)
    (163/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.384199803 seconds)
    (164/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.139079926 seconds)
    (165/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.357664382 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.005906572 seconds)
    (167/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.627324742 seconds)
    (168/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.36957778 seconds)
    (169/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.472435541 seconds)
    (170/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.499766323 seconds)
    (171/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.380280114 seconds)
    (172/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.484407486 seconds)
    (173/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.345044414 seconds)
    (174/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.98513394 seconds)
    (175/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.150616372 seconds)
    (176/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.366093319 seconds)
    (177/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.159742187 seconds)
    (178/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.35685389 seconds)
    (179/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.395383017 seconds)
    (180/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.409856953 seconds)
    (181/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.197085405 seconds)
    (182/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.412416841 seconds)
    (183/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.769655969 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.779928563 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.435718949 seconds)
    (186/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.404475071 seconds)
    (187/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.463309707 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.010051161 seconds)
    (189/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.357978046 seconds)
    (190/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.966571761 seconds)
    (191/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.223701681 seconds)
    (192/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.425294738 seconds)
    (193/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.462980095 seconds)
    (194/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.488876947 seconds)
    (195/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.382474983 seconds)
    (196/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.382903416 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.308676096 seconds)
    (198/286) benchmarking ("sort", Bool, true)...
    done (took 5.509729639 seconds)
    (199/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.44895877 seconds)
    (200/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.598115711 seconds)
    (201/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.819892726 seconds)
    (202/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.361792243 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.731570788 seconds)
    (204/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.635442016 seconds)
    (205/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.402476806 seconds)
    (206/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.137917663 seconds)
    (207/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.358345208 seconds)
    (208/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.453822378 seconds)
    (209/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.700805024 seconds)
    (210/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.442475207 seconds)
    (211/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.023654914 seconds)
    (212/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.580789132 seconds)
    (213/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.363903524 seconds)
    (214/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.606469274 seconds)
    (215/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.382242763 seconds)
    (216/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.477742304 seconds)
    (217/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.210131395 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.961468886 seconds)
    (219/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.370741405 seconds)
    (220/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.360766479 seconds)
    (221/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.425335373 seconds)
    (222/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.40966696 seconds)
    (223/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.407128761 seconds)
    (224/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.443287972 seconds)
    (225/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.743005314 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.31298588 seconds)
    (227/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.424162912 seconds)
    (228/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.99832058 seconds)
    (229/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.357083847 seconds)
    (230/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.696139079 seconds)
    (231/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.374256575 seconds)
    (232/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.408513728 seconds)
    (233/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.408133868 seconds)
    (234/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.385846911 seconds)
    (235/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.361929217 seconds)
    (236/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.465553227 seconds)
    (237/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.958980371 seconds)
    (238/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.544258998 seconds)
    (239/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.096874724 seconds)
    (240/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.400928786 seconds)
    (241/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.386132047 seconds)
    (242/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.542026007 seconds)
    (243/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.630893478 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.596711653 seconds)
    (245/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.139455365 seconds)
    (246/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.414299063 seconds)
    (247/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.150926735 seconds)
    (248/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.00369087 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.413730862 seconds)
    (250/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.469252592 seconds)
    (251/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.48129112 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.76919307 seconds)
    (253/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.396500002 seconds)
    (254/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.68421035 seconds)
    (255/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.492543747 seconds)
    (256/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.363957914 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.081036028 seconds)
    (258/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.36159577 seconds)
    (259/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.410128877 seconds)
    (260/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.755280188 seconds)
    (261/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.034706922 seconds)
    (262/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.470443039 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.468000193 seconds)
    (264/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.773523569 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.47089645 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.504479326 seconds)
    (267/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.487238294 seconds)
    (268/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.493877345 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.199915659 seconds)
    (270/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.838254807 seconds)
    (271/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.426732528 seconds)
    (272/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.593412555 seconds)
    (273/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.364091633 seconds)
    (274/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.463768548 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.430108943 seconds)
    (276/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.998102945 seconds)
    (277/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.370191087 seconds)
    (278/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.166496059 seconds)
    (279/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.436980304 seconds)
    (280/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.202201662 seconds)
    (281/286) benchmarking ("sort", Int8, true)...
    done (took 6.400621022 seconds)
    (282/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.750724575 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.405530072 seconds)
    (284/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.736491887 seconds)
    (285/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.36857867 seconds)
    (286/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.858131155 seconds)
  done (took 951.985722424 seconds)
done (took 953.264646481 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.421793302 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.417566441 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.398616689 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.421021534 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.510717048 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.423660477 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.410665865 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.400129518 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.44504218 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.448905296 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.397985278 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.421183907 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.400123489 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.399915134 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.396115436 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.414971405 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.436102095 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.394340581 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.417847994 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.409714459 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.416294319 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.397661296 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.447825921 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.420309731 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.399749348 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.404188977 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.403551034 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.420304961 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.510827246 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.404062706 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.403415202 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.411723584 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.433351096 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.392709446 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.394987637 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.420305725 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.411137506 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.409826109 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.404312726 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.42987421 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.84179151 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.410794167 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.401614965 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.399417197 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.400217105 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.405332082 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.401897468 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.404891619 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.416538117 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.416682383 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.82882887 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.426329383 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.405350031 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.4019295 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.410415266 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.401057561 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.40522765 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.419391951 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.423137416 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.419783032 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.425970364 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.400755912 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.402626679 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.419217478 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.408824203 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.869809466 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.406532783 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.40756416 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.848175008 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.417316536 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.87101197 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.422872462 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.40523366 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.416348137 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.434641233 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.441246995 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.392721637 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.403807201 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.411338512 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.402095654 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.412944233 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.418112966 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.406563246 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.404312888 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.419698888 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.427784794 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.412388545 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.403835223 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.410184428 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.425313163 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.410629667 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.413941515 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.404220717 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.400527249 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.411203916 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.404924916 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.406771865 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.409466449 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.410814622 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.415340568 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.846842538 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.434277175 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.402398429 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.401987352 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.405031528 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.41858705 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.848246314 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.415374412 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.426299057 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.453663589 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.405238568 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.433084999 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.404544702 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.42454399 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.418335867 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.409470533 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.400788634 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.434550461 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.83835127 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.431444212 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.406830699 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.406140997 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.423230891 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.406306335 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.401977643 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.447724364 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.403477327 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.423113729 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.524364578 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.416907877 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.438690769 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.405013844 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.409390296 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.42883747 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.422826116 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.437206754 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.410407042 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.426841076 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.422984036 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.405061693 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.41713681 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.417368447 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.409278557 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.413180524 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.400943732 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.429117821 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.423031076 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.418982196 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.427197165 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.529224532 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.405544623 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.435443647 seconds)
done (took 236.150622656 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.463981514 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.39801499 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.485945386 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.402164075 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.504613123 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.499477942 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.402051729 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.402283838 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.399898465 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.779373454 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.40353102 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.401655758 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.404327805 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.40167362 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.486033709 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.406300968 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.404650092 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.739676113 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.407351171 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.473611447 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.40253754 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.402925605 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.405823901 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.787504173 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.400610884 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.401978919 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.476490074 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.406697859 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.749967827 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.404025023 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.403481096 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.753215846 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.496958708 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.423918627 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.417294764 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.415479698 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.508152483 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.420123285 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.488201797 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.486969596 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.490886832 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.444406188 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.399581929 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.403012478 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.405325164 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.407415593 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.404107714 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.43461781 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.396943429 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.406616238 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.743411796 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.415595963 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.406686207 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.407193968 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.404533731 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.434034798 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.402418583 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.407798487 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.494282424 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.40661847 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.466181133 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.78617108 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.78026097 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.408227112 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.410025932 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.404032054 seconds)
  done (took 153.194483894 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.473271256 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.481123945 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.521340891 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.421062797 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.457059563 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.524534772 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.422243629 seconds)
  done (took 11.608104987 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.414281895 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.40917663 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.458336209 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.456265402 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.406916772 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.554827209 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.408823263 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.423637923 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.40890013 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.463287039 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.411239776 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.409095312 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.41581767 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.404053217 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.457728481 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.420298749 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.525949553 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.40956467 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.409006451 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.559869602 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.410830886 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.419019887 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.462971045 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.418197848 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.413610551 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.413767549 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.976102242 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.409419963 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.40759671 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.412299666 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.409221541 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.449895143 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.411173519 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.412578434 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.408710558 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.525708083 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.414284153 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.409041585 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.411201006 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.407956702 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.409880363 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.410687853 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.412083838 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.409466964 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.409283615 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.433197267 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.41262252 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.410585126 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.413247516 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.409704766 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.462552309 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.410921361 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.408755363 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.411364769 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.466213644 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.417826662 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.414489612 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.408576187 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.413741651 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.41034098 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.563931258 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.45765384 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.411758001 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.459012015 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.411302788 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.413417269 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.413681603 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.412882065 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.466979256 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.413792939 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.460657683 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.412626921 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.569485993 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.435540779 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.416120861 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.416551045 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.417925507 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.413244889 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.407457973 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.418443424 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.412052258 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.413664265 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.418870686 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.410341096 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.411650287 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.517317781 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.521875266 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.412494609 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.426878464 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.423004794 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.410849691 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.465777805 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.414142805 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.410402843 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.465393481 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.526047626 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.467448913 seconds)
  done (took 160.818378375 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.416941769 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.421343841 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.414032443 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.429292315 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.414314019 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.410543437 seconds)
  done (took 9.820660767 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.416341998 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.416427445 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.414067655 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.415530574 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.414084482 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.414865381 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.413328333 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.416588185 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.418438415 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.414267641 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.416869426 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.41352157 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.416943894 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.416492943 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.416459091 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.415813058 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.415618161 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.414371063 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.418160312 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.41876634 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.509008885 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.415585571 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.416042324 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.417605003 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.420318745 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.415954945 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.425224354 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.416449539 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.416695891 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.425732054 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.433614233 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.418007295 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.41576428 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.42556953 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.42167622 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.418826724 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.420631373 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.41995741 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.416872091 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.419697443 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.415709047 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.419851751 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.41637246 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.421348642 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.41907247 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.423135231 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.421121799 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.427339299 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.422772115 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.422121587 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.42032271 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.420039121 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.416774769 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.417029654 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.422641529 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.436814859 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.421894944 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.42090448 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.418248007 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.418334174 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.421504502 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.418645424 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.417930373 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.419489207 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.425261166 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.421018977 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.421782322 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.422230448 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.419185789 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.421249956 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.421923765 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.418470017 seconds)
  done (took 104.594407282 seconds)
done (took 441.341692258 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.828562313 seconds)
  done (took 8.144607504 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.449324664 seconds)
  done (took 7.769385038 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.186354117 seconds)
  done (took 22.511181035 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.461098545 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.502370288 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.417032339 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.425441968 seconds)
  done (took 27.129080247 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.839236486 seconds)
  done (took 8.161721095 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.412262586 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.426968345 seconds)
  done (took 14.158682569 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.553527211 seconds)
  done (took 7.875418193 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.152015753 seconds)
  done (took 8.476145642 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.423406446 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.431886322 seconds)
  done (took 14.447800988 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.408561488 seconds)
  done (took 7.728581312 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.34743673 seconds)
  done (took 8.66991945 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.428484362 seconds)
  done (took 7.751857499 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.474976976 seconds)
  done (took 7.796103096 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.571340493 seconds)
  done (took 9.8895094 seconds)
done (took 161.828298233 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.413629473 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.417172274 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.419286897 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.416769519 seconds)
  done (took 26.988065734 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.454386384 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.453906128 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.456310762 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.468721678 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.458662976 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.453623549 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.447242344 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.44702634 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.465358151 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.460439099 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.457027559 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.455925772 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.453553017 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.447918868 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.458195426 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.456710101 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.466656336 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.455999069 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.448395634 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.458191244 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.42308044 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.465111304 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.458289572 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.423453874 seconds)
  done (took 36.21686038 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.94312914 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.493461944 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.575546165 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.475605438 seconds)
  done (took 7.809216733 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.473001302 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.479298206 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.49016796 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.52799814 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.553420575 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.487772949 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.450810293 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.445610586 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.431022738 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.478919569 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.554569317 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.493732521 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.558300712 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.423589466 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.608166669 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.425028812 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.428672456 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.477423407 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.527900269 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.551843138 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.427498598 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.476487204 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.481978184 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.495892423 seconds)
  done (took 37.072266278 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.427907395 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.440893686 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.425027763 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.425848471 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.434118096 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.428315664 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.427338069 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.428134098 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.425092664 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.432825532 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.424560615 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.436451175 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.428237755 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.425291745 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.432690211 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.427543701 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.433790746 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.424467867 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.427396467 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.434597248 seconds)
  done (took 29.913075669 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.419425727 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.270518312 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.770149267 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.674433937 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.42156738 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.420723514 seconds)
  done (took 28.301035508 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.497967945 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.647811826 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.422872339 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.78847118 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.887820322 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.445798697 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.426669994 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.669542826 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.990258365 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.987510016 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.484711822 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.495521878 seconds)
  done (took 21.06920684 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.435287967 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.423411538 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.430498454 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.438474372 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.483603461 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.44377849 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.435411053 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.42280663 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.484772655 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.504244892 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.450707481 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.48637077 seconds)
  done (took 38.767653069 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510572395 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.470552168 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.349863972 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435894632 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.133539852 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630336674 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.455336215 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.887407663 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.429536084 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699480684 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42544284 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510278335 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.680144381 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43301608 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.426024065 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.431061731 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661944456 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934794402 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420303856 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.561692162 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449601373 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.434855595 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.586578471 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.4567573 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.638085904 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.567297161 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.686369064 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.203436127 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.727437687 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.437411815 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436014239 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427377474 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699522669 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093023691 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533635964 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437525098 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440093739 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.974438795 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.416395751 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.503989526 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429288179 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.447401912 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438368177 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427416085 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.356583728 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.426914228 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905154952 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.428439756 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.139193342 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.428670554 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435693636 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522587915 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.431800101 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.998310873 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.525455543 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.427780768 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.425373236 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51987666 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013126889 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.005515514 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428592252 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.363946098 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.43230365 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.56319765 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088892619 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.546036266 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.432662459 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.43215949 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364197288 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.545429304 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445373902 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.576593375 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.443784356 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.078578601 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182062778 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.461280756 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.358443664 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997570347 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439150231 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.359706738 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652187054 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.201103818 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363289011 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.375002305 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.363858025 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152065655 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43011488 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.850953038 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44166615 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.915180872 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.436566806 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448390672 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453661867 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.652894455 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.307735021 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432028934 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.424904118 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.571626698 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445667473 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.901719464 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362413494 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.427534659 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686378839 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.638742248 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442122987 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.435857945 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6719562 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431312053 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.44429081 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.444112542 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.44246273 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.025449939 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.457827352 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.008827482 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449026218 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.206824388 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185112659 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437694096 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.52929978 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.43706029 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681679242 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.205853101 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.323986145 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498731654 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430668505 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.430161177 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.577261027 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.456100814 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.332415166 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.427008541 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433971539 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.441902347 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.431212317 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375907194 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.436412831 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43122407 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.20895733 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.655830934 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.444508947 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70491737 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364473255 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.578315899 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.439191216 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.649601161 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.661819274 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.442690326 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.69189184 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443434162 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.447489151 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.442886892 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450404103 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533502107 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454034343 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.440805164 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.692218022 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.432817088 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.435396102 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.623784595 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.209436023 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434346723 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.43881521 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431686591 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042497041 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427806829 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.434893948 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.322188613 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.44607518 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501597168 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.439510613 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.444097386 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.286496348 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453016515 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.43940818 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.432051271 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655607578 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.442813176 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.512220753 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.512778334 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.656557731 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039930322 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462440264 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.36954312 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.146888537 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.128207906 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435929218 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.620208826 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.433646604 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443522241 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.44517842 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.443151987 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.036696879 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452585987 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.512142482 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.440519613 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.444386251 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.43763386 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434493677 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.270993032 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.037774022 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.437421171 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.444554492 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576571511 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.447138057 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.366457945 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.949930969 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.438737057 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.431536283 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.210827148 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467805182 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.514464694 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933184518 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689585585 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433443557 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.44666819 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.630188541 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.467741443 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.437738489 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441337639 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438845682 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.452318634 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457052446 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.446365716 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.602322268 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.79979616 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058280554 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218762114 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022328325 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396352165 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.435835979 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.333721398 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.908923043 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369892383 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.096812558 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631512579 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.927026249 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379206782 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655824288 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.678745905 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227655522 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.443907037 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662387785 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385384594 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.438994988 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.466847805 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.647373841 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468575519 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.438362012 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.387661834 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.714395486 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.715056977 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.439836195 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515129214 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912472405 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436268217 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.216094301 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.477720564 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.778028003 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631436194 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.983200118 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.827559421 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.434987664 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.43960398 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934376775 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.442265225 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.960912114 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094349639 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.469256273 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.658973434 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373619362 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.450307181 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.448673529 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.436137637 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.782110615 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.452523454 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.692727271 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.449167578 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374041031 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.446265088 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996989295 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.326421105 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.44740814 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438931914 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19967302 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43706054 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.743124507 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.447994485 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.258547141 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.457008809 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.375212657 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374751448 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.132186333 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.442042919 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417384338 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958140993 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.440203651 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440443348 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.461306913 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287986077 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.694406849 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.454337705 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.052643478 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681611999 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.451754282 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463126371 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.541223086 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.44978571 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.423627811 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.342996467 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.676126599 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.52723091 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.659612499 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.378341968 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.335443638 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.49445904 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.665992748 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.337578751 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.444586345 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.704598701 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.169354565 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.451669976 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20918425 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485004338 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.451153493 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.453861737 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.443610743 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462974547 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530906639 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.453378378 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.451681561 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.453959829 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.62330705 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452804028 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.444772439 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.454819571 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536631654 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.052876241 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.271206875 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.216398763 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061875505 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255691105 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.069330946 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473361828 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.443266025 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441981751 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.378373297 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590654356 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.969135742 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714830492 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.574406548 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.455893401 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465824898 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447025307 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.443352956 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656147606 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.717434678 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.414184727 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444675405 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.231060154 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.32504597 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.454424451 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.654103647 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975434849 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035249271 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.561274106 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.455703899 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.918851256 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716174622 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.534748064 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445693126 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.034223226 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.453546613 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.798563434 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.461974754 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460262834 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59425291 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.45218565 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115517778 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.468442398 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.603724782 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.218865125 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.636956531 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.70210238 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.95832943 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.457126526 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064084982 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.201870209 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.708032249 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514748384 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.456819094 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.559782928 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597130873 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.443583545 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.327103959 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.446171792 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290197101 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.157143068 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.454294713 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056907913 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.72667127 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.442020847 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.443966913 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469617831 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.456233271 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.670951916 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17023752 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.666979687 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.456959023 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.449982844 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.43715523 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059081865 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477640316 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380349296 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.445896439 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.710825291 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.700417905 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47035028 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.900301083 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.158149018 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024800684 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.415095755 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469935346 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.460559418 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.182511226 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065816029 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.304042665 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983741089 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.10596811 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450388932 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.722240542 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.453833625 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.458475438 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.723190054 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.454197866 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.449481922 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.459976911 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.06867567 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254449739 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.451986035 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.657684339 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.389099358 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.67547435 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.512610696 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.38125501 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445065506 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.637984703 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.450800775 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.580287444 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458020841 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.462483159 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464668287 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.206890639 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.734968108 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.451402268 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.439716413 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.438746996 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.451992838 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544413679 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.728396948 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45412543 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.124743475 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.798290876 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.706722943 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.455257039 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.430139617 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.456318213 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451700691 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.168785585 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.459053164 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.454294825 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044254617 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.459956544 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.462431203 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.456016406 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.66766914 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663410195 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.451198205 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.464765941 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452127528 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.482653152 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.358835279 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.218899524 seconds)
  done (took 1694.88118751 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.480597106 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.49901502 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.493331234 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.472513803 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.489272411 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.584869723 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.495004577 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.52204621 seconds)
  done (took 53.391192469 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.461443708 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.607294434 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.486118041 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.463938919 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.462647836 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.461885851 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.927613707 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.470974839 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.45979663 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.463139549 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.459984493 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.454109774 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.137826185 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.461052682 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.455862941 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.439928764 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.46332662 seconds)
  done (took 67.501703166 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.460330129 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.542180688 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.564385447 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.455909221 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.635709013 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.468274204 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.490579678 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.493645304 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.449945468 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.528331433 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.120097626 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.496318524 seconds)
  done (took 81.064300234 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.471404368 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.471826506 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.472027484 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.472463287 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.471596615 seconds)
  done (took 8.718200829 seconds)
done (took 2133.018647407 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.460990262 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.182765276 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.099663242 seconds)
  done (took 5.640447549 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.602382126 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.651024296 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.769977796 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.776150246 seconds)
  done (took 8.153798574 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.736519985 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.846945653 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.646393176 seconds)
  done (took 6.585394651 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.742477428 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.461551719 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.458516106 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.456359151 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.458224784 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.457108816 seconds)
  done (took 20.727357106 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.461423974 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.463499093 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.460804741 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.462771063 seconds)
  done (took 7.205751373 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.435504722 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.155179432 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.43614615 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.45210544 seconds)
  done (took 18.836359877 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.209085338 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.219099002 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.204355239 seconds)
  done (took 7.991001445 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.485929332 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.481975554 seconds)
  done (took 4.323813315 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.757794734 seconds)
  done (took 3.115421077 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.473585657 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.514864542 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.561332393 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.483338116 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.860102502 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.960996955 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.132220821 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.709399428 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.454364218 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.719190518 seconds)
  done (took 32.227757131 seconds)
done (took 132.289059694 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.345945651 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.459060669 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.666103597 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.312460429 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.68064072 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.657487084 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.668231188 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.284942047 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.914231159 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.816047189 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.314647066 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.68165703 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.616627858 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.464944202 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.61924022 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.46301385 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.68304111 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.399671369 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.004069232 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.19729624 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.665797679 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.958762914 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.147536062 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.976349705 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.682175194 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.615577451 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.547655527 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.459521897 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.175240758 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.576945117 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.613936734 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.377484719 seconds)
  done (took 194.404141671 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.468444872 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.469778089 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.456008738 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.453938013 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.454696395 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.472280029 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.45364554 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.455929132 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.471986437 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.454332881 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.454306721 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.456125356 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.458479544 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.47512068 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.454478672 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.455820548 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.455206058 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.47074601 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.467238141 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.457276525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.458224962 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.464121123 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.465148664 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.457635223 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.457256969 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.471658761 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.460897555 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.457178873 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.457686502 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.48918085 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.457416433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.456349992 seconds)
  done (took 208.131474081 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.46130231 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.473322155 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.458123905 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.457903094 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.468064868 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.460256655 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.460919565 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.466040263 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.464636411 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.456469943 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.45799547 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.463943716 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.457861227 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.459990055 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.4707781 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.456607186 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.459682491 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.472284351 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.459164915 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.459874689 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.475893851 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.460375223 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.475024999 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.460411431 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.458602163 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.461104867 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.459849002 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.462939781 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.459842209 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.461936853 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.459395234 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.474132886 seconds)
  done (took 208.179985835 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.660463532 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.469542544 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.472483528 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.403265338 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.472596368 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.47249064 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.466254595 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.668982871 seconds)
  done (took 15.452652337 seconds)
done (took 627.527622258 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.821461872 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.520852959 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.668896971 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.492511245 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.310599672 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.510295256 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.489776066 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.667108446 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.426462479 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.673735427 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.795312242 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.504233809 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.945885919 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.489697935 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.75695384 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.591836047 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.368734198 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.492609459 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.81226544 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.063160954 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.755171586 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.958721479 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.683543692 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.420413578 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.95474528 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.955687465 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.224796997 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.361100856 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.506345919 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.826225372 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.165917298 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.491374981 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.556372398 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.552669018 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.610284301 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.58930916 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.467203737 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.549974557 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.694546975 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.751908229 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.094208319 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.238589489 seconds)
  done (took 98.177246031 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.457862445 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.458442716 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.456489263 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.458186402 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.457812603 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.454938285 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.456916554 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.455695239 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.455838126 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.457705081 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.458015662 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.45727318 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.456646132 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.458856686 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.456260882 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.458875856 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.457257555 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.459034116 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.456684511 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.458549968 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.458978334 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.458281412 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.459056205 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.456000914 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.458592146 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.457910357 seconds)
  done (took 39.263650533 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.476360487 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.728514374 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.896926208 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.481089564 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.475050905 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.480417877 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.554385249 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.477905264 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.478916201 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.477280991 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.630198708 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.480275029 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.509374117 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.923679072 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.479847485 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.474590866 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.477578677 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.477712862 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.737028084 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.486718548 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.572354131 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.479934287 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.556959441 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.4861439 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.496279414 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.475554841 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.47995444 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.048743304 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.495123113 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.637126289 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.301837106 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.554561483 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.025039763 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.923131303 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.306941836 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.480530275 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.477510236 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.643614029 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.48046559 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.478475499 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.558211094 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.478225624 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.904703852 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.156245737 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.497447088 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.478186623 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.071594605 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.658545664 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.731309208 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.488892951 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.928539135 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.482235619 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.479859244 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.481856091 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.730012548 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.485624669 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.478314185 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.091058439 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.504974949 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.558024841 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.481460075 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.479648222 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.744189968 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.480638793 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.737507508 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.481451163 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.4860123 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.498329589 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.912143246 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.486832104 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.175754171 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.498716362 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.482278715 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.642469532 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.741443991 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.10739138 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.498811189 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.75025638 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.042086011 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.573872954 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.486819001 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.039808525 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.577119775 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.483802665 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.481996199 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.484037819 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.479878331 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.533396926 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.558672322 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.116154895 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.181170739 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.111603738 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.578922606 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.497182736 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.483187656 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.087498348 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.498148582 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.48446166 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.901754279 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.178599787 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.501090994 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.488674861 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.178836881 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.504076214 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.562410911 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.490986122 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.916436414 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.484940823 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.532710942 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.483255145 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.487683358 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.504008707 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.562046199 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.486854097 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.485142801 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.150355894 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.661600728 seconds)
  done (took 194.246622356 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.492959229 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.472229053 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.486257156 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.473828468 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.47785535 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.488203574 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.476179936 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.475743774 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.484588378 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.475246881 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.478782165 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.48106461 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.480858888 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.498900885 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.487450124 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.485106975 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.089955539 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.476280546 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.479777503 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.474510259 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.280557469 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.479802363 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.47732347 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.475740605 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.479102501 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.479098435 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.485578662 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.476971447 seconds)
  done (took 156.249846903 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.488193636 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.073220498 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.50518139 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.621454083 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.507451325 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.485468746 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.619185469 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.546519912 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.503747733 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.484669941 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.484535863 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.794678673 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.486383867 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.024214626 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.682978409 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.639382089 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.024384217 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.504348554 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.485126261 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.484830341 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.622983754 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.492547624 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.803551655 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.075585419 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.505649233 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.074979953 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.472008177 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.487989592 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.485282362 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.076856072 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.501851659 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.804040666 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.567356241 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.55132649 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.092960484 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.042700411 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.041854176 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.639756659 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.487182471 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.485714154 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.485947477 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.471887811 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.077417217 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.50644864 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.490693638 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.067724256 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.507019509 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.490507217 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.49469089 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.486159156 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.550365015 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.566762047 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.823042818 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.086058524 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.585275056 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.502886771 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.624162867 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.890992934 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.492882451 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.027568478 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.474431195 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.075329643 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.505060091 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.474419272 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.488896036 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.49504094 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.641852378 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.625937838 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.028894957 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.506294752 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.025630771 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.659360902 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.489712913 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.489026331 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.490755941 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.082382395 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.04558094 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.657413895 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.631092493 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.689874856 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.475764001 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.490442989 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.475517027 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.568898289 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.490835047 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.087294039 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.04336236 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.508231378 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.492394717 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.492999172 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.49236651 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.670014419 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.099356523 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.584146915 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.018373471 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.827155469 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.813406549 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.494943123 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.552324761 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.506963662 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.81348619 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.493004715 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.550714989 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.963322264 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.81039112 seconds)
  done (took 176.760749086 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.743064711 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.70461392 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.579762014 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.641240552 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.111838482 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.060225256 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.800312675 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.62841516 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.604590356 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.755960367 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.65974277 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.578225735 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.710386051 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.58433842 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.238315072 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.573628159 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.603441699 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.63963514 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.654032969 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.541716182 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.173837901 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.783454846 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.691666887 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.35236145 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.58368905 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.279530711 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.059348384 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.024889498 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.673791199 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.834175289 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.042300751 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.629612474 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.49165101 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.214709498 seconds)
  done (took 70.634035799 seconds)
done (took 736.698797035 seconds)
SAVING RESULT...
DONE!
