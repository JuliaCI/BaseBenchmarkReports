cset: moving following pidspec: 25014
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.0395014 seconds)
loading group "string"... done (took 0.609674472 seconds)
loading group "linalg"... done (took 9.699393652 seconds)
loading group "parallel"... done (took 0.184288905 seconds)
loading group "find"... done (took 1.553083362 seconds)
loading group "tuple"... done (took 2.215635465 seconds)
loading group "dates"... done (took 1.526347001 seconds)
loading group "micro"... done (took 0.24288566 seconds)
loading group "io"... done (took 0.604606586 seconds)
loading group "scalar"... done (took 48.169039748 seconds)
loading group "sparse"... done (took 14.987991535 seconds)
loading group "broadcast"... done (took 1.294113455 seconds)
loading group "union"... done (took 13.611228528 seconds)
loading group "simd"... done (took 2.893379231 seconds)
loading group "random"... done (took 11.333456809 seconds)
loading group "problem"... done (took 1833.891396122 seconds)
loading group "array"... done (took 27.523314604 seconds)
loading group "misc"... done (took 1.227569329 seconds)
loading group "sort"... done (took 3.983066543 seconds)
loading group "collection"... done (took 20.341579295 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/13) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 1.104536784 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.87620441 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.529564169 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.174551962 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.206489687 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.184751086 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.327140473 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.161685257 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.113044998 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.105154461 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.236399108 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.374671275 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.515366773 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.042193493 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.104216107 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.110609757 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.101187679 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.702347824 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079226488 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.133559605 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.608443963 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.117395223 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116481185 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.127136737 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.208428658 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135193147 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.172162296 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.09148866 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.68819673 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10126242 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.235661186 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082610342 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.181180692 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.257596444 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.08027826 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.108774339 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674302182 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.180726746 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.116566484 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100635655 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682685848 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081723776 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.243116947 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106191662 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.113872628 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186588015 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.102927155 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.097378704 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.102967806 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083240222 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.17422442 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.492063747 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105178979 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.170233969 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.114494962 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.697065358 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095929175 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155354645 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.140365812 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107738692 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.079683648 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.110090332 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.15798765 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.109509756 seconds)
  done (took 20.895173929 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.183362518 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.170560376 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095905965 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.161272882 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.145634494 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081248134 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099735286 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077764871 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.13089609 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.241451845 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144121634 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.190779229 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075431057 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.160993702 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.144435674 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.254743817 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123804531 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12391592 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.084592587 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10771573 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.145553898 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112690529 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095906471 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.113917914 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172699771 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219476406 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109744322 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122977169 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100634069 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.119206473 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140462412 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.151461936 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093187622 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086388414 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.208303946 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106119968 seconds)
  done (took 5.562045579 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.231309309 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119446425 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.244729841 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.183675462 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.152931337 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.185530457 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.147695582 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.309832041 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.2372833 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.186977061 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131431462 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11113868 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078693702 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096640133 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.153646362 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095901103 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.731906522 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.182140007 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.198524522 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.153058589 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102795114 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082209506 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.385380245 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102055285 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079999317 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104085432 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.092142465 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.210071361 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104266477 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.360791061 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.117506311 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106031615 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128226165 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196757302 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.137154299 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141852826 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085083612 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098994647 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.22340601 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.097122137 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108216273 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.15811236 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075825302 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.129403105 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133678226 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131766091 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09646738 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110083828 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.228130977 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09751263 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118930151 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.130461111 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.215238649 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.137875886 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.08122469 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.371732259 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114610434 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102762344 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081574019 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.31871469 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.140727593 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082134714 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09498656 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085021413 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096103639 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.445702881 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.093239673 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.971098538 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.095509358 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.16174639 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098669832 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103483723 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100728707 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083042013 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116288449 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.093477972 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076756555 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096226767 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077386343 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.1017728 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.120613582 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082068421 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.0929493 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156622472 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083508599 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117911862 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.112563954 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121992688 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082985841 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094499239 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125374386 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079309919 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098245021 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.170610725 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103758586 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.121425968 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085506388 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142917141 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097350208 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.213367378 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095886056 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122882523 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100243194 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112226661 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.12393982 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097541388 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100699759 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077483675 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097693979 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145692582 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.09596518 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078498079 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10127193 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112495969 seconds)
  done (took 24.619963267 seconds)
done (took 51.736070327 seconds)
(2/13) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.381391513 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200407691 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.123451185 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.192288306 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.107146323 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.217837284 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183564925 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.120426839 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.215581523 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.102002526 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.189479245 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102140567 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107138626 seconds)
  done (took 2.972320128 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.157157023 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109683546 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102920225 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097241391 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096655024 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114325315 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09764705 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.147223359 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095084614 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10804016 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095333637 seconds)
  done (took 1.914350832 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096461615 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119877556 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084903655 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113660492 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078316708 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112982873 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111093561 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107711578 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112431125 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090215907 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097709914 seconds)
  done (took 1.81964317 seconds)
done (took 7.403774147 seconds)
(3/13) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.242531291 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086087629 seconds)
  done (took 1.018672987 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.155387094 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156258722 seconds)
  done (took 1.009582527 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.117240369 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.102428467 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.14690983 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.121713654 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.102044978 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084367755 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.141021753 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.102168092 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084705957 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.103356504 seconds)
  done (took 1.804321255 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.090849399 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.106283967 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.158528289 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.151211906 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11677983 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.106344477 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090769201 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.106178686 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.091881858 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.103398354 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.111297763 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.130364194 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093043582 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.130774413 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107701049 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.111238192 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101028882 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.110357488 seconds)
  done (took 2.717306743 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.085330704 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.104099194 seconds)
  done (took 0.888798008 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092713914 seconds)
    (2/7) benchmarking "second"...
    done (took 0.10329505 seconds)
    (3/7) benchmarking "month"...
    done (took 0.089532307 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111904981 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.103217186 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.085337157 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.1027825 seconds)
  done (took 1.38565039 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.568852727 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.286270786 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.392253919 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.125582228 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.148575732 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.414423121 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.150835618 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.123208362 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.120524481 seconds)
  done (took 3.071054872 seconds)
done (took 12.59200754 seconds)
(4/13) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.17454094 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.16150361 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.139238412 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.16188113 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07422053 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.130277381 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.125655632 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.135066943 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.076608329 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093952963 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.077935453 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.099669576 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.1443981 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.092802955 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091582827 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.08285704 seconds)
  done (took 2.650191967 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.217240744 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.307425737 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099788985 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.101907227 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.085058061 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099096611 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.100310767 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08517152 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096696935 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.109519765 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.081438783 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097973855 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.109050465 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.082243403 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.096353938 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.081289025 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.110961224 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097867442 seconds)
  done (took 2.809762034 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106184266 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.13649255 seconds)
  done (took 0.946552227 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119000415 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.201324123 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279600676 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156802317 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.127972352 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.122667429 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158344159 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.115780818 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.191102614 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123210522 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122602558 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.086061869 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.12961613 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.109020299 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096450544 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.103216231 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.13475333 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.09423813 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111590075 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.105504999 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.124541107 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.087920375 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.109998433 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.111107725 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179192723 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.122242089 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.210308004 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.104058818 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.104247054 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095533608 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.110943315 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.122595394 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.120751735 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.171991446 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.110895363 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.182912709 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.095715661 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.103309408 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110183475 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.08754004 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.107381252 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.107388189 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.10352063 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.10252023 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104258252 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.095435094 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104896908 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103846694 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.095840567 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.114037515 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114632056 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.110583343 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.165817498 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11584291 seconds)
  done (took 7.398729357 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.870735326 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.13946421 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.082194582 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.995707224 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132199463 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11690547 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.878029451 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105582382 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.263356651 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.869797228 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116829183 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098282813 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.266194997 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.263158581 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.164190302 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.370479177 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.719044585 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115930709 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131745035 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154488757 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109782534 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133985866 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123101588 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.42931914 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.085537007 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099067275 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.105436115 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094006627 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180583093 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080397323 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104351454 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.20522639 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.267698628 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209032748 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099086851 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.080455887 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097731494 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168838452 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.294168852 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.226518339 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.170228205 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076446499 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096721147 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111341329 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119554509 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.078440498 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182601233 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.178746964 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.195865302 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08571728 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.113565293 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110628855 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.11380688 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.169889283 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098829438 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.355447659 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.357378334 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097373619 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092190165 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118880807 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275242551 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100300295 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237790997 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128150969 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220186851 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097482396 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793091634 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170022041 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098305836 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.091177507 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108445377 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104569936 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.110405298 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165512039 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.382363301 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115731551 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.085907064 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098168287 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.248260823 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081358706 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099190074 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16744556 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101840866 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107677763 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116185294 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097299557 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.194614609 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.25250504 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.115480809 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113107679 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10325056 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095455788 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101278957 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.216249989 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.246835072 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161534939 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234704614 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.095753847 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18884129 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169887465 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113869009 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193223097 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090338047 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119486542 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113011222 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226810453 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.140194087 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.099856086 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104118764 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.090697494 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.141847542 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101960069 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107017836 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.173090271 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483124635 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168440732 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.095487988 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084176736 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109775187 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182335389 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092001707 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275609779 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111042363 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192810981 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.090092665 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097322377 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109452681 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.170862216 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116575519 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110899763 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116148545 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095041675 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.277260667 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.237011328 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118825523 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248568026 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182246354 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.093370674 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.198664314 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11187073 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.177849049 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114393455 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115853604 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.08680683 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79642991 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114211969 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107723355 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104355563 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.191618369 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.082173598 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100644395 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080334316 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096030871 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819614778 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084194715 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100454687 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.097946025 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093225427 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109569135 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105739884 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.087307474 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182681769 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245950716 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114377176 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106915558 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081222512 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183044388 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.084318004 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099423764 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080508071 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.1010714 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111636759 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.086397278 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.100129302 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.179616601 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.180907472 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.232366272 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.55662839 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.097536635 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08161834 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240527459 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099486232 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.317934044 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108237583 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.238206711 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189162979 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078738848 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.348595187 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.191715773 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189500546 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102533531 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175863373 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095757513 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.090502677 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.182273097 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.079980834 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108394377 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.18032923 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099925307 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.115349186 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.169701365 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098970272 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232419209 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096633938 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172670389 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103620987 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112649604 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.318343092 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099254608 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103514807 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.184710659 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102947574 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081718889 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.706269644 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.098432637 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.095629846 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111765021 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234643361 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187965841 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107456113 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091772859 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116243423 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182732127 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.215100818 seconds)
  done (took 44.206118761 seconds)
done (took 58.712035745 seconds)
(5/13) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.318123856 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.250935792 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.350082664 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.196868133 seconds)
  done (took 1.982967781 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.153115837 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.079313733 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.098282235 seconds)
  done (took 1.048734849 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.515672229 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.408667292 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.35791042 seconds)
  done (took 2.005123254 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.254102345 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.253502357 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.339662552 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.463188838 seconds)
  done (took 2.165341594 seconds)
done (took 7.926333678 seconds)
(6/13) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.204918198 seconds)
    (2/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.156341447 seconds)
    (3/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.322195585 seconds)
    (4/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.088662356 seconds)
    (5/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.2496795 seconds)
    (6/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.165839343 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.151913378 seconds)
    (8/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.215769234 seconds)
    (9/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.260634532 seconds)
    (10/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.151490543 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.11106439 seconds)
    (12/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.170632558 seconds)
    (13/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.290230203 seconds)
    (14/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.179892761 seconds)
    (15/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.152448187 seconds)
    (16/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.178139773 seconds)
    (17/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.251232944 seconds)
    (18/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.1987809 seconds)
    (19/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.163205573 seconds)
    (20/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.15133131 seconds)
    (21/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.249351404 seconds)
    (22/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.08917893 seconds)
    (23/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.221022402 seconds)
    (24/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.074466367 seconds)
    (25/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.11619727 seconds)
    (26/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.137356393 seconds)
    (27/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.088315462 seconds)
    (28/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.212675693 seconds)
    (29/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.126081236 seconds)
    (30/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.197891438 seconds)
    (31/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.164574727 seconds)
    (32/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.143424297 seconds)
    (33/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.21125638 seconds)
    (34/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.196820664 seconds)
    (35/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.296733473 seconds)
    (36/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.182721408 seconds)
    (37/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.089939843 seconds)
    (38/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.190263003 seconds)
    (39/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.273149323 seconds)
    (40/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.26680873 seconds)
    (41/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.100403555 seconds)
    (42/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.130016396 seconds)
    (43/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.227071297 seconds)
    (44/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.26893943 seconds)
    (45/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.100465754 seconds)
    (46/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.095452704 seconds)
    (47/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.199725775 seconds)
    (48/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.204350948 seconds)
    (49/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.088942106 seconds)
    (50/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.198621386 seconds)
    (51/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.213937969 seconds)
    (52/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.159503437 seconds)
    (53/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.146050923 seconds)
    (54/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.154168756 seconds)
    (55/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.174624056 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.115169073 seconds)
    (57/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.174060922 seconds)
    (58/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.120361954 seconds)
    (59/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.175630533 seconds)
    (60/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094644539 seconds)
    (61/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.107216589 seconds)
    (62/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.119833517 seconds)
    (63/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.143497474 seconds)
    (64/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.131773021 seconds)
    (65/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.107700089 seconds)
    (66/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.071489885 seconds)
    (67/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090597578 seconds)
    (68/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.125015069 seconds)
    (69/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.175861082 seconds)
    (70/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.128691098 seconds)
    (71/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.08954894 seconds)
    (72/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.097828063 seconds)
    (73/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.112734853 seconds)
    (74/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104305328 seconds)
    (75/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.08775317 seconds)
    (76/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104000149 seconds)
    (77/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.151258856 seconds)
    (78/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.115789422 seconds)
    (79/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.089177494 seconds)
    (80/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.074562196 seconds)
    (81/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.089090442 seconds)
    (82/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.13642688 seconds)
    (83/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.175020302 seconds)
    (84/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.141463815 seconds)
    (85/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.093743875 seconds)
    (86/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.082375046 seconds)
    (87/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.092852463 seconds)
    (88/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.103991664 seconds)
    (89/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.113528334 seconds)
    (90/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.127056197 seconds)
    (91/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087166215 seconds)
    (92/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109163124 seconds)
    (93/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.0734621 seconds)
    (94/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.107609624 seconds)
    (95/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.073693663 seconds)
    (96/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.092960992 seconds)
    (97/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.091624271 seconds)
    (98/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.143319605 seconds)
    (99/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.108442358 seconds)
    (100/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.125073402 seconds)
    (101/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.089235189 seconds)
    (102/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.120053856 seconds)
    (103/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.071040994 seconds)
    (104/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.089938361 seconds)
    (105/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.073452116 seconds)
    (106/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.106818248 seconds)
    (107/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.098079215 seconds)
    (108/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.10905317 seconds)
    (109/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110280025 seconds)
    (110/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09363169 seconds)
    (111/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.092614745 seconds)
    (112/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.0734781 seconds)
    (113/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10847296 seconds)
    (114/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.086598087 seconds)
    (115/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.182587188 seconds)
    (116/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.081693417 seconds)
    (117/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11254171 seconds)
    (118/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.218765466 seconds)
    (119/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.09187411 seconds)
    (120/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.132420171 seconds)
    (121/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.176625185 seconds)
    (122/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.11698372 seconds)
    (123/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.19266823 seconds)
    (124/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.133661053 seconds)
    (125/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.118222538 seconds)
    (126/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.097190568 seconds)
    (127/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086634696 seconds)
    (128/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.150884401 seconds)
    (129/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.070568545 seconds)
    (130/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091483015 seconds)
    (131/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.175204405 seconds)
    (132/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.179087633 seconds)
    (133/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.125059696 seconds)
    (134/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.097409506 seconds)
    (135/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.070545274 seconds)
    (136/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.109147083 seconds)
    (137/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.07065215 seconds)
    (138/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.117849071 seconds)
    (139/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.071387885 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.106240214 seconds)
    (141/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.101667879 seconds)
    (142/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.091578555 seconds)
    (143/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.123105337 seconds)
    (144/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.071438066 seconds)
    (145/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.089317282 seconds)
    (146/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.079901804 seconds)
    (147/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.092749852 seconds)
    (148/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.127200957 seconds)
    (149/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.142047233 seconds)
    (150/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.111349333 seconds)
    (151/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.081918106 seconds)
    (152/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.109902066 seconds)
    (153/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.136451403 seconds)
    (154/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.081681764 seconds)
    (155/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110545209 seconds)
    (156/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089723744 seconds)
    (157/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.095796421 seconds)
    (158/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123852867 seconds)
    (159/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.106154352 seconds)
    (160/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.113389618 seconds)
    (161/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.122334856 seconds)
    (162/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.076275185 seconds)
    (163/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.072529177 seconds)
    (164/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.119967708 seconds)
    (165/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.090746592 seconds)
    (166/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.090802319 seconds)
    (167/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.0910042 seconds)
    (168/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.089517556 seconds)
    (169/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.115511962 seconds)
    (170/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.071413942 seconds)
    (171/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.100200193 seconds)
    (172/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.07567534 seconds)
    (173/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.094946823 seconds)
    (174/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.074275158 seconds)
    (175/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.093974087 seconds)
    (176/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.095321647 seconds)
    (177/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109951389 seconds)
    (178/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.15339675 seconds)
    (179/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.12828638 seconds)
    (180/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.182839035 seconds)
    (181/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.094539968 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.092540455 seconds)
    (183/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.123446829 seconds)
    (184/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11238473 seconds)
    (185/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.101660582 seconds)
    (186/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.149054372 seconds)
    (187/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109993512 seconds)
    (188/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091475936 seconds)
    (189/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101660142 seconds)
    (190/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.1625653 seconds)
    (191/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.074728693 seconds)
    (192/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.153493514 seconds)
    (193/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.080013723 seconds)
    (194/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.093493855 seconds)
    (195/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092507036 seconds)
    (196/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.093604075 seconds)
    (197/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.075578213 seconds)
    (198/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.074217313 seconds)
    (199/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12480335 seconds)
    (200/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.106894557 seconds)
    (201/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.104963855 seconds)
    (202/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.099021731 seconds)
    (203/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.101135781 seconds)
    (204/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110779676 seconds)
    (205/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.092435631 seconds)
    (206/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.082002628 seconds)
    (207/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.082101351 seconds)
    (208/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.09987608 seconds)
    (209/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091544601 seconds)
    (210/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.119869716 seconds)
    (211/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.093990032 seconds)
    (212/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118990723 seconds)
    (213/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.093577484 seconds)
    (214/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.091979282 seconds)
    (215/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.121017466 seconds)
    (216/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111055699 seconds)
    (217/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076131316 seconds)
    (218/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.073118366 seconds)
    (219/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.095116608 seconds)
    (220/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.074443556 seconds)
    (221/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.107905687 seconds)
    (222/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110124943 seconds)
    (223/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.075005126 seconds)
    (224/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.110447331 seconds)
  done (took 29.099170044 seconds)
done (took 29.843267271 seconds)
(7/13) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.479430431 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.149959697 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.091183631 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111023958 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.162433424 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.112887221 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.098454032 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.116160811 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.11742551 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093475431 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.104656721 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.099168864 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.114759021 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.169376935 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.117069474 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087446096 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.108259113 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119205064 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.102614436 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.123982062 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.168109953 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110181714 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.098357312 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.107877687 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.168351991 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104336404 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.09028053 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110703547 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.113762313 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.0904413 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.10917732 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.083148057 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.119033937 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.118275135 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.080980638 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.106980892 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.080102561 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.098100741 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.107299392 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089747612 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.116008665 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.090720236 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112800563 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103061638 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.088750234 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.107192715 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.081271138 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.114926856 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100371226 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.090298968 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10312686 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118773416 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.088380178 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.100510417 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.081067065 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103419413 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.114125673 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.080868974 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.115596803 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.080795377 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.103015936 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099275528 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.091389764 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101039254 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089849313 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102176442 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.106764728 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092528092 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.107786699 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.082988083 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100118099 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.10523908 seconds)
done (took 8.786838318 seconds)
(8/13) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.092824425 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.160909699 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.163249141 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.188297741 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.122446579 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.119801906 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123113215 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.13294425 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.098812009 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127913461 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.139614373 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130374445 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.170305559 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.117099851 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.099629865 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112618491 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116361331 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.095773087 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.191286356 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.108862421 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.136911797 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.115867196 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.139542358 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.123894834 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090964591 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.130969835 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110512567 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091332207 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.108198993 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.124719468 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.10873127 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.108060198 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.109411482 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.11072983 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119156611 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.113460428 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.100644224 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.109451098 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10685813 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.088674875 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.123514442 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125073037 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.0875934 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119613997 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.109644744 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.094323805 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.117136492 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.11487522 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090807818 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.111126963 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109384207 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13775493 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.096990304 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.117171218 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.115925672 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.096040582 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.114989718 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.113650758 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.092139315 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.114981396 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.086532109 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108976209 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110264795 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.135774059 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092050939 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.11498277 seconds)
  done (took 8.489585214 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.113529769 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.14625898 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.116927896 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117419469 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.096073148 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.098957286 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.078302045 seconds)
  done (took 1.549436743 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.085856828 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.167665665 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.163415975 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.164220812 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.178342593 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.1767647 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.17628047 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.146499582 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13917206 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.111575051 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.16510134 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.197209321 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.108791695 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099605828 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.186842688 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.080650988 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.168439854 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.101249612 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.16354994 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.163706618 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118587864 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.131205816 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.096317478 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101624718 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.159799274 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101971922 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.219274365 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119464642 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086429545 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.111274907 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112419265 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.184797802 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.16074038 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116497751 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085548527 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.160723839 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.159675407 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11499032 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.172966785 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106787065 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.160980838 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.11171059 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.094064693 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.114625082 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.111986828 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.146234193 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.099248802 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11342438 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.090289161 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.186907914 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093466335 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.159131042 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.109383685 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.113619226 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.09328212 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116402166 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.169711396 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114537887 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.166463425 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115274103 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.160307837 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.162077048 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.162618285 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.16105939 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125180549 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.161894029 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.160222624 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.161086121 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110010999 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.162711287 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.160939643 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.094279772 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115396683 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.14702738 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117086295 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.162409231 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.162222166 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109764395 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.096722379 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.108012543 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090255144 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.145599887 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.149434112 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113987275 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.109698974 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101530306 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116131651 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114602577 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.085744842 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.127930855 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113840968 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114365052 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.099251747 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113554365 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118927344 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.16537222 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.09334773 seconds)
  done (took 13.609764289 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.088791463 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103868004 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.088830151 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.104514219 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.083207609 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104361824 seconds)
  done (took 1.374307997 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.175682166 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.098286608 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.127252405 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119426098 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.171895501 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.170262066 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.171338368 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115897682 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.132251546 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104732418 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.19167783 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.175630235 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.168772013 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118722779 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.173473139 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.096409136 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.192980459 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.0943632 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.124918877 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111286666 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.101234294 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.11814494 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111648294 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.162602132 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117271521 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097942571 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.116409659 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.123824918 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.103090405 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113826141 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118667954 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.097405273 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111061152 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.115937775 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.175613753 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.111352904 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091389063 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122957756 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119299895 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118603352 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.174289266 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.091536513 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12444176 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122527249 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.114243039 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.091363634 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122243795 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114603383 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.172757942 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124125691 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122845438 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095755374 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119345275 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121705074 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.092240061 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115561186 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122308743 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.175028215 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118870539 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.090638298 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117390172 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118914284 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113707589 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.100968522 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.118694903 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121851344 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.090248515 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116271541 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111679597 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097060887 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12308301 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118337352 seconds)
  done (took 9.803305865 seconds)
done (took 35.60400077 seconds)
(9/13) benchmarking "problem"...
  (1/2) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.405268219 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181799127 seconds)
  done (took 1.393047547 seconds)
  (2/2) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.532906306 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.603036969 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.002802603 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158518528 seconds)
  done (took 3.108195097 seconds)
done (took 5.311701314 seconds)
(10/13) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098626833 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.117917222 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.095658088 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.115105688 seconds)
  done (took 1.238639162 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.109713681 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121754035 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.121059942 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.09518616 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125205642 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095028291 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.115707361 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122816621 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.093640414 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.117633462 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.115053288 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.094263571 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.117119944 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.113122209 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093305956 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.117989863 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098585583 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117730177 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.116024195 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095598301 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.113931756 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.116297266 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.097675048 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.116250416 seconds)
  done (took 3.457373434 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.168525529 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.088059511 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110351259 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.087060535 seconds)
  done (took 1.270370658 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10950908 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.138165806 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.131580176 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101723348 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132654234 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.130554574 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.090205083 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.110834545 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.092397603 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.123684789 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.113315895 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.135239651 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.111657893 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117400824 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.124499189 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088988693 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117260038 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110652437 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123558656 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125004382 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.090117197 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122640241 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.114606828 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108596832 seconds)
  done (took 3.580935097 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.2022053 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.108285202 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139859003 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.168140016 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141488678 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.138453385 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.120302064 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.120296245 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.123540196 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.096614518 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.119189524 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.175634662 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.118488912 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.097611276 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117728563 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.122959456 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120281263 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.098200152 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.120883546 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127926777 seconds)
  done (took 3.395201093 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100479754 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.113879659 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086817492 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.113884698 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119072805 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.091901814 seconds)
  done (took 1.447719091 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.088315266 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.105660736 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.083304764 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.102700193 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.091128827 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.105452605 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08417637 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.106698847 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.081523495 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103361023 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.079994544 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.100210021 seconds)
  done (took 1.95707881 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.289638951 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.087657843 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.112016242 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.106145149 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.092163917 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.106929417 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.124057463 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.085202226 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.235774764 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.110814224 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.103010059 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.202641221 seconds)
  done (took 2.479606872 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218366555 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094610492 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266748649 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368043967 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157230147 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165262106 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.265858323 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166605972 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.212328932 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114933763 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219428654 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155274346 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150542822 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180483819 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136966574 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.188701678 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176676917 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206156167 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148318694 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209838831 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163689525 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167077815 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202732181 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149487425 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114766466 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158271554 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115348464 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123661698 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173901387 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170637548 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177779692 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146015602 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13869032 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22424667 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222509976 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179872412 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.328523284 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13112568 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.182901127 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.189158627 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257433401 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116716557 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222665628 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153625487 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104383245 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202913378 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157589583 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185360738 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129455368 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116225507 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212848683 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177504692 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.187225843 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134457422 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309369088 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127282388 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146786438 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175326625 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215876875 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193820627 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167181697 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.11746912 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181916959 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184383591 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204143595 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.123546407 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.197483113 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10211792 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199294714 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199743508 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181667032 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165893483 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.209360998 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110873072 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185654306 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170668705 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149739228 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177801056 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158287944 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.094577647 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14899412 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133130917 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123330114 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.163553467 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116800749 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207855568 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133404442 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.188418154 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228481282 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15639074 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161508703 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164517926 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168416779 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142595582 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.093088787 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145259661 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159280032 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155067172 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131146055 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155136905 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143641931 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125640137 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149535528 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097021739 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156902482 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131494965 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166372119 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162601551 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126930981 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162807294 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146770723 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.134286763 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193288634 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186810665 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127528355 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107550081 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194559107 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156783957 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135544218 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175596091 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213760954 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.168500717 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112488394 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193533579 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198099907 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137955084 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191501463 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139680814 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129615956 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.128947319 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158355942 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156255425 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.228452719 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1239957 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.130969466 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220205272 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.122210875 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110443344 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174594847 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124987436 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123410517 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140780256 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111102493 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138142832 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.149639942 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137448173 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154642266 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158521918 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153808097 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160727637 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140878724 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198699297 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129538124 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.158244966 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145091316 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.092124042 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.208040847 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188432194 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101918502 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210694617 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174589414 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194540588 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163706414 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125551585 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181478699 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126197269 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.115675449 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168245599 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162296506 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163024375 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.187712124 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210349122 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.175195227 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152704338 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146562138 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170962358 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.178998439 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159383957 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142890962 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16212657 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170200696 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.092882821 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122558334 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124905796 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135727008 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105081209 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127416425 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184175463 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164186945 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206029175 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161652859 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135950415 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183620188 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122550912 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165859174 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176223058 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134939077 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.190991334 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183385979 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166489866 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140592864 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173364735 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.117028525 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100348217 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132964287 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169063866 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12946539 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129212917 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142162489 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184218641 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177968107 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14781589 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201033342 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192270881 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198376216 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09414849 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.164331295 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170390679 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156243439 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.178926025 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131642291 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.160341067 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180547337 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141255827 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196469539 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161257973 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167842402 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228756682 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.157499106 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102207099 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147135307 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167016563 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137916549 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163926966 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14329901 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133145218 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152614221 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135524713 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101417798 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209118408 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14009661 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.428320806 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.156574409 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177699438 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120838749 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143629528 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157930945 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141704839 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091466458 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170364626 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216174857 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141854118 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156954224 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17710826 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101288494 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.32306731 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194917471 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185522264 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134449478 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14095613 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159831247 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157518501 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164101578 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183131379 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140552414 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180238349 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155711431 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139053286 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130708096 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121431074 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147239147 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.154310151 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.133329911 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.154949505 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137401252 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188931185 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142337303 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156379206 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163793253 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14387498 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.152847976 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115441057 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226406659 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15725265 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179556318 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151480852 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17030346 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189926342 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119458985 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101254468 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.124411366 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181974637 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127860064 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158037794 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.176893209 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214909466 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162510186 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170480841 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132326083 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.098218891 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157979059 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146112789 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215514647 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11854602 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136537876 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215763015 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125046786 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126773313 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162422837 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274817409 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140074358 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173283103 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.116955819 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.265507002 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120959941 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104472125 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159410964 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169152075 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.14610791 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.17612091 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165906065 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142376061 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159710845 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135612871 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186038204 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205862588 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195474627 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179295347 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141442429 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157509749 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162855529 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177734862 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140042558 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.143702355 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137759897 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207785452 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.192413986 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129870149 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165201613 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1618576 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157521949 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182319302 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128086215 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190151358 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126773044 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170358675 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136489493 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0995862 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156110523 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.199081281 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108089769 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176282844 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15658905 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127961313 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123986881 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149661651 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157133672 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140042044 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103135423 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204680619 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.100379514 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163457753 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18123918 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126746834 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152780791 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141596663 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108346636 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141164324 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141507738 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131636975 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.142181181 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205085261 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.106322158 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201338224 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177834716 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164349775 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159790815 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140294476 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637525988 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.125993783 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183796502 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144890493 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191434749 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1471097 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165924728 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160229094 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146751315 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170511652 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147513303 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.22091336 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167738736 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.162641225 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12669948 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142920262 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142885707 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.106229823 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149863197 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162079743 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138031543 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136551236 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.161653461 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14468866 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.14142445 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110493623 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184800703 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144868777 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210307775 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186269811 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135270682 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166075247 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179674238 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125789824 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.164374565 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172324544 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139264406 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152262533 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.107000685 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134451996 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179615755 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.119165971 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160295659 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159613351 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16012232 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163232323 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110671489 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158467008 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140223969 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161773243 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124919109 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157836981 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157810631 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105236032 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126114268 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154471088 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159794979 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.155763139 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124590698 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142050474 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204158073 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095450192 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130794491 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274048193 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15716727 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194633461 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.152631161 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131969721 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139999151 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156634934 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.15637413 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158760118 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.103596982 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128993477 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.130894439 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.174547395 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.155489042 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158880433 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180424468 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160186188 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193158093 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.141668953 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.264802181 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111711235 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15335586 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.128896058 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127700363 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116104509 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131955458 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14304892 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188347194 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178730297 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.151802955 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.141316413 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126764212 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.094438551 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127886492 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159879693 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152528592 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157467922 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143170697 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.089944082 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142394603 seconds)
  done (took 77.666987145 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.142822766 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13195243 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.139554756 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.323359049 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161159692 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249264241 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.198312425 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.219392723 seconds)
  done (took 2.464561138 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.201588005 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.146881744 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.131334899 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.096238761 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.198800522 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.389294263 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.129938938 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.116122511 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.177242154 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.128001123 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.112553934 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.635425251 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.113531008 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.113464602 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.110377093 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.095347551 seconds)
  done (took 3.787042646 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.158921579 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.499099517 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.528120542 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.233407471 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.220316959 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.153013901 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.669738066 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.181698086 seconds)
  done (took 11.545563518 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.124473007 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134418877 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.318867333 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.200271038 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.153405752 seconds)
  done (took 1.838330131 seconds)
done (took 116.951167585 seconds)
(11/13) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 0.139125689 seconds)
  done (took 1.035953409 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.499456675 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.078756643 seconds)
  done (took 1.516383807 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105801069 seconds)
  done (took 1.016542547 seconds)
done (took 4.475664813 seconds)
(12/13) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/8) benchmarking ("sortperm forwards", "random")...
    done (took 1.044691556 seconds)
    (2/8) benchmarking ("sort forwards", "random")...
    done (took 0.436819477 seconds)
    (3/8) benchmarking ("sortperm! reverse", "random")...
    done (took 1.025784851 seconds)
    (4/8) benchmarking ("sort! reverse", "random")...
    done (took 0.41327641 seconds)
    (5/8) benchmarking ("sort reverse", "random")...
    done (took 0.388817703 seconds)
    (6/8) benchmarking ("sortperm reverse", "random")...
    done (took 1.003765636 seconds)
    (7/8) benchmarking ("sortperm! forwards", "random")...
    done (took 1.042805897 seconds)
    (8/8) benchmarking ("sort! forwards", "random")...
    done (took 0.373374199 seconds)
  done (took 6.627369106 seconds)
  (2/4) benchmarking "quicksort"...
    (1/8) benchmarking ("sortperm forwards", "random")...
    done (took 0.098915021 seconds)
    (2/8) benchmarking ("sort forwards", "random")...
    done (took 0.163025553 seconds)
    (3/8) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13958398 seconds)
    (4/8) benchmarking ("sort! reverse", "random")...
    done (took 0.098576529 seconds)
    (5/8) benchmarking ("sort reverse", "random")...
    done (took 0.129297233 seconds)
    (6/8) benchmarking ("sortperm reverse", "random")...
    done (took 0.114835993 seconds)
    (7/8) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108087328 seconds)
    (8/8) benchmarking ("sort! forwards", "random")...
    done (took 0.111388476 seconds)
  done (took 1.872031848 seconds)
  (3/4) benchmarking "mergesort"...
    (1/8) benchmarking ("sortperm forwards", "random")...
    done (took 0.202420342 seconds)
    (2/8) benchmarking ("sort forwards", "random")...
    done (took 0.143585183 seconds)
    (3/8) benchmarking ("sortperm! reverse", "random")...
    done (took 0.155997379 seconds)
    (4/8) benchmarking ("sort! reverse", "random")...
    done (took 0.125435652 seconds)
    (5/8) benchmarking ("sort reverse", "random")...
    done (took 0.127430052 seconds)
    (6/8) benchmarking ("sortperm reverse", "random")...
    done (took 0.112807306 seconds)
    (7/8) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132212536 seconds)
    (8/8) benchmarking ("sort! forwards", "random")...
    done (took 0.110031559 seconds)
  done (took 2.016236744 seconds)
  (4/4) benchmarking "issorted"...
    (1/2) benchmarking ("forwards", "random")...
    done (took 0.100998423 seconds)
    (2/2) benchmarking ("reverse", "random")...
    done (took 0.132890285 seconds)
  done (took 1.1393263 seconds)
done (took 12.561867047 seconds)
(13/13) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.112178663 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129167493 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.166567816 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.099064536 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.178265333 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.114990392 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.101707582 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114746641 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.098680357 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132847309 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108157972 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.091651433 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.129826198 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095929098 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.162160656 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125833529 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.168160271 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.162484122 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.113841216 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100429657 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118846145 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.170308602 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.097129549 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.115526618 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.173557946 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.162708016 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.161221433 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.095558386 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.120540961 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.087153735 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.162300782 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122277787 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115591917 seconds)
  done (took 5.152514202 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.178288656 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.188887562 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.090832855 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.115388512 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.190110214 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.090782127 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.201427291 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.092600379 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.113800805 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.091809184 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.113809291 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.179166942 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.185085238 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.200729488 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.22019301 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.186698235 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.175776503 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.187584006 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.172325021 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.190063973 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.17782087 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117101458 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.189024208 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.192015629 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.089395435 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.11541047 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.214927458 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.185556575 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.214613096 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.175650725 seconds)
  done (took 5.749518484 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101317741 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.12602399 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.110712 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181279555 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.15356522 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.124884047 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.09912415 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135241835 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.136804756 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.086585968 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.12070846 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125534139 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129923467 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.120595101 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092077093 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13010932 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135086595 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.089234074 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.11771689 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106159499 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.131943095 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.128168603 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.104399978 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.121590023 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.086080666 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122514679 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.115529728 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.100109619 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.118032368 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095149123 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.115671016 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115375575 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.090051365 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.121591471 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.091472569 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125638697 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138696784 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095482666 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126666636 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.147552382 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.094927577 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.118264108 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.133074506 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132930862 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.114826124 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.121799509 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.100157294 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.121112295 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.085837429 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132149233 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124983386 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089253798 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134466929 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.109555877 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.087065487 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.117779218 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.087913908 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.114760105 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.095425433 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116771393 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138513699 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.095992343 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.119006231 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.088210994 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.117203428 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.109699844 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.087276953 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118177418 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.11112059 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116955021 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.142287103 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.088042499 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122830839 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.093965975 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.1178583 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119805808 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.087817506 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119420409 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09585453 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.118573245 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.119264216 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.091508599 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.115499206 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.106670003 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134122448 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124255442 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.096901792 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125073859 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.115605924 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090320069 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126330639 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.089116491 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.116062973 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.096877295 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.113850394 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.115274823 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.098914581 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122251972 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.084800202 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131615218 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.118162487 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.087622926 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128466727 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.088035727 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.116562992 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.121005024 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.100470988 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.112237457 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.095578094 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.123319535 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.085943518 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.117794333 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.115076675 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.088413859 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129266229 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.097191785 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.117064165 seconds)
  done (took 14.142425687 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.279026518 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.282877727 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189821126 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.366308836 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.111083025 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.20132764 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.255940958 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.206617128 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113357875 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.155354038 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172353999 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.239080328 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.088727704 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.145520947 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.280068363 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.346984151 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.145171086 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.156896476 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.156520087 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.114032312 seconds)
  done (took 4.943753639 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.117657872 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156043303 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143224588 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14582082 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09466619 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.127876348 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.111611082 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.113792804 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.121288487 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.119130207 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.087179955 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.126961198 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098852412 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.123664592 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130701994 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.159873677 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.094491938 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.119410212 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134884723 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.094825259 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.123046126 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140738143 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122869247 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115983612 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.128279893 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125229756 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.087296764 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120402313 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091697909 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.118164515 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.092855589 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135819682 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.120026817 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.093291328 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.121982894 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.124821428 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.091386968 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.112445389 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.088920241 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.116425187 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.106089929 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.120942981 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.117203236 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.085852883 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.124556445 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.090171248 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.125276275 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099222377 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.126310641 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127478753 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.099981621 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.124201561 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.094376649 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.131750774 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.114613956 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.10518388 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126222925 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12470829 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.095618545 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.111132915 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.085358027 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116964204 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.091697519 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.124610876 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.122131335 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135985677 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.104998405 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112101384 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.094609719 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.116883613 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116284195 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.10881954 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139786146 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.116688659 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.092683366 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.137149606 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.091308152 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105350585 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100266889 seconds)
  done (took 10.006138123 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.121458688 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.118778776 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.108938423 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.151293459 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.134955683 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.092963206 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.118646203 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.107740872 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125336678 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.126935485 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09995168 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126982883 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.138662857 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.100851452 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.1182817 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.127523452 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.100007697 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.175434898 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.132165826 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.123656587 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.130566644 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.117790895 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.102070598 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126055564 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.148099 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.099833607 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.146580563 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.122987229 seconds)
  done (took 4.395591232 seconds)
done (took 45.2967219 seconds)
RUNNING BENCHMARKS...
(1/13) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.029415862 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.19202707 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.252998227 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.014264494 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.001278856 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.022433492 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 1.996037981 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.027324671 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.010075767 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 1.996639586 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.001214125 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.269034985 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 1.995176144 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.386349595 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 1.992560887 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.025808 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.001724152 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.250610017 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.002973545 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.045693702 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 1.991697607 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 1.992938109 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.049386802 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.020185979 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.109034967 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.018710026 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.013326563 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 1.993174348 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.260804984 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.024784318 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.048442071 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.00549483 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.024137391 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.006389415 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.115605159 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.025155542 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.233842226 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 1.995195995 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.002462901 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.006717735 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.238942696 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.374049959 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.012416669 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.004796524 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.015049567 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.081815546 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 1.997989429 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.760454563 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.02224474 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 1.995704676 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.062353889 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.392471636 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.015787043 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.030837116 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.010837866 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.268086854 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.025609648 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.032009047 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.026129261 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.0227996 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.003377655 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.003696286 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.043740121 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.019735263 seconds)
  done (took 130.850074915 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.006209559 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.010840484 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.01261806 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.027403638 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.012159018 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.009026818 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.00665677 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.008265649 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.013969418 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.038751189 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.012451594 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.014394038 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.018667245 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.976755157 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.012042296 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.027132832 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.01282002 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.020557969 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.0159608 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.008259553 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.015332848 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.010805929 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.025945818 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.014012269 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.042541324 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.094473999 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.029977225 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.020629288 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.018474768 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.009351955 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.035185601 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.030128032 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.529058245 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.86921278 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.016829793 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.039520083 seconds)
  done (took 73.004551214 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.009311672 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.005550929 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.010322763 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.035873457 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.009845287 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.503033082 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.508223043 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.778484857 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.254759714 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.129227359 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.216176413 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.011096364 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.097120418 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.021536531 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.014699191 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.00935053 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.025296201 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.047024368 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.01680086 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.010246047 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.50278532 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.024915115 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.342842892 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.181718472 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.022761994 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.038521826 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.411089111 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.007634336 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.038306252 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.3329875 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.050458907 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.006875588 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.310186885 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.499624037 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.121439526 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.012124241 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.041217364 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.013267066 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.283961753 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.009763868 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.00957774 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.007439184 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.009859963 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.014631891 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.610458587 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.015059891 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.50224033 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.016941249 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.886857858 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.010469481 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.014172968 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.112468573 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.561487423 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.027097806 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.015492248 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.021598895 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.009936249 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.014640629 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.039861877 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.037692225 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.123149697 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.030054266 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.016339985 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.036466767 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.019247105 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.593527448 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.033414715 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.227384696 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.073671501 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.130732103 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.506863606 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.01824413 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.105166629 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.12918372 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.01157918 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.013277313 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.015212379 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.014187225 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.12044281 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.013932206 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.37920081 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.175406534 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.031063639 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.134074364 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.023609985 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.107122453 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.014187438 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.33738742 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.019283438 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.017081893 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.692126764 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.105590075 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.011346273 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.017096782 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.015502902 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.383762547 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.509050355 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.190964928 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.021536276 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.518278361 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.019880101 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.39070535 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.49440297 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.643574008 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.021371065 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.126708734 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.174942995 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.031173414 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.014441858 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.143170238 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.02211582 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.074006447 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.015532119 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.412365404 seconds)
  done (took 342.374439239 seconds)
done (took 547.167875975 seconds)
(2/13) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.190905219 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.194819664 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.072354562 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.197473219 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.04992909 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.211823343 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.174279944 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.037696391 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.113442039 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.096201051 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.118768985 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.073099175 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.052815844 seconds)
  done (took 15.534957864 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.279624219 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.02695041 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.101128406 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.244004923 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.062299078 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.288699838 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.302322212 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.027333858 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.166783996 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.031909723 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.034829422 seconds)
  done (took 15.519295422 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.289101297 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.024583378 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.107437103 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.275008746 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.066412743 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.270505014 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.318361866 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.026818888 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.161167083 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.032514017 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.032929192 seconds)
  done (took 15.559647593 seconds)
done (took 47.56089883 seconds)
(3/13) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.029108563 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.02265236 seconds)
  done (took 5.002317905 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.091117177 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.091749255 seconds)
  done (took 3.137290672 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.029817062 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.028152501 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.028660205 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.029763801 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.028575335 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.027433244 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.028438004 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.026055304 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.026991249 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.028656773 seconds)
  done (took 11.236472297 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.030078966 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.031612533 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.024942704 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.026870869 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.028922853 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.02971362 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.028084517 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.029522009 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.02999607 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.029505507 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.026234028 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.028852453 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.027753636 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.030767964 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.028837425 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.030282752 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.028135987 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.027061201 seconds)
  done (took 19.467605842 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.041378144 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.049163745 seconds)
  done (took 3.040939407 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.172600562 seconds)
    (2/7) benchmarking "second"...
    done (took 1.069841948 seconds)
    (3/7) benchmarking "month"...
    done (took 1.14548935 seconds)
    (4/7) benchmarking "year"...
    done (took 1.134188582 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.070083229 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.050112832 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.069738091 seconds)
  done (took 8.660756467 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.031437617 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.215218035 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.319108245 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.606956485 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.030651523 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.077501906 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.857540047 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.075976557 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.065998598 seconds)
  done (took 12.234321707 seconds)
done (took 63.734799345 seconds)
(4/13) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.192058393 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.146193608 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.02769349 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.043569885 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.026582734 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.021635645 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.037769938 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.024203128 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.027212618 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.025413829 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.028300193 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.241547176 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.083061513 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.026071754 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.026521849 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.120720539 seconds)
  done (took 22.052479871 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.055890475 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.037730789 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.128155574 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.045131206 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.050679298 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.198652666 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.085833283 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.03706217 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.173668361 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.054917088 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.027843267 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.050823325 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.031567733 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.994250625 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.043921293 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.199065927 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.255398653 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.032439534 seconds)
  done (took 23.457761404 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.412106859 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.058775446 seconds)
  done (took 4.425247989 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.04595529 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.034498589 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.033712346 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.029918164 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.021373832 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.026152896 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.032035278 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.018752056 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.044486635 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.142621182 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.035869203 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.046577072 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.044504669 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.031375493 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.032977096 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.076160123 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.189366598 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.038222637 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.034828318 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.039768479 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.031291728 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.117956248 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.070641961 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.04130819 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.13851466 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.039028105 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.037720832 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.039350551 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.157420269 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.04019234 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.03247952 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.033607717 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.031843835 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.024571319 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.53013408 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.043863046 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.054909709 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.054346692 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.034572853 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.194418992 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.033180558 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.039471632 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.021707399 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.517086588 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.188263768 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.14276169 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.044191714 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.036255433 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.03297 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.094504763 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.034760844 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.037169563 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.091265957 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.798010843 seconds)
  done (took 68.822078531 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.039829284 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.024561235 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.203489696 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.050376648 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.024207668 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03118007 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.046566072 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.273038982 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.079818132 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.025429259 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.303814951 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.55960179 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.0510069 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.084947719 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.898503309 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.096484571 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.026948878 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.04119996 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.034771449 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.030489257 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.554232681 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.032682579 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.026050305 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.158409433 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.061188538 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.508091692 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.029366473 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.031945031 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.032261404 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.025338889 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.518447249 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.052422483 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.095773054 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.031100338 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.284866853 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.376105283 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.330718913 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.029410551 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.042562467 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.028256 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.040779718 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.486633149 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.344313855 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.027863561 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.02757331 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.493975093 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.028629401 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.032048036 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.038722879 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.27415724 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.028361924 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.028107997 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.041861535 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.028158753 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.027614563 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.14933766 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.132326823 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.502928534 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.027781838 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.036498967 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.032573522 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.031237486 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.037934457 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.032552653 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.044384063 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.350460875 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.173941397 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.034063215 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.34611424 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.508779824 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.042541759 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.59332723 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.050002575 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.048232338 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.248916005 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.027500309 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.031263015 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.500820459 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.046490211 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.02918953 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.327912112 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.031450484 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.310844239 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.054021125 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.031481602 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.56657387 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.043856463 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.033460817 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.040368503 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.03068978 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.046011989 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.046902239 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.291452534 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.086046584 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.029720811 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.030097733 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.073515744 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.03127547 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.031082044 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.035548447 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.5838478 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.047501086 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.030610716 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.031744991 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.035919186 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.038618472 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.03389008 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.037420311 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.294311726 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.030744214 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.033210948 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.033671143 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.035066836 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.035296784 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.163462595 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.033007158 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.298368545 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.033843868 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.031966988 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.031480479 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.031963219 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.033735389 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.031728793 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.042145566 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.891509495 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.334054347 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.051106679 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.046323751 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.032992309 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.048069022 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.032503055 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.04540398 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.091915794 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.034582181 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.787760126 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.054074807 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.054274859 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.032377101 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.034287581 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.032545965 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.053823431 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.032136366 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.317505993 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.295335566 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.182722341 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.037025985 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.035564396 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.779484861 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.053693193 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.213963108 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.054158876 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.035073004 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.280858688 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.265108401 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.033763215 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.034248631 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.033054857 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.290526902 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.033137981 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.347511393 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.55395669 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.05614993 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.041132595 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.793739495 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.714203795 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.041370048 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.03952665 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.303882262 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.054202854 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.034703286 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.035047736 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.036384334 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.051924631 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.049456811 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.042465916 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.034989218 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.035718452 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.081905014 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.223051501 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.051656138 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.04190926 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.503400346 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.067321732 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.041380143 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.043506633 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.035463796 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.03691393 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.138979318 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.035393908 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.049179766 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.039607882 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.039124219 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.556727676 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.035924874 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.040453026 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.227388626 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.703207905 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.057106724 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.036577805 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.056008016 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.953547071 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.53094611 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.103925092 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.305532253 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.04844317 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.072657698 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041526748 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.109293097 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.532134272 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.039091145 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.055387602 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.668342571 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.056640091 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.567069872 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.040301041 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.040552102 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.614498956 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.055973907 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.037581627 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.039154224 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.05201528 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.339005017 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.039015745 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.093656397 seconds)
  done (took 429.874637749 seconds)
done (took 549.582715562 seconds)
(5/13) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.038354244 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.038139765 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.034680763 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.042011185 seconds)
  done (took 9.123329941 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 1.045032375 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 1.041991833 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 1.043011379 seconds)
  done (took 4.098892742 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.035234136 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.037151047 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.042592517 seconds)
  done (took 7.080983718 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.223964448 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.05839829 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.322574451 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.057551378 seconds)
  done (took 7.630121406 seconds)
done (took 28.903800776 seconds)
(6/13) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.070444342 seconds)
    (2/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.204681252 seconds)
    (3/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.269114503 seconds)
    (4/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.211927504 seconds)
    (5/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.182335237 seconds)
    (6/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.093300915 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.093145642 seconds)
    (8/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.175287574 seconds)
    (9/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.158807007 seconds)
    (10/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.128661251 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.090892666 seconds)
    (12/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.224808911 seconds)
    (13/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.040955557 seconds)
    (14/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.13695179 seconds)
    (15/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.779759855 seconds)
    (16/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.151187278 seconds)
    (17/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.148555131 seconds)
    (18/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.217848835 seconds)
    (19/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.052969651 seconds)
    (20/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.793216203 seconds)
    (21/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.163801257 seconds)
    (22/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.835997779 seconds)
    (23/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.222123187 seconds)
    (24/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.776948644 seconds)
    (25/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.081755109 seconds)
    (26/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.234957123 seconds)
    (27/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.072375296 seconds)
    (28/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.034475817 seconds)
    (29/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.2433922 seconds)
    (30/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.219133665 seconds)
    (31/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.062694083 seconds)
    (32/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.099424285 seconds)
    (33/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.710388074 seconds)
    (34/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.036259103 seconds)
    (35/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.069963116 seconds)
    (36/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.169112942 seconds)
    (37/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.037925655 seconds)
    (38/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.092652683 seconds)
    (39/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.281076287 seconds)
    (40/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.145114034 seconds)
    (41/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.134894471 seconds)
    (42/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.177470923 seconds)
    (43/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.244340409 seconds)
    (44/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.038617339 seconds)
    (45/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.099762031 seconds)
    (46/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.933795697 seconds)
    (47/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.191856248 seconds)
    (48/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.367525869 seconds)
    (49/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.099431687 seconds)
    (50/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.065993819 seconds)
    (51/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.161550267 seconds)
    (52/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.141343217 seconds)
    (53/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.038956768 seconds)
    (54/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.098276833 seconds)
    (55/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.781113574 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.170389436 seconds)
    (57/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.185202393 seconds)
    (58/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.078126388 seconds)
    (59/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.168814561 seconds)
    (60/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.0586487 seconds)
    (61/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.06647919 seconds)
    (62/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.090021881 seconds)
    (63/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.17348849 seconds)
    (64/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.096404149 seconds)
    (65/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.079177409 seconds)
    (66/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.031564048 seconds)
    (67/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.828091766 seconds)
    (68/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.083098427 seconds)
    (69/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.92955865 seconds)
    (70/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.113343068 seconds)
    (71/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.03752474 seconds)
    (72/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.348293583 seconds)
    (73/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.243061783 seconds)
    (74/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.239827593 seconds)
    (75/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.073869386 seconds)
    (76/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.122589765 seconds)
    (77/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.180433404 seconds)
    (78/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.110041825 seconds)
    (79/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.032700987 seconds)
    (80/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.749797019 seconds)
    (81/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.821032437 seconds)
    (82/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.098000152 seconds)
    (83/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.115350916 seconds)
    (84/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.183567267 seconds)
    (85/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.153362012 seconds)
    (86/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.137377344 seconds)
    (87/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.165683043 seconds)
    (88/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.140298285 seconds)
    (89/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.077793238 seconds)
    (90/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.242714842 seconds)
    (91/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.106322773 seconds)
    (92/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.082806163 seconds)
    (93/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.24590998 seconds)
    (94/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.162445018 seconds)
    (95/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.123484065 seconds)
    (96/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.264022953 seconds)
    (97/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.091284277 seconds)
    (98/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.117766856 seconds)
    (99/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.133010638 seconds)
    (100/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.056277833 seconds)
    (101/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.144539328 seconds)
    (102/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.12282206 seconds)
    (103/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.815663363 seconds)
    (104/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.203201247 seconds)
    (105/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.804995192 seconds)
    (106/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.132644434 seconds)
    (107/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.161217733 seconds)
    (108/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.073714772 seconds)
    (109/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.081125176 seconds)
    (110/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.083587135 seconds)
    (111/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.931793506 seconds)
    (112/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.197332186 seconds)
    (113/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.140035687 seconds)
    (114/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.233881365 seconds)
    (115/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.859488386 seconds)
    (116/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.153264953 seconds)
    (117/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.081069053 seconds)
    (118/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.724383031 seconds)
    (119/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.231391795 seconds)
    (120/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.211686229 seconds)
    (121/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.148648057 seconds)
    (122/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.099101528 seconds)
    (123/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.178539425 seconds)
    (124/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.107143078 seconds)
    (125/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.08437091 seconds)
    (126/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.137520524 seconds)
    (127/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.173984912 seconds)
    (128/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.098420235 seconds)
    (129/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.731607256 seconds)
    (130/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.05539365 seconds)
    (131/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.161799987 seconds)
    (132/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.247775871 seconds)
    (133/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.128035677 seconds)
    (134/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.119338238 seconds)
    (135/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.129703582 seconds)
    (136/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.104652306 seconds)
    (137/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.080547512 seconds)
    (138/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.193179027 seconds)
    (139/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.041540883 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.153990998 seconds)
    (141/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.202304591 seconds)
    (142/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.245322946 seconds)
    (143/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.25522367 seconds)
    (144/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.065484572 seconds)
    (145/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.74942527 seconds)
    (146/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.146526183 seconds)
    (147/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.16023655 seconds)
    (148/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.134344876 seconds)
    (149/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.097713536 seconds)
    (150/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.082073121 seconds)
    (151/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.121955696 seconds)
    (152/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.091830397 seconds)
    (153/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.095281097 seconds)
    (154/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.196240898 seconds)
    (155/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.05843955 seconds)
    (156/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.080307469 seconds)
    (157/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.730896836 seconds)
    (158/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.182953463 seconds)
    (159/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.121977256 seconds)
    (160/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.093022243 seconds)
    (161/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.129198019 seconds)
    (162/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.789483203 seconds)
    (163/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.091367272 seconds)
    (164/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.180041151 seconds)
    (165/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.253782641 seconds)
    (166/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.237375098 seconds)
    (167/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.044547986 seconds)
    (168/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.086885239 seconds)
    (169/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.112916905 seconds)
    (170/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.147154383 seconds)
    (171/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.189749095 seconds)
    (172/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.05581957 seconds)
    (173/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.044673185 seconds)
    (174/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.787453841 seconds)
    (175/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.221707736 seconds)
    (176/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.32376929 seconds)
    (177/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.138438943 seconds)
    (178/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.208476579 seconds)
    (179/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.053214676 seconds)
    (180/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.852555911 seconds)
    (181/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.107016522 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.201195751 seconds)
    (183/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.048616677 seconds)
    (184/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.15269865 seconds)
    (185/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.06708679 seconds)
    (186/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.125678048 seconds)
    (187/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.164334969 seconds)
    (188/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.061863916 seconds)
    (189/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.099244086 seconds)
    (190/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.232517325 seconds)
    (191/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.213526675 seconds)
    (192/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.108043418 seconds)
    (193/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.107935343 seconds)
    (194/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.711370563 seconds)
    (195/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.093509721 seconds)
    (196/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.896331082 seconds)
    (197/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.724870855 seconds)
    (198/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.197432794 seconds)
    (199/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.161535949 seconds)
    (200/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.048243381 seconds)
    (201/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.06564283 seconds)
    (202/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.193646831 seconds)
    (203/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.08960085 seconds)
    (204/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.182944893 seconds)
    (205/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.185292047 seconds)
    (206/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.158893779 seconds)
    (207/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.091479137 seconds)
    (208/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.190442883 seconds)
    (209/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.07476833 seconds)
    (210/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.168484093 seconds)
    (211/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.706446728 seconds)
    (212/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.272135169 seconds)
    (213/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.084036368 seconds)
    (214/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.265927132 seconds)
    (215/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.069310999 seconds)
    (216/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.062121853 seconds)
    (217/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.133186286 seconds)
    (218/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.141919989 seconds)
    (219/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.382347951 seconds)
    (220/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.047186832 seconds)
    (221/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.065335483 seconds)
    (222/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.218351695 seconds)
    (223/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.209667026 seconds)
    (224/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.200706588 seconds)
  done (took 307.394499842 seconds)
done (took 308.360014357 seconds)
(7/13) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.109560454 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.238667259 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.058600719 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.058582459 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.101811043 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.000422201 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.100371169 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.064525637 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.067473294 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.068669877 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.999771868 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.070198225 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.071007689 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.097817775 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.171610158 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.073571784 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.059052838 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.064163568 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.105397445 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.12528719 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.102947162 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.103731062 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.07911042 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.06002524 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.108388436 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.108014313 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.067181281 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.05238745 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.082285747 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.106450837 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.052240054 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.082000915 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.115705584 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.114842016 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.103146342 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.065483912 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.105342339 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.242949187 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.1034996 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.09703463 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.071091064 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.115885458 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.073115475 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.07298543 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.114685265 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.078949914 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.108048925 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.185035062 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.054072676 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.012082052 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.108385715 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.125315795 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.070524386 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.992936138 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.052731009 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.206778474 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.066716728 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.110746087 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.067813803 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.105016044 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.175578917 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.109510413 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.128582397 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.108649752 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.067135143 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.074085995 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.067949596 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.127190904 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.067506775 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.105270749 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.10713003 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.073065214 seconds)
done (took 87.647948526 seconds)
(8/13) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.194041612 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.064177116 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.207050158 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.066747148 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.230239026 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.214389797 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.065639685 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.067427707 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.065979502 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.896736873 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.066151663 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.066908939 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.064103573 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.066767087 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.197337694 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.067192734 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.067709373 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.781427794 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.069583478 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.207987962 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.062073376 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.068364463 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.067728681 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.882778387 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.064389862 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.06151827 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.209670955 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.067297303 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.780537557 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.060111902 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.061882967 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.777388802 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.211608068 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.087697295 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.077298534 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.076874034 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.230562954 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.08389384 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.193753286 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.194919403 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.208993153 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.111648283 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.061997641 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.064348698 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.068809879 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.069868324 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.068010855 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.097250926 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.06470421 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.069428706 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.785723352 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.078110243 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.077756783 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.068187684 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.068056879 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.089422931 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.070195237 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.070276232 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.212878538 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.070651123 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.193895277 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.88939887 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.894206962 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.068820594 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.062695528 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.071222738 seconds)
  done (took 90.686519926 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.133329897 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.141039559 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.173683467 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.082690435 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.117936219 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.175866112 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.085443316 seconds)
  done (took 8.897248163 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.073427963 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.070398641 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.115314368 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.116410575 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.0713032 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.22447464 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.072194791 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.077924685 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.070580618 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.118560991 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.072540588 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.071239892 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.079661107 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.065765774 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.116041463 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.078802209 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.183188899 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.068254602 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.071970596 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.220435536 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.069947437 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.080471509 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.12056548 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.080010374 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.073229442 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.075019984 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.835791269 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.07267564 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.072829737 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.071174489 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.071056897 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.122092331 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.071228139 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.068291041 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.072172946 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.186533659 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.073613258 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.072405377 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.072184972 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.068866496 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.072767308 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.071620127 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.073644164 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.072717075 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.071097276 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.092362942 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.072088493 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.073920555 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.073844284 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.073681112 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.119807761 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.074027478 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.073427052 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.072540124 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.12603791 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.083140761 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.073758869 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.07326151 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.072286744 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.071778515 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.219824234 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.116192626 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.072526213 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.117516342 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.072694568 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.074104811 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.073971607 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.072488499 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.160859716 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.075038441 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.117757939 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.073716768 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.250301017 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.093218163 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.074600742 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.073221542 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.072987668 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.077709908 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.069068334 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.077593885 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.074171431 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.071344081 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.077026531 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.073577387 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.074248098 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.230509548 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.182045961 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.074741032 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.083522613 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.077997162 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.075842514 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.124051225 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.076134296 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.075786681 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.123955534 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.186113707 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.124568167 seconds)
  done (took 111.890322489 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.085092521 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.084837723 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.076070335 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.100031011 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.075174608 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.073241906 seconds)
  done (took 7.487279859 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.074863274 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.080327786 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.075840189 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.076637257 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.076858426 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.078264427 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.078704817 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.075678322 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.080052316 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.077661668 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.077529817 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.078978714 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.080081918 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.077585972 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.078230217 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.079723793 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.077919835 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.07739231 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.07873477 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.078038256 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.073345508 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.07912263 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.079279525 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.076053526 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.081411588 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.078293425 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.095113262 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.077571176 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.080781587 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.079724729 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.096917107 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.079590867 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.075741297 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.0801347 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.082703389 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.077021757 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.084157053 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.07998678 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.077841708 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.079549429 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.080660292 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.079226611 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.078929685 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.081432356 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.077481164 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.080039689 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.084147159 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.097619828 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.079905898 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.080988872 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.081393472 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.079965166 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.078986741 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.081670229 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.078650437 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.095753269 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.085244914 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.080087811 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.080535071 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.076889212 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.084220326 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.080257089 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.078846977 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.085884021 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.080801816 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.08179787 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.078741604 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.085446028 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.082495318 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.082510069 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.081666656 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.081383612 seconds)
  done (took 79.793775939 seconds)
done (took 299.741053679 seconds)
(9/13) benchmarking "problem"...
  (1/2) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.090909187 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.091933106 seconds)
  done (took 5.180719452 seconds)
  (2/2) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.118332286 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.124039957 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.100838173 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.082434723 seconds)
  done (took 9.423595392 seconds)
done (took 15.602838034 seconds)
(10/13) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.071887953 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.07362402 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.072817982 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.072180024 seconds)
  done (took 9.2889585 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.134633567 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.134629324 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.134792461 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.133441076 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.133409569 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.134600445 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.106563168 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.107980661 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.134510383 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.134401199 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.134271659 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.133576726 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.135071263 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.108911555 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.134317521 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.135678561 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.1337491 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.136466979 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.108829406 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.134556953 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.083219196 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.135576453 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.134011427 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.08365411 seconds)
  done (took 28.021375777 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.575798148 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.149994893 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.233253178 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.133320106 seconds)
  done (took 6.092228061 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.162173632 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.161979145 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.186990485 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.213562759 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.224258457 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.179242087 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.109920971 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.104169431 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.090895827 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.160791081 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.216922536 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.153239877 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.238867254 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.084509482 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.290309013 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.082899163 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.083706688 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.161929064 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.213305617 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.215864973 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.084296966 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.162066581 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.162718714 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.152955076 seconds)
  done (took 28.899389346 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.094767864 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.099299447 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.086500112 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.10128568 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.086118524 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.086350099 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.088253504 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.091922415 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.084915316 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.086087004 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.086869517 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.101473125 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.090439584 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.086745558 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.094601828 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.088232377 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.093721176 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.091083225 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.088183958 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.094176513 seconds)
  done (took 22.822793218 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.075736321 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.075446238 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.428388444 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.331811726 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.077071824 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.076476682 seconds)
  done (took 12.067124095 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.147161167 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.293766289 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.083313459 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.394399005 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.476793381 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.085361711 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.082693307 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.308579706 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.584680613 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.560800844 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.137074218 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.148734537 seconds)
  done (took 16.306855201 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.089091357 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.08494638 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.093068068 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.09904794 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.132414013 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.107449974 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.089119702 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.077284329 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.138164069 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.158802733 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.108737185 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.134094733 seconds)
  done (took 18.316489552 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.177480261 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.081498205 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082103882 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113141538 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088723519 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.931635469 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.093610328 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.752111083 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.105126453 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357238872 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082135608 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.200069078 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.338675076 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096550473 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.089386486 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.002520308 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.31972262 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543259767 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085397822 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088528254 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.121731029 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.092722922 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.092719618 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.27768012 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100451638 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082737611 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.347004882 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.083334455 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.331927825 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.10358205 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.093191399 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.083439548 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.360463014 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.703444055 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.20404809 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270360827 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103166432 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.109629998 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.07323307 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.097750824 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092941309 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.092904035 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.095300564 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084129937 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.084426809 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094357576 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764134854 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.109267938 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.084771991 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.08647752 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.308722536 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.189575727 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.091903423 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.08609771 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141231684 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092624858 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.090858517 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.211486202 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686278503 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086383525 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108614993 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.092708613 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.097196433 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10507455 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.660235601 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.110216048 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.092188528 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.091375524 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086530782 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.092850763 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.110646279 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087454369 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.112052509 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087536361 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772293688 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.104298602 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109480852 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.609110247 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088159582 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.109952076 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.317465116 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08728764 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087479396 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.087719393 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.087460489 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754956574 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.095471282 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.08213203 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.13169111 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.770492355 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.292780268 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.126514725 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.116822526 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.313140545 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.073373988 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088404983 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.089304737 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094621052 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.109346185 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.764085761 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105145566 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.095062864 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346421704 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.299422355 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09535736 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.029844978 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.532424757 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106610055 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.113635194 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098365277 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.283074168 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.657426531 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.125259387 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089925493 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.11383202 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.089049213 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.793810156 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091103158 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.198673836 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.093416305 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.346821601 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.842042225 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089806904 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.156105664 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092694654 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.090115693 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09020959 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11011751 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091771719 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.270313712 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11829405 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.103650154 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.090018184 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090065911 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.094195331 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09940536 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.099258182 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.314838454 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089633434 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374462581 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091145375 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090408073 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091258475 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.314390749 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.091028551 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.437091259 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353752362 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099342853 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.101924047 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.109019252 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.110068842 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.193611547 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.11277917 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.100046078 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.353831189 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.097801795 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.097355845 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091386653 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.112441218 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093615825 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.10100115 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090098094 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651986066 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08765971 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.099569007 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.985989093 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.108655683 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.160672628 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.101242389 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.282398407 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.110685505 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097271021 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.105009659 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.098392598 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.323969586 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.102359827 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.093461816 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.193778383 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.526105894 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.663878716 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.129150033 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.093089719 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.093931366 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.095632813 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094876559 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092950848 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.095344886 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283160778 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.128213849 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.104227811 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.656423856 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115377171 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.094224183 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.122778812 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.106035345 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.10185137 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093740787 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.095257611 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105934297 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109088583 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.11137337 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.238793035 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.10988669 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.095175797 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.61431539 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.102317243 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.094750844 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.095032019 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.130305914 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.094826592 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887589244 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375382425 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094904582 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.32079443 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.1162097 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.120477347 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.095406982 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099123739 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106434554 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.118639075 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.110710845 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.105567833 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095607053 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116968845 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672206266 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824717562 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.601377413 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116952381 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.125628745 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.104381825 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.776159628 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112881917 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096862342 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.31582909 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.787194904 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113275498 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.535447203 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.121065858 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.802619051 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.327089783 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333972722 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098501043 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.107379735 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.324125815 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.314710817 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.131729938 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.105539292 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102467442 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.084071539 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61557152 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122230215 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.179525603 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775953363 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11997763 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.100184684 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.101435836 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104769492 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468188283 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.11984196 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098196717 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097989289 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.11213075 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876753803 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.122765242 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098360117 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671694708 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.118122481 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.550630709 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119891523 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.292506311 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.130589061 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.103462851 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.106816479 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.116367181 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.359791332 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.325552249 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105956991 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.105668365 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.608861858 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.991696566 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.106984873 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101396786 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813743324 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10354862 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357398043 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.118074277 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.109104286 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106168217 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.100712115 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100194638 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.101637602 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.104974897 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0704104 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.566558042 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.10379907 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115706098 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114448095 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107088743 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.357840377 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.116956625 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.659961641 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355240992 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102159415 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.123556111 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.106825032 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112585279 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.089094053 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.100739283 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.100446851 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176253126 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.329519095 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114901975 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.087745952 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.111202861 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.318302091 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.102249602 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.110449572 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.32454223 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.121205471 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.106385025 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85323227 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.155482675 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.113127166 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110089368 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.102518064 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.15972847 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.191821796 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.295632869 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.135462846 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.113742878 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475929987 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135546734 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113615643 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.119329719 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.200171905 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110926107 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.118872925 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.883485051 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665369625 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85605456 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.671091959 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354192987 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.111654084 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112235935 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104536745 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.266659337 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10402795 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379138381 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104787085 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.11223914 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.127010074 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105541172 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111132255 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.336633992 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381789179 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105099258 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107622156 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110567412 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.104237392 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.114829867 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.314982097 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571490655 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63329831 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106601457 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.113443639 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.791456612 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398362538 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105846906 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105737487 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105166471 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.113486066 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133527374 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.11425978 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114966158 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.248068544 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333498219 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.74052404 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.134745806 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.136216151 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.624181555 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106765891 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.370484169 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.106469645 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.320878794 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.690883049 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.799205622 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380125129 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.176422679 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.300695304 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.126804377 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.268958536 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.11755306 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.113040567 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108111598 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108473627 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.108546577 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.116622807 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674676913 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.394813033 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.113704433 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.115319437 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.141514628 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.116239939 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.329749707 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787190164 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.332923864 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.11767362 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.111975865 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.106711712 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673192354 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358606015 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113346402 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.113887466 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.329541884 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.128574186 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.134332407 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.627180251 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.108786787 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633076551 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.082681819 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.129932593 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109028681 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.788313292 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680843136 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.14305468 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.584727198 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110795889 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114642735 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.389101141 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.118098449 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.109472095 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407225806 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.116316468 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.109877636 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.311408849 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.692019652 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.842135131 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.122338496 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131253072 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.116458015 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111412246 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134454058 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114802634 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118967586 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.49933974 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.133618395 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11162472 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.1243397 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.123052082 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115817867 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.131024572 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111579857 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.119072871 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.11846998 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.102857461 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.128710569 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.238932168 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637193362 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129833525 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.78971449 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.440409979 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.368219679 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.111250237 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.103889927 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.117961706 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112723396 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111874144 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11246278 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.10850512 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656610197 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.114575289 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.126386206 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.118282855 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.114561972 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.32341398 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.122104167 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.309116323 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138662358 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.135217184 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.098840959 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112229108 seconds)
  done (took 841.899208429 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.151785397 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.124957702 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.149331935 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.131159853 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.119002197 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.148420417 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.184637389 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.16830577 seconds)
  done (took 18.209966525 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.111585748 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.117414085 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.111294233 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.122883286 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.11139002 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.551389015 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.136819037 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.118906094 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.133288761 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.116781972 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.115018744 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.100318363 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.126434306 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.118730145 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.109188711 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.123818209 seconds)
  done (took 28.363666881 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.909794025 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.184043023 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.687971862 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.152008521 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.142090491 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.12186307 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.249761057 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.123970009 seconds)
  done (took 23.605117484 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.121851146 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.120877533 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.121838028 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.120961948 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.120543831 seconds)
  done (took 6.640689823 seconds)
done (took 1061.531516896 seconds)
(11/13) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 2.102429015 seconds)
  done (took 3.135553637 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.739787643 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.725755117 seconds)
  done (took 4.499896478 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.412369816 seconds)
  done (took 2.450465964 seconds)
done (took 11.120196902 seconds)
(12/13) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/8) benchmarking ("sortperm forwards", "random")...
    done (took 2.947821329 seconds)
    (2/8) benchmarking ("sort forwards", "random")...
    done (took 2.267044255 seconds)
    (3/8) benchmarking ("sortperm! reverse", "random")...
    done (took 2.856711867 seconds)
    (4/8) benchmarking ("sort! reverse", "random")...
    done (took 2.257196341 seconds)
    (5/8) benchmarking ("sort reverse", "random")...
    done (took 2.256509165 seconds)
    (6/8) benchmarking ("sortperm reverse", "random")...
    done (took 2.857680543 seconds)
    (7/8) benchmarking ("sortperm! forwards", "random")...
    done (took 2.94832483 seconds)
    (8/8) benchmarking ("sort! forwards", "random")...
    done (took 2.26713948 seconds)
  done (took 21.695146672 seconds)
  (2/4) benchmarking "quicksort"...
    (1/8) benchmarking ("sortperm forwards", "random")...
    done (took 2.113165627 seconds)
    (2/8) benchmarking ("sort forwards", "random")...
    done (took 2.112214202 seconds)
    (3/8) benchmarking ("sortperm! reverse", "random")...
    done (took 2.113022651 seconds)
    (4/8) benchmarking ("sort! reverse", "random")...
    done (took 2.113854347 seconds)
    (5/8) benchmarking ("sort reverse", "random")...
    done (took 2.114908076 seconds)
    (6/8) benchmarking ("sortperm reverse", "random")...
    done (took 2.112583106 seconds)
    (7/8) benchmarking ("sortperm! forwards", "random")...
    done (took 2.111832478 seconds)
    (8/8) benchmarking ("sort! forwards", "random")...
    done (took 2.112529263 seconds)
  done (took 17.938599474 seconds)
  (3/4) benchmarking "mergesort"...
    (1/8) benchmarking ("sortperm forwards", "random")...
    done (took 2.115080589 seconds)
    (2/8) benchmarking ("sort forwards", "random")...
    done (took 2.112925044 seconds)
    (3/8) benchmarking ("sortperm! reverse", "random")...
    done (took 2.114795362 seconds)
    (4/8) benchmarking ("sort! reverse", "random")...
    done (took 2.111782113 seconds)
    (5/8) benchmarking ("sort reverse", "random")...
    done (took 2.113410892 seconds)
    (6/8) benchmarking ("sortperm reverse", "random")...
    done (took 2.114505248 seconds)
    (7/8) benchmarking ("sortperm! forwards", "random")...
    done (took 2.114770168 seconds)
    (8/8) benchmarking ("sort! forwards", "random")...
    done (took 2.113501186 seconds)
  done (took 17.946152293 seconds)
  (4/4) benchmarking "issorted"...
    (1/2) benchmarking ("forwards", "random")...
    done (took 1.122815664 seconds)
    (2/2) benchmarking ("reverse", "random")...
    done (took 1.12665926 seconds)
  done (took 3.284480738 seconds)
done (took 61.90261598 seconds)
(13/13) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.128329439 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.587968691 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.163385864 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.115551432 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.155977142 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.145326075 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.331231556 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.158087475 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.328406413 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.13284945 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.137507963 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.127244887 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.854663293 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.271329341 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 1.933521226 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.047811409 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.927965623 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.114700773 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.649344573 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.386868327 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.148914842 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.124281015 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.927783045 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 1.955264163 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.110453 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.211003161 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.211075449 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.334825612 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.274417032 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.192616529 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.600286683 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.124237277 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.119766196 seconds)
  done (took 55.069589493 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.118680693 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.249571703 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.124286161 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.12522567 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.253123576 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.142637062 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.119729378 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.125735821 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.125616683 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.125066106 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.125221743 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.126837294 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.126934035 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.175494206 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.25497599 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.1383503 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.122090995 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.248305266 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.120840803 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.118717803 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.173471618 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.126185721 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.127721123 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.1761613 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.126719735 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.128049233 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.251662434 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.145952963 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.129134095 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.250208595 seconds)
  done (took 35.741958975 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.126920969 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.67604384 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.821756846 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.129955429 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.123010626 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.127467341 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.381283689 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.128273472 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.12572186 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.126374969 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.581344521 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.145667668 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.156192684 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.847636163 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.126106143 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.128639688 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.128537477 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.123754592 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.693863748 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.136663568 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.399784772 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.130117697 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.383905189 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.134232714 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.144329185 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.124314696 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.129385025 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.913381118 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.142044858 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.583737468 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.79931396 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.38652322 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.875539143 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.858007404 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.791390703 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.134851029 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.129532562 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.591550107 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.150802545 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.124589948 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.384499201 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.126302302 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.836683133 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.815745988 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.142114112 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.130352012 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.93150315 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.604534151 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.367619487 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.132180369 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.860367647 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.135763014 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.131651429 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.127097975 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.345332903 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.135714659 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.126746144 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.965533704 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.156640445 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.386862553 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.140388065 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.12791697 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.692229951 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.135050067 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.686717498 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.136530381 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.136430822 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.145591465 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.841633848 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.137850668 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.830943895 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.143638941 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.132687799 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.585015536 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.702401792 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.98543398 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.130300242 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.694525588 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.895764509 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.401047101 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.131772046 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.890249892 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.404743155 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.13202749 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.136093396 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.135373726 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.132271812 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.214100798 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.384006431 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.754943876 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.819565489 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.962592796 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.407332036 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.135988555 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.13070702 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.949327545 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.150696801 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.133815535 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.836170077 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.829302924 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.144316595 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.138007396 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.837514163 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.147810841 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.390879077 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.134531445 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.846512854 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.130653707 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.213391852 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.133311184 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.137322837 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.149878564 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.388851663 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.132715679 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.133154817 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.812457654 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.611476205 seconds)
  done (took 162.487179277 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.125733274 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.124867449 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.124382314 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.124125002 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.123971353 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.132050042 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.124725199 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.125048483 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.129989409 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.124793649 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.125062775 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.133290779 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.131592331 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.125637957 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.126102847 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.140560029 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.125483961 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.13462668 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.140094721 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.125695868 seconds)
  done (took 39.614111332 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.137012195 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.638564681 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.628199248 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.136196331 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.136763419 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.132612616 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.183019978 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.152588589 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.136495575 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.403258364 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.285515743 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.159790477 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.137842198 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.137051358 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.613527893 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.133550766 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.402093447 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.6390913 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.137727097 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.642121179 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.128342756 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.137025308 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.13232005 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.639581628 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.424739123 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.390968649 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.184898777 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.657334159 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.15353373 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.137827626 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.639595974 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.138941781 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.134266702 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.639094816 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.15200385 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.150515624 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.137619238 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.186194826 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.202409025 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.421046536 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.731423372 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.418750773 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.154135753 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.305200892 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.139343135 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.126330928 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.64789855 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.154637326 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.127731334 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.140606235 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.144705902 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.624161274 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.152148943 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.62449399 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.159115782 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.138869859 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.644167932 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.623577481 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.638745405 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.294443055 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.150754859 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.396155727 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.141372398 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.657832839 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.158938385 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.141106505 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.141916776 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.292664511 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.661582325 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.395258071 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.409971207 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.408521869 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.141554333 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.194212196 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.155171142 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.482001354 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.194540637 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.525601863 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.40940038 seconds)
  done (took 104.861091201 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.388898866 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.24007568 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.513881947 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.715795984 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.13803429 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.275946643 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.2408587 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.377854723 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.150980208 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.227510902 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.734228849 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.262261788 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 1.898963718 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.215253291 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.251764593 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.273159956 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.511150829 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.084129456 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.797194414 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.714639477 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.137256616 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.234439223 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.677561427 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.340196036 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.137520487 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.699260357 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.045535306 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.757885593 seconds)
  done (took 46.094400845 seconds)
done (took 444.904825277 seconds)
SAVING RESULT...
DONE!
