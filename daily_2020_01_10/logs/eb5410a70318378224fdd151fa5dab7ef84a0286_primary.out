cset: moving following pidspec: 10377
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.421065646 seconds)
loading group "string"... done (took 0.596613371 seconds)
loading group "linalg"... done (took 7.342084612 seconds)
loading group "parallel"... done (took 0.159695151 seconds)
loading group "find"... done (took 1.169656984 seconds)
loading group "tuple"... done (took 1.844533647 seconds)
loading group "dates"... done (took 1.333601375 seconds)
loading group "micro"... done (took 0.223745056 seconds)
loading group "io"... done (took 0.966959104 seconds)
loading group "scalar"... done (took 39.303868918 seconds)
loading group "sparse"... done (took 12.580494984 seconds)
loading group "broadcast"... done (took 1.005730256 seconds)
loading group "union"... done (took 12.982625156 seconds)
loading group "simd"... done (took 4.854195692 seconds)
loading group "random"... done (took 9.872224371 seconds)
loading group "problem"... done (took 1.845801831 seconds)
loading group "array"... done (took 21.751876111 seconds)
loading group "misc"... done (took 1.698879576 seconds)
loading group "sort"... done (took 3.334445628 seconds)
loading group "collection"... done (took 18.186288805 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.532865911 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125478466 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119178496 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119784067 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147764441 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112628576 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125080867 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086065152 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.836259675 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149242112 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117603955 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.431479901 seconds)
done (took 4.131448625 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.1769645 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086692566 seconds)
    (2/2) benchmarking "String"...
    done (took 0.085796825 seconds)
  done (took 0.211775087 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067527587 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12651043 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068909912 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06881673 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06941676 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068387312 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067934065 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067975338 seconds)
  done (took 0.581980069 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075522112 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071473441 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067936603 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06989284 seconds)
  done (took 0.331648547 seconds)
done (took 1.437857905 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.794239836 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.20337121 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187257938 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.413174979 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132342345 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.162318752 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.645981049 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327466038 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194819188 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.083076167 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.110413564 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.33849554 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.11520721 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.628781953 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074572944 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091411821 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137223394 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.419147324 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067518126 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082032041 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08893237 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128242701 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088778813 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075365371 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144287502 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067648353 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136996081 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080271774 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066299793 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213518898 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172708041 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.656849979 seconds)
  done (took 9.205068471 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099790803 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.101272431 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071170185 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125306246 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096985553 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069980192 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071405728 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069102724 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089453144 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12812366 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088747082 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101132763 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066840418 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07071116 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087963161 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.207791388 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083961889 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084021664 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072679066 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077973233 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108527455 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078420298 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077135005 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07672994 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130356932 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180648807 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100008572 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099734189 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068165185 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08264676 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117069874 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128091057 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065397114 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065990782 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123908438 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094214482 seconds)
  done (took 3.584411936 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.011567764 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.148455724 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093486229 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.138805264 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066928302 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113420991 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067403045 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083582782 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.216488773 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.39892588 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.601696784 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111289818 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104530471 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067509801 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069282259 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067103222 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.515024606 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096868115 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108830437 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081803863 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07064373 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06972159 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.355022278 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068319752 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064761602 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068739914 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057978927 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126658321 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068743743 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.949817917 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127783443 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067330444 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101303379 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164387299 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08816708 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142611992 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067593552 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.198372331 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.157546378 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07024242 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067584426 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084561831 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103847974 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11443989 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066100585 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067276621 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163140497 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067237976 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079236775 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.11208243 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.6453843 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155065117 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067365627 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066178106 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078478936 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.261684749 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091344877 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071747027 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066894306 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.178836753 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129706185 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067820953 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067005058 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068220147 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069478669 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.384467315 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066195197 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.857451935 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071363441 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079282101 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072445602 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071343062 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074779736 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074096066 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088408146 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066810746 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07672263 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067863284 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068854703 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069300713 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087446469 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.385851845 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067394884 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068458394 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065425349 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091842986 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099327037 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067298135 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067558934 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102418361 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068768556 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066488903 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107705345 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066905985 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083687168 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069394285 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113501969 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066714278 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.193878899 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068628377 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100519435 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066562492 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07131824 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101035898 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084402174 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070792684 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.430001045 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069241582 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065302667 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068951743 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065591763 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067742998 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066433135 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064933881 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079833417 seconds)
  done (took 20.174987517 seconds)
done (took 34.019769953 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.241879198 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083951636 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078765623 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077915807 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075416409 seconds)
  done (took 0.630348813 seconds)
done (took 0.713297798 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12726937 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10343043 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065167843 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098053455 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064569616 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103257989 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102169681 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082097712 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101499288 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064647359 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098082384 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064778238 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06452427 seconds)
  done (took 1.214961503 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08598759 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085318377 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070344026 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083971148 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064471046 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08404268 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082204166 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090599228 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08259277 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074179839 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064226188 seconds)
  done (took 0.935937251 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086005927 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087377019 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070897291 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082800723 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065801704 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085397668 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085412749 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089518906 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084404019 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077015354 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065880113 seconds)
  done (took 0.936988652 seconds)
done (took 3.146561365 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080449411 seconds)
  done (took 0.110229616 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.595737892 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.137265474 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082299807 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111863085 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190578668 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119830396 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27395299 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087369434 seconds)
  done (took 7.829306418 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.089952094 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082993902 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070790698 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070778447 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069072487 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069984415 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072339979 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073598483 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073644839 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074529929 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070102558 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074292104 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071184419 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073824086 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071527364 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071048126 seconds)
  done (took 1.369387052 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095217553 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094078218 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075998975 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078311666 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075177843 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074142961 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076179914 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07680574 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072983535 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074115281 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07704049 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076021775 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073994002 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06680435 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076044294 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077491376 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072996213 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076150354 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075092044 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075157273 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074345482 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064118845 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071662975 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074209425 seconds)
  done (took 1.993939393 seconds)
done (took 11.35982675 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.118754001 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07157276 seconds)
  done (took 0.216781955 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083893841 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084669 seconds)
  done (took 0.215743253 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086795047 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067024758 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09065413 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079062134 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065952915 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065857211 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087933079 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066581683 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065452403 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066037822 seconds)
  done (took 0.787633238 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070847531 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.08061649 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070235036 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082067746 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073901936 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063835238 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073116027 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067336816 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077039866 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062736467 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071399404 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082547339 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070982453 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084652986 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072601482 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068991672 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071141405 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067371586 seconds)
  done (took 1.368021628 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066230383 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068965504 seconds)
  done (took 0.203892513 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068629369 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065419477 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068937852 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068789259 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065826726 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06433463 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065478598 seconds)
  done (took 0.513664185 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400004151 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113393654 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.318120165 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073208653 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083771679 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257431418 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065314292 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070452183 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071044815 seconds)
  done (took 1.548285122 seconds)
done (took 4.93326148 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082619073 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08742974 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097315282 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.376870587 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092358117 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06619207 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114143285 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188320808 seconds)
done (took 1.180822109 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213867692 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.651253158 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.409902487 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.205964824 seconds)
  done (took 1.313433383 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347053991 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08807955 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.061122236 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069506813 seconds)
  done (took 0.634411105 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068390894 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07180572 seconds)
  done (took 0.19529619 seconds)
done (took 2.425554058 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069335608 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088262781 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06731554 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067980038 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.066514993 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068201458 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.06509137 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065923086 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068309811 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068341155 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.071223624 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068989131 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068115685 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065901576 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064465697 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065861783 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063637163 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063710403 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065141374 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065779584 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065987503 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068541051 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065575757 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065579744 seconds)
  done (took 1.703146066 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087493306 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068363094 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073558208 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073403602 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071770898 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074472351 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07360973 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068162848 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074322814 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070974577 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071360133 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071571793 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070418024 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071634291 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070517566 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071673859 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073435396 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068533866 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070483089 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072364688 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073634531 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068587755 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072095848 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073263182 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071546752 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073885624 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070962498 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068358234 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073830992 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071169769 seconds)
  done (took 2.240068573 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072458526 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065633684 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066289399 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072314632 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065709709 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067204189 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066158881 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065990371 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066474251 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065343153 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.067042805 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065231524 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066329057 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067215356 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066533641 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069551476 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082003593 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066044767 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066196044 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066516214 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069677256 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065932829 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065550726 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065548949 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065436599 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065001201 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066108119 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065516729 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066539303 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065699165 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06874235 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069910583 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065457403 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07270226 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069376868 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065170206 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069702915 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06535217 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066127388 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065460195 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065612237 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065639347 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065404678 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072514759 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066410175 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067030009 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065668062 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067221729 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066567756 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068621721 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.065630792 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065752865 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067720285 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067258048 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069563164 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065330281 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066090996 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065575209 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066354268 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065471184 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064847179 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065280279 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068039548 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066430221 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081430245 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072673918 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065718198 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067840706 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066626421 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068332929 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067389143 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.193673627 seconds)
  done (took 5.063163786 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094629116 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088762062 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065200472 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06612396 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061995834 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06322309 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069698772 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064621711 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065781592 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083452015 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064159316 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065225487 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065490266 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068216053 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064379749 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065983436 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07386754 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061874373 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064735009 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067599621 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063596023 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069537414 seconds)
  done (took 1.631180805 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.158233347 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071112326 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10547288 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075474568 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07079623 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076036885 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070348351 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070598639 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069607571 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067771263 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067343857 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070200492 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070046133 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067882421 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067019526 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067074396 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069644386 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067393851 seconds)
  done (took 1.452781531 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078742469 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065892048 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087177946 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06569444 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066105599 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06898225 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07049485 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074770607 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069267746 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065915999 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074240382 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067922914 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068021867 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065471067 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068106747 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065768506 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068353916 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065239521 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073909653 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07003387 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070080627 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07350841 seconds)
  done (took 1.616263886 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082611236 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070061685 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081944385 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068943516 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061125816 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064701745 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070241852 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066693268 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069933348 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067986931 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065339618 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063911445 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068390843 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065573739 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068776658 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065644954 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067811223 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066264395 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068124605 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06140872 seconds)
  done (took 1.436810068 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090168927 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07010987 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070016011 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0781517 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070519333 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069990083 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078644492 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069929388 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07061237 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090508471 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069844282 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069465293 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077576499 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07435304 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069719252 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076373686 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074822881 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075201869 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067265216 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067647176 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088449572 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067538916 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074562219 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067292516 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067662261 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06735846 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06760784 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072284588 seconds)
  done (took 2.121338939 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06933918 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068191518 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06528565 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066015329 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065852146 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065379668 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06549557 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06562905 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067802515 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065397597 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06826493 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067796774 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06775684 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067981077 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067623501 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068019932 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068129091 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065580607 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065030959 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065541996 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067820864 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06774685 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067977825 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065665914 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065610387 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067929968 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065172538 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065369421 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068083139 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065483517 seconds)
  done (took 2.086461266 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078079106 seconds)
    (2/2) benchmarking "in"...
    done (took 0.0766882 seconds)
  done (took 0.230121338 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064768137 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082485291 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065125078 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071944185 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072207972 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069008836 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075178682 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069599284 seconds)
  done (took 0.621773995 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084832396 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079941421 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069083177 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082159419 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079389506 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085495146 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136267198 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06692225 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073155531 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065516071 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080377899 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065686757 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072717775 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066675669 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072639987 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073185919 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063616679 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07190795 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068453418 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064649884 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068196383 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074883554 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069450984 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061532167 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067441441 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089025698 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077314642 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065424748 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069034541 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073920347 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07380055 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06180988 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068299254 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068618473 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065591154 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07818164 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083732969 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071139132 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077012564 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069062641 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07857367 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062667432 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07295379 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074806482 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078538102 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068968255 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068369328 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062848787 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065954264 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070261077 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063322242 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071278585 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062638553 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075431073 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072194966 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079021433 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066865474 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069335361 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071176272 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071518875 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075588592 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070958004 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070839998 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068196352 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078173248 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073431955 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077663702 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063344191 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061984387 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066223751 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078706736 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091900722 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074826733 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069215894 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069715985 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066172887 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072154436 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069446339 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073875852 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074686509 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068690552 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074000096 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075886531 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068140291 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070932249 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076279416 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066322345 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070878696 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065723892 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085596646 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067165113 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065758215 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066528703 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078795098 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071409149 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067979796 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066090193 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075619993 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062642707 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068128913 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068771737 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06751056 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076743816 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070084502 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071651868 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074588175 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072817557 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065275048 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068128294 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063686066 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067865053 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06610537 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07431285 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061182332 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070157136 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067254929 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065507026 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073510727 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06371822 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.0648464 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07315999 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070947815 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063326421 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.18772285 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070242993 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066860952 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069704486 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075216294 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065545475 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061470203 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061881476 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070278671 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066734455 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071811331 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073314616 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072236609 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062831336 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06655903 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074334564 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077484921 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069033914 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.0694512 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075047006 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070540473 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068460386 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075826346 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070956226 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067704177 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074617815 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069875591 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063132701 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071464859 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071263158 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067382955 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072416527 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072042425 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071085495 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069711068 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067044978 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075692884 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069277486 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067583975 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068904163 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066379478 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076963839 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06841449 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061596235 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063445288 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074603081 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064573269 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065513865 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065131287 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068340146 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067018571 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065211479 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067452309 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071193397 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079070077 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072601099 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068899748 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073804053 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080944781 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068086477 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070414395 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067996184 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068721948 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068939252 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077452684 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072317529 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070596444 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068676654 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062907401 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072401572 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07531214 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067940562 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066220743 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066799951 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071657199 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073989298 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072346556 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06847583 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066233931 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06914168 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071218699 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071006083 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067908771 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067135875 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074317125 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066240237 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074909407 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068915071 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078926072 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071818064 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063292467 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070997542 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066378713 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074763307 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063145913 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065767498 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067478002 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068757213 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067667397 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070666336 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061905849 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075435045 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076554476 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069326604 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067519881 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067881631 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074945341 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067974269 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070182297 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069362679 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072180782 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076307715 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064798271 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06919494 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075502719 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065069856 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059449728 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070243754 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063309746 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063916835 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064368816 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063306439 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067853987 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072530446 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071751179 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058850413 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.0672887 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063446891 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.193741937 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061973583 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071441283 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070095929 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068032568 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07379889 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067603675 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067221947 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071339292 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066930008 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068047359 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068002937 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069638925 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06761264 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068468684 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066678197 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06955277 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065999174 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064405152 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068385098 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066690428 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066861767 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071236813 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066282451 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067603472 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069338348 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066912933 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067409887 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066983246 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065726378 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069748116 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067747816 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068636241 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069246531 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062568615 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075555222 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067862987 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076131919 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069096565 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064844771 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075154223 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070395516 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071385745 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067598006 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066557396 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067754828 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065913287 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069173505 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07337707 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064925504 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077077771 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073680009 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067162625 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069164092 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066786735 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067993779 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065278777 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067183783 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066728308 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06656771 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065797559 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07072891 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068900169 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066882979 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067729482 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066889647 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067557398 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068240023 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061805734 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067627256 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067567993 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068068053 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078670526 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069116633 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067761987 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067874028 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069079208 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067477521 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065268231 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076156989 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077792899 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068779935 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075353584 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067768869 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.0703496 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079863941 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062570773 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066600433 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066108753 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066956693 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076095193 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068849571 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078771125 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068795694 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067801174 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066026239 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069278458 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067128906 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063096271 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066235704 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072687378 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.0677584 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067635142 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068658777 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071010623 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069729611 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078800836 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06795193 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069870683 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069496231 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065922541 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067792203 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067588121 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071934092 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067366082 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063658252 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06245524 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065794621 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066544215 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067183196 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067946114 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067054366 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071976313 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065074362 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068121476 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067921362 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059935054 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068279433 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065190187 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064980819 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064824937 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.201884972 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071214531 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068670124 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076118476 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067646711 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06800508 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067732801 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064540402 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066560012 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066616929 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067094064 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066444346 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068910998 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074783841 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065759397 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071285811 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067620573 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067746518 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073008292 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067594166 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070077399 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073292056 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067467224 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068609744 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075134286 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070422658 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069694183 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067195633 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06795748 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072518952 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065826616 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073143912 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066773992 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069576842 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070789128 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067140106 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068282383 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068776782 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068112056 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075257427 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069486956 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068269836 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067918153 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066099072 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069720236 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071035519 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07599539 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07019685 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070666827 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063106881 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064085537 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067457287 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064934775 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069971848 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071114744 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073857617 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071072548 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06853811 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067742689 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077859434 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074651381 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072195078 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066535699 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072059916 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069342314 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071280983 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06954819 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068891059 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069801289 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072604928 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070241337 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067785019 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074733753 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070799407 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06749085 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068288334 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067970494 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06722497 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061397107 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067475538 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068650722 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071359214 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068879882 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066740367 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077169691 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064512678 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067371248 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070087871 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065601422 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072316721 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063319516 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070207767 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069602721 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069585191 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063462603 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067008794 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064686121 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069038393 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065976672 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061795688 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077510951 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076307871 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069973738 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065555397 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065206161 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061472991 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061288635 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065907215 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06802881 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068210894 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076605277 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066091588 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065966731 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061556176 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066913493 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068954029 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069530791 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063420797 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06097373 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06505529 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069563622 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073553719 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066741406 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067677136 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071026114 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070220108 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065211725 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070191024 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064644521 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071556912 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0804972 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.200501765 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067970388 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073879804 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073912197 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067685231 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061655026 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068138385 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070670223 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068037037 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068857693 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069494935 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082786076 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070746263 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066098546 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065945258 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069664416 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066467066 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075436871 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068080994 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067286481 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072003595 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068808648 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075509665 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07012554 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074525138 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069843116 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07054952 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066464832 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067223698 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065105602 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066157125 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068173848 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067243772 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071192046 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074544333 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066426855 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077480582 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076366071 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069211364 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063535282 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066436494 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066426128 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061640509 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067510607 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065131979 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06480942 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065378256 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065833734 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067914755 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072226373 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067900388 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06713653 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066545455 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060757889 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069058307 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068915738 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067676712 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063015262 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.0663122 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06726824 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070236627 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069714704 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064095895 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068098208 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068336485 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067867081 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061627663 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073219494 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065788558 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068667789 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065700551 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066797417 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067068265 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070072143 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071381096 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067199035 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068720847 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070258332 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068687729 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064765285 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065805124 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073818243 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065598924 seconds)
  done (took 41.961077832 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103127783 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063346293 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06157396 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061396397 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07368704 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063207848 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061478353 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064339887 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063690732 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065218481 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063361647 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062790508 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07246268 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080525436 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073852802 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066930289 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061494571 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063042143 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061308257 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063081036 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070617222 seconds)
  done (took 1.568088149 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075872843 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079350072 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075996406 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082525249 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071172994 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07035393 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075580863 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070505062 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079777424 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071890942 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079707896 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070451865 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071791902 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072987701 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072045875 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071235521 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077790702 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070364156 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070094385 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07517009 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070846454 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075020644 seconds)
  done (took 1.707378942 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06962154 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067782862 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068352581 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060899302 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065904783 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061440992 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069020281 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063313752 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069624859 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06522781 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06560922 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064607527 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068546628 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06068026 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065917852 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063450031 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107963474 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069414869 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066282616 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067277154 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061051053 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067485026 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061111904 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061864392 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065364332 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069056336 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066332549 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064014053 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066181819 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064526837 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065817958 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063748137 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067633369 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066210135 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065178041 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06513803 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066979962 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067593714 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062840467 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06584601 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068431322 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063366889 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068145162 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068996844 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065726763 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065383186 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06922401 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065798773 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060470197 seconds)
  done (took 3.342791972 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082246704 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109745508 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067735365 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091209008 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080759746 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072710867 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069433016 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090312845 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063356825 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06473007 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082110651 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079457557 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065650399 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070321661 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069634902 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066037334 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066350377 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063940116 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068877104 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064425216 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069061488 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071726068 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079435639 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077810121 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068840997 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064093512 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064566817 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069279046 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076947499 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069381517 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07006643 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070108399 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080220094 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070728948 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064013129 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066991186 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080811137 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06544202 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06823732 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063230013 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068885244 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07114166 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072635639 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08149459 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06703839 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07216098 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065131822 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062480547 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077078808 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067841317 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073096554 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078884478 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06953456 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065395556 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069397354 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07997122 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065096153 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064045063 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067989479 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077386657 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063157073 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068944068 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078020083 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067093865 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071684064 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078380837 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070382032 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068787908 seconds)
  done (took 5.116169335 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078736103 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096648671 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083501576 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083933531 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076060926 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075604928 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075935148 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07578521 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0760164 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08066105 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076229362 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115686343 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070911272 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078267429 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075638639 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075277488 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076141988 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075578911 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075545887 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075462659 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075445328 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08267141 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075571544 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08280949 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079413857 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070442111 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075109746 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075603975 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082385254 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074887877 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087466476 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075022081 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075014565 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082495867 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079348603 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074986252 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065157797 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075063096 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075394805 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075479486 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07049807 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082778277 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075126712 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072172748 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076264653 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074955986 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084287467 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081447336 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078197093 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079439824 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075092984 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082683952 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075188118 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075629845 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083453233 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085376777 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083304432 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08272519 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076033485 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083065866 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083411401 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085848253 seconds)
  done (took 5.03060983 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085004639 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074771975 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082431177 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061962393 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063888686 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071465542 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064600957 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064308959 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074329717 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074710262 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077241018 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07169827 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074997863 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076958635 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071906304 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075427079 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072388877 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07174808 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073692785 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071513575 seconds)
  done (took 1.59732384 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076978638 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083260017 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066837209 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071774789 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069082785 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07104684 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068361242 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068889593 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066699336 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069448845 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075924822 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075712608 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067020612 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071534008 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075752466 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071013644 seconds)
  done (took 1.230143579 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086534341 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073906667 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080126026 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066603001 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06739656 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062674406 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064936097 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061550445 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061801059 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078205143 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065612474 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075508228 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065517048 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065134344 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062129207 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07073752 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061631577 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063080616 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065708494 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079572283 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070160066 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064386999 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069329891 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066972803 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068995244 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070419281 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064982862 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065658099 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063109646 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065825982 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06846903 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068979509 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062755281 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063587408 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064222566 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063519929 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065681489 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066699652 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070905941 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065345147 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06384761 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067855325 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065427088 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066391 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061391084 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065457954 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061419863 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068035985 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063584884 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067421618 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065169732 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067401088 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065696585 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07172759 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068303097 seconds)
  done (took 3.77216153 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081307667 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070937255 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061095119 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06406002 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069208421 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067671218 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069425978 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066725006 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066926157 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064202143 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0678796 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068526829 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067642752 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069660682 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068214731 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069523018 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061851432 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066804372 seconds)
  done (took 1.33482779 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073361721 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067408679 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073704782 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066255982 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06553354 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068339466 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061886875 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065101492 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065082242 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066145911 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066207787 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069130948 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064356195 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068212918 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065908718 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065922567 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068366639 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065159451 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065648609 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06204228 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068436226 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06451722 seconds)
  done (took 1.540450036 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097223683 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084573719 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140553896 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07894874 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08475947 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07181721 seconds)
  done (took 0.633976967 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094179425 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101682884 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066679065 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069485363 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07635643 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070188924 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070133135 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070044141 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077607251 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076578305 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070270751 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078412417 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078041338 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078289969 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075581838 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07608869 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069331069 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069948118 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065588014 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082988051 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06997821 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07792055 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069652892 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069492127 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07001306 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077089986 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077628292 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075750295 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069478464 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078029894 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075107068 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069986709 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078046056 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075368103 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068837774 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07808454 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06975026 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083293846 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07497831 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077634187 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068693357 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075400999 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077877538 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07416814 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077995583 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070024946 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074318175 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069818488 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06985176 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085311144 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076089409 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077454162 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077796068 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078792002 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078645475 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085609011 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075673958 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077943813 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075733291 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07587606 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077374579 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075947411 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077263945 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075777381 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075352294 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077350963 seconds)
  done (took 5.054249488 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106814865 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066467228 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071296864 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077100406 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078388233 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071342361 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07101477 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070726266 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070913762 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067351161 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108976448 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070998076 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07835815 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078344888 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070911572 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069833441 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069829515 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077429328 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067215539 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085955133 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069834221 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077479437 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077548005 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077099228 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075538714 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075326499 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070038346 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069735974 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069682783 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069988638 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074338516 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070583221 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077589536 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066845941 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07691938 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069765432 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069797994 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074476176 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070077543 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075769952 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07735856 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083313932 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069979027 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070394457 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075807399 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069998485 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070296607 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067018127 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069989263 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066416306 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075423435 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076077741 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075272979 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077671928 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070004078 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070451261 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069758162 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069999792 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069676857 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075500686 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077097541 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069687681 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085264229 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06994111 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070215326 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077588175 seconds)
  done (took 5.037005478 seconds)
done (took 99.176422646 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.188588004 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165809107 seconds)
  done (took 0.391176656 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070924462 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099339977 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076196028 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128555412 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066269234 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100523375 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098606482 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078701558 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066626241 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066313984 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066588959 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069439134 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131312033 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066071018 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065944979 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068520229 seconds)
  done (took 1.380074048 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101249251 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162423297 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102483753 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065354101 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099388474 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072965089 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064926005 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076036337 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071502885 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065296757 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072810968 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071024196 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065285478 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071426921 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070878676 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072057999 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06547778 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072422478 seconds)
  done (took 1.515997042 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101098821 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091709937 seconds)
  done (took 0.271125502 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15888481 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133738093 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202265017 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.354389081 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.169440157 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149120071 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.144850077 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144198102 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116638336 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138750745 seconds)
  done (took 1.772147874 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102315233 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155149825 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.267675475 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119117302 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072706482 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09445074 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11871107 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078996777 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080892469 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079796657 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080161704 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076458277 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099313701 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073363302 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073497284 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076196332 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103007547 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072757902 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075019975 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075824946 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099903324 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06597734 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073603984 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072805317 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07684099 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076770356 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06564928 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065485842 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075463588 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074152594 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076456317 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09245404 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076896135 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105414616 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071051622 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106417277 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077195995 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073310876 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074422824 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073745134 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077832728 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078015685 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073012336 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07606677 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065943284 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076448691 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065365057 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06587235 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077238323 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066771159 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077269887 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076358454 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105465227 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066945077 seconds)
  done (took 4.702954721 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105796053 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106828233 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071560015 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111277344 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103062577 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072506006 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10315215 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095348362 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104366858 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070527659 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068313996 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070203075 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083314964 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083778108 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116892454 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108210853 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074866486 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071257391 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107194752 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104999731 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068779421 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096799559 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091285168 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103276175 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067237828 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070253387 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068250677 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070300967 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076912619 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07852517 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069910071 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081011291 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085113292 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078047187 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067289229 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067826654 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068316716 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079520548 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078934981 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078790492 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077331697 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067967511 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067637946 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069529818 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069800739 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067347711 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078731694 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079700816 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078449675 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069281953 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069945677 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068121773 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069309609 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080125145 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077143468 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08034869 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079850445 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068280014 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068135838 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072522591 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080776079 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078899326 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079664977 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069768421 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078696352 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06829628 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080138248 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084393607 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068172311 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069909689 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068057991 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0698031 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069369285 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078376191 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077747314 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069542588 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069273111 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068526753 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080010863 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077835921 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068131107 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076451758 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06719835 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068048342 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06931295 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069217128 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07722692 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079888458 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069393585 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068285588 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069090626 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068136963 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067109716 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076699611 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079668944 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079277568 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078680691 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068905063 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07767609 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07681091 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069520903 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077816607 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067442975 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06912317 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067994935 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076431871 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075146437 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077618771 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067755376 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066528951 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.206862081 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081516967 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068806466 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078798995 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080489254 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079166071 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067565863 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080711227 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068636065 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079363743 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070331108 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079118671 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069320536 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080190463 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068568993 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067909663 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068754918 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080227264 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072933846 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0692436 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069610412 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07005424 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079704368 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08237855 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070275172 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078554649 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078232406 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071015548 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078691755 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068869603 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078913071 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069899292 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069834905 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067366559 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081016333 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068842471 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068572296 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069703543 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080264139 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068439177 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080006433 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078839756 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068378131 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081122091 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080330327 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077519236 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080010447 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070548971 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068070899 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067993094 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069282373 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077997808 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082474175 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071608127 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07035614 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080502006 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083036294 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069620232 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080703412 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081058868 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081100411 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070398477 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07205972 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083207955 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080651925 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078092681 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078173807 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077880445 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068323887 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077286417 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078199335 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067950481 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084319801 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068364722 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082893191 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078514809 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.0765201 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078361892 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079910055 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079526309 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079945885 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082939681 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067858655 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068043994 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079375612 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067719748 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068928544 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077640462 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069178982 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069499471 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082842393 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068464497 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079388776 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068065135 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079050154 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067944543 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070292857 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083653901 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06821634 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069634102 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077714211 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069565246 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075527285 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078562975 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076253542 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067169456 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068897663 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.0779051 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076868416 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067084717 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067057942 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069336071 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.208739196 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077856033 seconds)
  done (took 17.416994862 seconds)
done (took 27.595576302 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211753426 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152965167 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182298756 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118440801 seconds)
  done (took 0.795239026 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.11902248 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101657219 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093706933 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064928763 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099209836 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06502665 seconds)
  done (took 0.626732569 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314033197 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210289203 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188507702 seconds)
  done (took 0.78440622 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20277655 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188133589 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.415729763 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.262756266 seconds)
  done (took 1.261004879 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144213796 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08838349 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066724245 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083603015 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132697708 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159948823 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10045169 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125231609 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078166828 seconds)
  done (took 1.112232227 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149006852 seconds)
done (took 4.803114697 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.130635891 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.120429626 seconds)
    (3/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.190838958 seconds)
    (4/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.180234939 seconds)
    (5/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.165868395 seconds)
    (6/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.228317456 seconds)
    (7/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.179360569 seconds)
    (8/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092629943 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.197216035 seconds)
    (10/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090433253 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071836125 seconds)
    (12/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.176874538 seconds)
    (13/309) benchmarking ("sort", BigInt, false)...
    done (took 0.192787133 seconds)
    (14/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.157717648 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077384804 seconds)
    (16/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.229165262 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073028095 seconds)
    (18/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.226168144 seconds)
    (19/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.063944066 seconds)
    (20/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075207765 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.139525247 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067257386 seconds)
    (23/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080303604 seconds)
    (24/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074810364 seconds)
    (25/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.089002173 seconds)
    (26/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051724306 seconds)
    (27/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.181973853 seconds)
    (28/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.193123008 seconds)
    (29/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076972934 seconds)
    (30/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.157377579 seconds)
    (31/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.1437553 seconds)
    (32/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.190614964 seconds)
    (33/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076857163 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.11420833 seconds)
    (35/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07209328 seconds)
    (36/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065543089 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071683575 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123544901 seconds)
    (39/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.227492031 seconds)
    (40/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068611469 seconds)
    (41/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099037137 seconds)
    (42/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.083219411 seconds)
    (43/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.157044857 seconds)
    (44/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.0839638 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.100968792 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067917948 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089924049 seconds)
    (48/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.185832312 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074985601 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.115987917 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085488249 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143137746 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13029575 seconds)
    (54/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.113994996 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069674372 seconds)
    (56/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052727564 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.153156698 seconds)
    (58/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079344209 seconds)
    (59/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.124176692 seconds)
    (60/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054168103 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.194752299 seconds)
    (62/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.11075156 seconds)
    (63/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073112364 seconds)
    (64/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077802267 seconds)
    (65/309) benchmarking ("sort", Float64, false)...
    done (took 0.132703312 seconds)
    (66/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073807938 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067133676 seconds)
    (68/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091106346 seconds)
    (69/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.144874105 seconds)
    (70/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073537018 seconds)
    (71/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051314202 seconds)
    (72/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.226511313 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123185967 seconds)
    (74/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074078567 seconds)
    (75/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073561478 seconds)
    (76/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072202435 seconds)
    (77/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086622233 seconds)
    (78/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069026462 seconds)
    (79/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072692723 seconds)
    (80/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.191998475 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094419188 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.065859891 seconds)
    (83/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.141064079 seconds)
    (84/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.072763686 seconds)
    (85/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066347356 seconds)
    (86/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080493588 seconds)
    (87/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076962188 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050759561 seconds)
    (89/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.11213818 seconds)
    (90/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065582544 seconds)
    (91/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.285168536 seconds)
    (92/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.157202927 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06584125 seconds)
    (94/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.15061175 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073260632 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147976917 seconds)
    (97/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051463001 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.093424477 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148522135 seconds)
    (100/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.177177183 seconds)
    (101/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.162692888 seconds)
    (102/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.101142526 seconds)
    (103/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051132522 seconds)
    (104/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072501077 seconds)
    (105/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072749342 seconds)
    (106/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.112014644 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.113607974 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072695343 seconds)
    (109/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069145557 seconds)
    (110/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089539906 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138680491 seconds)
    (112/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078239349 seconds)
    (113/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050818639 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143859535 seconds)
    (115/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.205395139 seconds)
    (116/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074183144 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.132015268 seconds)
    (118/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050455307 seconds)
    (119/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054072912 seconds)
    (120/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.105529412 seconds)
    (121/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.194257435 seconds)
    (122/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073235065 seconds)
    (123/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.122140043 seconds)
    (124/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051593999 seconds)
    (125/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072440378 seconds)
    (126/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053329071 seconds)
    (127/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.14769336 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.092738542 seconds)
    (129/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.112149955 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.140140317 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075815818 seconds)
    (132/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063320094 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074775316 seconds)
    (134/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092135968 seconds)
    (135/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051560109 seconds)
    (136/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072000285 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052985786 seconds)
    (138/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073550802 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071392419 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06472608 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.085434812 seconds)
    (142/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119627328 seconds)
    (143/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050895879 seconds)
    (144/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064204788 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.182298673 seconds)
    (146/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051526893 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090807466 seconds)
    (148/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074177635 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072151285 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090907078 seconds)
    (151/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07588782 seconds)
    (152/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.156201977 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093035845 seconds)
    (154/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.194604304 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072132084 seconds)
    (156/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.163121384 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073703064 seconds)
    (158/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.154247436 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065892513 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074681849 seconds)
    (161/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08248936 seconds)
    (162/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082320328 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.078338792 seconds)
    (164/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091315852 seconds)
    (165/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075707433 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.097285183 seconds)
    (167/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.055373347 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052878787 seconds)
    (169/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.159215832 seconds)
    (170/309) benchmarking ("sort", Int8, false)...
    done (took 0.144017272 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067741851 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085989459 seconds)
    (173/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066311544 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074475311 seconds)
    (175/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072552266 seconds)
    (176/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075099362 seconds)
    (177/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.162579235 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.075650931 seconds)
    (179/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06179101 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181836973 seconds)
    (181/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067905886 seconds)
    (182/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06150824 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066081033 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114945046 seconds)
    (185/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050082009 seconds)
    (186/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052634423 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089805523 seconds)
    (188/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050297586 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168984057 seconds)
    (190/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065872011 seconds)
    (191/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076067367 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088322324 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064540612 seconds)
    (194/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.050808416 seconds)
    (195/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050603119 seconds)
    (196/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063616798 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064847578 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071681602 seconds)
    (199/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064574295 seconds)
    (200/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071428177 seconds)
    (201/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051637305 seconds)
    (202/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.15396605 seconds)
    (203/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067378231 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073475477 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063920759 seconds)
    (206/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.216170467 seconds)
    (207/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052227983 seconds)
    (208/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052342376 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089033731 seconds)
    (210/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091586609 seconds)
    (211/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053345747 seconds)
    (212/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052730231 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072813703 seconds)
    (214/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051742362 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064721994 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.113537922 seconds)
    (217/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05225095 seconds)
    (218/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050758882 seconds)
    (219/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079501745 seconds)
    (220/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051516838 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091329504 seconds)
    (222/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065417204 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075578619 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073309805 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066095674 seconds)
    (226/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067756807 seconds)
    (227/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069877423 seconds)
    (228/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051397575 seconds)
    (229/309) benchmarking ("sort", Float32, false)...
    done (took 0.132082661 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092043365 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051829249 seconds)
    (232/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077060279 seconds)
    (233/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072750962 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052152248 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071017411 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063800491 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.182950993 seconds)
    (238/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065316158 seconds)
    (239/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068092273 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06566557 seconds)
    (241/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051084335 seconds)
    (242/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.070145825 seconds)
    (243/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074475793 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05092797 seconds)
    (245/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073096697 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139189023 seconds)
    (247/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.101417076 seconds)
    (248/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066437795 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176227512 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.287172531 seconds)
    (251/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072887219 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093453724 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182655694 seconds)
    (254/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065948961 seconds)
    (255/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053412136 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112535355 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089627259 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141152933 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065269666 seconds)
    (260/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083063215 seconds)
    (261/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051243507 seconds)
    (262/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066850475 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065358849 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087884698 seconds)
    (265/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079008002 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065331121 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091257448 seconds)
    (268/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179996243 seconds)
    (269/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073113953 seconds)
    (270/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052181232 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072371075 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067518434 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068101063 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07465082 seconds)
    (275/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053576679 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051164306 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089499163 seconds)
    (278/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.052990306 seconds)
    (279/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054048462 seconds)
    (280/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.065660817 seconds)
    (281/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07583671 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091737227 seconds)
    (283/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181087301 seconds)
    (284/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053432266 seconds)
    (285/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056513897 seconds)
    (286/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05540574 seconds)
    (287/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053583453 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075563604 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066238675 seconds)
    (290/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068441267 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066057627 seconds)
    (292/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052813202 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067689867 seconds)
    (294/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065454428 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074951721 seconds)
    (296/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063215015 seconds)
    (297/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081819192 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.099189888 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073849323 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090617415 seconds)
    (301/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054493353 seconds)
    (302/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06940405 seconds)
    (303/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068588199 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073156578 seconds)
    (305/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071947217 seconds)
    (306/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.053274938 seconds)
    (307/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052890312 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067796385 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067701408 seconds)
  done (took 29.790648494 seconds)
done (took 29.882601051 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085325489 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096841744 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075990154 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093115574 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080642101 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076795773 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072225838 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079361452 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080755416 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084052473 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079234519 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054008149 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075293607 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07433907 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076388316 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09377589 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079050605 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073835431 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073359608 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064195784 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072578223 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06558465 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066504542 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054019449 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078165313 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072514902 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073167073 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074357475 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065766267 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.0659062 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069274785 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073446981 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064741158 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077571848 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071980431 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07273934 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074352286 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07628265 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067059008 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06579686 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074067536 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065351144 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072549196 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073407876 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071818266 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071125695 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072848832 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077442127 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091643322 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06719537 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074805866 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075946625 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075779167 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073011632 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069428962 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072750189 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07091993 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092193696 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074960305 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070290616 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076395679 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076864976 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073280846 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075220585 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075140632 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077452916 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078163043 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073143546 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076884464 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073440132 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067342876 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075016547 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070755989 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06756865 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078808597 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079365032 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066175955 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073154453 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074949446 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073313562 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066423653 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069400593 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068984417 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073792781 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069740823 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056412404 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070972016 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07383924 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065950462 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074858358 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071833778 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071855823 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067136962 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075819852 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064480386 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071994059 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067262829 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067285207 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068979592 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071788763 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067252958 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069762094 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.0766235 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06852618 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074079255 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081731062 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067439856 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073737806 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063853485 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065823988 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081939194 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076753734 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.0671448 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070007467 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065917118 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074618514 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066235517 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066910036 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067300742 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067376187 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.0741664 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067690383 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069343811 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073827984 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078362429 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064702076 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069173885 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068063252 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064202717 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070202939 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064835574 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064129624 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065952749 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060603604 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065968485 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065685117 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073565344 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069036909 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074015803 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067653697 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074116702 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072134529 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.208085186 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071739079 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064679956 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058797353 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067883253 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067491806 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067028303 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065231038 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066999552 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065279607 seconds)
done (took 11.275373998 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068919982 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143051171 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09691828 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096440766 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086308816 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067052239 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076379956 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102037626 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067961073 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102237058 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087712125 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085841235 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115067924 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064958395 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065387452 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069588643 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067114311 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08177994 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101798761 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08677927 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116123411 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065716075 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093703092 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089751122 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08913233 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094146359 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069101905 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069690314 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069560916 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10180456 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088048311 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070395805 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066112221 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098301262 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093562107 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08351577 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06611266 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083317977 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066328982 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066034985 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068019149 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098589683 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080317533 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080543367 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069835989 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069397388 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066569456 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083344625 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089837233 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078721885 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086649976 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10168184 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068286218 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065851826 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064867631 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087051736 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064776362 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068705179 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066431039 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069825189 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067656085 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070160881 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08355088 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08320409 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071976416 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082579817 seconds)
  done (took 5.404167968 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087016831 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092647726 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083652497 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083707529 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065731582 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066053552 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066089083 seconds)
  done (took 0.694669777 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068732775 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091633275 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092744223 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092164172 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084128396 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091524071 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078512017 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06809644 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.091652053 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070144566 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09014377 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104423271 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071761885 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073831219 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09072741 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066739606 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091227676 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066749354 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069269161 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090988219 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06905598 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094927112 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069412706 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066745532 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08073173 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067410509 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114662342 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071324813 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068353122 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069332949 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064907426 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106426075 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080050341 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074833996 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066570242 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080913807 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082028562 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064593038 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082576284 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075120866 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.07994724 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066614361 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066809572 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064904133 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072245695 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078935738 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069626775 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069180324 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070922756 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089443695 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069317887 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082738171 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071795697 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074371261 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069986535 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075603554 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079165204 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068438124 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088196148 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069868618 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086890606 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086076335 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083061432 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085287465 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070990816 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083321643 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083234887 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071273181 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070684833 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071805527 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085944658 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067035994 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070531791 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079361349 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069751342 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.0925858 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093245304 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070243812 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081948959 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067798516 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068522698 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068991519 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093645226 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075000158 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068894767 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073860243 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072556212 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066782057 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067922066 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072937275 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066337249 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070222324 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072311201 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071917389 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071842328 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086421108 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071282257 seconds)
  done (took 7.562845636 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071605578 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070210699 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071977172 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069824864 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068384387 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068087852 seconds)
  done (took 0.599274647 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097681151 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069930999 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080138167 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071516724 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105892222 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087205745 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08747376 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079268484 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084317853 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078491999 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.089894541 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.090181718 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094970734 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07409396 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08889599 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074231302 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.089785625 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078022522 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079607509 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074687626 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089961817 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072083335 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07255412 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080997883 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076375305 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071442025 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067516939 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078867764 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078434027 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078506646 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071580946 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075310811 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070158504 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077881548 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087354506 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070821562 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072421756 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078077122 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073765064 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.077566403 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091009719 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074672672 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074833896 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077048961 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077916871 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070255953 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076672489 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075000238 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085703321 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076207998 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076708112 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072860362 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077919214 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.079855657 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073098862 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081083123 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.079778731 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.089906212 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074847201 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073594985 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071502719 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.078462952 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081051857 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079062664 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081707346 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079977055 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073580596 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075415947 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075779592 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073960391 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080367179 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071268507 seconds)
  done (took 5.755316396 seconds)
done (took 20.10410352 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.533232799 seconds)
  done (took 0.573094601 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.616962975 seconds)
  done (took 0.709946394 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.526445077 seconds)
  done (took 6.607641942 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.406218333 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.524935553 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.723022749 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131641481 seconds)
  done (took 1.886335631 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.701974364 seconds)
  done (took 0.817340065 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.21874588 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202204057 seconds)
  done (took 0.530287749 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378248369 seconds)
  done (took 0.45382697 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.129983422 seconds)
  done (took 1.205798545 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26189301 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176244841 seconds)
  done (took 0.525085536 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.486780466 seconds)
  done (took 0.5651091 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.875148979 seconds)
  done (took 4.957196275 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214908127 seconds)
  done (took 0.350219758 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237783606 seconds)
  done (took 0.310386038 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.744070258 seconds)
  done (took 1.817336708 seconds)
done (took 21.459551844 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083611299 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080660468 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080192424 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077692083 seconds)
  done (took 0.363782836 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079770636 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074217687 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076287175 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072731436 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077136637 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072604087 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074336146 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.074700003 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072262346 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072876452 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072026429 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072114608 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074815168 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073820621 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070813141 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074888008 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075517713 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072331864 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07505916 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072231255 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070520649 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074501064 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075032816 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071059561 seconds)
  done (took 1.847221493 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.0801401 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073319277 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075774901 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070992429 seconds)
  done (took 0.397561875 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080258884 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096834285 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089739919 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077928084 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092800401 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086294103 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069023448 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068705736 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070629097 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077409736 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067834909 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096197623 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087679843 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.0768247 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079305422 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065499588 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068025984 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087156152 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07761102 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078379726 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069815427 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077599969 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067270999 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087999954 seconds)
  done (took 1.972094426 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.0894313 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10909787 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082887488 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089484972 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090667562 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064875963 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088805379 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093676093 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.130143772 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06698857 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072179487 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067276666 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.075294956 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067051062 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08379154 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110534423 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113739419 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070863583 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099889961 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067215432 seconds)
  done (took 1.835655293 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075064145 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07135701 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06560081 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068075378 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077445714 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072470991 seconds)
  done (took 0.528621929 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07126028 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070503532 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068316746 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066797723 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072147363 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067487096 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065741269 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067671425 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067586008 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066728548 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066207613 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065333702 seconds)
  done (took 0.893191452 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.206658551 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06753443 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068596728 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065415877 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070222123 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06666831 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081130279 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067732272 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091529379 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066337164 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066727241 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06835216 seconds)
  done (took 1.069766266 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209710063 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076193594 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242821817 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151126033 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110719996 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115579985 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111956475 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114219717 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142122165 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100474484 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167960782 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166659496 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10711233 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137170036 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088168846 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099919679 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153922144 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16231147 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105059067 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167066706 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145544855 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126219023 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148455962 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105355245 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105611479 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121738826 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070521684 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079528938 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170166049 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135089534 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148295629 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114902867 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095647689 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181966471 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173730479 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140444975 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145968349 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083749856 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104134086 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13366232 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199768491 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087546972 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160635734 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107683912 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079245854 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273402796 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119578638 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121203477 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104996566 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089483163 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144554592 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182341055 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136535666 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08685499 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123523022 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113833168 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113545553 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113198143 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182018423 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161051199 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127963215 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070417093 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107885643 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155013581 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134493554 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107684129 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124474996 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0916787 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134980381 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155312443 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120208228 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144275103 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116366038 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088206576 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119225277 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140638653 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127400349 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161113169 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125936491 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072659651 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123001213 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101496766 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080322522 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144679158 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074931885 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176732112 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098892523 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108990389 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124094401 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108486036 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108260295 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158430395 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145373791 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103198941 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065444602 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10386073 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119296655 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288728691 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08739851 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108953281 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118410695 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077920698 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137863988 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075424971 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123187364 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077046814 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127683877 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129074359 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076953606 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121718727 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103366482 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100499713 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13215534 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159418073 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087255582 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081538725 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168824534 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121433905 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102624651 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144308937 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157037672 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101513473 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100409568 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148442048 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180061956 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089791109 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164062103 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106520304 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083346541 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087595826 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123103764 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111573063 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123848737 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081005669 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117786985 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171017199 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076857468 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094936031 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133308639 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078668231 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08035811 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105620584 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105273933 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09595834 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100552896 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103827341 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135417359 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122577961 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105228574 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123442231 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098222011 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169658978 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086804809 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101495517 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102320823 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068405277 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.283231081 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158526571 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079867866 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164291728 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123967283 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116124585 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118930199 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083179739 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140469427 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078960473 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070192297 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143503189 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110817659 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109856169 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151730592 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116295557 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125582095 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118234413 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132692777 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131523574 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131196354 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105793122 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088789939 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112270915 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126646112 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073400548 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090250326 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080222796 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10487478 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095849231 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082893185 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142073925 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124255973 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109404165 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112294093 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096492726 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148393396 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075909438 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13028746 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.123888405 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099163997 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154595672 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153875783 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131755375 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099551165 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136300816 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069889842 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073829569 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087644927 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123007839 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082035944 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082527488 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115920345 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146502607 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128327622 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134006232 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269292038 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120780088 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157169672 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069961402 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117198579 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152269839 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126554773 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.108855207 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093180637 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102450916 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14772978 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111257264 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184192452 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116672234 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123732116 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154234919 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101010551 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07912833 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102998651 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13542314 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104226867 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144394235 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099637557 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088075613 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110059812 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074339927 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098479721 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126524516 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118757182 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135254087 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115101317 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132572774 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077459492 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115331365 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121404113 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122056972 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063468737 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120354 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163637363 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096649715 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119586784 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154727646 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079131245 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134822134 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176043256 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143913711 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084578884 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107607134 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118533858 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127384766 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119234604 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139530726 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106277202 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285319663 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110129837 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086102664 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088695267 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097886905 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104704459 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095751353 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106356902 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112934197 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095056204 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13137378 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102635019 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109442231 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11820731 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098412822 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090515892 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095793403 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177499284 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118434677 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170729401 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099621656 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144812914 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16353464 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074382934 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078571861 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077750807 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140864118 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084108081 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130357642 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107015312 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117468696 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123678256 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142498836 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095148706 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067852982 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109138627 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132878529 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124914855 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098087251 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10326731 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164368603 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100978735 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079580967 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114606496 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11629166 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102789937 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173114453 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061567948 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105825326 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076097713 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080571864 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127747257 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150132545 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078968779 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103150734 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119457334 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111313075 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128219599 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102175961 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107213073 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275003505 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149621449 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128832537 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090186209 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112227867 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129738729 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156453523 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105295974 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096062957 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172068943 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152448744 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16055521 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086996089 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114798582 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114520037 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108466074 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138618855 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082794626 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163216953 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0816372 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13595785 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103778155 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088238306 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128994709 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108057386 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08757469 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14855279 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11784192 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082275421 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077061035 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117577737 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119266727 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106085547 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074784995 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138979767 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073113672 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135339617 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162686429 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081395547 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107489312 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096905755 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079803768 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106701864 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101760141 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087057264 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099160879 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170750417 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087027913 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149309421 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133104998 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111899793 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134892957 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249494418 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639945339 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078448546 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152591877 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116829533 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174473402 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100581091 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118425095 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110039769 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122399161 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143524376 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103448455 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178542843 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131337202 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115375935 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079612849 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102302612 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1034967 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086981654 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107460861 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113974188 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114872981 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09318655 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115501649 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124654006 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082188291 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095833257 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156711972 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116636482 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144284707 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140942926 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085379102 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118015514 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138189042 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079946886 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120662672 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152738925 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106831137 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09969427 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081111744 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100613239 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158926552 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073302425 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160017443 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120309544 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109677031 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112250082 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111444712 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12875717 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105733828 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120664692 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091178956 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108587266 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112049774 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079272191 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075164178 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102622362 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107492632 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096341706 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094442368 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097093396 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14850427 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070535489 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095807145 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111939308 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139476647 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169576172 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087238548 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080819487 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11520475 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111602551 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109750297 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117337301 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075783616 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079057246 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076537948 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076186415 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10430429 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107723425 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108491 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105303425 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153189363 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.079888525 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22597444 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090832568 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100848281 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.067559424 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075190196 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091518014 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092922248 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101167376 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104979847 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148643106 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09107414 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.08651705 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087697651 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071050899 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079274042 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123205602 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10371817 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112372159 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093467384 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06088884 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102080073 seconds)
  done (took 57.162191243 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120553753 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08414263 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096150588 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145105999 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124388772 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205303914 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155471923 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190783099 seconds)
  done (took 1.423003372 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072851159 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09720216 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108019563 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085561148 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067627532 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069069926 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233045775 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081912667 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066380297 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099942615 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07883331 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068585668 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.434812208 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069285819 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070015278 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060879674 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067273127 seconds)
  done (took 1.922993228 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.395833142 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.609594256 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.350445089 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071868197 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.450129381 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08732415 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.132457383 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131306767 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072439645 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.522992516 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.409859644 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123850318 seconds)
  done (took 16.47270812 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07781256 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072047786 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086545954 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087611509 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.075510016 seconds)
  done (took 0.483864308 seconds)
done (took 86.461371002 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083004499 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.617948129 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052906451 seconds)
  done (took 0.783829433 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086202142 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087949993 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087675406 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08631877 seconds)
  done (took 0.447395838 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076401656 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078302384 seconds)
  done (took 0.242355408 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.238460831 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164828963 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09705208 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085864511 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081062522 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079132303 seconds)
  done (took 0.340173968 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075277042 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077077501 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075178799 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079592984 seconds)
  done (took 0.389210929 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079890754 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054529339 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056824315 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.059852724 seconds)
  done (took 0.335540876 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089644386 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081380037 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081598389 seconds)
  done (took 0.337294795 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106223468 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088961879 seconds)
  done (took 0.280658295 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084698028 seconds)
  done (took 0.170729521 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10310751 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105156978 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135979969 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114830345 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141641895 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109745313 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085370907 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087667968 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077405063 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086331843 seconds)
  done (took 1.129222074 seconds)
done (took 5.128425125 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082229555 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.468564724 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363886062 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092242152 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669706493 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359235368 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.994638027 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093806733 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114901542 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067455193 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084767402 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647163265 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.982875257 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.419206963 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969435121 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325088705 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649183798 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067917059 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067656457 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067468637 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.978162973 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067518983 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068647494 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06792763 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650050788 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372131359 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068912036 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325192329 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06839318 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070613643 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354729783 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068130915 seconds)
  done (took 14.796698923 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073393118 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123872358 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074987237 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084544753 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070498849 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069999946 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071744747 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068233256 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121215473 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0678317 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085432564 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067983664 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072004771 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.085410597 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087535715 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067826228 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068983091 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069069175 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068825424 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068454232 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087202751 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067946869 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067618434 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068896649 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067843704 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080138678 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068495645 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068680998 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068260521 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069671438 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071102157 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068998226 seconds)
  done (took 2.537453756 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118024981 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125876124 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073733287 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103275725 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111373167 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070011904 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142445571 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093060831 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126404108 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069422899 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084961488 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068333667 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10190962 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068775007 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088076168 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068654892 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068624982 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068149958 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068730457 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068088132 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087374445 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068291505 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067545538 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068950332 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068446438 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081973066 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068465091 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069354132 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068219118 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069690014 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071659984 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069014446 seconds)
  done (took 2.759472202 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075411897 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078823605 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083750884 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083819572 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06938124 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071833542 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073049816 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069404884 seconds)
  done (took 0.721696767 seconds)
done (took 20.915042109 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081133263 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071378915 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075953782 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083266287 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073331628 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078429439 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067393075 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075705483 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.0720993 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073008516 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07517838 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067357007 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071659087 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067287977 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074182204 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067681995 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079775445 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072272041 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078863097 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080365034 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070245941 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073865629 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074774045 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079417788 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079956109 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079449267 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078011057 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07316991 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.0699137 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071063145 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077060524 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084921299 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068901782 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079644018 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068323763 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068312548 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072277529 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067741035 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080282546 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076251589 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06938734 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076314314 seconds)
  done (took 3.176570543 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092149129 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09653772 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089216814 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06493851 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069379347 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066690817 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090110195 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060853669 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059492723 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088830828 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055641277 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059414125 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066008347 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053529404 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060146811 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056280383 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062264808 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054681597 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060537368 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.05999721 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089529061 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053877271 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077570449 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062712578 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055717855 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061401123 seconds)
  done (took 1.889757982 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077097406 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088790176 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090862966 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131105765 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106612004 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078829434 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079591505 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095696392 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089049823 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067262567 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071597701 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092948498 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090491525 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07471115 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067629852 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086701745 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083813829 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070194648 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074155641 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094700628 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086584548 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086176765 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096136532 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084061194 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067273037 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069550003 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072018816 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081611507 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072354992 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076594986 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072059928 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071269147 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070331534 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078838392 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071829471 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069577998 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091490973 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07803427 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079468423 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068929605 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075814719 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068867183 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093713918 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126140557 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067340414 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074330177 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071539401 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077654506 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068746866 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089426607 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079572783 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068100047 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071319523 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068014779 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068144628 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082363969 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070114366 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070301125 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07762505 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073845187 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092757383 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072463574 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084091333 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067730396 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076103194 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066977923 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068638505 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06727939 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096090053 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069124899 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112106597 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071097762 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069982113 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078532071 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07505637 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07381799 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069059318 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083945788 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081045766 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074284507 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078471286 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072689515 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072027494 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09404568 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07124516 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070746462 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068852205 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073678345 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071094178 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068475421 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082021746 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067036174 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070155682 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085014246 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067925642 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069206022 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073020038 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072657249 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066746703 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078409555 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072465133 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068496932 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077425122 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067582468 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070131702 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080413904 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073714097 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066423896 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071888493 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073326593 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068501623 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069529101 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070735229 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069303338 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076497781 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07409268 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07252687 seconds)
  done (took 9.153128972 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168618143 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157146451 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070400295 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148468463 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076279665 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078931448 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.162731421 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095234248 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067949118 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067755468 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068624175 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110920892 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.1065194 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116348703 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079860298 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.0682937 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084259549 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114584046 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152392693 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146932219 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085503889 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076945728 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070075617 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068956169 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070791761 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078327794 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086209036 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077409164 seconds)
  done (took 2.961281083 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083278766 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107856234 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074096991 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091215015 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090553255 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06746318 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070641057 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069745393 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081178998 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078490389 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067299458 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072543004 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074771105 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071853728 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068254136 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074566901 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07545911 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069193295 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071751538 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073167028 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078275685 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091954251 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072005083 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068049296 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072395407 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066559052 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063501745 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083962566 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068144474 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09510555 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065713232 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072795294 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081671073 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068550699 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068425242 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066873609 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067384831 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06720053 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069374377 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066809581 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066249436 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056770698 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067009087 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078396683 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074396369 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056125641 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073080986 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072211311 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073103602 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064550125 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071106009 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070502997 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070992293 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075070054 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071542083 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072935364 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068394327 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074878215 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075937497 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067289981 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064471655 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065553865 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071951707 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065059634 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075650001 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071814452 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066216366 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067251365 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068934356 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074550028 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067302202 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072852582 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064943334 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06910416 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072191913 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069842794 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068693987 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065793849 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067169138 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067805069 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054762774 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067230334 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053026358 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070584862 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.0657196 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065520114 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067731813 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072141529 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079246165 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068627834 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073333058 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06817009 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066412337 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070389533 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059902964 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.06997957 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083205719 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082276023 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067322862 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065645688 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081289047 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071982798 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066249331 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05575582 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072797157 seconds)
  done (took 7.614281907 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093676042 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073024091 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086215395 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091675972 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088018284 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07567585 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078255541 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069687018 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08330057 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074135162 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076478897 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068975399 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077790201 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077458625 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069505626 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07761149 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072047881 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084623403 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083154661 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068692822 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076614257 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080704355 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090978782 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082546677 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082175925 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082422102 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09038013 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.077355081 seconds)
  done (took 2.419819748 seconds)
done (took 27.302314027 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 5.136390006 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.333372364 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 5.141787053 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 1.490147225 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 5.725878548 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 5.424476597 seconds)
  (7/12) benchmarking "nbody"...
  done (took 1.256411802 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 5.129891846 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 5.430447285 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 5.200674791 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 1.401979495 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 3.269196866 seconds)
done (took 45.000965524 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 5.157141217 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.267792508 seconds)
    (2/2) benchmarking "String"...
    done (took 0.366549435 seconds)
  done (took 0.692801853 seconds)
  (3/5) benchmarking "replace"...
  done (took 1.339449805 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 3.687788981 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.379320851 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.131316126 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.13234588 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 1.468181849 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.951367453 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.643008916 seconds)
  done (took 17.453546334 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 3.202532861 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.403951318 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.884500788 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.894553909 seconds)
  done (took 7.50689486 seconds)
done (took 32.304194385 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 5.128884213 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 5.12745987 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 5.175376942 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 5.109010708 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.18104799 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 5.144952982 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 5.207787324 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.349697663 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 5.125128017 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 5.11369503 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 5.158620462 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 3.580337203 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 5.127423067 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 5.236492754 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 5.127570495 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 5.139261083 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 5.186013794 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 5.568614076 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.281841137 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 5.137842386 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 5.145623201 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 5.189812003 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 5.138337106 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 5.141806038 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 5.152990556 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 5.125018932 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 4.552268323 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 5.128537541 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.747074763 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 5.128730663 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 5.156841451 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 5.433277972 seconds)
  done (took 150.299503422 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 5.127669741 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.356906387 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.39227955 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 5.127228906 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.676934391 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 1.307180882 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.246826261 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.723288092 seconds)
    (9/36) benchmarking "syr!"...
    done (took 5.129493118 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 5.153865468 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 1.410583173 seconds)
    (12/36) benchmarking "her!"...
    done (took 5.124934621 seconds)
    (13/36) benchmarking "trsv"...
    done (took 1.427367632 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.071188937 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.159124551 seconds)
    (16/36) benchmarking "herk!"...
    done (took 5.223331038 seconds)
    (17/36) benchmarking "trmv"...
    done (took 1.253087627 seconds)
    (18/36) benchmarking "symv"...
    done (took 1.421006546 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.158065401 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 1.3056539 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 5.131827721 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.251863456 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.2083732 seconds)
    (24/36) benchmarking "symv!"...
    done (took 1.377453709 seconds)
    (25/36) benchmarking "symm"...
    done (took 5.161574999 seconds)
    (26/36) benchmarking "herk"...
    done (took 5.130206181 seconds)
    (27/36) benchmarking "syrk"...
    done (took 5.12793183 seconds)
    (28/36) benchmarking "trsm"...
    done (took 5.139875003 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.292040419 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 1.244775564 seconds)
    (31/36) benchmarking "gemm"...
    done (took 5.147182326 seconds)
    (32/36) benchmarking "symm!"...
    done (took 5.147375256 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.254632004 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.995180079 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 5.149214041 seconds)
    (36/36) benchmarking "trmm"...
    done (took 5.143337178 seconds)
  done (took 109.756655726 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.514345693 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.128485326 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.127300277 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.127780512 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.132639904 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.127808024 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.248021885 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.253261286 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.745111253 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 20.599195934 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178932257 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.949643495 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.124947203 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.195187725 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.138255026 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.128495489 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.142467389 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.1544208 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.128210322 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.127935491 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.251879914 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.137916294 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 20.195523825 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.135148775 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.12775955 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.132701594 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.500047507 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12445773 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133349378 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.371128213 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125366666 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.12719544 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.015980981 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 10.01116114 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.209545901 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125996656 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133817854 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.128834847 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.348808806 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.125439817 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.128429969 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.130965257 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.296653314 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.127854895 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.250695675 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.124973104 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 2.617657692 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.125174322 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127638384 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.127296009 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.074057959 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 8.796707558 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.12695797 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.127343579 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.127525102 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.129532284 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.127446311 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.12740093 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.133109507 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.040356024 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.205289238 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.129575077 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.131299805 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.133353815 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.128336557 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 20.367617519 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.124728477 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.160732612 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.183330199 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 1.258887224 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.2489782 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.127190973 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.195422438 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.218949656 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.124232684 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.127352697 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.127069461 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.127256043 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.208768165 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.125350894 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 2.248964357 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13186599 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.128732437 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.178932196 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.197280317 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.124886736 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 3.014772138 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.127540376 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.12724418 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.451846133 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.194846818 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.12481322 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.1270114 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.127280212 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 2.249781294 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.247158769 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 4.905479511 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.127784623 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.060877051 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.134747065 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 2.266754866 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.124910236 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.127057091 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 3.305112662 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.127766357 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.209295372 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.128652581 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.12841711 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.126325697 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159508612 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.127548281 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.186115862 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.124368722 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.1272748 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.502336416 seconds)
  done (took 214.433409739 seconds)
done (took 475.087191942 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.783559474 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.741301737 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.849766775 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.767988058 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.739212649 seconds)
  done (took 3.931847836 seconds)
done (took 3.985481776 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.209186039 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.214694118 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.150046173 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.213457974 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.146731417 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.212332939 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.19322633 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.152708004 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.184487004 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.152857689 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183030239 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.151576405 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.139984206 seconds)
  done (took 2.355485802 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.35642119 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.374341731 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.207996907 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.365785969 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.183253168 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.364614554 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.298806218 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.28592495 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.288184441 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.151026448 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.141144494 seconds)
  done (took 3.073706995 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.359989772 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.374371075 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.2131856 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.387856735 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.185828026 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.366316589 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.297891234 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.29173959 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.287339444 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.150565247 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.143368687 seconds)
  done (took 3.113684159 seconds)
done (took 8.603748889 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.136005578 seconds)
  done (took 0.185903945 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.160896365 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 0.315131147 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.141229592 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.141023049 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.136740877 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.138380034 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.140957991 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.136953061 seconds)
  done (took 1.368589027 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.131995283 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.135649385 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.135304869 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.132575931 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.133133337 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.132658446 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.135444226 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.135579344 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.135758315 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.135693072 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.132976438 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.136010413 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.132769961 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.135620008 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.132706511 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.132934801 seconds)
  done (took 2.203258324 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.133818292 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.132660906 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.133052706 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.134108958 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.132419049 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.132951569 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.133395646 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.132445678 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.13232436 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.133128759 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.133313603 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.132455031 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.133452193 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.132884158 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.132852475 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.133357896 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.132500822 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.132480605 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.137260307 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.133024774 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.133489701 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.13226598 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.133795225 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.133219557 seconds)
  done (took 3.254853018 seconds)
done (took 7.067540892 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.910785962 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.633073493 seconds)
  done (took 3.593911403 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.136157458 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.135933369 seconds)
  done (took 0.38988394 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.134989806 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.135368555 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135615166 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.136110492 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.135247019 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.135320622 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.135658559 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.135692734 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.135232129 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.136870051 seconds)
  done (took 1.411299875 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.134405834 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.134971277 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.132556681 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.135621777 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.135390414 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.132565777 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.135176674 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.135039399 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.135306113 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.133378442 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.135515615 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.132796742 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.138322859 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.132400952 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.135390203 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.132578104 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.132481352 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.132669237 seconds)
  done (took 2.472049677 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.13420732 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.135308577 seconds)
  done (took 0.324264097 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.131596778 seconds)
    (2/7) benchmarking "second"...
    done (took 0.132420115 seconds)
    (3/7) benchmarking "month"...
    done (took 0.132570336 seconds)
    (4/7) benchmarking "year"...
    done (took 0.132351541 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.133151182 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.132927648 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.132508743 seconds)
  done (took 0.98209527 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.134704744 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.293661858 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.369788032 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.79940498 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.136229681 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.138789478 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.063000913 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.13878922 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.140517156 seconds)
  done (took 3.269665561 seconds)
done (took 12.497997979 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 2.91643626 seconds)
  (2/8) benchmarking "printfd"...
  done (took 5.128425775 seconds)
  (3/8) benchmarking "parseint"...
  done (took 1.521112867 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 5.207812021 seconds)
  (5/8) benchmarking "pisum"...
  done (took 5.148965528 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.469953461 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 5.141963235 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.428823084 seconds)
done (took 28.020249562 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 5.179000164 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.69739677 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.765116876 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 4.6033699 seconds)
  done (took 6.117861132 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.129605759 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.65300997 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.173740306 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.706439318 seconds)
  done (took 11.835952375 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.499438028 seconds)
    (2/2) benchmarking "read"...
    done (took 0.483793352 seconds)
  done (took 1.043917895 seconds)
done (took 24.233983384 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.135154591 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.135116638 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.135510982 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.135104768 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.132329267 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.135093035 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.132041808 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.132216511 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.135577537 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.135373373 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.135229337 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.135219369 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135277242 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.132724982 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.132721571 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.134932919 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.132750413 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.134450346 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.132876503 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.132113009 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.132596902 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.13499747 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.132583907 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.133502768 seconds)
  done (took 3.265904523 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.134094983 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.133462965 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.136334241 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.134865599 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.132766793 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.135556336 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.135529673 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.132628965 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.136367143 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.135132096 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.132371131 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.132403433 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.134884037 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.133418964 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135371114 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.132696104 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.13548938 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.132684262 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.135663241 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.133096212 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.135876624 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.13282436 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.133005947 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.135544839 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.132462834 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.133639483 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.135875839 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.133974931 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.135670553 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.132674929 seconds)
  done (took 4.081975512 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.138258302 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.142414094 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.135467763 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.13643354 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.135357121 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.135594621 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.135622253 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.135367609 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.13624699 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.135589775 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.135116708 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.135542699 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.135648837 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.136066095 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.136917841 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.135704047 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.135768911 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.135538364 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.136483954 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.135765209 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.135540842 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.135894546 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.135908106 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.135477205 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.13629864 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.135818372 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.135949224 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.136214076 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.135297099 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.136728772 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.13656577 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.135461518 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.135312023 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.136089855 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.13577776 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.135562804 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.141113163 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.142395826 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.135497982 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.135970013 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.13559264 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.135679916 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.135991659 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.135840897 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.136411862 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.136521001 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.13590813 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.135660644 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.136083744 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.136071394 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.135662506 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.13629198 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.136058286 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.137052952 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.136322868 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.135547376 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.136143074 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.135818146 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.135607152 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.135915753 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.136085498 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.135699547 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.135625203 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.136247727 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.136406457 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.135735733 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.136306673 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.135785484 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.136780938 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.136160387 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.135785282 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.136164213 seconds)
  done (took 9.864025469 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.135450224 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.134271852 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.133426234 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.132932165 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.133455809 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.135847773 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.133283502 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135970112 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.133596916 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.136418677 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136064125 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.133522517 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.132967794 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.137380431 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136217817 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.13372716 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.136314398 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.133133953 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.135797121 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.13710331 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.136092192 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.133585995 seconds)
  done (took 3.022614623 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.136632224 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.136958049 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.134104719 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.136134136 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.13414918 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.135866102 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.136308332 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.136210963 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136093601 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.133256506 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.132934408 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.137534853 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.13329597 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.135178136 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.133429966 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.13367779 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.136267101 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.133956087 seconds)
  done (took 2.487569 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.132591106 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.133545075 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.136403672 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.133558763 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.134782105 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.137170197 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.133696298 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.136148976 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.136066442 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.133758339 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.136392622 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136387095 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.137155883 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.133612452 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136243541 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.133668028 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.136312647 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.133690525 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136803042 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.133592356 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.134694964 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.13658992 seconds)
  done (took 3.028821237 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.135315801 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.137382137 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.133799127 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.133663192 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134683364 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.136533204 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.136813932 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.133550843 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.136681898 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.136697237 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.13498765 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.137007522 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.134740703 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.134423756 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.133829157 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.134382612 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.136408997 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.134686601 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.137315551 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.13367654 seconds)
  done (took 2.762404991 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136379875 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.138000649 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.138178043 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.138025314 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138009468 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.138411149 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.138347803 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.138536291 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138432125 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138569561 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.138535391 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.138521487 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138676221 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.138384437 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138503557 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138315641 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138455119 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.138942206 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.138379788 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138205924 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138921671 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.138051043 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137954612 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.138503167 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.138975955 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.138269088 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.138443219 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.140116222 seconds)
  done (took 3.932062649 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.136390886 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.136595379 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.133807418 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.134544334 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.133915602 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.133467334 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.135189105 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.134025228 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.136476832 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.13423168 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.137310838 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.13632759 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.136465507 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.136302695 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.136528415 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.138129644 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13644988 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.134341686 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.134446052 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.134095911 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.136785677 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136926012 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.1369421 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.133895758 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.133908415 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.13711266 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.13476833 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.134117971 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.137144115 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.134149433 seconds)
  done (took 4.122031118 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.154372873 seconds)
    (2/2) benchmarking "in"...
    done (took 0.154967147 seconds)
  done (took 0.364681398 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.132950021 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.137595113 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.136679912 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.135148068 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.134688776 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.137360988 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.138114025 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.134181738 seconds)
  done (took 1.14230459 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.136121956 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.1376281 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.137216975 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.13750095 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.13809862 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.137183042 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142617884 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.14052348 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.137699495 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.138400227 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.142984029 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.143414716 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.139751159 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.138656798 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.137325681 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.139071938 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.13874398 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.138136746 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.13821384 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.137820093 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.137733948 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.139791316 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.140929556 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.136073075 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.138078935 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.146580444 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.143840078 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.138722724 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.137140249 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.141400051 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.140574428 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.134392788 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.138157955 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.138965346 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.1378361 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.138328076 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.146130882 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.141512266 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.143252741 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.141693846 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.138074132 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.134137223 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.138425001 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.139407184 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.138831397 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.139859635 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.13777022 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.134642899 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.137015427 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.139499007 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.141294186 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.136724363 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.135423248 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.140995137 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.140648074 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.145107386 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.142052255 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.14031149 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.144990835 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.146533677 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.152943142 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.14797203 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.139324444 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.139520346 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.146870022 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.159028262 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.145293619 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.137645847 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.134449731 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.137789667 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.143556298 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.152637626 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.149763313 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.138968052 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.138803741 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.137948649 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138898011 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.138390233 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.144563224 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.143866171 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.140768339 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.138655013 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.146278815 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.157537498 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.136944019 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.138538185 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.138744588 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.139608576 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.13906107 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.147271456 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.141850895 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.138340752 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.137079575 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.1373798 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.139899526 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.138214875 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.137183817 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.138116845 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.136393474 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.137476891 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.138234043 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.143612509 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.145756307 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.139836503 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.138855549 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.144904468 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.140625788 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.137391317 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.145007319 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.139973341 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.138366939 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.138422556 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.143371082 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.135290355 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.140287221 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.145844155 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.139279551 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.14037761 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.139347007 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.138370205 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.146341505 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.161555219 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.139474171 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.138036992 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.14154696 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.14837982 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.138903154 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.141193065 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.140327014 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.134884049 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.134777805 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.139096321 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.139479277 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.138591296 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.138748525 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.139777852 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.135899718 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.137530419 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.139050841 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.139509435 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.140232016 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.139288497 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.139983513 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.141646425 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.140525332 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.140303491 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.145153076 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.140914994 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.138823164 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.140466303 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.136256265 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.13805908 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.13881691 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.139655763 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.13841522 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.138927603 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.138521014 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.13955417 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.13863803 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.138698671 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.138234561 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.138144419 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.141542857 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.13954016 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.142583882 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.140422444 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.13632293 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.137958762 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.138283595 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.138080276 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.138251156 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.136797915 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.140813018 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.14645751 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.13824215 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.138717319 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.141254006 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.14005526 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.139886886 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.139709571 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.141306412 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.145290005 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.139472597 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.14560818 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.141402902 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.139553533 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.139081911 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.138268434 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.138919813 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.139171507 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.141206768 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.14584269 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.151175309 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.149541287 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.13970922 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.141444561 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.139239981 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.142828122 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.143116232 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.141374916 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.138899985 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.138979483 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.138482759 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.139421567 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.140166811 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.140100877 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.138472578 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.138451884 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.138300997 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.140179381 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.138950045 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.13950371 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.140224593 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.136177279 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.138273746 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.139691767 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.138408235 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.136397165 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.137557144 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.138812876 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.138774705 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.139855513 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.145477164 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.137738182 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.139916278 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141712967 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.140856898 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.137933228 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.138719997 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.141138493 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.140438966 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.145250439 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.142102251 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.139576398 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.145243846 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.141830398 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.137817609 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.141483125 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.141078395 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.137032781 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.141293591 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.146306516 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.138303093 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.13966169 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.141120712 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.139367899 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.138780982 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.144844706 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.138407149 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.13820223 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.139391083 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.139870328 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.135943412 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.140221671 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.141077168 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.139943522 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.141490764 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.140766747 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.139038337 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.139952188 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.139605314 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.139876696 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.140115969 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.141876371 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.145966725 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.143742775 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.14122896 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.140451413 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.140100984 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.141362798 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.139092853 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.139246423 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.139400791 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.15181632 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.150146997 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.145796694 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.142914712 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.139455092 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.143361027 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.14267211 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.142200468 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.139199171 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.140101182 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.139299851 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.138733301 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.136989439 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.140358167 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.139428764 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.140217447 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.141695842 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.142000259 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.139652914 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.138321915 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.140478783 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.13993787 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.139846936 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.138299995 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.138879673 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.141889283 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.141542384 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.139795258 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.138482872 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.146398497 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.142651803 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.140431647 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.139423445 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.139448393 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.138774966 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.140046385 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.140744749 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.142465707 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.1470392 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.141948719 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.147479243 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.140313612 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.148905925 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.142108823 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.142516549 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.147162521 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.136861221 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.137785138 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.139833886 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.140061373 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.146421667 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.142806384 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.139822945 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.142877431 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.140773487 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.140801083 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.140169363 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.139990012 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.139568785 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.13959573 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.147576064 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.144343065 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.142745675 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.141581806 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.137968675 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.140031725 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.139903366 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.137711071 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1431085 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.141904088 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.140204682 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.139463464 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.139739123 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.139111322 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.140652881 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.140450622 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.136071768 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.139439539 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.146385518 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.14279365 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.143730384 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.14015081 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.146966955 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.143460287 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.14655924 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.143962387 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.141147857 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.141113903 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.139341434 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.141305677 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.140005115 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.140001998 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.140567026 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.140598391 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.142293569 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.140356751 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.14174035 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.140152069 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.141389852 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.139838502 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.147361952 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.161644215 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.141022833 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.143104804 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.136393573 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.140535929 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.143532571 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.140642679 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.139418913 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.141712048 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.148547926 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.146547931 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.141033518 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.140800839 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.140674107 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.141127339 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.139929013 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.13982236 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.140128878 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.140257893 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.139593543 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.14017784 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.143762577 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.141381187 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.140176787 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.141351338 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.14119646 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.149134353 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.14286107 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.141453517 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.140936866 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.140530163 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.140008665 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.141541736 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.141018015 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.141177729 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.139909114 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.141022696 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.145285609 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.145094196 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.142830446 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.141068165 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.140583354 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.1404557 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.140475446 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.140832517 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.140889048 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.142014885 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.141610322 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.141117097 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.141180594 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.138066976 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.139320608 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.139917336 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.140790968 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.142566904 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.145953824 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.140667021 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.137653438 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.139659785 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.139894183 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.138447934 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.140170921 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.148016194 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.144788645 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.148776204 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.147371393 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.14391847 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.140641803 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.143000785 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.147362856 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.1394172 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.140218526 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.140955352 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.142368155 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.140720726 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.142521559 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.140993843 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.147684715 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.142797784 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.140358528 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.148040911 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.144980799 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.14175092 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.140786262 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.143403824 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.140073457 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.136913486 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.140467547 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.139915462 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.147447082 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.144886266 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.142142253 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.142703015 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.140195552 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.140713945 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.144749437 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.140679638 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.14082948 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.138485539 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.141350951 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.141694106 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.140874884 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.137355554 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.141429427 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.139717932 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.142916083 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.146057157 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.137123427 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.142564544 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.143030933 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.141628667 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.141974072 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.141222471 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.137210104 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.137027063 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.139917583 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.140838512 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.140761995 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.143716732 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.141560123 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.140970911 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.140591514 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.141528652 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.143294027 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.149223312 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.147017018 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.137332513 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.139780092 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.141125669 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.144153636 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.143712429 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.14165061 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.141034404 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.142323378 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.140390729 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.141160864 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.141268488 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.142477434 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.155399285 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.143928166 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.140550546 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.141506704 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.144804347 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.142020365 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.137496835 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.140974898 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.142839601 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.143087042 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.147753956 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.141944908 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.147745971 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.14396473 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.141474999 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.143492042 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.142587621 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.147532837 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.14312202 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.142996323 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.141610836 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.145011131 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.156093273 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.143032379 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.149356972 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.16769929 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.144453447 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.142737963 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.142033911 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.140278555 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.141613792 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.142709641 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.142389455 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.141982171 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.140428281 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.141283892 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.14225353 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.145828912 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.143755169 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.142845717 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.140471084 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.140486374 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.141941728 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.137705273 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.141616684 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.141096051 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.141347087 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.142612385 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.142594324 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.141450431 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.153570389 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.153120416 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.141076583 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.141739041 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.13868562 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.145035412 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.145072728 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.150138277 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.148127087 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.141362057 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.141604535 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.143033054 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.142743386 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.138947636 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.140639329 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.140706714 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.14129496 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.138159803 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.153400368 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.152532654 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.146294166 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.142774633 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.142588934 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.142347819 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.141551583 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.142044643 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.14173325 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.143311511 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.141335042 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.144280472 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.141013684 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.140439264 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.143105635 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.148930473 seconds)
  done (took 84.350793605 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137144074 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137464723 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.137213159 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.137354795 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137708005 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137925413 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138418073 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.137366307 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.137745134 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.137505259 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.137618048 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13799893 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.137528185 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137877791 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138008603 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.137684235 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137561516 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.137781762 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.13738596 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137739403 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.138251172 seconds)
  done (took 2.950720446 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.138981427 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.137610598 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.137764499 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.140388342 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.137349967 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.140349912 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.138770006 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141745196 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.140283222 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.137184792 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.140535297 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.140119773 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.137884273 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.139455344 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.13765089 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.14038682 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.141329616 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.137455707 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.141134454 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.138251601 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.141383022 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.137792442 seconds)
  done (took 3.121962019 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.140802508 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.142431282 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.14056449 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.138365861 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.141131927 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.138790649 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.142432458 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.140966984 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.140994099 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.14128286 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.140585901 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.141016716 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.146252904 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.144876396 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.143490169 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.141291042 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.284659877 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.141535714 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.142202691 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.142120344 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.138447479 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.146727276 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.140644565 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.137982066 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.140880977 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.142413888 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.14227361 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.141064131 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.141031467 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.141716004 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.144667944 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.141414069 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.140838401 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.143078176 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.141583177 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.140742735 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.143448816 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.141399544 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.138190269 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.140241031 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.149578251 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.15884255 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.141315707 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.146688521 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.143524519 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.140223768 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.143007322 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.14865879 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.138023706 seconds)
  done (took 7.173713514 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.138959361 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.140526585 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.137326088 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140070258 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.140018047 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.140135723 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.140442103 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140608834 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.137701218 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.138069807 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.140683103 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.13842389 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.137990895 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.140356513 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.140318033 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.137892041 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.137776292 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.137885406 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.137700384 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.137524163 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.137740736 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.140676394 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.140674347 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.138302601 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.140682006 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.137464241 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.137691679 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.140388065 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.137803099 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.138043345 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.140293162 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.141265311 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.140802998 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.13800941 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.138082047 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.140712742 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.141098821 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.137512855 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140782209 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.138971296 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.141168168 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140923775 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.140452729 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.140653502 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.137511543 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.138338721 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.137954302 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.137483853 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.139233509 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.140888336 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.140479672 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.138294919 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.140614479 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.138122556 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.141206586 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.140966458 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.137738381 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.138091188 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.140587709 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.138252284 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.1380019 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.141055335 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.138432621 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.141137133 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.140958276 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.138044408 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.138424686 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.140857931 seconds)
  done (took 9.532907362 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.1408416 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.142448262 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.142673028 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.142464231 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.142373615 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.142160792 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.142784344 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.14262842 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.142811444 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.142442331 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.142650232 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.142251291 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.141757963 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.141525007 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.141894982 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.142282314 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.142864422 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.142808993 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.142908029 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.142503583 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.14293902 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.142869883 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.142597488 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.142794718 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143534414 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.142264173 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.142938998 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.142466014 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.142360266 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.142666921 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142922547 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.142692107 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.142792213 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.14268031 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.143563627 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.142323091 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.142611472 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.142807499 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.142614283 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.142805767 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.14299031 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.142678198 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.142307995 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.142508323 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.142607678 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.142330152 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.142946685 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.142625094 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.142007745 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.142117793 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.142504789 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.142585614 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.143075454 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.142329921 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.142476169 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.141900126 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.142131391 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.142274951 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.14231887 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.142953738 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.142785232 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.141593915 seconds)
  done (took 8.896314396 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.140072244 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.141061711 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.138150614 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.138014916 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.141258799 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.138580831 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.140813138 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.141052464 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.140803672 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.140808216 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141196213 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.138898298 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.139817336 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.140947101 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.138680269 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.140027778 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.13851015 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.138933381 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.141822374 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.138702211 seconds)
  done (took 2.856220497 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.137242735 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.141145929 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.138379508 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.138795119 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.140942575 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.138468193 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.140903724 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141003559 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.13833241 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.14140779 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.141042214 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.141639598 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.138304617 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.139201893 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.141403009 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.139427121 seconds)
  done (took 2.295553444 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.138248546 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.141801969 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.14221422 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.142710865 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.139032671 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.138304793 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.141242688 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.139110178 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.138683399 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.142078228 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.141675939 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.141347726 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.141516705 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.142409157 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.138867581 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.141430217 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.138355627 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.138492543 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.141972332 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.141890103 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.140195963 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.138663688 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.14313967 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.141298425 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.139193424 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.139709007 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.138771424 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.138645516 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.138594953 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.141851955 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.138496332 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.139076797 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.138898244 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.138678275 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.142008934 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.139482949 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.141445324 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.14194219 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.142036398 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.141632573 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.141647176 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.139872805 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.141312999 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.141385948 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.139647922 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.141508799 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.138782288 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.138858957 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.138530906 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.139098141 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.14159859 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.141946917 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.142132895 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.14224634 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.141724777 seconds)
  done (took 7.785024119 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.140461224 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.141160797 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138790132 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.141387192 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.141573149 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.138868731 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.141612754 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.138814775 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.139171251 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.141546549 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.139758286 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.141706473 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.13931526 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.141733635 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.139644178 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.141327406 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.139179187 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.139036989 seconds)
  done (took 2.583418216 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.138490555 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.139410226 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.142421593 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.138910588 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.139439606 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.142076868 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.13939098 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.141825789 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.142194713 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.139079775 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.139171741 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.14236581 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.141462047 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.142330761 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.139783226 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.139102422 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.141868961 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.14180856 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.139008164 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.139456427 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.141754516 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.1418202 seconds)
  done (took 3.151578234 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.139792261 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.140972673 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.156177526 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.160282064 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.161224756 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.172134711 seconds)
  done (took 0.988754561 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137947988 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142210196 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.139253412 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14169191 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141854911 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139482329 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138959548 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139877864 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142329171 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140108635 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139239129 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142103994 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142193748 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140022157 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142163189 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142055694 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139734165 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139326672 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138873837 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142254111 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139568581 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142450751 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139457929 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141022503 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139268828 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140267368 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142349312 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139599777 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139180537 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142627544 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142183401 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139471187 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142174039 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140916582 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142386437 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142254729 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139463439 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142686955 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142230362 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139925954 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.142081482 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143093398 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142634273 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139669083 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142230267 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139860363 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140636668 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140339917 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139890767 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142426481 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142461509 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140177724 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142858031 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142554407 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142409427 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142727129 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139966719 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139904201 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142464852 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139925563 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140281783 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14230492 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139891019 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140345472 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142270713 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141787249 seconds)
  done (took 9.365887652 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138967851 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.141663203 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139767742 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140313863 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139912317 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139382558 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139677274 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139837673 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139744685 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139785855 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14294549 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140519328 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139644133 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140063967 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14000249 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140079965 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139341273 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139749471 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13967529 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142530858 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139484039 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140331725 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139518673 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139920679 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140217107 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142483359 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139550861 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13985962 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140012105 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139831421 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13982575 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140264473 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139566413 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.140319117 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140130054 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14010391 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14032338 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140387691 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140091985 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142143497 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140023317 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142381106 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139982996 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13986959 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140972531 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139890736 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139721354 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14028073 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139820622 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14006776 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140359669 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140333039 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140238815 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140530869 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139596675 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140143431 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139946681 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140256671 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139679006 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142604643 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139862452 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140305174 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142998759 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139889023 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140259232 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141353272 seconds)
  done (took 9.320447642 seconds)
done (took 192.502631036 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 5.154989666 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 5.197762956 seconds)
  done (took 10.405935513 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.300866238 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.256406178 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.141144214 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 5.153796373 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.136531515 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 5.159092214 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 5.152794291 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.137091251 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.140301156 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.140543869 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.140295832 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.326631231 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 5.153688744 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.137256918 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.141171047 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.235381516 seconds)
  done (took 22.917814201 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.143479689 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.14544283 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.15677145 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.146896034 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.144313174 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.156511383 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.177374774 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.147729513 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.178598488 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.156900528 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.213693109 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.155082981 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.143691394 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.193131368 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.154329484 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.158821059 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.237788491 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.214213988 seconds)
  done (took 3.083209562 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.21923271 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 5.145982156 seconds)
  done (took 5.432406152 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 5.160719768 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 5.146265769 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 5.216279242 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 5.16364192 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 5.446248528 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 5.451020424 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 5.13773891 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 5.1768836 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 5.14029591 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 5.172220222 seconds)
  done (took 52.278493658 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.151268851 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.147263387 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.147677057 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.146623827 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 5.13946268 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 5.136364668 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14432426 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 5.140849856 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.820509376 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.189895488 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.154802246 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.150930203 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146740491 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.147539193 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.143438929 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.168040713 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.282296393 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.142139555 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.141951122 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.150154418 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145827421 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.202108624 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.160098851 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.14676871 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.175730483 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.816773717 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.146447821 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.152502643 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.27340088 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.143601584 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.14437938 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.145397103 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.14708759 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.526915159 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.432617256 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 5.146156553 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.153836879 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.154148282 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.142788636 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.281102267 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.145935702 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.150361076 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 5.031763202 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.413298894 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.263320697 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.191212812 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 1.507958322 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.158630683 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.146927404 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.175691167 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.146810497 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.145721287 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.158159854 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.652299766 seconds)
  done (took 37.783867139 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 5.138304722 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 1.401226587 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.296024139 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.139984658 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.426006345 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.349786564 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.141418098 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.189939117 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 5.143176948 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.373124835 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.304986996 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.251368864 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.138079501 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 5.136520537 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 5.133973167 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 5.132837334 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.301685948 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.215857081 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.142778879 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 5.135514306 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.169964064 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.386165651 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.267398748 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 5.140755429 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.159047079 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.35259073 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.264907756 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.249276064 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.441800887 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 5.136722471 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.203950959 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 5.137535657 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 5.138787826 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.131850915 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.295388518 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.238215698 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.227160548 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 5.134933696 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.135737339 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.135141997 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.810682139 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.338283882 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.23305453 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.280228979 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.3873933 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.343848398 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.921928035 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 5.135498909 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.870713239 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.299449966 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.37304205 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.377437265 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.260926914 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.137524304 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 4.646702783 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 5.135029108 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.135230334 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.373239395 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.363316588 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.240784877 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.135466202 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.135652267 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.134623306 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.384023806 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.135385975 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.229016172 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.132942361 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.13098137 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.232475501 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.237535318 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.365840662 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.350037416 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.165832777 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.437959871 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.61387643 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.387208472 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.202644215 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.367420269 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.133653466 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.1306713 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.222736044 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.977536197 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.294890148 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.388726034 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.39076132 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.171215655 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.856642073 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 5.134336429 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.364435654 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.358791552 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.442471408 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.379446042 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.290547965 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 3.267842373 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.134073217 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 5.13173824 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.393657482 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.274393121 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.139626051 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.497461473 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.370896357 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 1.717156143 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.166101619 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.483719341 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.268029313 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.1368965 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.77855884 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.135390544 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.362245303 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.178704043 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 5.135930061 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.134449631 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.35351019 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 1.2100316 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.133338633 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 3.760539634 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.200176905 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.132718661 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.371764027 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 5.133660879 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.403007749 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.134039109 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.375803902 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 4.644724846 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.169156691 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.359006151 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.377321596 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 5.136122763 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.399577056 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.379517908 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.250896663 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.358481517 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 4.760464901 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.137038581 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.425897957 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.132575531 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 5.133355416 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.307506316 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.135748232 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.312386379 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.137175583 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.474790951 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156796572 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.291225075 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.137088525 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.390935087 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.16738832 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.187861226 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 5.132376597 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.267659162 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.134611057 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.005880695 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.2987788 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.137593867 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.132404796 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 3.798906574 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 5.132407152 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.291255834 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.369444676 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.155763915 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.210862246 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.802756027 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.133070059 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.222199696 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.156707609 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 1.473414995 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 5.134927691 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.291075121 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.136197737 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 4.663344906 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 5.132621148 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.378109664 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.317593258 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.136685062 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.133298256 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.045818952 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.132525821 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.132260653 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.295798253 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 4.004733073 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.132696548 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.339829858 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.137759029 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.26673334 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.137772178 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.209556553 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.490188841 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.132985041 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 5.133467964 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 5.131482209 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 5.132284606 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.133010048 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.394704546 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.163844039 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 1.661189371 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.274426005 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.406902826 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.451394017 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.387258986 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.18026961 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 5.135214061 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.379426492 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 5.132949838 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.199064631 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 5.135792346 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.157272885 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.369981057 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.132461265 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.348719792 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.414440865 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.074498277 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.184546733 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 5.132197464 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.134680652 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.009601628 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.287533893 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.22795376 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.132164788 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.133571823 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.252426948 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.26011261 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.350823469 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 5.134734315 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.359673717 seconds)
  done (took 513.342089051 seconds)
done (took 645.302112383 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.133477489 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.133504708 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 5.117305568 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.132488121 seconds)
  done (took 20.568617244 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.142666783 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.13958011 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.141145944 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.139859123 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.142192351 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.139491317 seconds)
  done (took 0.901354489 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 4.190686885 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.134087619 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.133450784 seconds)
  done (took 14.514185205 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207829472 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.524536818 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.250912508 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.577879485 seconds)
  done (took 1.617684498 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141236565 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.141540875 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.141751143 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.143181775 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.143371538 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.143847053 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14172531 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.142566988 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.143974322 seconds)
  done (took 1.341039359 seconds)
  (6/6) benchmarking "26942"...
  done (took 2.427559014 seconds)
done (took 41.427069801 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 5.14434339 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.429013148 seconds)
    (3/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.261366208 seconds)
    (4/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.23019965 seconds)
    (5/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.260826648 seconds)
    (6/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.31622023 seconds)
    (7/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.392908208 seconds)
    (8/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.198584146 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 4.360201331 seconds)
    (10/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.156551593 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.261908724 seconds)
    (12/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.227799094 seconds)
    (13/309) benchmarking ("sort", BigInt, false)...
    done (took 5.136535737 seconds)
    (14/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.414983111 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.177125946 seconds)
    (16/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 5.328807533 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.265205862 seconds)
    (18/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.658520284 seconds)
    (19/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.274450317 seconds)
    (20/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.155555816 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.161260041 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 5.261386201 seconds)
    (23/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 5.228484709 seconds)
    (24/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 5.240176969 seconds)
    (25/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.254218453 seconds)
    (26/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.66128523 seconds)
    (27/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.492343393 seconds)
    (28/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 5.119548398 seconds)
    (29/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.248501497 seconds)
    (30/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.235972658 seconds)
    (31/309) benchmarking ("map", abs, BigInt, false)...
    done (took 5.280863757 seconds)
    (32/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.565240685 seconds)
    (33/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 5.140555844 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.274552123 seconds)
    (35/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.159565632 seconds)
    (36/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 5.135301265 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.327468729 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.479554858 seconds)
    (39/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.099505008 seconds)
    (40/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.196358039 seconds)
    (41/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.8197566 seconds)
    (42/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.302559439 seconds)
    (43/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.237170578 seconds)
    (44/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.949975781 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.476180092 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.197947038 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.459294857 seconds)
    (48/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.311202283 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.250293325 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.206647655 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.403818469 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.152483693 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.230027462 seconds)
    (54/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.417121266 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.194433709 seconds)
    (56/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.364234063 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.245800327 seconds)
    (58/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.242346799 seconds)
    (59/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.606656019 seconds)
    (60/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.495610818 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.433844712 seconds)
    (62/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.310014893 seconds)
    (63/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.157025821 seconds)
    (64/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.277470448 seconds)
    (65/309) benchmarking ("sort", Float64, false)...
    done (took 3.889395999 seconds)
    (66/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.220907182 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.521266571 seconds)
    (68/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.150406858 seconds)
    (69/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.458751206 seconds)
    (70/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.219113903 seconds)
    (71/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.463736702 seconds)
    (72/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 5.117672488 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 5.246080475 seconds)
    (74/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.343172851 seconds)
    (75/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 5.134009755 seconds)
    (76/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.452014468 seconds)
    (77/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.160545533 seconds)
    (78/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.251019174 seconds)
    (79/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.143936958 seconds)
    (80/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 5.40397446 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 1.269192409 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 3.832173401 seconds)
    (83/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.266957761 seconds)
    (84/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.331329517 seconds)
    (85/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.19455985 seconds)
    (86/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.026500917 seconds)
    (87/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.153300363 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.302300481 seconds)
    (89/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.431250836 seconds)
    (90/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 5.137232401 seconds)
    (91/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 5.202425253 seconds)
    (92/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 5.115577361 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.006052438 seconds)
    (94/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.173439266 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.386629761 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 5.133203016 seconds)
    (97/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.436155231 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.821218608 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 5.132821001 seconds)
    (100/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.053014881 seconds)
    (101/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.324821917 seconds)
    (102/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.277116632 seconds)
    (103/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.382369815 seconds)
    (104/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.161859509 seconds)
    (105/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.323937545 seconds)
    (106/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.330401016 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 5.200833654 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.084304614 seconds)
    (109/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.210824549 seconds)
    (110/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.217380299 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 5.137831559 seconds)
    (112/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.2213489 seconds)
    (113/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.325869543 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 5.13969583 seconds)
    (115/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 5.118184895 seconds)
    (116/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.350200411 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.2296187 seconds)
    (118/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.2295906 seconds)
    (119/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 5.122004671 seconds)
    (120/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.614496511 seconds)
    (121/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.560939073 seconds)
    (122/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.159945956 seconds)
    (123/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.384880513 seconds)
    (124/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 5.253744343 seconds)
    (125/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.155784664 seconds)
    (126/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.107149322 seconds)
    (127/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.458558465 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.517727956 seconds)
    (129/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.040103979 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.570014108 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.157078607 seconds)
    (132/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.3125024 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.397879932 seconds)
    (134/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.161060349 seconds)
    (135/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.150142943 seconds)
    (136/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.222219447 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 5.119383262 seconds)
    (138/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.454381223 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.351399472 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.468594376 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.387196816 seconds)
    (142/309) benchmarking ("sort", BigFloat, false)...
    done (took 5.1361005 seconds)
    (143/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.740667186 seconds)
    (144/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.256285028 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.297416606 seconds)
    (146/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.275259742 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.941808792 seconds)
    (148/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 5.133517664 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.429016204 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 1.105442388 seconds)
    (151/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 5.146516355 seconds)
    (152/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 5.216812831 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.874134058 seconds)
    (154/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.564662739 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.470809468 seconds)
    (156/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.625889354 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.266747393 seconds)
    (158/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.208321602 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.365077508 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.159370634 seconds)
    (161/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.295893985 seconds)
    (162/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.647284832 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.434671897 seconds)
    (164/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 5.172519704 seconds)
    (165/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 5.846606998 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.068614945 seconds)
    (167/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.571987358 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 5.120001136 seconds)
    (169/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.298107564 seconds)
    (170/309) benchmarking ("sort", Int8, false)...
    done (took 3.106725796 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 5.342545561 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 1.138452733 seconds)
    (173/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 5.135786858 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.245779592 seconds)
    (175/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.160868192 seconds)
    (176/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 5.134465493 seconds)
    (177/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.00278328 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.433981838 seconds)
    (179/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.341220342 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 5.135821481 seconds)
    (181/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.261642877 seconds)
    (182/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.397963012 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.764827671 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.266485288 seconds)
    (185/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.720183915 seconds)
    (186/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 5.120871694 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 1.857738766 seconds)
    (188/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.344379153 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 5.137543423 seconds)
    (190/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 5.137618047 seconds)
    (191/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.090424907 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 1.225229238 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.530492642 seconds)
    (194/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.304229268 seconds)
    (195/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.399511902 seconds)
    (196/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.237281154 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.816534761 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.1608888 seconds)
    (199/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.46946598 seconds)
    (200/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.22337431 seconds)
    (201/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.481827836 seconds)
    (202/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.246511421 seconds)
    (203/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 5.205571757 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.408756112 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.236725091 seconds)
    (206/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.626235867 seconds)
    (207/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.051051924 seconds)
    (208/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.281763508 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 1.077817169 seconds)
    (210/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 5.134873821 seconds)
    (211/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.625227479 seconds)
    (212/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.68040367 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.359385718 seconds)
    (214/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.262686982 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.19699951 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 5.119851497 seconds)
    (217/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.384412404 seconds)
    (218/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.437835534 seconds)
    (219/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.654918556 seconds)
    (220/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 5.128295972 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.365466763 seconds)
    (222/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.411039535 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.925616765 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.340124886 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.409181846 seconds)
    (226/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.216384181 seconds)
    (227/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.619922381 seconds)
    (228/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.723989987 seconds)
    (229/309) benchmarking ("sort", Float32, false)...
    done (took 3.902828135 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.83448651 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.330025849 seconds)
    (232/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.149082444 seconds)
    (233/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.522324734 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.588912277 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.157941132 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.177689057 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.497683076 seconds)
    (238/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.523316121 seconds)
    (239/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.272161402 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.511248236 seconds)
    (241/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.363472337 seconds)
    (242/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.609343736 seconds)
    (243/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.169222385 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.479491552 seconds)
    (245/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.163900945 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 5.136032172 seconds)
    (247/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.491060478 seconds)
    (248/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.220554324 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 5.135823191 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 5.133077052 seconds)
    (251/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.245399479 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.234307614 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 5.136173071 seconds)
    (254/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 5.135469258 seconds)
    (255/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 5.1970073 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.30245216 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 1.336685422 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 5.134841431 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.355006117 seconds)
    (260/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.959214213 seconds)
    (261/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.427490246 seconds)
    (262/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 5.139030926 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.172009032 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 1.055871536 seconds)
    (265/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.820326543 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.223728024 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.782519387 seconds)
    (268/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 5.14400796 seconds)
    (269/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.259361162 seconds)
    (270/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 5.119852019 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.246596393 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 5.135485409 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.468605726 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.502032319 seconds)
    (275/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 5.12032795 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.951105273 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 1.095409418 seconds)
    (278/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.465645788 seconds)
    (279/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.613104191 seconds)
    (280/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.738685001 seconds)
    (281/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.146456424 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 1.335488195 seconds)
    (283/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 5.135881322 seconds)
    (284/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.435480296 seconds)
    (285/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 5.502820049 seconds)
    (286/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 5.234275591 seconds)
    (287/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.35277899 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.217172068 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.218299029 seconds)
    (290/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.221112954 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.255467582 seconds)
    (292/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.323564519 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.278006287 seconds)
    (294/309) benchmarking ("map", abs, BigInt, true)...
    done (took 5.123417558 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.844506859 seconds)
    (296/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.633486779 seconds)
    (297/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.705206799 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 5.128889538 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.254263758 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 1.061193861 seconds)
    (301/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.604082548 seconds)
    (302/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.225661419 seconds)
    (303/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 5.148252872 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.86414213 seconds)
    (305/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.238412766 seconds)
    (306/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.205771771 seconds)
    (307/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.321279267 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.383377959 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.429132221 seconds)
  done (took 468.65373668 seconds)
done (took 468.762805287 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.168940911 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.162644728 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.146431087 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.167952168 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.257892982 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.174334856 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.158168474 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.148698592 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.193762112 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.195832403 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.145276248 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.172480787 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.148279345 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.146667096 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.14563847 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.160674001 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.456263618 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.170444869 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.163094571 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.15479957 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.1630197 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.145232722 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.196873705 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.176164583 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.150181157 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.148555482 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.149887119 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.165768483 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.258121871 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.150101957 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.149091491 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.158156582 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.45557331 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.167419608 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.141147279 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.166190752 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.15750545 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.155986488 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.150276032 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.178561108 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.547226214 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.177471928 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.148975238 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.146685947 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.147318645 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.15123792 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.14866639 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.152664175 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.159652897 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.160361265 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.545461345 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.193671129 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.150286599 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.146959558 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.15708881 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.14750588 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.149970193 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.162904693 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.166123538 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.162247512 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.444862445 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.17421505 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.149252954 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.163290164 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.155564935 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.579863818 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.174409287 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.150979195 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.54835775 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.183587594 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.581165965 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.186800597 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.14805299 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.161066734 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.179114556 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.456631112 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.163439767 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.146620906 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.154585697 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.145846118 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.158722295 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.160071142 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.15204457 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.147315235 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.161313429 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.174176081 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.157692948 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.148907719 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.1558887 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.169484166 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.15442616 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.157948924 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.150289982 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.142107862 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.156623696 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.150760311 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.150628771 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.150246052 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.152033548 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.158364897 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.543548082 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.19564961 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.143772126 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.144229841 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.147085323 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.161751724 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.543953044 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.181558378 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.168534719 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.195048142 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.149290317 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.447419043 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.173361198 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.163032606 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.155743174 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.150379607 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.142505972 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.447181413 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.568592279 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.19431105 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.149204186 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.145865142 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.163500929 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.150038595 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.143510438 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.456449792 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.171523598 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.161528648 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.268570071 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.157868391 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.180374818 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.146183341 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.15088878 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.175833203 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.163841366 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.179032181 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.150176194 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.163024483 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.163559901 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.143808566 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.159122878 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.157917653 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.148797453 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.153151727 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.141640014 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.175616868 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.160700439 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.160307668 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.168446845 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.268812399 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.144800269 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.443845312 seconds)
done (took 30.254000834 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.21567068 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.143104519 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.244028725 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.144262239 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.226323111 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.230162968 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.140909979 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.141989878 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.141404158 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.516152045 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141477494 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.143084179 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.13915961 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.140894022 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.226855844 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.144172521 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.141924303 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.478711321 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145600008 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.217413591 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 5.136699586 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.141029917 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.144458585 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.541173659 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 5.144285843 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 5.142421757 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.21602651 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.143872676 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.483482495 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 5.14124833 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 5.144658411 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.48222527 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.235868272 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.162109319 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.154606502 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.151694816 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.226754691 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.148705915 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.225738266 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.225506953 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.245059545 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.185254676 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 5.138269952 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 5.136527834 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.146956654 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.146247541 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.142023687 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.172550925 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 5.140560733 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.140936025 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.479221336 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154194421 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142423112 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.141781279 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.142637502 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.177067017 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.141967967 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.146668974 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.236202865 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.146043205 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.208537831 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.585132112 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.515877981 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144748283 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 5.139962231 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.142127977 seconds)
  done (took 68.749348435 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.20926998 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.2169219 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.210468506 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.145891567 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.194901576 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.212433315 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.148200247 seconds)
  done (took 1.395509683 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.149741502 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.14447461 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.194587704 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.194283007 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.144837778 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.294592095 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144512876 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.155917044 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.141811078 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.196899961 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.145334353 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145125052 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.151829872 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 5.14192428 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.192587176 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.15567717 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.260448253 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.145538603 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.146150418 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.296562091 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1420284 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.151604948 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.198802832 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.156151185 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.145307483 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.150889341 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.737270447 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14595696 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.142590218 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.144920803 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142457886 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.186964161 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.145126769 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 5.142907904 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.141496296 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.260175201 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.14516347 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.142321863 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.144768281 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 5.139087853 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.144217163 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.144441744 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.144657118 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.142121136 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.144581247 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.168269782 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.144511337 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.144753617 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.145346103 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.145636456 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.196349996 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.145005319 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.142586818 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.143011294 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.200605175 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.151547152 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.146208749 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.142422777 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.14518464 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.14212727 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.296811049 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.19348932 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.145546131 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.193121894 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145500442 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.145604312 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.144982126 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.145003723 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.240345469 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.14545265 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.193987605 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.142684217 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.304171408 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.168712652 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146369506 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.147994417 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.147647816 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146560157 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 5.147249921 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.151479314 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.142139019 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.146490893 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.152202586 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142836925 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.14201852 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.257728656 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.252596126 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.141856636 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.15861264 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.151952051 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.142623267 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.197945648 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.1456334 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.142282558 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.19971391 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.260757461 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.200192723 seconds)
  done (took 36.803630303 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.148895439 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.153019443 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.146369728 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.1618082 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.145321148 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.14463996 seconds)
  done (took 0.956840033 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.146135433 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.14522586 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.145590975 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.145012231 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.146390081 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.14641087 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.146942703 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.146711652 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.149047902 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.145165447 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.146464496 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.14682902 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.147070947 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.145976495 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.146758812 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.146322898 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.146692901 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.142733625 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.14510937 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.146124546 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.29353282 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.145883225 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.146046188 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.146337036 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.149678226 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.145983679 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.153221752 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.144918136 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.145848885 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.152765828 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.148965235 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146929131 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.146234524 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.151352921 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.149578145 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.146631512 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.148297199 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.146631478 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.142792638 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.146737963 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.147139922 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.146519363 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.145610675 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.146794663 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.146845438 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.148908039 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.150041747 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.154385115 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.147024802 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.147077126 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.147025736 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.145325829 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.146639955 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.146912752 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.147180821 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.150129866 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.149988465 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.147409842 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.146768018 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.146897317 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.145845827 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.147344303 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.147569602 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.149858086 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.153139005 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.147610696 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.146458796 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.150162466 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.147056119 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.146613734 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.14669504 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.143291499 seconds)
  done (took 11.807823483 seconds)
done (took 119.790783312 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 5.290298518 seconds)
  done (took 5.343323299 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 5.158139173 seconds)
  done (took 5.262717608 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.60638382 seconds)
  done (took 6.67540125 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 5.160106862 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 5.149650706 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 5.145198222 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 5.140848593 seconds)
  done (took 20.678175072 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 5.167213479 seconds)
  done (took 5.225518143 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 5.156401858 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 5.134134326 seconds)
  done (took 10.396321515 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 5.280397887 seconds)
  done (took 5.340572786 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 5.214794424 seconds)
  done (took 5.313522633 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 5.148055185 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 5.172150869 seconds)
  done (took 10.431249197 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 5.122145486 seconds)
  done (took 5.180037389 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.67606001 seconds)
  done (took 7.869380514 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 5.157451149 seconds)
  done (took 5.335875549 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 5.13778683 seconds)
  done (took 5.198072011 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.244832462 seconds)
  done (took 6.302701181 seconds)
done (took 104.610856043 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 5.151865063 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 5.13992461 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 5.138809986 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 5.138735827 seconds)
  done (took 20.622424618 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.178972488 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.180208214 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.180919931 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.19033739 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.185660879 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.180276987 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.17096519 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.171650102 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.190445427 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.183209153 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.181563781 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.1813956 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.178688992 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.174343013 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.182354846 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.181054747 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.190760565 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.180800941 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.172107788 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.18295118 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.146328639 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.190175037 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.183126823 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.146818226 seconds)
  done (took 4.344127522 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.343437872 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.216711977 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.299344368 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.21512697 seconds)
  done (took 1.132621959 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.196828068 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.199801578 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.2111178 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.25063558 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.273151575 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.209275386 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.17258349 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.167582721 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.154220023 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.199356997 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.27431071 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.194578948 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.284232323 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.146618138 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.327673465 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.146533545 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.147000194 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.199148829 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.249731297 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.263207834 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.148167467 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.197541317 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.202199317 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.193713376 seconds)
  done (took 5.067442093 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.14377032 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.153076509 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.151098818 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.145463159 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.145440862 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.145177206 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.151886949 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.147327852 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.166476861 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.147348337 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.144578613 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.145319862 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.1444239 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.145451232 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.145063271 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.158610536 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.158605014 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.145884728 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.148585846 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.150873696 seconds)
  done (took 3.043008644 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 5.138420366 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.992494329 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.491770416 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.395245617 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 5.138764161 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 5.138850102 seconds)
  done (took 19.353855651 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.157151996 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.150097089 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.145481927 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.201470448 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.284706798 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.149987213 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.146258625 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.155516683 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.189797821 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.210456459 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.160181798 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.173216224 seconds)
  done (took 2.183714879 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 5.138852841 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 5.146794069 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 5.138609344 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.164542419 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.156135456 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.15147153 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.152699937 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 5.139340838 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.156675827 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.162600236 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.150823157 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.157081068 seconds)
  done (took 21.877847271 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228944047 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.032813826 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.190101269 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943850543 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.636422571 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.347983678 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.13807863 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.50030591 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.157655439 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.409859875 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.081237117 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.359155228 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.393550948 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140476656 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.218185047 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.611339422 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.443170112 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.37584582 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.177819229 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.812412957 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242144945 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.508820583 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.926848517 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.255495665 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.35252687 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.272380073 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.400762451 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.098167782 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271181364 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176092533 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150678877 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.141642432 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.414428413 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.513290839 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259919067 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151081495 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832230154 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.886209764 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 5.135297804 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 1.823681193 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.967903582 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.24848684 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148464546 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.1406551 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.075232835 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.504452387 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.567020532 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.161543396 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.852095172 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.140553395 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150891904 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228952593 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.143837387 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.956814195 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094779764 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.442170103 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 5.138410203 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145804226 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.712248849 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140734025 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.582272983 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.163419909 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.338355309 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802921086 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.582554049 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.290780407 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.14175689 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144490459 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076241898 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.801409659 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242763928 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.304206499 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.155432374 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785083998 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.437141939 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.084631606 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200353409 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.442693655 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.790086582 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.164974804 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.370161222 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.09231342 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076057188 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.002200065 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.075732451 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.400015023 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207456199 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 1.77596035 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222918632 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.485627002 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169049362 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15777559 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148698202 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.365026875 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.705890194 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140639507 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.809165097 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422806241 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158370701 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.478802631 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092031127 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.140317202 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.396652388 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.35238784 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.221643776 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.696684526 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304220088 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.153217424 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.214923369 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.900999008 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239392778 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.413902997 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200110592 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140311996 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250186379 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.100274365 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.441322968 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.19697395 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.302734952 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.061759926 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.382149501 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.459142212 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.456900325 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215358762 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.140769914 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.140779247 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.854290911 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.7448486 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.408884674 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.141506266 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.474782785 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.238498476 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 5.143128535 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077039207 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.707092297 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.060112234 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 3.227389635 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.365312653 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.939537292 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.502826804 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076362174 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.292903393 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.252251324 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.360988075 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.78062675 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 5.21367185 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.39816819 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.469688455 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.299465326 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239815289 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160764702 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230603403 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163549554 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 3.417635993 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.481958068 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.145975965 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.145363802 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.80740396 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.199735966 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.142224239 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.145050287 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937157408 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.43843686 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.170612225 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.141755817 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.030782023 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.155701255 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208024326 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146675821 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152317324 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.665523072 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90688315 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.175246851 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.740363674 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.362296464 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151720187 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 1.783960632 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.306612965 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.225601684 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.427055182 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207909346 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.076570558 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.852952194 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.835530103 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.142184345 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076649988 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.142029829 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150523879 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153420851 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.52438605 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.419557359 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.191496585 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.879756587 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.236642629 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153526705 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.147336796 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.143371757 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.661869969 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14077217 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.585931272 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24075541 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279877869 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.156030942 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.076421659 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14607 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146828131 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.142818207 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.097241154 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195415333 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.839747816 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.576836676 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.413274584 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.78987246 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182573894 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.832565971 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.258725958 seconds)
    (217/481) benchmarking "4d"...
    done (took 1.238539037 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.821865108 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.058298472 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 5.226064027 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221318399 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153734171 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.833206513 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.896786569 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.71056805 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.45141838 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.45079673 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.580735942 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 3.508973137 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.496028892 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.482231434 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394911716 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.67213524 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202070547 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.494320722 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103209154 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233650169 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.790690513 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.487246207 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150263474 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.371171897 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.521137838 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.895459188 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278816228 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.35414448 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176999348 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.916436031 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155518116 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 3.340819042 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285706059 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.893203634 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.336064271 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.485993624 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.86317151 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.229580763 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 5.142564121 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.848157983 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271753597 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.872868537 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.505281632 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.492708056 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.140774884 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.612330066 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.159363703 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.588305579 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.496202368 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.321052695 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.316539919 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093800421 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153179959 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15341994 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.141749077 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 1.119263018 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 1.017224914 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.401953987 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153746408 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.378653536 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.252927565 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.491619875 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.054428913 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14785968 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.142851997 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.433461031 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.818734281 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.350280169 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 3.440288574 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.704719893 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.145477138 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.075853584 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077279011 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.835162674 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.151197352 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.118600502 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.357869465 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 1.339458194 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095627919 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.508661359 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.43786671 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.397168686 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.156026421 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.412901062 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.421538562 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877573071 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193341486 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.242181275 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.835662413 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 5.239360302 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.412126803 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.378427757 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940880222 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.392130867 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.193138258 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.015811247 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.137258483 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.370511907 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.412332068 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.042698491 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.365388804 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.876133162 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 5.156400704 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.525330571 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204156476 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.070925676 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.290043466 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.334650764 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152303869 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226886495 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152880888 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.153286767 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153350912 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190727245 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.095872488 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.257250726 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.156581548 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231022901 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172711995 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.713968587 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.147829883 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.415181492 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.497771193 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.473310931 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205311735 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.142740951 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.142233598 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076756091 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272825079 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.589162021 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.415551577 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.273318069 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 1.437598636 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167338275 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.831387793 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.35641986 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.437161335 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.418913469 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.037727037 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.136912938 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.238160844 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 3.410438675 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154418007 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.353813307 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.370641204 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.469283029 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626325648 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.23352103 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.563608805 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.432258852 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.513371004 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.143006394 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.715890878 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 5.153741616 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.90880652 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.230224392 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.080219495 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.404544501 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149781516 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.51665453 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190959471 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 5.339806229 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.657920384 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92905637 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.488004661 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.120589366 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212582301 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.414697416 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.528219412 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.465840571 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213678856 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153102048 seconds)
    (390/481) benchmarking "6d"...
    done (took 1.855433513 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279742878 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 1.045985643 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.427815915 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.143902551 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.35362411 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.85391466 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152294238 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.419619221 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.452681942 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 5.139643226 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 1.06768329 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172581781 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153572801 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.367090365 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.411664663 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.425846507 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147520019 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.150144299 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.958813107 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.420405658 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203199302 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076064464 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.140868036 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240447924 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.402052946 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165132396 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.830622845 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.855580452 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.438130897 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.075421114 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162222973 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.511508874 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.569613776 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.479015362 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.672409665 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.369973128 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.71447679 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.940420688 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.501724187 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.146752293 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.501055675 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.504253732 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.146157792 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.605278719 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238338459 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.412360517 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.46596752 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 5.154702672 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889913961 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.17109341 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.36401922 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.736760349 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108426076 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.138411927 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.202487304 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.155309369 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.274510223 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151115814 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 1.093612984 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.95959925 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.945280024 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639102615 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.143123111 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 5.137321244 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.892391379 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.637634828 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231610757 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287041405 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.164520159 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.84984075 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.435846375 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.397249786 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.613867744 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 5.19898273 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.147473767 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.144997248 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070855946 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.333968924 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.519864811 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.439558051 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 3.451608069 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.238250951 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147024267 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.359595691 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.355401951 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.089625412 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279554513 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.486863722 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237190654 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.912050382 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826592312 seconds)
  done (took 850.316672032 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.181110453 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 5.166255406 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 5.21388976 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 5.281106733 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.170751305 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.250526595 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 5.249004485 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.321178118 seconds)
  done (took 41.894386083 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 5.152040646 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.404229576 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156815221 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 5.156475867 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.212938142 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 5.143942545 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.355602234 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 5.15076935 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.160654623 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.154171933 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 5.144409541 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 5.138386849 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.492611595 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.171628668 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 5.143863231 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 5.206186672 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.183831064 seconds)
  done (took 43.642871789 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 5.144766847 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 5.37074984 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 5.185477667 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 5.185507936 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.141221444 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 5.150671077 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.131941405 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 5.197570843 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 5.137764349 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.360924148 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.479221761 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 5.180039567 seconds)
  done (took 67.727260272 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.154147891 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.149625084 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.150102253 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.1494428 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150000306 seconds)
  done (took 0.821894791 seconds)
done (took 1082.169505694 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.390828026 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.384611214 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.379093233 seconds)
  done (took 0.823980773 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.292444393 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.340257299 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.461397645 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.46582069 seconds)
  done (took 1.64629282 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.43809463 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.535307401 seconds)
  done (took 1.033360816 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.510455449 seconds)
  (6/14) benchmarking "18129"...
  done (took 5.167073181 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.54324746 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 5.140076699 seconds)
    (2/3) benchmarking "Float64"...
    done (took 5.141655825 seconds)
    (3/3) benchmarking "Float16"...
    done (took 5.144482321 seconds)
  done (took 15.492701664 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.147418122 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.150668607 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.147561284 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150855648 seconds)
  done (took 0.657094369 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 5.126752777 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 1.889055238 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 5.127152853 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.1432191 seconds)
  done (took 12.346491163 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.894885278 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.54628303 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.891252409 seconds)
  done (took 2.393562268 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.757872913 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.141302765 seconds)
  done (took 3.959397291 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.393543852 seconds)
  done (took 0.453908538 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.176054611 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.418876149 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.698905091 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.722564794 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.805728434 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.983937599 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.428062185 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.365811885 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.603255293 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.616196814 seconds)
  done (took 5.889477992 seconds)
done (took 51.367983558 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 1.510034817 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.516450018 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.356649162 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 1.480672611 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.367543455 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.352760766 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.355225278 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 1.46401287 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.976930268 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.973219128 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 1.519186188 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.366101987 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.301643445 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.515239123 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.308291598 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 5.143086299 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.368010829 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 1.544875411 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.170790581 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.376863558 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.360647757 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 1.115272519 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 1.357863644 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 1.125177414 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.364976579 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.30704292 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 1.707852076 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 5.140426044 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.33383938 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 1.712592641 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.34898277 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.535393657 seconds)
  done (took 111.435590769 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.88136617 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.139459597 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.138660783 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.13828131 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 3.540361227 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.140027367 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.138335532 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.137580598 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.127264404 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.11273431 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.139516002 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 3.514702886 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.139445358 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.138205684 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.14203892 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 5.138905311 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 3.304226732 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.911992298 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.138582567 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.137578969 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.139029358 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.361717485 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.138967561 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.390956477 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 3.246216317 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.140428828 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.081184209 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 5.145858353 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.149528791 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.111455162 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.150704432 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.137455498 seconds)
  done (took 149.457816305 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.113258461 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.140626664 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.139575465 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.138527989 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.139391635 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.141974939 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.141441159 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.138669295 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.746480285 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.752670496 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.147013922 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.151709621 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.160503112 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.13833312 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.166967684 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 5.139059508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.171318928 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.163000905 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.175656008 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.182024715 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.184632713 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.052368402 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.195170844 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.080321478 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.178134513 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.157491173 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.157392214 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 5.182294095 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.185957049 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.184313008 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.190834243 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.143387299 seconds)
  done (took 164.158402853 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.347892121 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.15120891 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.152172058 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.093151653 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.152682219 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.153000062 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.090565216 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.349265876 seconds)
  done (took 3.608782225 seconds)
done (took 428.724558074 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 1.609467389 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 1.459365939 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.33911167 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.172598402 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 1.432598363 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.216521069 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.170900722 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.23098417 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.90700383 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.24428255 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.853851032 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.184133807 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.948952652 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.189526357 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.2979598 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.222039645 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.714048098 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.804383662 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.344246535 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.248971951 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.354095379 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.12957413 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.242152658 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.933858612 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.970021597 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 1.170889946 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 1.344044792 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.727984294 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.177410837 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.336188683 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 1.91728902 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 1.57101079 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.183169785 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.166542696 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.220363211 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.20188636 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 1.521669747 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.181589747 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.290766252 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.9302007 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.231446878 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.804524343 seconds)
  done (took 29.25580612 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.139378488 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140414489 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.137842721 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.138497957 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.139833811 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.138550363 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139367912 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.137492869 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.13863795 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.13815831 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.138106156 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.138690199 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.137527161 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.14200846 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.137702759 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.139114139 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.138842702 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.140994031 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.138300187 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.137736568 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.138754898 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.138063597 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.154613794 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.138100618 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.139047341 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.140706717 seconds)
  done (took 3.708117576 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.15129729 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.300917158 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.408653242 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.167751237 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.151974927 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.155999682 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.170324837 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.151809288 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.154120481 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.154801414 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.246746614 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.154421881 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.169819404 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.411842826 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.165474191 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.153604981 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.153549438 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.154233506 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.311362457 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.165059402 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.169950515 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.15076728 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.170530634 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.161149024 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.153416649 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.152862219 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.590530022 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.624209792 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.156553404 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.245210975 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.190865084 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.170970993 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.570754446 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.414629446 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.201518062 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.154715046 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.150636418 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.245937029 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.154206772 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.148222076 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.167259191 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.152364838 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.405558718 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.641905548 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.162747033 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.151123715 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.629446109 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.253310036 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.188420846 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.161888642 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.413696345 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.165184265 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.153308326 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.151874727 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.189184681 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.159388677 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.152442682 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.476080359 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.159564378 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.170220993 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.152820785 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.151029185 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.313840335 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.156452589 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.299400211 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.15731318 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.161232716 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.153832831 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.409308391 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.16261053 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.652057204 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.162153669 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.149801623 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.245105862 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.303223709 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.657500984 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.162089033 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.313426316 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.587979181 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.172190348 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.155338596 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.611050672 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.17578925 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.155167293 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.151857792 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.153855923 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.151633606 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.195852548 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.166728534 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.573048159 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.650367968 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.486116425 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.175113917 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.163612576 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.153015921 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.473115851 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.156824998 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.151765 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.396974149 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.653701667 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.1620738 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.159545845 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.631249514 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.162758826 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.168868242 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.156736925 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.411632634 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.164915926 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.193708982 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.151651758 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.157568655 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.155669562 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.172213012 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.156526306 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.153008073 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.627559969 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.259724049 seconds)
  done (took 29.722737928 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 5.145620535 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 5.142851197 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 5.146897823 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 5.144967178 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 5.144072766 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.149290715 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 5.155967254 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 5.142057096 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.150577481 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 5.144229323 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 5.142362173 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 5.144254957 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 5.143306901 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 5.150314153 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.273709042 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.15194642 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 1.757581523 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 5.146742494 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 5.145063294 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 5.145550418 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 1.790506193 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 5.150303803 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 5.144475772 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 5.144527538 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 5.144769682 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 5.146432269 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 5.154479301 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 5.265926701 seconds)
  done (took 117.676825724 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.152035615 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.264618234 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.165938364 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.178609404 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.155646488 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.148473393 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.173725485 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.163195476 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.154930373 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.149335285 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.148184384 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.209823837 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.157546078 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.248953764 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.177354659 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.182841167 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.254871022 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.154931012 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.148767515 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.149184365 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.180361742 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145459167 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.212775743 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.271486531 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.165557729 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.266817693 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.150506898 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.153867877 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.153135156 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.269057468 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.160789345 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.210860623 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.175297734 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.165328847 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.268808648 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.260923584 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.254524118 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.176659971 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.157085712 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.152432617 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.151493781 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.139702496 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.270220573 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.163221071 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.151173443 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.258882353 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.163518325 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.15242808 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.160219357 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.147863904 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.164002203 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.165382817 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.214159035 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.276676934 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.178974483 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.176479687 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.173686088 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.450732501 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.170754205 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.253182724 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.140262886 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.269481601 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.163698408 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.140619079 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.152445266 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.155618374 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.180366231 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.180607847 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.255941995 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.155478 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.252177588 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.181394283 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.1538894 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.148283566 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.151721479 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.267813132 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.262599209 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.17958563 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.186861743 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.17786198 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.144799118 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.150095328 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.140291547 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.170183837 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.151891001 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.26559869 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.262527092 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.155397723 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.150789534 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.151149197 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.151483464 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.173912097 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.275594066 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.179965035 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.244561418 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.214074248 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.218125002 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.159593904 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.161636235 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.152107253 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.213593587 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.160053976 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.159720443 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.500275471 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.230760497 seconds)
  done (took 20.2357996 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.603920277 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.231123719 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.205179821 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.473892158 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.565917813 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.99901357 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.20073743 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.199084251 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.222082557 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.381480654 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.266453263 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.218690378 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.183766087 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.171522775 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.199792919 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.220238715 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.207063092 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.508676988 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.315936162 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 1.320531015 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.203553486 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.488770656 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.522134432 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.631584824 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.23713937 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.531655362 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.893356243 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.368833987 seconds)
  done (took 11.642594901 seconds)
done (took 212.303575 seconds)
SAVING RESULT...
DONE!
