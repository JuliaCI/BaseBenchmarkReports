cset: moving following pidspec: 15073
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.335223945 seconds)
loading group "string"... done (took 0.554075115 seconds)
loading group "linalg"... done (took 7.572475738 seconds)
loading group "parallel"... done (took 0.173746005 seconds)
loading group "find"... done (took 1.163944397 seconds)
loading group "tuple"... done (took 1.821812069 seconds)
loading group "dates"... done (took 1.244965943 seconds)
loading group "micro"... done (took 0.230949941 seconds)
loading group "io"... done (took 1.018824598 seconds)
loading group "scalar"... done (took 40.837853105 seconds)
loading group "sparse"... done (took 13.732208496 seconds)
loading group "broadcast"... done (took 1.041234902 seconds)
loading group "union"... done (took 14.33334243 seconds)
loading group "simd"... done (took 4.795847505 seconds)
loading group "random"... done (took 9.695388499 seconds)
loading group "problem"... done (took 2.005624826 seconds)
loading group "array"... done (took 22.749071347 seconds)
loading group "misc"... done (took 2.043584425 seconds)
loading group "sort"... done (took 3.455493776 seconds)
loading group "collection"... done (took 19.576752113 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.570505782 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141912068 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149521996 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.128797268 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203510862 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157235596 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157567567 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097914951 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.004521257 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174775722 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151781804 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.522264024 seconds)
done (took 5.283139008 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217128465 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093855992 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103287013 seconds)
  done (took 0.964088408 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076722944 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146605823 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094627483 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077517453 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094982245 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077302252 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094424131 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076737031 seconds)
  done (took 1.434282571 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087016893 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097042443 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.080642657 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096437157 seconds)
  done (took 1.1347312 seconds)
done (took 4.60375115 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.732581005 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271298868 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20434073 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461406698 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196748653 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215831929 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683856051 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.340756082 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252616254 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099193232 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14278058 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.385895435 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13708512 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.684152884 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089303873 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123621883 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176854281 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.452950418 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082510181 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10987816 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116355215 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141589739 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128473067 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.0903354 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183309445 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082268294 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193815553 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108339056 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079895593 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.27413847 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201664875 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690352259 seconds)
  done (took 10.945467099 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11049907 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133425081 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097751038 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137440668 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.1334372 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099432479 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084276718 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09635993 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12091273 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178094514 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114066817 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136231626 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094442731 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081820518 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116189259 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243818146 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120980856 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098858339 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100262785 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086648627 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137593948 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111687923 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107563119 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092564611 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16640819 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221844368 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109359175 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125592811 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095991542 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111452188 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142830387 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142533877 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093747374 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079289924 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171694432 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124242917 seconds)
  done (took 5.207603169 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.086742592 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188737572 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121630269 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16987217 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.07951069 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143385732 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094802411 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11308253 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255313345 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.193591201 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.482015118 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139494622 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099409798 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097574789 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081289965 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096983273 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.543826521 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.155699046 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134171184 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095680771 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103861748 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.103298116 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363463549 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079399447 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.09452328 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081599939 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.129184765 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064088478 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160075687 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.1008356 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.134165182 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122186926 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080631679 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135234778 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.214360011 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126481361 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116673056 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096343063 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077753858 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.190884446 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088114096 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096609695 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102279945 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13501548 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133688968 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.0970406 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081191716 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.218485252 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078868569 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112899171 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.933302418 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18213101 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090169831 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095496822 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.282733386 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.121520365 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096377404 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076765906 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.303551755 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.191147851 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098201941 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.120891943 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080582941 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094981445 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.077708201 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098009974 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.37818407 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080575512 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.735903069 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08359871 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107718225 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081889816 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096797041 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103502769 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086771161 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114750812 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077918295 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098715283 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077835726 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096289901 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081238723 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107753232 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093221836 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.213517089 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079797446 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097948305 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.076351525 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116054752 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125853175 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082639871 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095836621 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128959865 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081457656 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096966921 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133795669 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079589679 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108467844 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099307486 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142331237 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08083123 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.149761191 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095426075 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122356494 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098745737 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113898165 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110509215 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09878262 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.167695535 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078412572 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094947382 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079960765 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096014667 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08022511 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099929158 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108008872 seconds)
  done (took 22.813327878 seconds)
done (took 40.82298604 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.323193636 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103628958 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104042076 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103542173 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101068962 seconds)
  done (took 1.582188769 seconds)
done (took 2.397508912 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.285652961 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172955064 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096316244 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166272225 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093072074 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172144212 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160682074 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110749206 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.199427286 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095943401 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160214273 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093566339 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076776182 seconds)
  done (took 2.731447846 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093644598 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114751924 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08291534 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110070406 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076232291 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110815434 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091275512 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115231733 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109160316 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08473267 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093082821 seconds)
  done (took 1.899686655 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093915417 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112767687 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082425975 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110135157 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076018188 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110995502 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092042708 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116796088 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109438627 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085777337 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09376813 seconds)
  done (took 1.900455616 seconds)
done (took 7.339366 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091935266 seconds)
  done (took 0.905244091 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.930829707 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.904006483 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112151464 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149093586 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.294231012 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.189754761 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.475076781 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125214605 seconds)
  done (took 11.200424891 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.144402691 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085155023 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.105083768 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08576788 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102756941 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082090042 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100335159 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.101805398 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086595352 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100000419 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085338858 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103574969 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099654506 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083162473 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102392281 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082747159 seconds)
  done (took 2.427625362 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117427321 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116196258 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107442458 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108508962 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086149655 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107043205 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105700422 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088994488 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102279579 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103799482 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089166251 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106699026 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103661077 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079145197 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10694216 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.1084736 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085087345 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106543006 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106582681 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090113967 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106881271 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095691897 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08701889 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106105552 seconds)
  done (took 3.349127052 seconds)
done (took 18.698123855 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158901572 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108429407 seconds)
  done (took 1.087603592 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096096298 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113849031 seconds)
  done (took 1.036771877 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.09667177 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096731382 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121179799 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110060049 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080434895 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096863966 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118643735 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079482772 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097342096 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078791754 seconds)
  done (took 1.8061486 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082690692 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110531822 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101222607 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095605837 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105115274 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095715246 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088371558 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099288892 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109022418 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077187571 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102444219 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113875962 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084602467 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11706797 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104577713 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081904628 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10347368 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100091212 seconds)
  done (took 2.603560565 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079913338 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097629163 seconds)
  done (took 1.003154223 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082330077 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093982683 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080875747 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098039017 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093689527 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077676813 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094940707 seconds)
  done (took 1.446529663 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.48504645 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13569787 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260485597 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10196639 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103500073 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301250889 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099757479 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084236114 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104952397 seconds)
  done (took 2.560420089 seconds)
done (took 12.366769233 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094136533 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116431014 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111082255 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.466849517 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107162679 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099783658 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147956899 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.251343817 seconds)
done (took 2.226117343 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.143662775 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.602683306 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.427612423 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.231728083 seconds)
  done (took 2.097743459 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.405100654 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099148931 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083881733 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08174886 seconds)
  done (took 1.506881064 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08072767 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099245182 seconds)
  done (took 1.014885375 seconds)
done (took 5.600729077 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081841041 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.129816366 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079594697 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.100255202 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.076654245 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.100088659 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.078773968 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.097951581 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077194991 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098288571 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095669951 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.080866184 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.096579961 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081191923 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09484611 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078789003 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097260629 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078743726 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094159018 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077671899 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096820953 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077891214 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094738931 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077676242 seconds)
  done (took 3.013125401 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099464424 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099255396 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101568357 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086040844 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102353208 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085242354 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104564156 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097757796 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08615587 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101943679 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100882117 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085363315 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099935323 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08422507 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10103558 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100471143 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086405421 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098053618 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082061003 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102246434 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101945389 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081191763 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102374412 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08526314 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.10306269 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101557817 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082840135 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098834227 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102765412 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085946035 seconds)
  done (took 3.688361297 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085441572 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093884789 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078816704 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102289597 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078446733 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097751028 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077761729 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096123279 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078841033 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095413462 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078762604 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096730305 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077407708 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097515579 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07749827 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100006858 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106842004 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079108166 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095692263 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079263159 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098136024 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077686559 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095162376 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07803792 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095153662 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077698426 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095680487 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077422715 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097137442 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077476527 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099378638 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080799698 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096025172 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08421128 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09983178 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077101228 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09980299 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076817903 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097377475 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076347996 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096472465 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094125256 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078834239 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101232355 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078449446 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096825368 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078131361 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097852778 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078829137 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099559032 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07755011 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096286198 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079335625 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097593315 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081029221 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095624685 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.078242726 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.096978727 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095648671 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07926775 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094338361 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079274649 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096890198 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079155679 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11165101 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084051784 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096233681 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080090294 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097085286 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080755688 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098850957 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.091257636 seconds)
  done (took 7.240624156 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084604312 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106777417 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079545183 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09861441 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075265018 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097113797 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098877194 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079372326 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098193211 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085094017 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097455268 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079239071 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098438213 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107570045 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080348188 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097383634 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08577177 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095093229 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077876382 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100233167 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078509329 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100247918 seconds)
  done (took 2.849196019 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.208179989 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105542794 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142097982 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107006601 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083128234 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106745171 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101393788 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087577861 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.209882483 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082125386 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101625775 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102013466 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082636879 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101890381 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099153051 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085042013 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102301213 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085045569 seconds)
  done (took 2.84078518 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094128857 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099574991 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102227677 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100444513 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099175767 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083859204 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105559567 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10815279 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084118544 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098381655 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089916399 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102664213 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100172159 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081613909 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101429374 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081074419 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101534561 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081598337 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107760901 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104351339 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085728533 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107738362 seconds)
  done (took 2.970824481 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097401422 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101692561 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118287538 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.0846387 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096323445 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07953543 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.1065946 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.079872076 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107937334 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100451071 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08136042 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097280011 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087205623 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099616384 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103154885 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081710686 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100612833 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08061023 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101368132 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076389954 seconds)
  done (took 2.733127276 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102416376 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100894904 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099641951 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09189071 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101244461 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081058151 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108595184 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101061333 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081677204 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125481413 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101821888 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082350315 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109387945 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106235205 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098744176 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092537332 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108963166 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108781944 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081628484 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101848619 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125156975 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082087586 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110384421 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100188793 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082535439 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101289926 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099243789 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088650011 seconds)
  done (took 3.628915311 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081578005 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098019262 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080879525 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095971393 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078849484 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096076336 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078749318 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096836515 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081378011 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096262311 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080703823 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098596997 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080234516 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099442713 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081017292 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098859545 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080838629 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097213591 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078848575 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097295042 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081414048 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099846023 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080980208 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09662008 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077702043 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099888967 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078090251 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097218192 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079727611 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096561001 seconds)
  done (took 3.521512405 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09079073 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106528532 seconds)
  done (took 1.051697814 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079618669 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114865938 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078164988 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10318021 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085277481 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101739017 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107500775 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086025975 seconds)
  done (took 1.611820575 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097266508 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110250057 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082413721 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11389648 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109871246 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098142155 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171005233 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101878573 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086769091 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099329574 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113029334 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080714701 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105884034 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081590174 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106368363 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087441656 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09807671 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105504867 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087677655 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098408005 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082658352 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109237678 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082598768 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097519086 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100834123 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091534452 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112996652 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.081164932 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103734512 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107548188 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087551056 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093921244 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081493901 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101509612 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078750805 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109906196 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116230659 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084627784 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109790123 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081416115 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11236655 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095858219 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085770279 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106051338 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091807116 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101825138 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10041666 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077156073 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097345921 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084294728 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095978045 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081034393 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095276056 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087845545 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103588438 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109925823 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08111845 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101805176 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083718336 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104100419 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087820161 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102892436 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101236933 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.08201963 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107560613 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086476348 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111468861 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076695798 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09596932 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096617454 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093407814 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125387256 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087079432 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102668162 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100814606 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080086056 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103279207 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082726362 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10644473 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.086359559 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101083356 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107233536 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089406455 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100350384 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.082598919 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108716682 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098004739 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083940634 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098245606 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116343003 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081004387 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096995114 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079746727 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111251004 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084832398 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100737727 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078761212 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108480399 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07486146 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102006007 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101022455 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082581683 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111732871 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104592119 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088861679 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109945686 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088032648 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101026246 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.101974002 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.07954643 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101626489 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08458363 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107759314 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076118431 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103311102 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082156916 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101534392 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109297468 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081251142 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10037408 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089384626 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107473822 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080489409 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097811086 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102339073 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084038169 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104451928 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090118858 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100262906 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076419396 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096508906 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084485875 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102420988 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103714043 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08720764 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104621036 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075696152 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09939444 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104872301 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091767008 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101263907 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08187909 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108064936 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082208137 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101718188 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105843885 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085258837 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099679315 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087845386 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102457226 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076247808 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1052867 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10283859 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081150154 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103603249 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086692173 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103640915 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083480543 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100176136 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106448409 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083910225 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099344307 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08188253 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100158926 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092911796 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10363307 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076507343 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098821787 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.107721911 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08031841 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10136121 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080557319 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10386859 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082710665 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098978248 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.079858051 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102843063 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112576181 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086620015 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101961533 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10579976 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093548737 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100448624 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084817664 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101874007 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083050706 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102850259 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109636751 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087463023 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106262256 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.083799429 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098680874 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106248731 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090981559 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101029845 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080275192 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099721949 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085246038 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107715007 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103988761 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083966484 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100019881 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082738432 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10599595 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08408754 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102025583 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.079868598 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106174973 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100472899 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.089544027 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102638898 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110616533 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085931971 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096684036 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0858306 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099917739 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087582004 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097582934 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079153788 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100978065 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10111135 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081298263 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103308675 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076517207 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108785953 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090515734 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101566462 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.079914186 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102457819 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107310059 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08468853 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104993239 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084602463 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109221816 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110704731 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082220956 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103919452 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093280571 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101970149 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075719759 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107318816 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080410991 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101175903 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099076685 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080686488 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104856742 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09185188 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110191866 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09337085 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086362138 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099033851 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081359604 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096998798 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086785156 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104587165 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.082246946 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108819339 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102375562 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086452174 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105599397 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082487783 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102811019 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083491879 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105096035 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101223165 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085946175 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100136096 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085597391 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100352379 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080551791 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103657241 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082611728 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.10220261 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105726905 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083132384 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100604761 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085328936 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102992473 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082835212 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102899744 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.080724566 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105471683 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101138605 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083620218 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102892371 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078245392 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108970762 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082555618 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110950807 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.081815828 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098856412 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105821753 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087007292 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106892347 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083526377 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103339769 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08271836 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101461599 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103776816 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090026621 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099811804 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094202302 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110681462 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101244952 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086409546 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.10179427 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084881904 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100601167 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08329026 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103458005 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.081979892 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10173741 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104973977 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085326008 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101224433 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08557101 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102363596 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082808735 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10388238 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076188344 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101393848 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081792584 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102277291 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112263622 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083980541 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105716679 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08088257 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103691914 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.079933197 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099330093 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110160911 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091110365 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103223078 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108462297 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082004493 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104101653 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093736772 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096391784 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080379797 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100922093 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.079817846 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117968164 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101959574 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092465756 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101230771 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081411519 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099384154 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083227898 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101350897 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.075642656 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100309633 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104533173 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086034056 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101172717 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083039048 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105056761 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083113804 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114093954 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101189588 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08389569 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102151931 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080372484 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100743656 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081453014 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105649753 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084575011 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099877236 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079420832 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102588248 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102053461 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084395344 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100860143 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084941734 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109131862 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081916205 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105691634 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085733704 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097606006 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104983223 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08296949 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101912182 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082651936 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105854353 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085319029 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104041671 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110537556 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083365059 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102588502 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08346697 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099967915 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08170577 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102086982 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082520127 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102637355 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101887213 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091920415 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100690455 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086146411 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102941432 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083176038 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110291539 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102542935 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085882467 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111328731 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.085280365 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.104527409 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.10879036 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087367103 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105728339 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083843963 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.104316668 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087456371 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101408277 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107592399 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084303599 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103305729 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.084335621 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100440255 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082314043 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102608849 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081050409 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109939538 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.1022728 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082500666 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.10047148 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081271529 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103671084 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085808002 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111740681 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103581217 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086892011 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097460201 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080405709 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103643391 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079960727 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104161633 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086264734 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108953334 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.102858328 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084275927 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10072866 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092600252 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109146755 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.086277085 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101411377 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104074375 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084881545 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103515341 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084783914 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102410057 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084941774 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107064653 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084164557 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103066965 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10856471 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08677584 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103984506 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.083929163 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103442209 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.08253172 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098083519 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.083047905 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105511001 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107512177 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086226908 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102775558 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093668836 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103039708 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082236421 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106959359 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102621144 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088110595 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097147768 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085438528 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104906937 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084780736 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.09825005 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.081950047 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101006808 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104148317 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082925594 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09708793 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094331653 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112520383 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104426575 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082875861 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100912746 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079216595 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097170293 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082977879 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104792422 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085173504 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113478505 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08134722 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102750712 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096866963 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08422433 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106315898 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.086760344 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100451844 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.077880379 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103461649 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086409155 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109140156 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099921377 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083830004 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105467861 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.085804426 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100362476 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086225988 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.100578035 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086316141 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116425361 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103876654 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084550086 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.10997281 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109070825 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085852163 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097205493 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084777306 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106457258 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.082914378 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104731873 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.082890118 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119489555 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106245097 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08219226 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102174297 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.085937923 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103575077 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110813293 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085987336 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104559927 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.08810155 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.104743124 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110733477 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087867252 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111106497 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.08664356 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107076396 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081144724 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103813055 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.080004323 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.102544693 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103721388 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084996465 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107858321 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091253834 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.103473062 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11349425 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091953727 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108547471 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079300956 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.102505387 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081391378 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099583562 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104093156 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083012976 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100618725 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081817932 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100444394 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084095158 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109083716 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.083860221 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104590349 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.082167956 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098386096 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104093218 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086987504 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103562902 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.080747915 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103370499 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085240963 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.107588364 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085509891 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105073518 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103948525 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085444568 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103743451 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078469941 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109668652 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081619918 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.105897648 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082309148 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104866018 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.083566529 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107074649 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109021429 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08494756 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107226735 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.0939611 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106875093 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099707476 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081603177 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.109092003 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081902293 seconds)
  done (took 57.839274802 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146636723 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081261068 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098558952 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079437846 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113061192 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098388241 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079239764 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099014879 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080256591 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101890257 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078399849 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099442193 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107785709 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123451026 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093855424 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104539066 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078249506 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10042154 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098624035 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081116415 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10889788 seconds)
  done (took 2.959566278 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105101564 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117979936 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114828274 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11810438 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089173729 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115458047 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114356741 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114050318 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098707921 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111616778 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118350271 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115021814 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092270728 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110544169 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110231476 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092555575 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118420263 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109101252 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114570729 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093683226 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113330238 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114589815 seconds)
  done (took 3.305169755 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084241563 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101922895 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085668928 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097893537 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082797128 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099086614 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087440679 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101221159 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085951291 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102514747 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080669961 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102575411 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10291633 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079956138 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102143896 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081032178 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.149927842 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107620878 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081971054 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104680259 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.07763326 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106161036 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097487484 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079653245 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101481034 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087833491 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104456829 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080136844 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103003419 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081307369 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103931326 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08067855 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105117694 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102516317 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08277181 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100757652 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084046589 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102071944 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078665082 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101177681 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.0835476 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099337104 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083760983 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104849318 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081436724 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101449977 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084864411 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103951679 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.076736747 seconds)
  done (took 5.508189723 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.102764409 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160751129 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085994851 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142618022 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120750332 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111622894 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.086680231 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141831763 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10350122 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081024121 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121651264 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120161134 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102987097 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088632769 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111347405 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103068248 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085088092 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102646285 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.086484674 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103972321 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108335288 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089030203 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119818745 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117473555 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108072856 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.081772605 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103613169 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107758279 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098565918 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109299158 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108241017 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089173918 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121562821 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106150402 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082191466 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107524741 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121566901 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083043282 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107529727 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101877169 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088181988 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108686839 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109975853 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101168756 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10530432 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108502097 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084453903 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101673646 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117619953 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086678051 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113006068 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119159219 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087701129 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104942927 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108761546 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.11844262 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085135092 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102400916 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087324824 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117894696 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101652671 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088423603 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119091571 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106208174 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.090471903 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.118800496 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110584933 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107088864 seconds)
  done (took 8.186484349 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093816658 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111126614 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119408008 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119552837 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091482474 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112047685 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109330718 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089509598 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111044211 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116426343 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109852987 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133505395 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085946086 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114581564 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110776458 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091630271 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110989241 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110324258 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090215865 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111195378 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110543095 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120344558 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090057585 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119398002 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14283987 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105955806 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090237042 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111928586 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119452433 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109464782 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122345206 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092065995 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111143366 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12012833 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122043046 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090786624 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104287637 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110223687 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091783682 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110802077 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104785157 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099617855 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112021671 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105520125 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090841286 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110834724 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119696519 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124059562 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112372636 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097114004 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112406014 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120392307 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110154496 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091227689 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120509156 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146932759 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119856949 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121606007 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110092239 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10012623 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121231913 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128037302 seconds)
  done (took 7.732330247 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106135053 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115302848 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.1183295 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100461882 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082929557 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109073071 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082241553 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10317242 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113398986 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094004591 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117728405 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109174275 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09048117 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118196682 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109719125 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112555289 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088504875 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110197713 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113888958 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087542628 seconds)
  done (took 3.000633732 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093592004 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124040941 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084528643 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112885622 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108701067 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091348405 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107462068 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107037223 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086381083 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108684688 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096108064 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117377627 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105626469 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090267268 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116738063 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112565026 seconds)
  done (took 2.588330569 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099685278 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117719883 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120149077 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085625626 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10500678 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.07984663 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107165032 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100519636 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081390972 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120742279 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084263864 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108813178 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105026946 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083970489 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101667029 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08720181 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102228145 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081995473 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106496558 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118662968 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096083897 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105022998 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.084150927 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108103901 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105273738 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089775503 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106979049 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102870076 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083734633 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105571266 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084974832 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114199611 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101175249 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08367187 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102453367 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082009581 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104950101 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084705795 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109399379 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103816567 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083814501 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104902391 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085458111 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106500266 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080057083 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106073582 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080143001 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.11234213 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102207728 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085405932 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105627975 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086105617 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106527208 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115596307 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088056666 seconds)
  done (took 6.326678923 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099795309 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10912077 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080076963 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104145119 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089725734 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10791501 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107838142 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088612162 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107301343 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082646017 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107754779 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089579918 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108253681 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107536433 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087870593 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108839165 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080031781 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106804061 seconds)
  done (took 2.700352417 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091884156 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105152857 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091436941 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106142312 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08449422 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10858182 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079227253 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105080154 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104213779 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085414584 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104689546 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087842292 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104056523 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086586041 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106691197 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08412953 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108637684 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102959869 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086255486 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100701377 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088522074 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103667159 seconds)
  done (took 3.050942566 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118749588 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124964193 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092154038 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231122601 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103301321 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13233938 seconds)
  done (took 1.728413289 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108939992 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12026233 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105434666 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107249345 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115421478 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085819982 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108019172 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107867024 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116146158 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10031205 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107756632 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11742459 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116991268 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096062289 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114538314 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115125289 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106894951 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088133348 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106332686 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127886638 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086872944 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118015235 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107124179 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08642673 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108602173 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117196619 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116886576 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103196605 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107302778 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118025102 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11280613 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086532289 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118100473 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122268455 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087476241 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117792666 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108791042 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127005038 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112905164 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09711861 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109888424 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114037996 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096680933 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112808703 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117576617 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106943208 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093642277 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10843325 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106582156 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134434543 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093526888 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116463025 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114187731 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116670939 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097606471 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133479048 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122383465 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117827522 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114796233 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122722699 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116215568 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09381488 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116611672 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122471515 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114155773 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096199366 seconds)
  done (took 8.173696169 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101180893 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126651782 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108027729 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121415169 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097420245 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107984096 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107627071 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087300121 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108680325 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106485259 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151086379 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088432716 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118595583 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117248409 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085878364 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108552343 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108571104 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116739573 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086637564 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133756212 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107370485 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116514457 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096477832 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117407974 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122406708 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11452448 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1065247 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088208198 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108105063 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086159884 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114230245 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108675517 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116275309 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086427494 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117254486 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108660003 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087560394 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114291537 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107837789 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112485521 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097938432 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127043794 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108194732 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106947309 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101346698 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109575827 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10785143 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087047476 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109023807 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10596557 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101820999 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122273859 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122634348 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117334293 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106851391 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088263596 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109273881 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106952134 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087943835 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114966262 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115636605 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086665592 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13444487 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10894305 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108434958 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116814467 seconds)
  done (took 8.07227894 seconds)
done (took 157.153440269 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.221370386 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.208059441 seconds)
  done (took 1.359044448 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088196355 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136006441 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095887968 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168506017 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084461471 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140763917 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138039814 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098324934 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106789328 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085596678 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10674605 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086388184 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170936049 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084619753 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107081788 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107347016 seconds)
  done (took 2.744223463 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.119130516 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.230650327 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.124792123 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105602267 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089399488 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109929502 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.083992527 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112151575 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.088273714 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106612091 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.086855454 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107035169 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084370576 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.108063007 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109690112 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089489677 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106073808 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088248693 seconds)
  done (took 2.885945897 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113374095 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.183995588 seconds)
  done (took 1.238447841 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.242349565 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.163462984 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.230502204 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.471690338 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.275247235 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.365655123 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.20241249 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.212253865 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.163489932 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.209441353 seconds)
  done (took 3.47148181 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118575977 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179324605 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315710304 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155591043 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105962356 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128495829 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156012728 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130368286 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122633943 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100115399 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122212503 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117651214 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138001555 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.093596131 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115181371 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116239277 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120808165 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115071304 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11358117 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095058138 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137671626 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.083946641 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116758793 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114730726 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097174209 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119963705 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106097688 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084796731 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116902152 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093448449 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.11409294 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125311581 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118788659 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.153796132 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123503738 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.15463737 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117141448 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090655711 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114632901 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090391146 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118618906 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118481394 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.122883998 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096991783 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106504246 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.095887643 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107223989 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084329565 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115640391 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118345685 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093168659 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113700827 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152519646 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118883728 seconds)
  done (took 7.44109767 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.782083211 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154368752 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088894616 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.867822404 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11115858 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126285396 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.765975357 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111711835 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252282996 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.743958579 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131081989 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095754915 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222485419 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255117722 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.898994575 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.307006826 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.634510919 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124688616 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150212103 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151426703 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115179786 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115708041 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129404334 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.427060806 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116120608 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089285754 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116974267 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117564863 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158242147 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.123075841 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091654684 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196932431 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.244309718 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.198785232 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094078574 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111330991 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088798842 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.1877022 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.238057423 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211238573 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179350505 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10776587 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088827181 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120865992 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130502146 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086916309 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179648007 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172466139 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168347241 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113473013 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094906826 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1190842 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120570877 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16224503 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120121796 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.304959188 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.315560712 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090071495 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120445263 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123095601 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235566346 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122729739 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.221587069 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13756977 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.187034585 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111027781 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.770668009 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.166969566 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087436247 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117544404 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118447097 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093630652 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120621075 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165954297 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406489511 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123732581 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.091763985 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111865024 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.2218597 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104049788 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111740622 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159847252 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11584604 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098807032 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123458756 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121726142 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166881076 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228235615 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122202869 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119091882 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092209028 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124554851 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116397085 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.20973864 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214434563 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16025745 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.205198176 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121193824 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.161087316 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188920152 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096686886 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.191913313 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097618011 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12381094 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120882482 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.211057307 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.143350187 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100849764 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116026647 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117222859 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.145062593 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103205062 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118183984 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.167098065 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.47756853 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.165806111 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107466023 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10451448 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12018008 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159456291 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117909066 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256032762 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098601765 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187430575 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095984975 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109194038 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118944214 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161616207 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119742072 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099362255 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121163935 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116609228 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.2308854 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21265551 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098714891 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241046085 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182827362 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116565702 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169906533 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119154464 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165206686 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117893457 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09936519 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115962117 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.764955481 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101000024 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120234494 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114064128 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184495157 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090254563 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123710475 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.122270902 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086782404 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797257198 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125347139 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098392801 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124420362 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115836354 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.096950859 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118695645 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113783591 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160393833 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226565809 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095437818 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120416686 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123595024 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.1599204 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116805006 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.122515613 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103189074 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12493273 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120115317 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092543433 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125212152 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166327198 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.181338616 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.193843417 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.592141094 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.1114772 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102051397 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2247564 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111296179 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.283627205 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098057157 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.221667767 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161316185 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121979404 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314823729 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.16404686 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186291221 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127457341 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.171347746 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10911516 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.095508136 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.184559504 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089421862 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11724125 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.16196894 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124107904 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121188874 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.931155683 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112431689 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224227078 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108420309 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169524481 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11613435 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09715606 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.284766529 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111555228 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125070268 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163204683 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091555125 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124768843 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.867676638 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101991217 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121657029 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117564203 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.217996237 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16170818 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118068519 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096610378 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119288568 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158975921 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206619643 seconds)
  done (took 43.636815728 seconds)
done (took 63.709496221 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280004215 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21882337 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.267822916 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170524031 seconds)
  done (took 1.979546486 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171786986 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149859001 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121464611 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107210935 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150414746 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083881098 seconds)
  done (took 1.750395035 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.363274126 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277559767 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24284019 seconds)
  done (took 1.852073919 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.317227975 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.247388779 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.470037823 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323292928 seconds)
  done (took 2.428157325 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209498361 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132690481 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110977 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103443706 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197150393 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.243878857 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142020364 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200361471 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097551749 seconds)
  done (took 2.45482886 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196647743 seconds)
done (took 11.6276608 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.130970906 seconds)
    (2/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.323610137 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.257367838 seconds)
    (4/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.249291982 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.151105131 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.137342106 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.18290622 seconds)
    (8/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.249046749 seconds)
    (9/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.24094255 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.097122071 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.155166551 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.101562799 seconds)
    (13/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.115849896 seconds)
    (14/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.088747407 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121197597 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.213764769 seconds)
    (17/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095532735 seconds)
    (18/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.263497653 seconds)
    (19/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.136011784 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116142113 seconds)
    (21/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.168049806 seconds)
    (22/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066906515 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.216957345 seconds)
    (24/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.16449887 seconds)
    (25/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.211162018 seconds)
    (26/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.183705783 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.144744227 seconds)
    (28/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.202012343 seconds)
    (29/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.125581861 seconds)
    (30/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.183393306 seconds)
    (31/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.133604272 seconds)
    (32/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.177823049 seconds)
    (33/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.171932867 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.113271464 seconds)
    (35/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.212961307 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.108486963 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.1372275 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.178668531 seconds)
    (39/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.196147776 seconds)
    (40/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.156366964 seconds)
    (41/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.125128785 seconds)
    (42/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.118543817 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.112186765 seconds)
    (44/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.122668219 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.115210041 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.092811122 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10825837 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.124155274 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.100844416 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.18571859 seconds)
    (51/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.077717825 seconds)
    (52/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101680862 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.140245705 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.153942813 seconds)
    (55/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.227570649 seconds)
    (56/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.195700263 seconds)
    (57/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.19114347 seconds)
    (58/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.09816931 seconds)
    (59/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.120600144 seconds)
    (60/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.09214272 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.115886282 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132481939 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.162044251 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.137798547 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.184101911 seconds)
    (66/309) benchmarking ("sort", Int8, false)...
    done (took 0.186448515 seconds)
    (67/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.173282029 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.115211533 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112228962 seconds)
    (70/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116759184 seconds)
    (71/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.120394598 seconds)
    (72/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.190855117 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.170563628 seconds)
    (74/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.182827605 seconds)
    (75/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110498914 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.106863023 seconds)
    (77/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.122605944 seconds)
    (78/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.116668704 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093116297 seconds)
    (80/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.176915938 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.134776742 seconds)
    (82/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.10153464 seconds)
    (83/309) benchmarking ("sort", BigInt, false)...
    done (took 0.217371931 seconds)
    (84/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.110575768 seconds)
    (85/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.0750181 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.071456045 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.177495813 seconds)
    (88/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109029679 seconds)
    (89/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.180923077 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.087970222 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136921338 seconds)
    (92/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088898529 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.185713271 seconds)
    (94/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.171593452 seconds)
    (95/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066903742 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.115373229 seconds)
    (97/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.092312777 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.108669893 seconds)
    (99/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.184215774 seconds)
    (100/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.211921349 seconds)
    (101/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.0966286 seconds)
    (102/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.162433682 seconds)
    (103/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066500739 seconds)
    (104/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.182038162 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108845128 seconds)
    (106/309) benchmarking ("sort", Float32, false)...
    done (took 0.148115399 seconds)
    (107/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.131293111 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.135005631 seconds)
    (109/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.102025599 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125450558 seconds)
    (111/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.118929801 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.162881568 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.32687662 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.212265764 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.137984953 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.11391831 seconds)
    (117/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090295701 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.086945864 seconds)
    (119/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.121944574 seconds)
    (120/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.08446632 seconds)
    (121/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.119354672 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094867187 seconds)
    (123/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065643319 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.110850434 seconds)
    (125/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065638446 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.11870543 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.190508806 seconds)
    (128/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092852577 seconds)
    (129/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.090419894 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112412999 seconds)
    (131/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.182855117 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.106619998 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.178203413 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119215389 seconds)
    (135/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115978327 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094418851 seconds)
    (137/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066023641 seconds)
    (138/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.143586882 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.1136518 seconds)
    (140/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089683825 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.133463416 seconds)
    (142/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065678456 seconds)
    (143/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.180597007 seconds)
    (144/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09284332 seconds)
    (145/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113745015 seconds)
    (146/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.06699682 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.116714903 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.155490616 seconds)
    (149/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.150551806 seconds)
    (150/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.089495782 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08588502 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116488175 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093126936 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10939944 seconds)
    (155/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.190250661 seconds)
    (156/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.084412796 seconds)
    (157/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.07573767 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118412228 seconds)
    (159/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.169664412 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086606945 seconds)
    (161/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077048886 seconds)
    (162/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.215490132 seconds)
    (163/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.148055142 seconds)
    (164/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066435642 seconds)
    (165/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.111645985 seconds)
    (166/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.095722316 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116976092 seconds)
    (168/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067552972 seconds)
    (169/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121270872 seconds)
    (170/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067140468 seconds)
    (171/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.142829494 seconds)
    (172/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066595379 seconds)
    (173/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.065503782 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.11160766 seconds)
    (175/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.07613171 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.164679499 seconds)
    (177/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.174585441 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077417542 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.13666053 seconds)
    (180/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088908133 seconds)
    (181/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.110883753 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.153335667 seconds)
    (183/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077916156 seconds)
    (184/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066744889 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.178129712 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116504569 seconds)
    (187/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067255256 seconds)
    (188/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.065982232 seconds)
    (189/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.091252287 seconds)
    (190/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069945933 seconds)
    (191/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.113473308 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095934597 seconds)
    (193/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066356801 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.141290544 seconds)
    (195/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.115177657 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.06656592 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111879352 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067528861 seconds)
    (199/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065355445 seconds)
    (200/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.089938419 seconds)
    (201/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.0973201 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.131524843 seconds)
    (203/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.120495364 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085786372 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.194269632 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.109952375 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.098299143 seconds)
    (208/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067649632 seconds)
    (209/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.120636296 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.179613873 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068222763 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.10995369 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.094873328 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117230722 seconds)
    (215/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.114471327 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.110330179 seconds)
    (217/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066373976 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.133529377 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.08536717 seconds)
    (220/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114266844 seconds)
    (221/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066422516 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108281244 seconds)
    (223/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.19059475 seconds)
    (224/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093289431 seconds)
    (225/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110933646 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086410749 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110090267 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086790683 seconds)
    (229/309) benchmarking ("sort", Float64, false)...
    done (took 0.171795078 seconds)
    (230/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133912429 seconds)
    (231/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.126500751 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115768575 seconds)
    (233/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.072368543 seconds)
    (234/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109731923 seconds)
    (235/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.09738201 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.112278006 seconds)
    (237/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111196441 seconds)
    (238/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.100868105 seconds)
    (239/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.093849209 seconds)
    (240/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.090044892 seconds)
    (241/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.07777399 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.188955737 seconds)
    (243/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.2148899 seconds)
    (244/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.088341629 seconds)
    (245/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124969834 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.184395411 seconds)
    (247/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.068957379 seconds)
    (248/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.093149949 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.111671928 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139941239 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.109248504 seconds)
    (252/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.1087809 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085678419 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.091498599 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.111475787 seconds)
    (256/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.127559311 seconds)
    (257/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067035563 seconds)
    (258/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.091075215 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.110946242 seconds)
    (260/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.112429483 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093017338 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.136564821 seconds)
    (263/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066363436 seconds)
    (264/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.091022921 seconds)
    (265/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.069415351 seconds)
    (266/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093865937 seconds)
    (267/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.11173813 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118276358 seconds)
    (269/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.11107109 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.133964956 seconds)
    (271/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.093718138 seconds)
    (272/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.091361306 seconds)
    (273/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.092682995 seconds)
    (274/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116308966 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.11693487 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.22218361 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110413106 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.08564428 seconds)
    (279/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111804852 seconds)
    (280/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.161321417 seconds)
    (281/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087034069 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110499487 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094133968 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108324125 seconds)
    (285/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086837629 seconds)
    (286/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.091136488 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086827565 seconds)
    (288/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066791673 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.195747548 seconds)
    (290/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.091778334 seconds)
    (291/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.077556086 seconds)
    (292/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094084639 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.115687819 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119888013 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068314655 seconds)
    (296/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067566245 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109606763 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091872209 seconds)
    (299/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.11017412 seconds)
    (300/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093098964 seconds)
    (301/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.118868907 seconds)
    (302/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.08570502 seconds)
    (303/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.124241391 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091124979 seconds)
    (305/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.112595763 seconds)
    (306/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067299034 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.212466261 seconds)
    (308/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.091171043 seconds)
    (309/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068827946 seconds)
  done (took 39.557524 seconds)
done (took 40.532177685 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100549255 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148282799 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094565287 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135131787 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123025606 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091202016 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118787189 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09680918 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123799956 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124043854 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097525119 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09342356 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097689703 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120764404 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096393552 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139169414 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.1222224 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092974022 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118804067 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085224543 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119718969 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085261027 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112744998 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070053463 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121767009 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093093861 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11787757 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118167197 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08790042 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108604707 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090652451 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116493199 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087137713 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123344627 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093359018 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119056955 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096192068 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120832121 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087452466 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111769387 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116324682 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088059252 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117096903 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095187129 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116010121 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093554719 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117981884 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098681308 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140037278 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113485697 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096536003 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120580282 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096433819 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117540821 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090836826 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119222346 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090705675 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141461585 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120625067 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092159723 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120606298 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093748331 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.11609737 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094377847 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119518535 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119791509 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098540658 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115642297 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096808248 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115771483 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086184028 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119675307 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089604409 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111848997 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095066465 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122173515 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084837083 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117327915 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116570486 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093013882 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109589135 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090147828 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112028567 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093338011 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112004635 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070639458 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.08910307 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117272566 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108773112 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096690194 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115844364 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093375281 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111309833 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098950103 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110327569 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091890173 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111603305 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086430289 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113050152 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090274807 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111488501 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08865057 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120117728 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087418986 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117963738 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.120782949 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088570083 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116491897 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086574527 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.108917121 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101802596 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.12107295 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086373289 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116557448 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086195294 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118506857 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085151723 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111357594 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086074079 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11163165 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091899451 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111501736 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088681046 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.119331505 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124171226 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087107838 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113690607 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090248224 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109742269 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093380006 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110183106 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087718201 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112541685 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078752284 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112414537 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087856338 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117164002 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090052727 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119371627 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089141469 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119592873 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091530016 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116888244 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092298217 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110697853 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074382973 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1165309 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089353946 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112419329 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087822125 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112554283 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086628469 seconds)
done (took 16.983439045 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088563399 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184181035 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150938109 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142574474 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107794881 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112199831 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12052079 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119714501 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113199726 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142210089 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109682999 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131896746 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147578539 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086666872 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112227551 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091272306 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113670131 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102150184 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146513492 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132568603 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162321482 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08552163 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145813584 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135245013 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11933912 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114715068 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111469842 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091002382 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114561598 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104067526 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132676027 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089341833 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112942025 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133502024 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104619553 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121188807 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086715796 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119812501 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086287718 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112073732 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139329986 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.108427649 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117671724 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116432904 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091320422 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113588689 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090024886 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120186619 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097484761 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11744477 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12521875 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155013974 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.0914146 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121835553 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085733138 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122899673 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119844948 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091391423 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111249153 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091091448 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.11045745 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091665501 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126851401 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141673494 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091381847 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122233443 seconds)
  done (took 8.67950498 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104804435 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139224162 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.120559464 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130952247 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110180981 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08870623 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112787334 seconds)
  done (took 1.845451735 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089327367 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132378323 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11059457 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135939476 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131096808 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108973357 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122800451 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087270052 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131176684 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.08799513 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134625921 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152175866 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089179943 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12085874 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136507752 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088569302 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136793492 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087533156 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116212216 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11083453 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116727866 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133838775 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090410527 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113355946 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103107705 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114337061 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160222204 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094132327 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114750499 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09202658 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111526977 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.164543684 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103746329 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125061076 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086654188 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12907894 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.12728747 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087370073 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129164656 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094071597 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127972455 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.08840513 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11518829 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085625423 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119760038 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123429382 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090986085 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113280663 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092132541 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133091578 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090746307 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127660834 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088831459 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117914892 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089071195 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120266931 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122456227 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090601486 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133466307 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089712316 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130430564 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105460532 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.12816386 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.128834408 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091994494 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127162292 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102319393 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116993907 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089250443 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117218219 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.128830325 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088123382 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114299511 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099696507 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114712725 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112396843 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137428358 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088897495 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125794063 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.112680554 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090221138 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.112892185 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112684773 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118067054 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088123191 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118589587 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091023543 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112736388 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08653184 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117577439 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086057431 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116120294 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091138655 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115095069 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.114570726 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106533949 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11390142 seconds)
  done (took 11.856265339 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091020488 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11343481 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091814995 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113858859 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09111887 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114639064 seconds)
  done (took 1.667577189 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113909076 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11747028 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.101947784 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120996581 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155916761 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103657723 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.12985555 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123073545 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106701999 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12838228 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128293128 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104021588 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13591254 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.11984306 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104452721 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120529446 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103005871 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124994835 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127222281 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096045021 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137261395 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119899992 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096587638 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131844802 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116145513 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096832769 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125666029 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102107235 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128081059 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122834152 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096408423 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118072597 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095602109 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123696579 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130179738 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095592297 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120901376 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.116908958 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10086506 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117160503 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10411625 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122327759 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125873897 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09429056 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123099733 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119288824 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094179489 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124980685 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102881311 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119416895 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118031532 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095467471 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118322911 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094156947 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122242176 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12206562 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094780164 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.12939969 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095060216 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122374242 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116853726 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094008687 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124324168 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.091898884 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.128901592 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118960586 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09506097 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121554688 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120696309 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096322731 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118575081 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092831975 seconds)
  done (took 9.276884781 seconds)
done (took 34.359733853 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.695237287 seconds)
  done (took 1.747081798 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.720089204 seconds)
  done (took 1.773944228 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.651660708 seconds)
  done (took 17.704895468 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.501274538 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.585922779 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.878483032 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179957484 seconds)
  done (took 3.197947 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.954895374 seconds)
  done (took 2.023415514 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.29498392 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.257194624 seconds)
  done (took 1.609092331 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.796619329 seconds)
  done (took 1.859031233 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.361217459 seconds)
  done (took 2.420451169 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331662792 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183669798 seconds)
  done (took 1.583970348 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.544051867 seconds)
  done (took 1.612598924 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.804908051 seconds)
  done (took 7.877774102 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267764389 seconds)
  done (took 1.345275073 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300471302 seconds)
  done (took 1.37074813 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.438922458 seconds)
  done (took 4.511362969 seconds)
done (took 51.699545122 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099528136 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12558906 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102731447 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123662542 seconds)
  done (took 1.517562488 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101177823 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12028211 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099873411 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120832131 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124554235 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096769868 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122861502 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100777853 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121291276 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095620749 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121432843 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118347548 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100034661 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122714183 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094240016 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123822246 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098979324 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121544156 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124194006 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097458451 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117763924 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09781359 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124517749 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093554991 seconds)
  done (took 3.732738645 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100663749 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117744827 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09729657 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117236502 seconds)
  done (took 1.512918964 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100908079 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141722856 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.136740931 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100697423 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142627829 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.134377553 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092780999 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116042076 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095005485 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124559146 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090256405 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.148966596 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136883387 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099251961 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127228724 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088784642 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117743284 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136229258 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099740655 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125296348 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094559137 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125983589 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089545171 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139746645 seconds)
  done (took 3.88274944 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170323186 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127572933 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138094406 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095583612 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160454669 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139703539 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089003923 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14075754 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087928953 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132180661 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116895762 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134226041 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129510692 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087478216 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114317445 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087355503 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129781737 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127713472 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091661564 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127605765 seconds)
  done (took 3.507123698 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098532992 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116818842 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090026999 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116410035 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100803352 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120554726 seconds)
  done (took 1.724875134 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091606977 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113436067 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091787079 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.112845084 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096167326 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.11383621 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089756386 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114193964 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091169001 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11375437 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090090743 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112513028 seconds)
  done (took 2.3118609 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.457706652 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092554432 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120065671 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113675398 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097211185 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114449217 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102574785 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118817364 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139151865 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090022521 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114175463 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092314866 seconds)
  done (took 2.731960646 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231489514 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125254131 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283935206 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.360431192 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156372627 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177041954 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283085673 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164490106 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.220652217 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165143521 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201386769 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221337527 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152167082 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189105865 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138012591 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.118760102 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23018319 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245457687 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153273044 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207112805 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225091222 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166535875 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179458046 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150368864 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137159024 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171773655 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094063129 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130490832 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231016038 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174759038 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210834905 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161011042 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145298688 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209615632 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250205707 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217753935 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282528661 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110360613 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.17472751 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169027016 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265877333 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137455599 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202335985 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154962034 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132125997 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189812403 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190648215 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176489282 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150501544 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11176535 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219304385 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235881102 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193006726 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137386755 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301505798 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152859486 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.172641719 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218040183 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221392147 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224017333 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184982442 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121030373 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188142588 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216398367 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185649272 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.173077346 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.178747211 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146256778 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225062009 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189751707 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164759189 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216585029 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.188235859 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140204096 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169069373 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172476477 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171376704 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253480378 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182311343 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122843247 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167159861 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148304991 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131152155 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168807778 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125610582 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236624855 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117529123 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.1625872 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242757018 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15763561 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158429796 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204182869 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227893658 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120589323 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110922249 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153534695 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154085523 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192988653 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141535348 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158957949 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162014613 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.127728738 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183234651 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096381193 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208825963 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091209555 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170501004 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20731067 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.09930847 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160186275 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150200718 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149496753 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171837096 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222908201 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114199671 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133176411 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232447579 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177624853 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149639036 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177772467 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200361375 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.144344903 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149544832 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197176875 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241079495 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139046716 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203095685 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155802633 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134968387 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.129732592 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1798667 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153979512 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159215631 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107828926 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.207246922 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205189011 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125185475 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11065337 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218438068 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132259728 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10522526 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161702515 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148301596 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138744494 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.151399477 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152374872 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180827971 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175152983 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152692442 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163221092 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152591335 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251905298 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141175983 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.149961575 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146764425 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093583036 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.214988264 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199148209 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129378349 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204576496 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170321272 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228371376 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170926188 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133861961 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176292913 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102809986 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120695422 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191103629 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166739277 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158976192 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.222286376 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20040465 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.204948116 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183135974 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172968136 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171230137 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165655455 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155994093 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138012707 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159095195 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170997156 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095312178 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143939344 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13402611 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14743354 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141187571 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10559643 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221166628 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167714371 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216532219 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133390069 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148549389 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179830365 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128451017 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170966278 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.202908162 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119660824 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.225927269 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193995108 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21078867 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11760553 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227286707 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093232096 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1252128 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141058609 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170499806 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132568247 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109517164 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163678504 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180625934 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207755891 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176164468 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237122105 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173500019 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189777182 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120499535 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.14224016 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209837205 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177773907 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.191365573 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11694436 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149951529 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176309379 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158160757 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251922278 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16595357 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174564476 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233947301 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149524879 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10414733 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149993472 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220745235 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153688448 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176412654 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146454842 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113715028 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159442535 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132585911 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157630523 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208746574 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161719062 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188418763 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15049825 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182869999 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12788896 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162753548 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159819288 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164390956 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081024973 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19984748 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204483287 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147705683 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167017688 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212462112 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104904043 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.303106873 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243929801 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19380433 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13735361 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155381448 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161006807 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163771021 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169758559 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176675587 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158665272 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187762844 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157656504 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136613214 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139691277 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14675849 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122313164 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131292587 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14861283 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175289699 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.13972512 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184871083 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162614687 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157796255 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171205653 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14942706 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145106093 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149613297 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213265534 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206559553 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210140732 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151877029 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178689594 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230982137 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097978792 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132336521 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132120436 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177594067 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107393119 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219052051 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.187310845 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230309369 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18251361 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191996596 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139128624 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118639851 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155008644 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173608172 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207290966 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153931969 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159713168 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229117392 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.119186215 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133045651 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177453815 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314886003 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120628662 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223757955 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.08047787 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.2824984 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127625644 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131353534 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136192748 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231624884 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135830793 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.188459651 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172450605 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169584495 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164984824 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149442184 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190004257 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244458727 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199883611 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177933645 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132023603 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15526517 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174603229 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216768454 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156394488 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113390515 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229277757 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195852515 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194851742 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143323653 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170009373 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168067066 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157318588 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212902887 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107376602 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23363075 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132969955 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194157171 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152087997 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143320385 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176302332 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.187520772 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142101039 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212988146 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184078028 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133870477 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105474964 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167504851 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203344607 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156913269 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100696872 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178657066 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125399985 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191243677 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255899914 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134820058 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153973925 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146785213 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107783955 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154532005 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157742999 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140307875 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164336773 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204355773 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133806813 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188931461 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229015178 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169076792 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172708916 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14414505 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.69256115 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130352663 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193657121 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159960915 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231632234 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12180929 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198850654 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130789786 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193040071 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194545341 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161611086 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229215246 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190934677 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.204990608 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104653906 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156783518 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163049461 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143599429 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150515703 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16859205 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159254617 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153112399 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.175211382 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197092369 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108801223 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139559757 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19774957 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159226203 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180104504 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177735994 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138512716 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172497042 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215615408 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104828102 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.20511507 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206420727 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142393745 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152413603 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133341546 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156306362 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259168267 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097871219 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231977362 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184649142 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159463176 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169644355 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146761622 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191016232 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156608027 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213121366 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147532205 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158144631 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154255881 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111544872 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130354799 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154324264 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167142642 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148916584 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159090062 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138664388 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220481526 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.098038999 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144895403 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290429586 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221246015 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212782065 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136635119 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135128729 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160407809 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123184332 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.202934958 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178317286 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13427585 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109342911 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137185833 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130253628 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139590468 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156423256 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196509339 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165021712 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234241392 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109197794 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277840321 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140205721 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155154678 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088736731 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132375529 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150843444 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145064418 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158883398 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192796695 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263345446 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145912135 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.10673497 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150281216 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125224876 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108607328 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165684336 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16252225 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202231512 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11747408 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109375049 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156935881 seconds)
  done (took 82.941303146 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169651876 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133762885 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147930016 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205209389 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176731372 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268970785 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211480085 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253643613 seconds)
  done (took 2.734824928 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094841845 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147718752 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.15725404 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133102838 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092286426 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.117784641 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.34375182 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132301229 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117123469 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.12159214 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.171159196 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094514093 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.551379956 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091454932 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117721141 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109018308 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093033589 seconds)
  done (took 3.848119508 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.477301212 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.69554714 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.512988211 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098095378 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.073345855 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.1135855 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.497368478 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.197196743 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.115646665 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.471845845 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.772301535 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159540055 seconds)
  done (took 18.355334919 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.100587818 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.119253009 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108327818 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.1342416 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096342204 seconds)
  done (took 1.733015544 seconds)
done (took 131.598575943 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105049172 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.402226792 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07178745 seconds)
  done (took 1.679371174 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108510516 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136610363 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108193173 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136051047 seconds)
  done (took 1.672102354 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098905746 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125798883 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109626923 seconds)
  done (took 1.511653899 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.321933318 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189064265 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.164150169 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107148741 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127746923 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104151072 seconds)
  done (took 1.519416435 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098249526 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126451806 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097806667 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.12936363 seconds)
  done (took 1.633267776 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095876878 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071072041 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102063093 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07594916 seconds)
  done (took 1.522211162 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114160696 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132045729 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103537164 seconds)
  done (took 1.530358119 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130692916 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138368784 seconds)
  done (took 1.45137793 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106192599 seconds)
  done (took 1.283714366 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118606795 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169488907 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.188182191 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.163526205 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.227526487 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.163689795 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.139162271 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113856984 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131243706 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.142478779 seconds)
  done (took 2.738547018 seconds)
done (took 18.495431056 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104326927 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.50739132 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.410301077 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117208662 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.720625151 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379626803 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.020960573 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145653223 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164576462 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093240608 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138173701 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.670320233 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.04605045 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.462710756 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.004896558 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.461961447 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677177731 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120498445 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118092797 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095461334 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.001235873 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092782493 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121379292 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091861094 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701508073 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424708148 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095601976 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.465099472 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091940633 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126306982 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383088589 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122359138 seconds)
  done (took 17.347663819 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097117541 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17209902 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09775896 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136951412 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122390174 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09621712 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123729621 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093658648 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177760499 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121235204 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110478651 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120939346 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124363849 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095428432 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140063712 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092361064 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123880116 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091606205 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121425451 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119756489 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112212771 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119509313 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09439068 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120588812 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093858199 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13504532 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120863397 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093649001 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12015387 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09953431 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126436534 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094563543 seconds)
  done (took 4.893048146 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141519355 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182065366 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126946168 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127354668 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167829534 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122465616 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197238197 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117694879 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181106492 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121924031 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13834033 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09304065 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15582609 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.120912401 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114685992 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119906872 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09636723 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120737129 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091724045 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123275922 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137793424 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093510464 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121175413 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093954338 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122307908 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107062764 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123410873 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118687307 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094248944 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124872156 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099316302 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12685318 seconds)
  done (took 5.210547891 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098124011 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124137478 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109827718 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.13726034 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094484593 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124649789 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097201852 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123505181 seconds)
  done (took 2.095759543 seconds)
done (took 30.72646833 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.1121998 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125274545 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107628906 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133402475 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101775889 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131112891 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091502172 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132680423 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132929815 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103065455 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136499536 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091968302 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121279135 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092286044 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13410398 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096808706 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131424227 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101691438 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132583916 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130962475 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095555944 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132169493 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103064091 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132188578 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105583861 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132951347 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.135653575 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099462255 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.120628354 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09480774 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123409774 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104538052 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122842457 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104800457 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125548063 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096946704 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123788271 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093258156 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132133439 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.130469958 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100329983 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131731273 seconds)
  done (took 6.062017937 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107976667 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138221347 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105153262 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080365259 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116344606 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080324237 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137383943 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079496158 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.10866396 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108735831 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074120335 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105678936 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078447035 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.099263381 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078264178 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075688094 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107026417 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076558905 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076269008 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10442144 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080157285 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072799884 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108086705 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07913974 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074867783 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109910848 seconds)
  done (took 3.656350637 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.110469062 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135485937 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111983874 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182938385 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160177837 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099218655 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13183361 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139439199 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108670161 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119264449 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096342741 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14838867 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109723165 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12900911 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.118631987 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.108857535 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134923621 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093891822 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127155725 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113001254 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137088581 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101471465 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141779393 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132179491 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092124501 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121894295 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096525082 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133370085 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097723186 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130275117 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.123848281 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097048058 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121579797 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105135157 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124882921 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093995118 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141486784 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130229314 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.102433115 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121111071 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.09792065 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120567095 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11336122 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166249585 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09112555 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129663271 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126367576 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103303012 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121933449 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111154267 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130404085 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091018319 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.12425751 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090586152 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121700772 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106433752 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.122930093 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.121918888 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103525344 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123287104 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105750664 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124443642 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108165178 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121535174 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.098717015 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120462732 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091927634 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120394001 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142282787 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094647284 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161870829 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093218927 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123222033 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.128815389 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101688943 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126030413 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093295488 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135674032 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101797426 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126233454 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101490273 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125609022 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094257261 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139066507 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.122819897 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095622871 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121291188 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100851754 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123294181 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094967933 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134944317 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093838412 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124237046 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110691802 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120685228 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.120669645 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.10061224 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124882949 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092362088 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134069051 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097945969 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122040046 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128667046 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093490555 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123555398 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103089977 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.124955268 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09258746 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125760105 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098752734 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122159425 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093909826 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124211171 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093947294 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130729499 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098593647 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126713107 seconds)
  done (took 14.841102732 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226778225 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213845998 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.233894752 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.262328639 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135576765 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114949816 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.20907545 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154913435 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.121857624 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158390838 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.159154501 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180476796 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139541968 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179383788 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.140237897 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.119543507 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112431204 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.1637621 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213798459 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.287909997 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.111464783 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131813156 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160836006 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.157956982 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.105862982 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132594125 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.138331415 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106106731 seconds)
  done (took 5.778585705 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108904698 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155868303 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097891462 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144659439 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146796798 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092451015 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127820483 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094195575 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134765324 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134042692 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091979639 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127881159 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.098973518 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132249254 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121722723 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103916915 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13125471 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094368561 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124988783 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09681706 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.128613553 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100540002 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12579671 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091211614 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.131463236 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119842449 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086523246 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140870789 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.09202402 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.143348694 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.119249658 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.09969015 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.131207809 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094172632 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121441144 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095703835 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.123467015 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094879537 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124447317 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091051515 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120592116 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07761862 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120605381 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105995661 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129598869 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079418114 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12917802 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.125963464 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09579552 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.117936571 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097748937 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123172956 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097984398 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128336618 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099387587 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122198845 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.098126548 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114164612 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100537484 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123537456 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085691617 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.118897834 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.100123763 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.115968349 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102385866 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.1267862 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092942214 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124371393 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098255617 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127729 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095423458 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125126881 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090853101 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124525738 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.09526811 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127957799 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095973236 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121639317 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092194979 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.123057899 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075694067 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122604861 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074434706 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124769524 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092685889 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120670287 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09519238 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128524053 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134623935 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095068082 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130406436 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.09458063 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121043255 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097175403 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112269629 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096542335 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137743282 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.13893406 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095115603 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120145145 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107990763 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124138509 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092640655 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10521409 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102124182 seconds)
  done (took 12.969872562 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128122281 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152594535 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094707729 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142710422 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154630503 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155843396 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101648086 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.12888696 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096852632 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140036601 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093329496 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.13077942 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096779479 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136587618 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155065702 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102916132 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124784664 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.109534909 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130470457 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168267359 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111282116 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141255923 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.106957588 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123028502 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098904159 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.139911 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159845042 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106646856 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136677663 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140104119 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108948534 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160326969 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111750062 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128008237 seconds)
  done (took 5.537600881 seconds)
done (took 50.029487741 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.294178164 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.510391855 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.285196238 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.228264579 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.29471343 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.304610322 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.293048929 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.2868151 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.837772972 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.285904414 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.527904912 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.948668939 seconds)
done (took 61.307112942 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.386354176 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.408403784 seconds)
    (2/2) benchmarking "String"...
    done (took 1.537106512 seconds)
  done (took 4.144168488 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.739740646 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.17068294 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.532983175 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.27794116 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.272118403 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.583528708 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.879235609 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.529909904 seconds)
  done (took 28.444995496 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.273854773 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.64123558 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.609094252 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.601441726 seconds)
  done (took 18.325391819 seconds)
done (took 61.249770768 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.30059389 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.292138196 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.276946659 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.253521187 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.403270404 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.292698989 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.591488571 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.303046228 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.295575488 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.290550408 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.272692432 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.290177543 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.287579849 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.625518132 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.283275414 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.275909087 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.272892035 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.792562126 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.648351173 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.275833755 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.29654121 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.331960654 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.294196059 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.301124198 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.329289365 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.272284202 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.27241512 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.31241576 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.42400493 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.280462132 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.385434335 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.744075783 seconds)
  done (took 192.766482529 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.273182322 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.103550994 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.266456468 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.33042652 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.602011124 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.475872846 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.386196466 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.703951064 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.29420178 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.290008623 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.493507492 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.273468288 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.553790672 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.248990174 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.282997159 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.351766749 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.480849315 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.550920354 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.294777379 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.544524314 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.274508983 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.301118371 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.231223562 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.457895781 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.276670212 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.363207382 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.294990981 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.298805173 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.47062093 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.425319218 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.301393648 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.277296168 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.837771446 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.13624259 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.274034082 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.27989334 seconds)
  done (took 151.502096979 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.552478892 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.274482029 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.276259804 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.276001398 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.304910025 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.276793082 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.786507174 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788849053 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.765974743 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.781649482 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.336486647 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.498146852 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.278646449 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.366822844 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.289850143 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.27727247 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.291877561 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.320905488 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.276351345 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.276133043 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788008843 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.292766068 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.266118559 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.282507421 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.276959611 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305902941 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.277371154 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.665552024 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.277282151 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306762202 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.597477905 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.32485745 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.277253926 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.595934915 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.900914068 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.391220669 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.27910026 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307459415 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.27890651 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.550964731 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.278401445 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.278418858 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.281704049 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.888231542 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.282144448 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.786797661 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.281550746 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.178293478 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.281120007 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.278069814 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.637226138 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.806891124 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.298327134 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.278184464 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.279838531 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.27766523 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.278639347 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.307712476 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.60828603 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.361537206 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.28908845 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.268951248 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.273133605 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299912753 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.269620818 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.268620215 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.484161491 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.271407307 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.915990936 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.325374901 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.489632042 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.780668177 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.271554006 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.363665769 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.38609877 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.26899111 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.270221997 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.269164715 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.269524855 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.376701017 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.270610462 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.656539984 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.269792083 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.275427117 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.271878926 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.327240964 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.362714096 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.269220615 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.599102827 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.27249342 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.269599037 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.988642009 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.365555167 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.270094053 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.269873141 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.270935602 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.661650465 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.784491316 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.456729475 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.274495498 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.725969357 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.275380454 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.674883431 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.774437093 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.895736628 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.27483181 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.380248994 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.275764495 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.274206367 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.272808564 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.300052234 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.289887006 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.331724391 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.272183262 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.668487484 seconds)
  done (took 354.429482651 seconds)
done (took 701.456196792 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.915964137 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.914023959 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.024779031 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.908753387 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.871948877 seconds)
  done (took 10.833591347 seconds)
done (took 12.037049854 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.465160221 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.464591331 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.333084604 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.464480674 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.302735564 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.482232465 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.441056968 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.295312033 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.378808596 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.35336412 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.378715287 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.327036419 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.302219266 seconds)
  done (took 19.188666536 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.605088132 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.580094664 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.338763809 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.588924293 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.314375432 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.595327489 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.477587317 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.486667653 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.511862578 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.310240617 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.290109043 seconds)
  done (took 17.301696794 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.59939937 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.603272745 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.341562253 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.607332251 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.317882887 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.613956722 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.480578406 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.516204653 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.496462717 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.309245895 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.288568803 seconds)
  done (took 17.375936068 seconds)
done (took 55.073432093 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.286178236 seconds)
  done (took 2.487382346 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.316159734 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.483320272 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.302975014 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.289134276 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.287644727 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.286928974 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.290669574 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.28616661 seconds)
  done (took 11.746667777 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.286879015 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.282145767 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.285543279 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.286233265 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.283181146 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.283194165 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.285190866 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.287614241 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.28722226 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.282779649 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.28650536 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.286312336 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.283402554 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.284179949 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.286984151 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.284334573 seconds)
  done (took 21.765041328 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.286656425 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.28337196 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.283263776 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.284521887 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.284376154 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.285096577 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.284930324 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.285031065 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.283639425 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.284280644 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.285304907 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.283906134 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.284697731 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.284716709 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.284106491 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.286198004 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.285375866 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.28463563 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.288988081 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.284875243 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.287246164 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.284335101 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.286778467 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.285595162 seconds)
  done (took 32.048644004 seconds)
done (took 69.255839659 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.23860411 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.842061791 seconds)
  done (took 9.287547952 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.287763845 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.287543393 seconds)
  done (took 3.782870939 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.288855898 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.289005262 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.287130271 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.288903943 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.289614747 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.289058804 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.289137509 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.287807919 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.288714863 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.289012285 seconds)
  done (took 14.093046473 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.287970476 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.288025425 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.288299614 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.288569243 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.288991926 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.287688284 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.288857962 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.28947418 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.288327569 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.286962486 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.290060352 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.286200489 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.288887942 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.287635419 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.288244447 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.286539761 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.287671449 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.286804421 seconds)
  done (took 24.393176297 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.291772663 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.289402491 seconds)
  done (took 3.787368152 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.286768796 seconds)
    (2/7) benchmarking "second"...
    done (took 1.286876227 seconds)
    (3/7) benchmarking "month"...
    done (took 1.288230212 seconds)
    (4/7) benchmarking "year"...
    done (took 1.287506238 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.287659606 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.286548611 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.287943356 seconds)
  done (took 10.218507371 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.291915801 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.462146852 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.542451334 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.899176819 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.29087241 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.292981371 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.164075519 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.294856383 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.294621966 seconds)
  done (took 14.743454703 seconds)
done (took 81.51927646 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.289780653 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.301434347 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.368259421 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.294479321 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.31943073 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.627348652 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.327537697 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.418206177 seconds)
done (took 38.162139999 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.292543419 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.002510269 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.010103703 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.30189177 seconds)
  done (took 11.523369495 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.268225987 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.175492189 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.281459297 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.286845309 seconds)
  done (took 18.221311219 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.253181651 seconds)
    (2/2) benchmarking "read"...
    done (took 1.622959525 seconds)
  done (took 5.086069377 seconds)
done (took 42.338373567 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293164549 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.28917 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.29137813 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.292466333 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.289232297 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.291852242 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.29101389 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.288976631 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.289911497 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.291774765 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.291667432 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.290880301 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.292119626 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291673765 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288888409 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289102901 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290534926 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.289625265 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290033944 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289507959 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291794457 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.290613206 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.289817854 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.291930015 seconds)
  done (took 32.186840566 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.29258543 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.287985757 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.291503678 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.291654669 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.288258632 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.290686439 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.291699572 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.28951464 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.288421728 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.289325064 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286549936 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.286943034 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.288020728 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.286302325 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289575004 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.286452257 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.287301599 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283875878 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286543995 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.284843858 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.287481684 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285314688 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.286701392 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284206727 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.28173329 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281381686 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.284583596 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.281701339 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282840413 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.281933369 seconds)
  done (took 39.817920102 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.285024917 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.286576615 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.280129385 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.281367147 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.28127144 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.281145116 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.280015966 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.282303299 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.277823277 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.279446389 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.278882364 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.278570813 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.278565209 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.279362247 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.278798112 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.278801024 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.27924866 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.279532374 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.279442226 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.280667102 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.279422261 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.279894764 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.278970677 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.279766959 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.279630453 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.278829293 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.280703171 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.27970531 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.280325649 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.280573524 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.280510565 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.28042401 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.281515822 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.279969421 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.280845284 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.2795445 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.283553647 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.286065424 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.280361908 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.280448956 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.280801892 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.280294268 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.279752942 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.281816337 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.280610551 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.280418648 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.281971808 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.280938811 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.282014105 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.280912847 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.281650929 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.281132798 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.282130518 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.282010908 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.282587937 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.281260689 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.282051533 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.282724227 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.282418923 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.282186166 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.28213125 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.284383019 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.282224109 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.282686509 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.28471103 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.282940941 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.282554595 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.28194638 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.283362758 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.283039159 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.28248676 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.283127298 seconds)
  done (took 93.448879409 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.283066795 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.281154362 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.280676647 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.280935179 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.279919034 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.283116299 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.2813117 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283274923 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2810802 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.282835665 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283766057 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281320172 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28043804 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.283071647 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282877694 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.281370255 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.283950488 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281187474 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.283904687 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.28379526 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285274771 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.281125411 seconds)
  done (took 29.41114189 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284821576 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.285598354 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.282482352 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.283885263 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281551034 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.284703581 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.28675225 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.287299716 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287545569 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281379679 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282691749 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286031954 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.281680099 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282240236 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283437987 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.284541382 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28444528 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.28438594 seconds)
  done (took 24.319410319 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.284094085 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.282515231 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.287622757 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.283778093 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.283496172 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.285526805 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284248701 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.285448649 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.28530755 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.284183212 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.285362503 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286186103 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.286162181 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284033088 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286262809 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.284706763 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.285856881 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283370025 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286515096 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.284099728 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.284664469 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285120123 seconds)
  done (took 29.472288424 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287295784 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.286428788 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.284243677 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.283683707 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.285055728 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.286379476 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.286819786 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.284899578 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.288464947 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.286768867 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284362135 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.286334718 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.286119615 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284549823 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.284241235 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285774965 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286819791 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284716654 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287409172 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.28445244 seconds)
  done (took 26.920553261 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289667091 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289609691 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.28895473 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289327894 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289145689 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.2883874 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290205043 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.290009579 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.289569033 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.289568413 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.288340049 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.289450001 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289922997 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289098744 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.290816044 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290384302 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.290281149 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290912958 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290049312 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290010932 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290243158 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.290691403 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290265256 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290442374 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.290662837 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290989232 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29057883 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.290926116 seconds)
  done (took 37.325012979 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290432267 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.289235375 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.286827601 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.287432874 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.288061558 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.286982557 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.28726693 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.287850311 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.290833007 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.28775826 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.289836218 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.290340527 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.290604699 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.289928644 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.290632002 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.290234736 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291923528 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.289168014 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287511444 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289341935 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.291891525 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292038005 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.291864902 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.28883553 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288805279 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.290681266 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288721974 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.288803016 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29157497 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.289158646 seconds)
  done (took 39.893833813 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.310560085 seconds)
    (2/2) benchmarking "in"...
    done (took 1.310736409 seconds)
  done (took 3.830458866 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.289470821 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289992696 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.291047577 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.28996293 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.289851203 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.291757158 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.290976963 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289090513 seconds)
  done (took 11.531356886 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.291767519 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.290659197 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.290781735 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.29246263 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.292309123 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.291355285 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.299402771 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.310017888 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.292903362 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.293134932 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.296898054 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.298406814 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.294687258 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.293568194 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.292371276 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.29372117 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.292534113 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.29393211 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.294239534 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.293902138 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.292797508 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.295845833 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.295271296 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.289966939 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.294209855 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.303548369 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.315329016 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.294125812 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29366721 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.296338566 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.295063919 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.291131342 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.295588453 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.294987855 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.294364769 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.294502524 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.302615364 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.31309851 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.301174344 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.313777206 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.294949638 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.292287331 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.296886317 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.295649597 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.295019013 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.294781132 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.29513326 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.292360428 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.293874616 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.297095034 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.298395907 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.294005907 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.293191415 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.298351494 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.296548225 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.301493597 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.31492947 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.297224015 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.302144247 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.305607592 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.326214879 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.317951778 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.298533308 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.29655658 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.304658375 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.314702466 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.302733711 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.31265309 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.294205576 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.297316749 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.303059812 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.326030588 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.319552419 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.298587676 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.297814602 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.297792129 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.297505763 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.296997593 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.303492178 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.318619753 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.298297345 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.298515251 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.306146292 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.314573651 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.297257502 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.297207774 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.298188787 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.298003325 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.298346534 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.30788842 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.317377323 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.298487191 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.297371534 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.297565255 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.298759307 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.298616701 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.297511276 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.299527305 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.29566358 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.298481342 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.299059996 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.302270514 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.305080061 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.299680918 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.299809591 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.305299699 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.317176493 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.299836971 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.304632167 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.299241215 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.299777166 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.301169073 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.304849505 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.297800425 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.301334325 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.306204905 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.300453393 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.300980744 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.300628924 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.299522795 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.307556376 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.320932123 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.298375033 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.299427569 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.304545003 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.309387088 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.30081062 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.302283878 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.301019847 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.297540385 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.298846879 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.301619094 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.299851298 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.30213086 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.301073208 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.302589789 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.298161433 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.301041387 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.301167212 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.301837576 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.302097325 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.302667488 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.301911577 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.304290885 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.303222449 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.3037805 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.308008841 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.320010804 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.304230494 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.302701463 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.299497797 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.302277249 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.303963032 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.303260303 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.302163537 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.30351137 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.302581173 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.302781982 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.302277026 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.303707817 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.302851909 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.303864847 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.305382936 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.303531604 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.306598872 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.302471043 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.300235803 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.303506479 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.304892436 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.307499497 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.309846169 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.308150252 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.31167621 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.311684136 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.305752298 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.30528345 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.305843109 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.303570682 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.30537278 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.304416445 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.306355703 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.309414614 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.303654268 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.310241916 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.32349127 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.304957987 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.305486215 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.305734545 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.303133126 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.30505431 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.306881723 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.310723647 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.31563227 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.327040083 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.307295699 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.30819567 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.305215743 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.30868512 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.308828173 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.304999839 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.305383157 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.305706531 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.303755279 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.305580396 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.307441611 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.306885899 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.306501932 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.305946437 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.305336536 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.307175267 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.305866196 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.307573418 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.306945509 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.303241112 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.30710382 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.307139591 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.306226833 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.302392064 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.305906397 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.30536335 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.307135093 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.307891113 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.313056236 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.30337135 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.308157907 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.30814165 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.30640948 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.306034578 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.306181452 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.308924333 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.307044116 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.313377246 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.325711656 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.308000431 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.314456528 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.326475306 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.306647511 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.310023056 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.307787466 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.305987463 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.309804292 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.313783275 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.307682255 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.309530651 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.308525056 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.308185052 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.309034283 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.314936028 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.323669007 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.307901921 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.309098985 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.309728465 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.305893646 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.30999351 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.308358979 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.308145672 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.314005882 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.312862523 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.314057699 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.314901932 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.312546043 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.310310559 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.309422157 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.312166348 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.315454683 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.314283226 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.30940394 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.311642631 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.310883806 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.312828779 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.309693965 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.310226838 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.30913731 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.319722553 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.333429509 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.316970994 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.329519475 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.309849688 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.314288864 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.329817816 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.312841613 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.309762274 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.309464527 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.309711828 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.309381989 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.306707953 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.310027958 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.31069675 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.310588332 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.311794069 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.313546775 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.310521413 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.310345469 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.310823585 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.311112667 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.310149448 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.31170501 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.309802178 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.312778947 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.312667388 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.310322377 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.311215715 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.31740648 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.329445966 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.311868475 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.311372982 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.31076575 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.310911231 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.311725017 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.310095577 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.314943353 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.318074622 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.314632156 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.318788829 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.312765508 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.32106036 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.312322651 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.314515537 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.31844944 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.309523394 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.312414414 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.311978887 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.313088823 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.318218413 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.332319293 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.314343712 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.316171835 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.313747471 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.313823899 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.313165714 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.313605071 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.313277516 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.31319291 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.321181386 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.333075158 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.315975249 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.314763335 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.310095512 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.314255938 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.313456224 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.312259464 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.315572166 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.315086046 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.315360791 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.313818215 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.313446146 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.312738556 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.313796551 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.314451969 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.310840451 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.314309276 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.320975854 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.335369898 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.317685195 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.315108624 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.320980501 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.334125737 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.322584418 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.33566076 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.314709048 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.315520003 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.315612004 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.31635705 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.316456064 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.316508402 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.316652843 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.317311684 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.31870711 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.315781829 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.317719634 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.315947694 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.316741917 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.31777968 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.324408621 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.335776717 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.317967867 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.318967112 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.312934091 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.316891308 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.319896384 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.317395866 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.316326788 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.318722356 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.32522792 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.322253076 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.316912239 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.316920766 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.316976944 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.316938195 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.316390383 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.316625648 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.31577905 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.317702115 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.316704551 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.317897051 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.319942596 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.316285496 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.316912894 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.319386301 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.317795756 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.325771447 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.336534484 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.319664452 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.317742057 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.319556775 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.317540093 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.31739881 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.318513574 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.318405117 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.316796736 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.319316814 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.32497622 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.323155625 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.319676396 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.318074001 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.318148386 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.319276805 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.318788861 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.319062168 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.31890148 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.318451469 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.31919166 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.318470102 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.320457401 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.317963727 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.318662018 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.3189004 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.318843232 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.320947577 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.324609843 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.319777178 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.315688207 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.318448926 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.319146236 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.318436054 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.319236101 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.326990944 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.340982057 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.327743264 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.327225123 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.323778182 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.321414844 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.322351704 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.326338712 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.319531066 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.319909628 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.320183076 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.320311448 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.321122911 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.323061249 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.321086646 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.327086184 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.338239795 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.319837383 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.327836252 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.340675262 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.321048282 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.321792991 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.323332997 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.320821363 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.317917264 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.320887254 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.320474641 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.328324369 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.340919065 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.321566978 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.323380296 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.321124177 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.322179562 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.325464072 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.321560099 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.322570301 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.319052435 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.32257731 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.321663536 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.322584518 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.318404013 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.321532549 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.321400146 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.324629085 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.32807372 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.319085818 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.322176391 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.322145664 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.322279708 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.322838819 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.323646178 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.320008452 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.320317255 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.322878941 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.32358555 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.324160777 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.325781718 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.322732516 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.325040022 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.324233246 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.323997036 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.325620495 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.33095729 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.328952877 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.321676857 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.323555311 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.324504032 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.326109607 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.324810937 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.324847964 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.32402819 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.323319016 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.322892327 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.325236757 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.324595689 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.326951227 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.338517253 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.342441408 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.323382617 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.324521264 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.327106462 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.3252459 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.321643279 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.324838143 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.326386122 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.327629939 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.331147331 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.32713296 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.331111174 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.34282754 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.325893425 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.327945889 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.32796132 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.331651143 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.327107782 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.325910695 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.326854733 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.329299357 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.338408111 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.326076181 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.334588788 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.35120682 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.344986335 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.326771838 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.326101731 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.324950795 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.326279852 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.328512019 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.3269898 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.326413703 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.326474718 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.326847604 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.328581526 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.330466356 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.327959633 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.327437492 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.326776395 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.326188616 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.327974456 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.324560617 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.327630544 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.327570721 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.327466503 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.327421978 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.328438383 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.327285585 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.338479478 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.35276405 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.32666902 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.328220474 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.324916233 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.330619536 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.330514514 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.336076696 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.333035932 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.327997378 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.32859524 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.329366601 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.327893783 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.327215483 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.327615126 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.329085668 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.327192641 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.324652415 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.339908928 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.352500138 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.332986612 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.329038772 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.328862632 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.330171434 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.330292357 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.329805347 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.329834004 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.330260491 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.331317128 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.333529133 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.330378484 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.329471671 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.331953589 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.336971186 seconds)
  done (took 784.284517031 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.32766445 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.327236495 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.326947425 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.327089921 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.328153298 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.32860468 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.327862887 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.326997958 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.326507813 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.326412444 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.327602233 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.327034858 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.327661387 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.328593859 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.32882322 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.328494296 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.327276198 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.327950168 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.327729887 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.327601064 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.328968895 seconds)
  done (took 29.126251188 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.331542415 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.328076697 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.328537601 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.331176917 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.328540551 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.330748658 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.328770971 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33036236 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.330646647 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328726874 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.331883631 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.331086793 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.327926401 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.329289655 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328380905 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.332451241 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.331753982 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.328570767 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.331869212 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.330898165 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.331779913 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.329905605 seconds)
  done (took 30.508567712 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.332771447 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.33237729 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.331135358 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.329361463 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.331716136 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.329569818 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.331955523 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.331654907 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.331910146 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.332572482 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.331472335 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.33404799 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.338391147 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.336234796 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.333827578 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.332547745 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.476717791 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.334397216 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.334448572 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.334176146 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.33035619 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.339192474 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.349347081 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.329960573 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.333257141 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.33451406 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.334269384 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.333469411 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.33417156 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.336175607 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.337644167 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.334186211 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.333729734 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.336131252 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.333349839 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.336232234 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.337275548 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.33546296 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.331570622 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.33493034 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.343316473 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.350976105 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.335484283 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.342154741 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.352613118 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.334153408 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.336849152 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.341918005 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.333366411 seconds)
  done (took 66.82477069 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.334257213 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.334544797 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.332672332 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.334792954 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.335060278 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.334825007 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.3355977 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.334126914 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.332553584 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.331202249 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.335092019 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.332807273 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.33389254 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.335255017 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.336712641 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.333134024 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.33399692 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.334991786 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.333302157 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.33236565 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.333323501 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.336729085 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.336875211 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.334097461 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.33612985 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.333022385 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.334711283 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.336697391 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.334857337 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.334295061 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.336978313 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.337284633 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.336272205 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.335518435 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.334686977 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.337256915 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.337786974 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.334378377 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.337527818 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.334513466 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.337858479 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.337242323 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.338324695 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.337813259 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.334855063 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.334742486 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.334981196 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.334902269 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.335100472 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.337086866 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.33975757 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.337101876 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.338226473 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.335853316 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.338949015 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.338272599 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.335450969 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.337347631 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.338202126 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.335938927 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.335611995 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.339172375 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.336730789 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.339295447 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.337960032 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.336295736 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.337035696 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.338260895 seconds)
  done (took 92.084853347 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.340347611 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.339906178 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.339246946 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339353644 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.341093283 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.34114085 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.340349618 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.34027525 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.340363849 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.33948277 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.3392531 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.339183826 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.339916978 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.338717372 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.339250304 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.34068925 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.340660554 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.341488814 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.340069055 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.340290782 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.341127397 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.341085824 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.341583115 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.341971457 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.341762158 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.341098391 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.340585612 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.340982887 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.341300727 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.341913817 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.341389053 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.341088767 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.341505774 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.342220941 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.342305986 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.341740416 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.341857293 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.341668081 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.341144868 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.340755925 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.34193741 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.341883327 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.340830949 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.342197803 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.341274842 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.342333557 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.340869212 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.341970018 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.341644521 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.341218002 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.343341099 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.341303664 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.341914555 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.342096731 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.342693642 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.342264227 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.341905307 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.342753822 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.342792504 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.343023919 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.342582542 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.343668234 seconds)
  done (took 84.412859324 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.343540831 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.343818842 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.340418137 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.339889211 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.34283283 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.339538882 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.342901643 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.343428584 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.343476244 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.343109327 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342285054 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.339560586 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.339861361 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342148746 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.3405558 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340886614 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.341519636 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.341072913 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.343237256 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.341959785 seconds)
  done (took 28.093044333 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.340804384 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.343848836 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.341395275 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.340159705 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.344562416 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.341610708 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.343361111 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34337606 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341014755 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.343655257 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.344801234 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.344024485 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341610375 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.342256965 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.345562152 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.342278788 seconds)
  done (took 22.741482954 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.341620136 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.343927414 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.344708603 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.345394788 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.342810893 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.342638541 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.344147869 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.341486164 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.342067317 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.34571223 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.344239072 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.344864752 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.344509561 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.345514727 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.343595578 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.344655196 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.343185006 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.34390355 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.346362588 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.346445145 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.344624987 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.344358597 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.346524475 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.346320668 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.342740059 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.343927687 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.344031429 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.343618763 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.344178838 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.346125891 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.343805003 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.344622855 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.343809711 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.345371657 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.347288117 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.344768875 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.3471252 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.346702764 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.349443621 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.346116508 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.34676824 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.343907443 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.346310229 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.346436779 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.345416868 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.347406826 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.344601953 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.345391667 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.345078482 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.345260801 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.347428405 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.348282793 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.348419463 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.348109931 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.348092577 seconds)
  done (took 75.244402318 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.346524713 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.348473344 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.346006216 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.348727457 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.349243462 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.345720288 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.348716077 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.347750604 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.346076048 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.347881198 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.348389229 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.349550043 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.345568505 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.348898794 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.347168081 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.349027887 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.346522808 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.346454208 seconds)
  done (took 25.518297283 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.347434125 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.346490691 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.349225986 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.346722521 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.347152936 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.348929652 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.347210469 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.348768949 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.349549744 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.347721027 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.345507854 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.349447844 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.349519136 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.349770097 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.347371239 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347910025 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.349884031 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.350434813 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.347841119 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.347868756 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.350251375 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.350825444 seconds)
  done (took 30.929058235 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.349920103 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.349757842 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.349959234 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.364232649 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.365911975 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.372045048 seconds)
  done (took 9.415064727 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356779986 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350916839 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.348200891 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35123458 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351353212 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348447798 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348691428 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349017641 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352509596 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349129801 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348716207 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352341062 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352086742 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349898235 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35095419 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3512561 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349071242 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348668939 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349446451 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35244354 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349307751 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352666853 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35030293 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349367363 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34947561 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348688883 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352767484 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349587403 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350211005 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352778843 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352079295 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349941532 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352841471 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35012421 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352344223 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352907444 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350500043 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352821323 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352819362 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350336935 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.352637855 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353296324 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352342673 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350333438 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352916521 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35010142 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350866282 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350782809 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350346583 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354350439 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353229545 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351937992 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353702399 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353508196 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353178293 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353833366 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353073692 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351039902 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355087435 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352907393 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351585289 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354469833 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352011735 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352245392 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354418533 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351633121 seconds)
  done (took 90.484734543 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352276763 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.352170821 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352963861 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353540015 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352684499 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352487343 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354005776 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35157082 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352711332 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352782032 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355567429 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353032828 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35291284 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353728276 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354070238 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35328294 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353244553 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353429767 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352993627 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357189214 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353990597 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352669052 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3541087 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353528005 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353128659 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355797161 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354088438 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353556944 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353598196 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355906901 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353419493 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353932265 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35384755 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.354169798 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35505484 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354076823 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353681132 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354383807 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353944726 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356776129 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353977613 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356694098 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355077385 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353227638 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35513002 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355191017 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353951327 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354126618 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35476344 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35417162 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354229605 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355911628 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354979776 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355244965 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355012745 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355783034 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355326056 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355206358 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355069731 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357609653 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356760742 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355849288 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359911171 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355609169 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356196628 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356825506 seconds)
  done (took 90.661190833 seconds)
done (took 1829.703700399 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.40029193 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.384612433 seconds)
  done (took 14.054632686 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.518079153 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.470886194 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.354583366 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.377531658 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.354965949 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.366831288 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.356455014 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.354874324 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.35462013 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.355436003 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.354388604 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.54115959 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.409397484 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.355485388 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.354875798 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.448771263 seconds)
  done (took 43.599773102 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.380936682 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.36243467 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.469958383 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.377462348 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.382130836 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.545824829 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.414075311 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.360230329 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.528987486 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.399212173 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.876177275 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.380686291 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.358551383 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.440483251 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.379176446 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.543512283 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.601443062 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.878415749 seconds)
  done (took 30.949140339 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.796116331 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.365702034 seconds)
  done (took 9.429076459 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.350439774 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.376770766 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.38341763 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.38360927 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.377150873 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.413745795 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.409581979 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.422503289 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.411198124 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.390441638 seconds)
  done (took 65.188800803 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.371337554 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.35295628 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.353344373 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.351758669 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.344141698 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.343986836 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.352337194 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.345135659 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.877985473 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.473593746 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.352864231 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.355197581 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.366370814 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.348434914 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.345293853 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.382658825 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.500252329 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.346237517 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.343093424 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.352474886 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.34678927 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.445789861 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.390564804 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.348596333 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.471349418 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.920493503 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.350529593 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.353300402 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.472313712 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.347973441 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.347690254 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.348209752 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.349745613 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.970583411 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.847092434 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.358217037 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.373093467 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.35737229 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.344770116 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.490149962 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.351014244 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.354348869 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.341401078 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.834373244 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.485108429 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.464240316 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.512065499 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.36629262 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.350002083 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.408356586 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.350164387 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.349536487 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.379497444 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.093211833 seconds)
  done (took 112.000932963 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.365257774 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.732484313 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.508637138 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.36460618 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.969276409 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.982472268 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.360419557 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.623337347 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.41771165 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.343624924 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.634989303 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.841300111 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.365413984 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.354884608 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.98023423 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.379691019 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.349244414 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.061272101 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.359262618 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.342418606 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.838392366 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.348429647 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.359950197 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.493717604 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.380523596 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.791345885 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.70955205 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.768681415 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.365599297 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.34263838 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.800579505 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.364179223 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.351076066 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.344981099 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.603595581 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.695277943 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.686778359 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.364464135 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.390651235 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.348894854 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.354501274 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.786613779 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.694489465 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.361654742 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.345861334 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.807765624 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.360732671 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.350722696 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.346710113 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546449601 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.005675093 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.346552157 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.693570636 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.345904493 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.703722888 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.389654676 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.373052741 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.819888699 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.362917499 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.39649652 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.403559519 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.345442641 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.346419039 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.347399564 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.348764843 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.684131313 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.473789431 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.350834662 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.683750473 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.8137665 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.362372051 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866639647 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.274046746 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.361094584 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.460591105 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.346843487 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.875278961 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.82869717 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.383271995 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.34583396 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.67049656 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.364745782 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.628335727 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.365890772 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.347335166 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.867810807 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.354084947 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.409027758 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.346927565 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.362333652 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.975488757 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.348034515 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.630438603 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.397349199 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.348012083 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.3467636 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.383197562 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.348189007 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.364999931 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.355132007 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.863506131 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.368791022 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.315039851 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.370238934 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.348543239 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.36917532 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.347475779 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.34822683 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.565230003 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.876367149 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.374840207 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.350765077 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.355594171 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.356871627 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.512794992 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.355054867 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.64785083 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.36608733 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.348818889 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.354025292 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.965941374 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.395496422 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.348971148 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.348658921 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.229635487 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.562509915 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.368424354 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.365500921 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.351162648 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.366214616 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.605809041 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.37266545 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.436471883 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.352117098 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.044539815 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.380185853 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.352723145 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.668799292 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.357618381 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.221281683 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.378009587 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.35234744 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.654318855 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.61712759 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.401692926 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.350400952 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.367607392 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.037909501 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.410764559 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.496551402 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.368841915 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.39298163 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.550244833 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.745241539 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.3528101 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.972966509 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.349953503 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.564783827 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.35157238 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.649120083 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.829678549 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.368655093 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.357723031 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.042198143 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.043651548 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.980327139 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.353415986 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.627321007 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.300721292 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.822421252 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.351172686 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.35205526 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.771251851 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.356759376 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.358197708 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.353339188 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.35238778 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.482434949 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.525245786 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.561586712 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.36056237 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.794166808 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.382608855 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.352827025 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.360527557 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.352214338 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.701224299 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.441581949 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.356889282 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.358852841 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.354531858 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.354798547 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.818206108 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.307928166 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.361430818 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.506368856 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.975089956 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.371645585 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.353057008 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.051055408 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.590039043 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.856852033 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.370718015 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.654059301 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.377704068 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.392892811 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.924166884 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.379730209 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.819430124 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.374562495 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.355383356 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.93369975 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.37047653 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.709993222 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.355027248 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.355193032 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891509612 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.371695495 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.357744964 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.602685491 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.376871627 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.620719498 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.356098163 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.387194523 seconds)
  done (took 1113.611274666 seconds)
done (took 1390.112826195 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.356798484 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.35630731 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.343659181 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.363131197 seconds)
  done (took 26.693640815 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.367562462 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.362363152 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.364503636 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.363045024 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.364282988 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.364587072 seconds)
  done (took 9.46310797 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.393253911 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.35590307 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.362457494 seconds)
  done (took 19.388024104 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.564321334 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.66535889 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.714894251 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.592086923 seconds)
  done (took 10.812816634 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.365220052 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.363677528 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.365923816 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.364401628 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.366397831 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.367268596 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.364912603 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.366820408 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.368645012 seconds)
  done (took 13.570878672 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.238580267 seconds)
done (took 86.448500031 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.443490399 seconds)
    (2/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.932207463 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.369975113 seconds)
    (4/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.352687146 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.805257352 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.793234939 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.345523098 seconds)
    (8/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.795970201 seconds)
    (9/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.733579422 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.448588838 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.427945788 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.60282247 seconds)
    (13/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.589806832 seconds)
    (14/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.443687398 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.398716737 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.358042309 seconds)
    (17/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.385647037 seconds)
    (18/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.963127472 seconds)
    (19/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.547089818 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.405304635 seconds)
    (21/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.387114621 seconds)
    (22/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.939984124 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.275729945 seconds)
    (24/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.342978176 seconds)
    (25/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.36543127 seconds)
    (26/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.355532588 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.779391453 seconds)
    (28/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.347583406 seconds)
    (29/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.638397935 seconds)
    (30/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.342064517 seconds)
    (31/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.558474381 seconds)
    (32/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.346236448 seconds)
    (33/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.347460519 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.111900295 seconds)
    (35/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.103931251 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.467618603 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.22515414 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.387376678 seconds)
    (39/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.342084202 seconds)
    (40/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.572604672 seconds)
    (41/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.735107112 seconds)
    (42/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.461340381 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.993324363 seconds)
    (44/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.369837626 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.837762628 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.464600865 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.288495428 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.350264057 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.548449736 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.363134549 seconds)
    (51/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.571351736 seconds)
    (52/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.73135085 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.379109876 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.391887026 seconds)
    (55/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.343129406 seconds)
    (56/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.792224723 seconds)
    (57/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.160945912 seconds)
    (58/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.392880504 seconds)
    (59/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.376803669 seconds)
    (60/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.465607307 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.471543041 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.616922331 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.361622773 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.696580937 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.462470021 seconds)
    (66/309) benchmarking ("sort", Int8, false)...
    done (took 4.421747649 seconds)
    (67/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.73534033 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.211165607 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.441763065 seconds)
    (70/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.36079895 seconds)
    (71/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.521435983 seconds)
    (72/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.37815983 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.469070779 seconds)
    (74/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.345245638 seconds)
    (75/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.400698148 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.143656792 seconds)
    (77/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.765519872 seconds)
    (78/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.453711208 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.38551487 seconds)
    (80/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.971411383 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.409655908 seconds)
    (82/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.579451993 seconds)
    (83/309) benchmarking ("sort", BigInt, false)...
    done (took 6.369299565 seconds)
    (84/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.486234615 seconds)
    (85/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.714326669 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.350715724 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.370772159 seconds)
    (88/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.50672811 seconds)
    (89/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.228423979 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.569939803 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.367658107 seconds)
    (92/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.43264849 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.345704291 seconds)
    (94/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.32769111 seconds)
    (95/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.346137759 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.194687835 seconds)
    (97/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.752077304 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.998911078 seconds)
    (99/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.755829178 seconds)
    (100/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.351447305 seconds)
    (101/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.487095377 seconds)
    (102/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.354186096 seconds)
    (103/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.671091728 seconds)
    (104/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.972131444 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.240021833 seconds)
    (106/309) benchmarking ("sort", Float32, false)...
    done (took 5.371655499 seconds)
    (107/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.325716249 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.476739976 seconds)
    (109/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.743322135 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.497399663 seconds)
    (111/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.452607465 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.800483527 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.368314539 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.371491189 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.020858775 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.217753236 seconds)
    (117/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.368090913 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.943335467 seconds)
    (119/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.471021329 seconds)
    (120/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.921606018 seconds)
    (121/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.391885727 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.588379598 seconds)
    (123/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.348489517 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.442458223 seconds)
    (125/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.398059822 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.789729459 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.383143441 seconds)
    (128/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.392960292 seconds)
    (129/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.347032133 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.412358241 seconds)
    (131/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.348707078 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.829155623 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 1.887938434 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.412721197 seconds)
    (135/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.392481357 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.645491591 seconds)
    (137/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.348005312 seconds)
    (138/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.58057632 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.116961085 seconds)
    (140/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.529879059 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.622870984 seconds)
    (142/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.55162795 seconds)
    (143/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.355250692 seconds)
    (144/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.394462104 seconds)
    (145/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.47228561 seconds)
    (146/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.348399207 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.491454268 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.465854368 seconds)
    (149/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.352801625 seconds)
    (150/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.836259447 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.132922916 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.399411007 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.393589191 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.392905814 seconds)
    (155/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.357964859 seconds)
    (156/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.409110784 seconds)
    (157/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.114535107 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.39068235 seconds)
    (159/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.350070895 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.066056025 seconds)
    (161/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.350507658 seconds)
    (162/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.374795759 seconds)
    (163/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.794755992 seconds)
    (164/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.372754169 seconds)
    (165/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.461330787 seconds)
    (166/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.46909954 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.1999356 seconds)
    (168/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.350139779 seconds)
    (169/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.4604598 seconds)
    (170/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.238489552 seconds)
    (171/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.359864756 seconds)
    (172/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.201721694 seconds)
    (173/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.003670977 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.283434276 seconds)
    (175/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.626994235 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.440939217 seconds)
    (177/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.351030755 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.840572324 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.867806459 seconds)
    (180/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.439324718 seconds)
    (181/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.37817194 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.366612271 seconds)
    (183/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.41953999 seconds)
    (184/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.955423238 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.3751963 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.415545147 seconds)
    (187/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.087316519 seconds)
    (188/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.204925073 seconds)
    (189/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.190377447 seconds)
    (190/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.373588336 seconds)
    (191/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.394250948 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.411822122 seconds)
    (193/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.352315404 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.387614926 seconds)
    (195/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.500237766 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.352637843 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.458294266 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.366952438 seconds)
    (199/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.164508084 seconds)
    (200/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.190693891 seconds)
    (201/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.392132139 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.78035139 seconds)
    (203/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.39523891 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.433900012 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.370123625 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.447227558 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.778516076 seconds)
    (208/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.378106902 seconds)
    (209/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.426414488 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.480904015 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.365550071 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.779145531 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.012243844 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.581289425 seconds)
    (215/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.980424299 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.975739083 seconds)
    (217/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.611112072 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.971965744 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.282923795 seconds)
    (220/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.390527558 seconds)
    (221/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.310569329 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.835661442 seconds)
    (223/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.969735244 seconds)
    (224/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.405021435 seconds)
    (225/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.453057868 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.782756991 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.389196825 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.740563551 seconds)
    (229/309) benchmarking ("sort", Float64, false)...
    done (took 5.666885575 seconds)
    (230/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.388639698 seconds)
    (231/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.63949046 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.39486637 seconds)
    (233/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.35740073 seconds)
    (234/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.126535387 seconds)
    (235/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.419442313 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.416680542 seconds)
    (237/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.455559325 seconds)
    (238/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.633106411 seconds)
    (239/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.455471403 seconds)
    (240/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.583458869 seconds)
    (241/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.154326202 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.374155989 seconds)
    (243/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.379693705 seconds)
    (244/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.402311977 seconds)
    (245/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.079852811 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.415224094 seconds)
    (247/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.743049231 seconds)
    (248/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.404933291 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.376731898 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.475607155 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.783813953 seconds)
    (252/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.510600105 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.58253462 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.683009827 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.389118543 seconds)
    (256/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.776399607 seconds)
    (257/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.987469826 seconds)
    (258/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.363398963 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.443006033 seconds)
    (260/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.423208361 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.401853143 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.71976089 seconds)
    (263/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.155224922 seconds)
    (264/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.424765318 seconds)
    (265/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.58899195 seconds)
    (266/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.417137202 seconds)
    (267/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.388119741 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.756138463 seconds)
    (269/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.374452716 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.373796304 seconds)
    (271/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.406188366 seconds)
    (272/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.357364739 seconds)
    (273/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.493796239 seconds)
    (274/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.401395608 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.443394178 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.375690283 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.139406425 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.10521723 seconds)
    (279/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.378489925 seconds)
    (280/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.383005992 seconds)
    (281/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.765699303 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.384691643 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.465108119 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.458190716 seconds)
    (285/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.37629791 seconds)
    (286/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.906308286 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.492829168 seconds)
    (288/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.561308712 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.393974595 seconds)
    (290/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.366927012 seconds)
    (291/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.728884443 seconds)
    (292/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.391810488 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.375905128 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.197989773 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.357364652 seconds)
    (296/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.939067793 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.735456554 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.440992923 seconds)
    (299/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.382470733 seconds)
    (300/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.408840183 seconds)
    (301/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.401697825 seconds)
    (302/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.635223981 seconds)
    (303/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.106566187 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.423610909 seconds)
    (305/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.461865466 seconds)
    (306/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.35958032 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.495603419 seconds)
    (308/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.427592572 seconds)
    (309/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.222565041 seconds)
  done (took 1045.920694754 seconds)
done (took 1047.207435636 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.410025758 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.407472315 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.389736512 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.410358009 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.500998073 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.411017385 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.399028867 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.390360665 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.435982974 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.438476329 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.387919722 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.410379185 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.390872616 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.389767509 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.388676027 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.405110337 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.414812117 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.390116471 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.40679095 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.398414664 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.407342071 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.390247759 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.439259238 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.411269381 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.393085834 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.39234356 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.393308547 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.410021317 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.502799921 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.393202392 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.39443429 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.403254852 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.413894195 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.389459395 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.385778606 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.411198977 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.401428027 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.399034724 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.394985853 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.423498038 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.812882089 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.408560887 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.393117068 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.390613897 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.392020303 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.394503126 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.393338594 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.398195304 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.405491703 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.407731477 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.805144828 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.42473048 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.395478 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.39212739 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.403956896 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.393824602 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.395676089 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.410064634 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.411900163 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.410071326 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.403445322 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.398755358 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.394845435 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.410141005 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.401020912 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.842445187 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.406078495 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.396912325 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.818137707 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.414559311 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.843909846 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.418725946 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.395075837 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.409151688 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.425310049 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.419528252 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.389409784 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.393243855 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.403297865 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.393935402 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.40538826 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.408691367 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.399273206 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.393736499 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.409771392 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.417858899 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.403493287 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.396065946 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.404129685 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.41468735 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.403157517 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.406526906 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.39828958 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.391435632 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.403623777 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.399132837 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.397769702 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.398154646 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.399905303 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.405609019 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.818359662 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.430302971 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.391624873 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.391620904 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.394727537 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.409827479 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.819565957 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.413409636 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.417318979 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.442688391 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.397658528 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.408494134 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.399761789 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.414418398 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.405744435 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.400109817 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.39178845 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.41002387 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.813307278 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.428105007 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.397994418 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.395632089 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.41451656 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.398619356 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.393489293 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.427139651 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.397669925 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.41306315 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.518041379 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.407341015 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.42803561 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.395404309 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.399606422 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.419990123 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.41568725 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.429262736 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.400631176 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.41482693 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.415364006 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.395350876 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.408605051 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.408957983 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.398869487 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.404176488 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.392560587 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.420876455 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.411834882 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.412505359 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.419376701 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.519242354 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.395456587 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.413785268 seconds)
done (took 234.592241093 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.455443291 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.392492177 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.485884409 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.394042892 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.494492673 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.494847929 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.392075824 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.391974131 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.391407925 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.768744678 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.392506827 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.392330781 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.387241597 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.39216939 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.475949915 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.394666758 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.391084147 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.730692152 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.396069705 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.464033731 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.395547079 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.392511662 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.394617433 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.77552641 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.39256665 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.388538706 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.464251714 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.394401651 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.740298597 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.390730491 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.391228991 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.74031047 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.484687524 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.41260193 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.404731908 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.401867281 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.496497925 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.414104636 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.475232602 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.476834273 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.48657786 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.434758107 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.388774138 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.397336061 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.397744414 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.397409974 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.393768908 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.422663202 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.39157563 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.393388737 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.731607921 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.406633105 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.394346277 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.395237303 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.395429095 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.424766642 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.394380185 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.398143583 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.484707235 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.398992292 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.458873311 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.778142023 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.793583147 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.395902636 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.395749532 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.394788213 seconds)
  done (took 152.555878717 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.462872917 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.469418399 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.509934369 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.418783755 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.44940824 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.514661508 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.419738639 seconds)
  done (took 11.551939735 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.404374448 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.398344006 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.447091391 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.446628519 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.398631245 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.545388522 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.399515928 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.408007329 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.396898176 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.450671682 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.398551313 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.399197994 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.405075836 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.393320212 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.447606952 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.409939179 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.512691561 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.40045311 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.399605694 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.555174142 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.397235883 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.405401803 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.451656623 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.4119503 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.399934035 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.405075924 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.969655542 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.399169116 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.395511367 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.397277445 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.397315403 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.437208928 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.398687354 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.397696512 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.396247379 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.515544086 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.400470694 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.396541507 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.400210709 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.392290586 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.39960935 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.399517281 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.40039267 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.397809089 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.400775495 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.422999865 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.399303483 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.40169339 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.400822541 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.400864385 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.450346437 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.40008443 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.397126636 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.39845066 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.456240402 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.407416355 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.402307495 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.398190594 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.4008211 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.399271861 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.558029972 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.449959408 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.400899451 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.448928725 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.401606531 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.401830398 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.400864327 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.400470144 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.464806887 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.401537437 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.449608124 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.39904061 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.556212516 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.424738951 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.403992284 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.403716315 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.40386468 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.40389553 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.400379659 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.409309843 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.399590084 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.404157097 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.408666198 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.400884444 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.399614275 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.504410041 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.511746932 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.400621774 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.415337406 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.410511154 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.400447666 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.454971386 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.403785595 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.39978677 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.454840405 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.519599259 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.457274609 seconds)
  done (took 159.756654641 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.407398256 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.411988757 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.405981254 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.420233906 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.403507702 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.403141311 seconds)
  done (took 9.76484666 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.407577917 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.404291648 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.403623597 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.403754601 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.404508102 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.404542259 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.405493092 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.406247231 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.408910422 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.405400909 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.405529227 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.404523786 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.405045695 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.40636543 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.405686088 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.404710592 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.405901549 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.402388705 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.40345632 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.405501579 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.500712024 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.404786774 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.405441096 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.407833274 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.40832961 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.405645864 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.413183949 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.40502394 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.405412138 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.414156051 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.427120573 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.405974319 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.40811598 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.411632525 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.412848278 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.408211322 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.410107481 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.407653031 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.403730118 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.40632166 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.408027835 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.407853333 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.406874648 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.408082579 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.410184395 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.411832071 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.409782629 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.41494483 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.40703212 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.407928669 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.407922841 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.408145145 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.406407226 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.408222367 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.410091213 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.429376133 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.410641928 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.40934466 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.408274685 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.409672122 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.410494895 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.408633868 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.410825516 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.41225392 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.414734898 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.408149539 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.409314227 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.4127132 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.833129941 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.408300022 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.4096244 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.40524494 seconds)
  done (took 104.234592574 seconds)
done (took 439.176102604 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.754848943 seconds)
  done (took 8.071886125 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.530923954 seconds)
  done (took 7.848856238 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.026238907 seconds)
  done (took 22.348064415 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.442605396 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.43430612 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.405939559 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.423768085 seconds)
  done (took 27.024725742 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.841548001 seconds)
  done (took 8.159300725 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.401336425 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.402377512 seconds)
  done (took 14.121709162 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.492929748 seconds)
  done (took 7.810508396 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.701825806 seconds)
  done (took 8.024969814 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.407921363 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.426105229 seconds)
  done (took 14.416406956 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.383265862 seconds)
  done (took 7.701368327 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.2280585 seconds)
  done (took 8.548353201 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.401888224 seconds)
  done (took 7.720652454 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.410252766 seconds)
  done (took 7.729541835 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.44302871 seconds)
  done (took 9.760413773 seconds)
done (took 160.612277234 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.402701105 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.403263551 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.406681427 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.402624416 seconds)
  done (took 26.933563187 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.443052462 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.442295423 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.445682402 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.45454828 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.446586189 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.462583496 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.436015399 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.437767711 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.454413681 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.447332197 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.46351936 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.446470946 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.443531081 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.435745051 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.447266537 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.445923234 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.455610927 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.444046187 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.435268947 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.446986945 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.411846701 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.454515794 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.446929489 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.409736619 seconds)
  done (took 35.976869155 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.93268901 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.483049863 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.563770508 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.461203049 seconds)
  done (took 7.760091292 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.462608672 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.464232704 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.475916274 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.51511347 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.540002073 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.473278115 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.437739766 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.433165289 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.419410051 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.465164593 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.539899036 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.480838884 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.548849362 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.410945047 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.596596542 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.41260163 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.411168949 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.464344673 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.517594529 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.5286594 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.412452437 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.464332898 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.466568097 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.481275276 seconds)
  done (took 36.743203227 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.412356764 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.429605686 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.410909847 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.410438541 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.419779564 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.411307881 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.410972784 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.412566907 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.41099124 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.417863503 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.410958971 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.424462374 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.410055564 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.412621058 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.418338018 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.413500403 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.418579406 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.411695942 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.411800211 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.419048412 seconds)
  done (took 29.619054034 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.407579349 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.260947463 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.758471342 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.663169109 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.406531613 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.406447399 seconds)
  done (took 28.224869251 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.484068826 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.639078645 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.41601928 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.774670644 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.868762475 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.433418013 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.415280113 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.657099938 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.978922897 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.97212814 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.474912612 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.485198334 seconds)
  done (took 20.924407075 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.4099679 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.432460062 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.424591237 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.429215695 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.471131403 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.436729322 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.42266752 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.408311845 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.474847466 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.490882324 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.43641024 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.470677316 seconds)
  done (took 38.631841725 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497249736 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.453846237 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.314644882 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.467680689 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.14664156 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621586986 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.426109596 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.870481237 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.413755183 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683445426 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423052236 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499141518 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.665066482 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424811124 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.414710474 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.397751322 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659105076 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915575238 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411230964 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.520765232 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442257177 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.4107189 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.615331095 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.449514711 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621845492 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.551955565 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.67257739 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.188746038 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71371943 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430344096 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422305035 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412039547 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68593006 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08122309 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535422846 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422335145 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428701064 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.047432885 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.398145006 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.444727677 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429287121 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.415557078 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422122806 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411550037 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.346658718 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412838638 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885271585 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.41700902 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.124744766 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.413373536 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424453975 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508201238 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.416403302 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.983074148 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.515861354 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.417448627 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.410247504 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504629542 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003746395 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.938477939 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436191532 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.351149741 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.431162397 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.524069052 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068661458 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.534909831 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.41806776 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.41823032 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349098375 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.494664579 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438666061 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.561878555 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.436859397 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.064280025 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123092969 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.435509545 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.362493467 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976799354 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424387848 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.351732017 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642317915 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.189109819 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35056293 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.360669453 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.350022008 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127354163 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422254354 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.81027555 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433851148 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.894508341 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.426064942 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436649672 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438955078 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.638216817 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.294420839 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419060805 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.42652722 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537779045 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437531116 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.874621697 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349168051 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.419473318 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671365163 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.627223317 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429682008 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.411442575 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662916344 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41702111 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.436973037 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.419865038 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.43294982 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.012408203 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.446386928 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.937608972 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440795227 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.191145078 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156609666 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419829273 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.52301132 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.424427389 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663995816 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.182510667 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.298931743 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484282913 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421138406 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.418659327 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.542938132 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.016118261 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.299795694 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.414832691 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430770866 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.435404502 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.419179337 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363687473 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.42817138 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424311758 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.196205973 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.642035211 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424720529 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697341911 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35244248 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.565326682 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.427054775 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.641918661 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.624958689 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.44107658 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677454298 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426801806 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.432085801 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.436550922 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438445252 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520323673 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441120526 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.42531168 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.681162151 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.422049926 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.42285655 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.553331801 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.206386436 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423244592 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.42639351 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434578761 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031395795 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413581588 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.428048419 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.309481708 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.434571606 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487407298 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.42552566 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.431077469 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.25986592 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465152958 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.428229294 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.420191181 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644263492 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.431953553 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.550161265 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508230174 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.633368323 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.023498609 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453297568 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.355539284 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.131332324 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.113781431 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420971054 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.619685201 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.421721591 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433647177 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.43279192 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.431393316 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.022784025 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442022318 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.474325851 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.434860572 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.432342791 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.429487797 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42309626 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.239518974 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.978304867 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.437565541 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.438627672 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566734651 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.438773353 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.357493519 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.939892216 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.42878389 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.423044064 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.197791447 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457704258 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.46473306 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920259656 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68257959 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.438703799 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.440730911 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.650749133 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.464299087 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.467153154 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423350851 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447415324 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.443019537 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458224871 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.434587592 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.533134862 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.794498592 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993975154 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151223659 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00663093 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390948249 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.434057964 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.332751537 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.89098971 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.359033145 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.08187528 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61565776 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.914384319 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369910474 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646225345 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.634769298 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217891848 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.443961794 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652684448 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349421172 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.441968361 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442869868 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.638005905 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459626644 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.434376635 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.362263655 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.71105337 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.701267992 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427302119 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.505358576 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888421962 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.438051202 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.203179074 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.490613457 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.771619756 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.622434862 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.971091616 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.811025322 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.427392922 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.462006766 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916754117 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.436958364 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.95243555 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067507634 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.449403759 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.649695442 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364102154 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.437705879 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.437704287 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.425324062 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.746931737 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.436249545 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.690816849 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43907824 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363746346 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.44332506 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986891515 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.300424797 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.433993891 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428514328 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185708835 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429199842 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.73570192 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.450143175 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.238706334 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449540914 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.362408713 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362903994 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.122225195 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.431923375 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402885917 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945596736 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.431170246 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434613789 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.458323725 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279651239 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.68235283 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.443425091 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.036709676 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.672931181 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435492473 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457802936 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.529688182 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.438947469 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.419402109 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.322555003 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.666180609 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.497675411 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.655326574 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.362623096 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.338551687 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.461195848 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.643506448 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.317643241 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.432177746 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.697735619 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.167463842 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.442573797 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145394502 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47642224 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.443922568 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.450079076 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.439532948 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458400522 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52134702 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.441197269 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.442525807 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.442566688 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.608425802 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431619005 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.45933484 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.447064533 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526638834 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.990291964 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.232567544 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.211054567 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0461373 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195271855 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.070757107 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464390971 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.433416106 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431833017 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366466985 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583449305 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.958905866 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705687411 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.565150102 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.441212556 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462891513 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.446271952 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434826504 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652440499 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708464452 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.404848217 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449077178 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.223400901 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.313239444 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.443960454 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.646172935 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952357505 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01385943 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549588681 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.439274093 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.902873569 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70874431 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.522850899 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.43566651 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.021911606 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.455363516 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.786774087 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.459144581 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44762548 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585161178 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.444282605 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107097578 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.469115467 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.593503239 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.208159567 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.587872909 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.695421981 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.910298672 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.443772586 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047499671 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.189105269 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696757292 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503639115 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.443996505 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.545672007 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583229969 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.43861903 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.32448437 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435581318 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27950505 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.145542846 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.44531002 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047271043 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.71794175 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.433204847 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.44247118 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46273066 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.445546485 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.657991039 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151670092 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.659078896 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.446589151 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.437702486 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.010141072 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055358807 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468632352 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370172915 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.44046058 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.694280178 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.697908776 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.460149932 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.890703998 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.148975087 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004268591 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.40629507 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459666745 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.445660574 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.182500774 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051406559 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.257332785 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96663233 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.096260902 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.438816888 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719101131 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.442820906 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.445982256 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.72154501 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.442250178 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.438842886 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473116932 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.051239554 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23476925 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.459632956 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.622453087 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.380162313 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.664620588 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.460675456 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374626669 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.449120875 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.624140916 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.439502347 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.569133944 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450271506 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.440074457 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458040969 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.177483328 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.712164088 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.44515169 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.442502369 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.429122556 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.45141674 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547102846 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.718116429 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446859051 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.114717746 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.79038592 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.695488006 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.440695075 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.429251689 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.444994199 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442554279 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.157733318 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.450749297 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.454772981 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031257073 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.443940181 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.458017137 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.444643418 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.658268165 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652489724 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.447029858 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.460110525 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449223182 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462000226 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.343705323 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.208294703 seconds)
  done (took 1687.925375193 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.445052095 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.461394231 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.483649037 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.531482184 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.479203338 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.585121136 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.497008406 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.448859333 seconds)
  done (took 53.285451118 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.456174693 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.592976105 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.476485968 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.44889084 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.451702225 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.442207657 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.911615911 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.476749408 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.45103284 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.452083646 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.4560173 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.453800969 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.115325832 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.459066231 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.45408296 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.433600626 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.456477883 seconds)
  done (took 67.348027303 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.442258347 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.490683025 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.552522968 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.445915181 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.560593977 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.480525474 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.400150809 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.457317361 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.461809579 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.512662942 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.109471402 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.491818186 seconds)
  done (took 85.761506217 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.451221868 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.451067461 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.452661347 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.451971101 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.452797673 seconds)
  done (took 8.617032139 seconds)
done (took 2129.082391981 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.693240924 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.156762456 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.081382022 seconds)
  done (took 5.594192002 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.592747588 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.641745912 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.763713245 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.767805897 seconds)
  done (took 8.124681254 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.725371053 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.821025859 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.641929662 seconds)
  done (took 6.54634722 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.867390317 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.466031936 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.488310996 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.447247936 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.452870606 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.454383923 seconds)
  done (took 20.712705788 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.451543128 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.452478588 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.4501108 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.452455536 seconds)
  done (took 7.165732005 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.429331152 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.15421243 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.431581898 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.4477518 seconds)
  done (took 18.821957921 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.196270806 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.208647548 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.193800227 seconds)
  done (took 7.956321955 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.461448618 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.294483055 seconds)
  done (took 10.113660212 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.732592577 seconds)
  done (took 3.090698196 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.583948487 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.776221359 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.560600614 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.447928654 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.564874279 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.302454707 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.102177354 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.683338803 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.42527655 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.636221732 seconds)
  done (took 29.440896771 seconds)
done (took 136.447379093 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.308479081 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.823386835 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.657475949 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.318783413 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.681512235 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.66113677 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.658208341 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.288170147 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.789360149 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.781333388 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.324243299 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.682714497 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.812997306 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.823720833 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.815247927 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.825277625 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.692274853 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.353685954 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.965646694 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.213265452 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.658207538 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.92199126 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.157334802 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.940940673 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.689864191 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.607455275 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.498778781 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.826335434 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.140225705 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.518553002 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.606914671 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.382164018 seconds)
  done (took 195.786285746 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.451124609 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.481476452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.450170907 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.451668324 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.46257686 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.45051625 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.468433517 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.470289126 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.477072932 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.451735956 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.450247576 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.451452957 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.451075957 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.45487266 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.452039356 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.455532213 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.452742878 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.456795941 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.451513794 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.451604523 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.453537541 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.471184137 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.477979853 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.451417718 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.467753178 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.452246706 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.453092837 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.467074127 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.466247985 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.450784835 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.451871277 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.452343821 seconds)
  done (took 208.02168944 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.452762101 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.451070203 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.471542781 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.453031756 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.451505545 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.470567438 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.455939553 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.450723644 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.487944401 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.464288826 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.451153121 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.453095034 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.472766206 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.472000994 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.469472123 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.470678105 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.483485622 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.466319781 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.454532539 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.452480019 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.464332205 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.453916669 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.452286504 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.460954993 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.45836705 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.45403227 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.478814719 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.456224253 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.453687015 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.453475565 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.471255061 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.471821677 seconds)
  done (took 208.149737765 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.655498322 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.461307734 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.460394142 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.421916711 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.460878623 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.460822378 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.456713718 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.651196207 seconds)
  done (took 15.394439661 seconds)
done (took 628.721661527 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.788162606 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.496044778 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.66674986 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.487721963 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.263269248 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.506274825 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.479875492 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.653651841 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.411795767 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.666413454 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.704551533 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.497636683 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.842817581 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.48066698 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.739776202 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.581116991 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.349299156 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.469793059 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.803057432 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.026040056 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.751789126 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.94543998 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.67533623 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.398458952 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.864431574 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.936364511 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.20768621 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.331129304 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.499428491 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.808758247 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.147222077 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.458826453 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.547177452 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.5449824 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.601257418 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.584521872 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.4440512 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.546821261 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.681245689 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.708095705 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.040094101 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.223435367 seconds)
  done (took 97.228947891 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.448308175 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.448756449 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.447459558 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.448111462 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.44841705 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.44769292 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.44777428 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.447737662 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.45008186 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.44754615 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.448975646 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.449717724 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.448141179 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.450140328 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.448294241 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.448513659 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.449687762 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.455817473 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.45018497 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.448548924 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.448852791 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.448331902 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.449532553 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.450010518 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.449938251 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.449981149 seconds)
  done (took 39.047432102 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.471229045 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.714445254 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.878675594 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.477219526 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.466251219 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.469919947 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.544726988 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.471764174 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.471383552 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.47037701 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.635561444 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.470269084 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.499175358 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.906122631 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.472301763 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.467409009 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.466071453 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.466782468 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.721720825 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.475743189 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.565040821 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.469227859 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.545668767 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.483127188 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.488954013 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.468509166 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.471442939 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.983550426 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.487836259 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.638104631 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.292395235 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.549255399 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.944210541 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.908484459 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.294567828 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.473573665 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.468224484 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.640196269 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.470991599 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.468765204 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.546048349 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.474670215 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.887290794 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.091642527 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.488985787 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.469174571 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.007476358 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.659407086 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.718691674 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.483985155 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.912931826 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.476190894 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.471925334 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.471750033 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.717042386 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.484790812 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.469278577 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.003148893 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.499616584 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.547548786 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.474574342 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.468566291 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.732001175 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.472404053 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.720702653 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.473438564 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.477984844 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.49093006 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.88891904 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.478354445 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.114649529 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.493287733 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.471354951 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.638381383 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.721421984 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.042227087 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.495150336 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.736673994 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.957542282 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.566609514 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.483583521 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.979453351 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.570675169 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.479493115 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.473470524 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.473530892 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.471310871 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.518953009 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.548178598 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.044712427 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.123073999 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.036687819 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.576269405 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.488202519 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.472810168 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.004739862 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.492807688 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.472624673 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.886757818 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.114507509 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.493038872 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.48019733 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.115601736 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.493778229 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.552193111 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.48738774 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.901020704 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.478703257 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.524408896 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.47319394 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.480354622 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.497245552 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.552094176 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.484137408 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.474171344 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.086070261 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.668981247 seconds)
  done (took 192.254563048 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.470501844 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.467874042 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.466443187 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.469266609 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.467620733 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.476016197 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.467167219 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.468466363 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.473686295 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.467001724 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.466754788 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.47067841 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.47004372 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.469234098 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.499477484 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.473893256 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.078089412 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.468753661 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.470407836 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.469605659 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.269197358 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.477397689 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.471114043 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.469786254 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.468245116 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.46927729 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.478806265 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.472119198 seconds)
  done (took 155.986038488 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.478132868 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.052376316 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.50293741 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.609230445 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.503991603 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.473670682 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.607651223 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.542777952 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.494738957 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.473131837 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.474683482 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.784150329 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.486420644 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.999148782 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.682493167 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.626811925 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.009703514 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.506461422 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.476542352 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.476636436 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.611339539 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.486020406 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.783328935 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.062492576 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.505744872 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.051779115 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.471919922 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.477733524 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.476860743 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.054389108 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.497546252 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.78582356 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.558196851 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.543056659 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.072921975 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.025397873 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.02649694 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.6344936 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.479965316 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.477054279 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.474928493 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.461515041 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.054411108 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.501422398 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.479258915 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.045685563 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.50177437 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.478320628 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.483613701 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.476401392 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.538498214 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.558166218 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.804407965 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.055459649 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.574026146 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.499314535 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.610344856 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.870067552 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.489780606 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.005089902 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.471521886 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.0554515 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.499109792 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.464190074 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.478480697 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.481278742 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.629902116 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.620914551 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.006673748 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.50112318 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.002844595 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.651825363 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.483952084 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.47881479 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.481466242 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.055399551 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.023569035 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.657400653 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.623272491 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.681614221 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.471114119 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.480768865 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.464863829 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.558014518 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.482391247 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.061715403 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.02966636 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.507122113 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.481494799 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.481794399 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.481863772 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.661192251 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.089399425 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.582838467 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.997562984 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.808385904 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.792106073 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.482999813 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.540603871 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.49810092 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.790954724 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.483136678 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.539140579 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.936879284 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.802664189 seconds)
  done (took 175.545020979 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.731511069 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.691604184 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.573179272 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.617746928 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.089088782 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.049136684 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.72967976 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.62493313 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.595292285 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.749136782 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.625841278 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.568474088 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.653300521 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.563822884 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.239703883 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.574606827 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.591931683 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.630582996 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.595783643 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.492195475 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.127553614 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.765152333 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.654860417 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.374753686 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.575597174 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.289639414 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.048775195 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.034081314 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.658749888 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.795576526 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.037151361 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.608330342 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.441978436 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.177767382 seconds)
  done (took 69.964885293 seconds)
done (took 731.401707299 seconds)
SAVING RESULT...
DONE!
