cset: moving following pidspec: 21530
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.32988114 seconds)
loading group "string"... done (took 0.58874204 seconds)
loading group "linalg"... done (took 7.342182568 seconds)
loading group "parallel"... done (took 0.171408773 seconds)
loading group "find"... done (took 1.166523012 seconds)
loading group "tuple"... done (took 1.790589354 seconds)
loading group "dates"... done (took 1.223760104 seconds)
loading group "micro"... done (took 0.228726769 seconds)
loading group "io"... done (took 1.043135807 seconds)
loading group "scalar"... done (took 40.016039108 seconds)
loading group "sparse"... done (took 13.227313997 seconds)
loading group "broadcast"... done (took 1.017679371 seconds)
loading group "union"... done (took 13.916069992 seconds)
loading group "simd"... done (took 4.703780437 seconds)
loading group "random"... done (took 9.488157186 seconds)
loading group "problem"... done (took 2.01140954 seconds)
loading group "array"... done (took 22.554851646 seconds)
loading group "misc"... done (took 2.041675677 seconds)
loading group "sort"... done (took 3.431367921 seconds)
loading group "collection"... done (took 19.347161614 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.56238315 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146623017 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119537035 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.143991572 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191680204 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134185011 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145261316 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085784693 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.980697761 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.165419499 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143620948 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.520216954 seconds)
done (took 5.179644275 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.200129811 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088697941 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099558774 seconds)
  done (took 0.97631998 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066912817 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130185834 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081870917 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068983609 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066818876 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083028181 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067871677 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066105361 seconds)
  done (took 1.359845337 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075141051 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069305377 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086402229 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068837706 seconds)
  done (took 1.090640165 seconds)
done (took 4.489994517 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.944145234 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.259374666 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193160437 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.467848648 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.154055961 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.190822704 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.665871085 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.355093851 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.220037731 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10376465 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106818723 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.394191201 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108020802 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686196037 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078193456 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109751239 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.168130799 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.453193609 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084028612 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083282832 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105153117 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142674699 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104210965 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07898244 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170705319 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070152466 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.154995484 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096600514 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069178551 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.25049514 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190796049 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.699965262 seconds)
  done (took 10.791907434 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100183266 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.121862053 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069908031 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142625883 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120737954 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072835803 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072410454 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085698548 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092926979 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.16280314 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.118838283 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.125531182 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067692895 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070118674 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.10431536 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.231752475 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.09278614 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102716503 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07287424 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075551832 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124967269 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099654566 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081557526 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096332567 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.154147283 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195853806 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101741485 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11440743 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069633286 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099982034 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131267616 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132675693 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06610497 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085350666 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.160277036 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096708101 seconds)
  done (took 4.718933928 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.119643405 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.126762754 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.178835603 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094028191 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084509799 seconds)
    (5/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157840932 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069405194 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.131678501 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082107754 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087144784 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255646767 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.097107063 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.496274992 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132357124 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.088497749 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08814768 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070737161 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.086066274 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.606584749 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148423079 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.122471609 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087305622 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091430802 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072325386 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.382609932 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069441478 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066692416 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086488367 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060203565 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149542519 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068999923 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.279995208 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.111866864 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070748229 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122111665 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.18056186 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098397017 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125916542 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084129883 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067804683 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175267135 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074386228 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083875342 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068110549 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108449171 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120506582 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.107341789 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085288558 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069819494 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.186854127 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067422751 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102334979 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.954146681 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168762491 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079149129 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067251156 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.301678402 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.10396153 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068566974 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06533824 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.271264867 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.069050196 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.158192051 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086935456 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068173401 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083682692 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071019165 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.370910462 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068610312 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.707026227 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086683826 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077322439 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087605421 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069133457 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091842312 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075012174 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.104065004 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068709831 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068472604 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.0852298 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066698464 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.087383336 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087653571 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.212018961 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.087192137 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069472772 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082604666 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08811842 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113683302 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072386812 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066172212 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118921975 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070793086 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086654443 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104459855 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087037895 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103746685 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071372063 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.131667801 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068828907 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.137877333 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069962726 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116274775 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073075335 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117285397 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102681611 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069323158 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157996368 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066143272 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084022586 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067835114 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083042236 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069780435 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069616488 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100960141 seconds)
  done (took 21.54478308 seconds)
done (took 38.963236546 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.313489527 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.097344378 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096478452 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07721094 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.096114261 seconds)
  done (took 1.549261384 seconds)
done (took 2.383218068 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.15152224 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103436133 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083698608 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098947248 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082885206 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104195718 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120459079 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083192693 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121221781 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064851837 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116648876 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065293311 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08283371 seconds)
  done (took 2.145685515 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083469433 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086007366 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088331665 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082514515 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081961112 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083632031 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080870831 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108040888 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081107672 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090050227 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065469362 seconds)
  done (took 1.762021249 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082698574 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084955369 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087900042 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081011766 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081450793 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083054982 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081176055 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105099237 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080831416 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091815126 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065316589 seconds)
  done (took 1.759373144 seconds)
done (took 6.49297714 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080613357 seconds)
  done (took 0.91080924 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.756453277 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.937046446 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085646004 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.137732647 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.22443597 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.159364047 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.460500349 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113724822 seconds)
  done (took 10.915110501 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.103463567 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.10443432 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070823743 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.092205189 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070271491 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089216107 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073019905 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069557114 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09112388 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072535692 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089533704 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073857984 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088250871 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074445419 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.089559019 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071799877 seconds)
  done (took 2.22108264 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.10721526 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.105777093 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094836039 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077406172 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093207645 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074377833 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095452349 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.0761188 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.091034997 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075120424 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.094065353 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076473035 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091820772 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067860238 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.094433205 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078954311 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090840084 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076574486 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.095615455 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076550984 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.095270218 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066578886 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.092371404 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07699945 seconds)
  done (took 3.015243275 seconds)
done (took 17.895321097 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.136289598 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079477963 seconds)
  done (took 1.052288868 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084560936 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101112976 seconds)
  done (took 1.026605438 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084995639 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083842616 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090999068 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098765245 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084578985 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069316136 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.105819715 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068582776 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083624356 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069081032 seconds)
  done (took 1.68061642 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070795784 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096310333 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073147805 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100147264 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075950871 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084637875 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076035425 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087248543 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081357136 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082501841 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073287742 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102740957 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072946989 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104288933 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09163327 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07118779 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.08975196 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070136232 seconds)
  done (took 2.347399016 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068465993 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068267659 seconds)
  done (took 0.981561077 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070173073 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064572701 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08554596 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067550719 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082515357 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064149928 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082168405 seconds)
  done (took 1.361920409 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.418323539 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110272681 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.26992467 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073476076 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.108338573 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.30024417 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067998115 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071036494 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091185315 seconds)
  done (took 2.395689 seconds)
done (took 11.685750243 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082338687 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087050628 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115105627 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.445314254 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111624285 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06782148 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14854014 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.21878798 seconds)
done (took 2.120227007 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128380494 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.637303025 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.418743334 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218577632 seconds)
  done (took 2.123732218 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.394013743 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094140772 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076724222 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069547166 seconds)
  done (took 1.485441664 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068441886 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070686858 seconds)
  done (took 0.99042617 seconds)
done (took 5.576158304 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068842381 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067332858 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.08287437 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06851473 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064734794 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083116592 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067663856 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.117065109 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067953749 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086221335 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068958623 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067338306 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.086750909 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067856303 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064785017 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085257464 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06823317 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065470305 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083448267 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065643023 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084022616 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066506257 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065368504 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082560938 seconds)
  done (took 2.684028328 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08759766 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085634168 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073993163 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090361345 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072967804 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090576088 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.0765947 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06802829 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091236892 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069339092 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089762396 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071844007 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087714378 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072066008 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087698448 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072986956 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090320147 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068825052 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069249826 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089577747 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073184138 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08688072 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071118276 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091117479 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071986982 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089799967 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.0700519 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085972934 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073437951 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089501553 seconds)
  done (took 3.260605173 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073368242 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064248404 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083673564 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073059678 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06526972 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085228153 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065208746 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083390526 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067195258 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06538461 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08466062 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065565308 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065117682 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084572309 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066817753 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086032637 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083585138 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065100369 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083686448 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065757651 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.086451466 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066123116 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065361857 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083443549 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065479718 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064415025 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083511266 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065733804 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.083123105 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067352004 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068194 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086925183 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065628174 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070869366 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.087814486 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065835619 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086120247 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066915773 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065775552 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082640961 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065540337 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06473078 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.0828083 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072393222 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065045494 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085877142 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065940792 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084713922 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067077482 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068013082 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084058195 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064958785 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084459619 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067432374 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068780078 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.083594516 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067041613 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064110498 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084871014 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065981011 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.082584317 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066407439 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068007063 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.083676415 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080986771 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089230834 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066808053 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066845653 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.085442577 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068307018 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066679274 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.099149344 seconds)
  done (took 6.189052287 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.122782323 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094896778 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08680316 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067338203 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0817807 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067113419 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069073046 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084246966 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06752426 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090062057 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066485659 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084181052 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068426586 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080392627 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084137559 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067589495 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089984931 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064306977 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065842836 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087711008 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065865839 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087045825 seconds)
  done (took 2.604491056 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.192776561 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090128301 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.11279602 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094513777 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086608736 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075953004 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089391695 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072762392 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070815214 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089431162 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069489248 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090106095 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069235983 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088757451 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06935485 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088392315 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072387184 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088065925 seconds)
  done (took 2.469400255 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081126996 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067446368 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.110414195 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066784317 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087155367 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07012058 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092263727 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075810123 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088823594 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068553518 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095701697 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.180229325 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088090953 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069144468 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086630386 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069832465 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070339707 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086203252 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076965592 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091453601 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073220929 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095661157 seconds)
  done (took 2.752205804 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083300135 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068310494 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105638704 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088540454 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065194481 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065901935 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.093296885 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068368644 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092308593 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069966701 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085218163 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06906524 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072263784 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086625857 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071974649 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087292131 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069348085 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085852025 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071421647 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063421266 seconds)
  done (took 2.423600091 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090652714 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087330278 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070442063 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096340572 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069840938 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087584126 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078292437 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087217609 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070137906 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11129167 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07066205 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087903967 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078270367 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093174022 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069547341 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097037699 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077566641 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097433312 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087271059 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070756766 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112151474 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070211481 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096012106 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070187026 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08752839 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070457944 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08731288 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075679394 seconds)
  done (took 3.213199757 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069818117 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067789747 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083972568 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066740537 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065124958 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084674729 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065745814 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064376981 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087349817 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066245024 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085365214 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069034479 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067855828 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08557201 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068100089 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068013358 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087042383 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065597673 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064769922 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084206703 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068573682 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085493368 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068328134 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066150243 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083647958 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06874174 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065279516 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083706467 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068252388 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064869449 seconds)
  done (took 3.057124891 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07904253 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093898897 seconds)
  done (took 1.040887894 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067089916 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081486087 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085382077 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071389802 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090986227 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069214843 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094322297 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072970572 seconds)
  done (took 1.497706592 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085732792 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.099021305 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070442042 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.098982657 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079747642 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.10479478 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16276544 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070313467 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.093189638 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067228146 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082245164 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.087843569 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074418589 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086588865 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074854081 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074003938 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.08525103 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073659393 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.089320552 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067596252 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087342897 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08132846 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070051669 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.083909346 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069153394 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09624458 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080521197 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08865732 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07197866 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093309356 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075710337 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06239682 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.087251225 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.069379801 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.084321333 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079729862 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103675228 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071878686 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095057539 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070149269 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096785335 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065131681 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072690432 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093994094 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078268163 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086750861 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069725536 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063238705 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085587664 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070603867 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.082121001 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0690145 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062176226 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094315138 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071270023 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098001237 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066771535 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087168014 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072455805 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070909179 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.094679144 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070428903 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088479516 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069069088 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075109305 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092388093 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077152027 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.082564486 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061943785 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08473604 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079475372 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109588564 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075026532 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068758354 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088893598 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065308602 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090710312 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06973286 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092668045 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07565051 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067406293 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093698406 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074673425 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087650835 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071025439 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095493959 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066923877 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088976901 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066562976 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103391503 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067853355 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065748231 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085090775 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078834052 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090629799 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068189183 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064943504 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094076846 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062397866 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.087539997 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070313184 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068233404 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.099777082 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092186234 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076122063 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.095464843 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.078444393 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068181322 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.091728576 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065133516 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088666311 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068961382 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075261164 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.082079062 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07166903 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088086828 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069448695 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.095321021 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067836673 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068327589 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095571151 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073546626 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.085666925 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066300455 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070382782 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087053595 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07143322 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095628676 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067289339 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.081502688 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065057951 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07140039 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.087264502 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072013382 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092219224 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072026831 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.080244935 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067562137 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072587611 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.097532746 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067819543 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.088489378 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076054339 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.088134657 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068625696 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074581657 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090893382 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067697577 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093539035 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070086902 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063311056 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091497276 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070969287 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086771516 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072682534 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09028621 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071328748 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068340309 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086210786 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07293036 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088901163 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067840877 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067241074 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08686893 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078773391 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089635132 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063488431 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.08352435 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076166941 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06518524 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.087622388 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068117367 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089024274 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069892193 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066233715 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.087460909 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07002635 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098865354 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072972511 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088920576 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074382799 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.099488787 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.069177197 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069865398 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.088249103 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06971446 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.087986792 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077796542 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092353228 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07373208 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089156653 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065569299 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073517013 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095440433 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067382524 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.084922814 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068290958 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072106984 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093719628 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072035123 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.089404478 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067253012 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087663486 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073726298 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071000249 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.087386621 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067025278 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.092717663 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06800116 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093541384 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070049092 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097402929 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072721327 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062885069 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092066011 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066628775 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093234613 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064714758 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065225664 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086911745 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069438483 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085701884 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071805604 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062069819 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095710426 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075359598 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087686625 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068799522 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06776678 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09438102 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06942712 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092050707 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071613338 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093374154 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079298143 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085415897 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072654447 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078234719 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087972874 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061959522 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092392046 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068483197 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067507438 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.086520924 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067498238 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090770251 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07746322 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.095167639 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063150777 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070607657 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.086832395 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066641699 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082769526 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074839639 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070770058 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089270618 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07483303 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089225923 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069785777 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090522445 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06978076 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06838088 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08926652 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070791592 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088605333 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07195635 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06714671 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091061028 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067556626 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085675249 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070527483 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068347459 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088488204 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073932115 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.087350872 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06897061 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089323424 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.07080136 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068834615 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088618396 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06817922 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090894557 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069480107 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068923031 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090725029 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064212836 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094935627 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069280035 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075935098 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089002507 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06503081 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.093593726 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071824724 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.092218562 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070360297 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069306857 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089797889 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068382654 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091039631 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075170411 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084343443 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081122653 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094999996 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070340734 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071018586 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087946268 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070361602 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085992832 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070814463 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06923302 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.088144032 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068726555 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092501731 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072308483 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068039494 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09012457 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069837805 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087043077 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.070243573 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062396868 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087632305 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068686651 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08692072 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080095652 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.087708779 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069760331 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067037819 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089504308 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06837388 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.083449249 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077856489 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096812318 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070793558 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093663913 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069726977 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07033394 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098943208 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066013578 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.085915131 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068200347 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065690609 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096246552 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069357888 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097696204 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069035816 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067023416 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.085948554 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069334991 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.086597343 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063889672 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066396164 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092469043 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067258222 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086194 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068794497 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071106662 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089740174 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077876953 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.088063953 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069166689 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087542972 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067118739 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067067836 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087377393 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072025466 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088494255 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067282065 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065710644 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.088365722 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06968076 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069039433 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.088626048 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069934178 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095206963 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068738029 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089950324 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073103693 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062833078 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091819501 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068121678 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.087735855 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068484075 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07201784 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092865049 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068617526 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.097777609 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068508356 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088818636 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069301787 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065895467 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08822258 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068924312 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.0881559 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067924644 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068860195 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09817474 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066403094 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091639176 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068846344 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087382842 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077130094 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068477454 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092122622 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075936265 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088515 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070571157 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09590799 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073327268 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09037284 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070142894 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069425209 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09438125 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067961742 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094060792 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069283411 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06915617 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.09017337 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065852177 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087475054 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069246576 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067797921 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096124531 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069888136 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087585653 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069237191 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066737593 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089596472 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071262535 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096513503 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071007947 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091424592 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064651744 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065179945 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089948111 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06708705 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089747389 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072774783 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073813875 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091417968 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068699003 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08648271 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07784632 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09323715 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072892701 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066372852 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093164022 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069748046 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089820404 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06949194 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068410962 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090901054 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072880569 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.09012166 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06855603 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094811509 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07336463 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06906186 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090012197 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068915154 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.08765377 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064778256 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069176709 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090419867 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073588279 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.09121577 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069428622 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098858754 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06793028 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068735747 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092852622 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067924187 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.093238867 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064684666 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069340423 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090121121 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069328383 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.084752667 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068883518 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066225329 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.091374942 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067937135 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082876674 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080017852 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097616863 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072637443 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067154199 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087816113 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064072617 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.08270884 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068830943 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06925113 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090788329 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079060394 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088237634 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067537507 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063516613 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089628918 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071694385 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.092038884 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066688161 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062976505 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088217285 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071174482 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.094545566 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068321582 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.087090147 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073178637 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070289021 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.086696808 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0721827 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084321662 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073321629 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101369297 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069913248 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068543777 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095596379 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076706647 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08949123 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064128888 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088481197 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072901921 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068488272 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08984724 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069567286 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105006505 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071798833 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087254577 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068662282 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070178482 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088613697 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077361918 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089624721 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069068766 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092378846 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072029917 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096256064 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072750288 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076339121 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092217927 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07112586 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087754192 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069677324 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066808663 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.088227956 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069694483 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089991102 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0745095 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096175839 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067851863 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099365146 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078031128 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069891935 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.086016594 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067276069 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087633917 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064602841 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068818768 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.087462926 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066446147 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08586899 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068502565 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069586068 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094517258 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069756123 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08945734 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069200607 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062643508 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.091430741 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071647498 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090498368 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06698335 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068468819 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090088867 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073410381 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092248545 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067042741 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070372477 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.090775544 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069986225 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083799275 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076534085 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067511469 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091732885 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067822371 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089149474 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070446646 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071857413 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095256813 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070062203 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091557092 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077788474 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090894131 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.0661343 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065263349 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094773964 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066379013 seconds)
  done (took 47.889993549 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110990759 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086155627 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063493512 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083651274 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077247483 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085270808 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064444655 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064753156 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085723737 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067036049 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084393853 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064755223 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093916496 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088709163 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096973352 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088597012 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064560005 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064123485 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08459472 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064798789 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094459326 seconds)
  done (took 2.59097801 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088861235 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.104595691 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078802847 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103232089 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093867861 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080032276 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098674783 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079459667 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103482996 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094170891 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083355125 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100016742 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075631629 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.095374238 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07588853 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098090083 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102733532 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074672641 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.100449357 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079297124 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097413688 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097824127 seconds)
  done (took 2.91310733 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070902457 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068157559 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089783714 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063708173 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067491286 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.084585901 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072197321 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.085812428 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072733842 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066491153 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.087839962 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067230771 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097537812 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067717264 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068159279 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086627504 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.135701731 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071766372 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088134518 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070074861 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062864742 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091294208 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063688459 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083924091 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06789638 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071818532 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089445552 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066266892 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087366124 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068224892 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066916123 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.086081349 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07013665 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067633036 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.088889896 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067132266 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08746072 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06903838 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063521019 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.087896569 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068790354 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.08373917 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069576562 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068600863 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086953025 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066354777 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068515787 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088633061 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062952538 seconds)
  done (took 4.664063266 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08769159 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.144592382 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092396906 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125607882 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083323507 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.097382682 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07231788 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127016541 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086094338 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067255008 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.105629525 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083931333 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090160325 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072594484 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.095262652 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067762498 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089808238 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067882247 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.09361659 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06767349 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.092820972 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075312988 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10390234 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.100762894 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07352726 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066237754 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089084473 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073088543 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.102460862 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.093368691 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074168644 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093737748 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083801569 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091908695 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06741544 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.09048069 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085446235 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089658862 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071315089 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.086036167 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071222933 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092359327 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075501809 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10504963 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069272792 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.094121532 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068114675 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.084746707 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081854107 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091592573 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075785602 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.104492035 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07166161 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.090170769 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072123721 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.10447866 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087437407 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067780362 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070509735 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.101978728 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.085144515 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073520226 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.102977507 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070966158 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094930554 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082676168 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.094426477 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072125591 seconds)
  done (took 6.923250984 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078127379 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094783534 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083009751 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104361102 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094588967 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075956793 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094725097 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07510801 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095167045 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079414821 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095554675 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117609174 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069785047 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098250411 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074829673 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095793735 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074115613 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096279378 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094182525 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07600292 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094550491 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083670925 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09534546 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101974735 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105910026 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.09009899 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073988854 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095325517 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104076682 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076085694 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108050633 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074889854 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095577012 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103097158 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087042316 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095692199 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06675415 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095137738 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074732205 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095511124 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068977995 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104124554 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094801038 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071087804 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094800249 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074828803 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104295005 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.10650893 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078819341 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100439735 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073722651 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104217291 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09415962 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075944889 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103852872 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.12918501 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083018433 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104032897 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095891383 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08346409 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10403211 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.110161356 seconds)
  done (took 6.56757945 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090636872 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098190627 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099308485 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064881966 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065904148 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093943338 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065946562 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086137502 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077763508 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097470884 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079121405 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092907366 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074914516 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100717549 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092222249 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076171065 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092706337 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072145523 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098661175 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071875792 seconds)
  done (took 2.612253299 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078468983 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106475151 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070258689 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094621183 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073189129 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073653168 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092098828 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070394265 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089961061 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072313306 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099964167 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079515711 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090347139 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075386186 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100357581 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074481236 seconds)
  done (took 2.2670283 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080834088 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.100336661 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083377448 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090402237 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066723401 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085928175 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069616889 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063721348 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086830526 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082879204 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.091092686 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070239834 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.090466899 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06758806 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064888206 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093380169 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065088532 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.088386881 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068691954 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.105295069 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079193607 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088682483 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070107544 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091342406 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069291527 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094517222 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070073832 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065465225 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088932031 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068298142 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089512725 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075525723 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086795584 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06837948 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086517325 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067273939 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067113505 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089920473 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071276339 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088929374 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068015252 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087652372 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069733879 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06871731 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085891124 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068692487 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.085619501 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075415042 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066030508 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090555027 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068474575 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091840671 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069786799 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099162148 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.07150494 seconds)
  done (took 5.288099064 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083684331 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071271183 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085500129 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066129092 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091293919 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071324128 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070979899 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092576569 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069496243 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087285541 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071199015 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091533563 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071042253 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071275896 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092393433 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071621343 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085117481 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070767722 seconds)
  done (took 2.344851098 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075045389 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067414841 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096846532 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068855202 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088925417 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071423693 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063869317 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089252518 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066988081 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088621232 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070063148 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070472267 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087825973 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07113446 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089211277 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069471118 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070118268 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088197374 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068487866 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085426913 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071677282 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066298652 seconds)
  done (took 2.616497122 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075520075 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094674482 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.169013198 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.111840862 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08375722 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.103400301 seconds)
  done (took 1.570081841 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093854508 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103259877 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069250644 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110020695 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077656057 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09050763 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070877999 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090079569 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080003011 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105438716 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069012792 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100679598 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100291214 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081214155 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097963646 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076100023 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091445349 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06972622 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090042022 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10871765 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071547087 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099610667 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070271517 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091544685 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069362573 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100153241 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098981022 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085209818 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091627272 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079888651 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097141253 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069546609 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100313501 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104185408 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072304521 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100680161 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069671778 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109989841 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096476545 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078572065 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092513858 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076989742 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10028684 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074887856 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101817179 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090652614 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07692778 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091204529 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071893716 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116273957 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097854091 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078696501 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097802038 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079594595 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100811349 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117393761 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105783178 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079010707 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097957164 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104973816 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079858799 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098580132 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077561334 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105761257 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098596507 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079288456 seconds)
  done (took 6.85715411 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08603919 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110200729 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071045658 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10610133 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100182727 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071535491 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091121889 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071209006 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091419299 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071597606 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134057691 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070184806 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101004987 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100722643 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070887634 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091944125 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071823354 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100073908 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070393517 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117086429 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091873635 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079106831 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101320976 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100001801 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084341201 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098178281 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07026758 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09328463 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07014462 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092989813 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096569536 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071779598 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100407163 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070766529 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099772313 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07105378 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091900579 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075149215 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09221669 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09633808 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080892473 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110447484 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070437024 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092294929 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105395825 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071567626 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09169896 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070983444 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091894617 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071698461 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106063619 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084583069 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106416838 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100118666 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070865852 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093644958 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07032909 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092565787 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070538315 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098898634 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099743899 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072102402 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116899723 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069826111 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092590416 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099778789 seconds)
  done (took 6.785912775 seconds)
done (took 133.93093111 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205449691 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.189044383 seconds)
  done (took 1.324818305 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071620543 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.119924317 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082507692 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130777217 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.091892872 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102577271 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.122259578 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083200697 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068592252 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091279885 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069621415 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091915284 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13433565 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069428279 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09134492 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070425019 seconds)
  done (took 2.428462826 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105987509 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.203744275 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114941761 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067256797 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104470662 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080663511 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08994105 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080493732 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096498055 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068763192 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101619333 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.079807288 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.087321176 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.079659201 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.095020935 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08228432 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067003877 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103118127 seconds)
  done (took 2.64881337 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109328053 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15090293 seconds)
  done (took 1.203584901 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.210674241 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.127810208 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.213245712 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.441448755 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.219145443 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.301799889 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.18147842 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.182404639 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158609806 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175672433 seconds)
  done (took 3.145764233 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101862053 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176572391 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.324154143 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.14343407 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.090587967 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12056147 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14305436 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.113302224 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084709442 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105386966 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.104563733 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080778836 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.122642209 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077478953 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098568318 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079678952 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12583033 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075459166 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.100898109 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077348683 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.123040066 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067672318 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.099951958 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075538604 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.103474093 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079402702 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.090329327 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06825793 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.09923715 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078061579 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.103200195 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117825197 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081318602 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.135614477 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.107235397 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.137782242 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100091439 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076309285 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07663555 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096805659 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078664598 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101598735 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.107587813 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079895809 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067845595 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.102194214 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067915435 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.089783878 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082488178 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101352256 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081535506 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.103273832 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.134930277 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.100920206 seconds)
  done (took 6.504901655 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.765197611 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.138137309 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074440009 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.831605817 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1188194 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085152613 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.753516384 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096220753 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.237572309 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762230577 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115963385 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079256389 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.208839801 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.219115758 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.908785969 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.289202956 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.648771786 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108982983 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111090863 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.135712321 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165843336 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160114382 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.151920451 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.41222843 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099167898 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073471644 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140021193 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102749839 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143951582 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107518106 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076874001 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.15897037 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251783634 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.163823303 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076803457 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094646922 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072279275 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.17239188 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.225221318 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196839093 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.161321201 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070485562 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071117901 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.166682899 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134529455 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070532942 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.146043294 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.155925148 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.176484603 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075916299 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.101559578 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.146225361 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144269086 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.145921839 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.105436246 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.297828091 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.272679058 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095027082 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124695632 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.086946436 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241843901 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105600452 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.185459278 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142278514 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193705367 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072605244 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.760820354 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.152599066 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072288594 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100545499 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125044372 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076881489 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.164935703 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.128002311 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389849634 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.170324493 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075871574 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07169353 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.209733037 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085706514 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094762641 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145159451 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076998699 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125902108 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.171672194 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.149576355 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.151986198 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.211155516 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.170775547 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.145371277 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076095425 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130238983 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100117927 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.194701001 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.198898282 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.145948594 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.191207968 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.144438917 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.145502656 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.172556715 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080811657 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.154053699 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124377222 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107079769 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14349517 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.197933266 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.126807787 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08497959 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098218888 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.145145744 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.130345709 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086884659 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.167458131 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.153687211 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.435625361 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.150169617 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09211884 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089048459 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165561376 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.144969954 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078189628 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242776987 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127292968 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.153509888 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12655604 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070202022 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124739575 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.146006532 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105100624 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126688435 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144369941 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101736513 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.216428772 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.174868712 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104386417 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198483188 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.16627208 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10158948 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154625251 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12564776 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.150437218 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101965926 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.145538101 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07752234 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752089715 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.148751068 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125912687 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097744281 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.147357192 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096394171 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083839329 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107603035 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068569958 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.76644282 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109405714 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083608532 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.1069183 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078440337 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.1263819 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139864879 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098101189 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144040096 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.212132671 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07929074 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122461459 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.107495908 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.144841911 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.098567522 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086311689 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.108086816 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085484422 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127416278 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097686015 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085737525 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.173272759 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.147765392 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.177356066 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.57732559 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072485315 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10785553 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207609936 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073049051 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.269387254 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141593478 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.206931571 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.147639245 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081475777 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.302931207 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.147420107 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.169466542 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.110633334 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.157792952 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06934784 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.162849477 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.148701684 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072425034 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099785189 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.146328569 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.150697532 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.147618017 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.933412823 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072359639 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230697086 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070551171 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.154170614 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100064334 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080524117 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.269389788 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072931531 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.173851416 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.149983244 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074561688 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.1083073 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.827173149 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108980233 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143536548 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099756852 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.178823908 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.169196227 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.141441753 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14322476 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078174427 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.167699565 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.190437247 seconds)
  done (took 41.698213271 seconds)
done (took 59.884690357 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.288368182 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.197279159 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262165676 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.153109197 seconds)
  done (took 1.944086932 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.151464815 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108862452 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123792734 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089408083 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10727248 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090634647 seconds)
  done (took 1.638095085 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.440181992 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.283125983 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243696749 seconds)
  done (took 1.933614863 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.3075809 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236295676 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.463596017 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.31059569 seconds)
  done (took 2.39479041 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.198407724 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119108926 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.092765653 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087735005 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.16751847 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.270969563 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.13024382 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.194471013 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.08039704 seconds)
  done (took 2.356079608 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.207319651 seconds)
done (took 11.4374526 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.365993607 seconds)
    (2/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.26107733 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.124513162 seconds)
    (4/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.109685742 seconds)
    (5/309) benchmarking ("sort", Float32, false)...
    done (took 0.155487897 seconds)
    (6/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.138482798 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.086184861 seconds)
    (8/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.308042783 seconds)
    (9/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.206753024 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.105985994 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.241034721 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.174274941 seconds)
    (13/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.128120787 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.104424126 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.186036367 seconds)
    (16/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085881073 seconds)
    (17/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.107884244 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067974251 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.136504295 seconds)
    (20/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.289991903 seconds)
    (21/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080686902 seconds)
    (22/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.248407062 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.223920217 seconds)
    (24/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102675151 seconds)
    (25/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.219035627 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078760753 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.117471187 seconds)
    (28/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.114374002 seconds)
    (29/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.136425691 seconds)
    (30/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.081698666 seconds)
    (31/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.075521617 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.100264799 seconds)
    (33/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.096379728 seconds)
    (34/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.11120245 seconds)
    (35/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.248628127 seconds)
    (36/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078587914 seconds)
    (37/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.229478568 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.10073414 seconds)
    (39/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.074722156 seconds)
    (40/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.098325718 seconds)
    (41/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080233806 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.112633215 seconds)
    (43/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.252665024 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.100115132 seconds)
    (45/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.187189751 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.285443497 seconds)
    (47/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.149674795 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.098425424 seconds)
    (49/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092267953 seconds)
    (50/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.082387146 seconds)
    (51/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.102278826 seconds)
    (52/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079670167 seconds)
    (53/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.26130909 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092461886 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.100330055 seconds)
    (56/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.266029672 seconds)
    (57/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.222710479 seconds)
    (58/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.101471886 seconds)
    (59/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.114208119 seconds)
    (60/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.108996011 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.096294219 seconds)
    (62/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.100888012 seconds)
    (63/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.098327827 seconds)
    (64/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139090264 seconds)
    (65/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.225122557 seconds)
    (66/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074807518 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.128108467 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069863486 seconds)
    (69/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.078261343 seconds)
    (70/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.113128738 seconds)
    (71/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069265236 seconds)
    (72/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.099324866 seconds)
    (73/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069565914 seconds)
    (74/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.243729744 seconds)
    (75/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.11859285 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.127795973 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098737106 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.120901661 seconds)
    (79/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.07502327 seconds)
    (80/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099212184 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075202375 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.065288664 seconds)
    (83/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.092531589 seconds)
    (84/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074131027 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166343607 seconds)
    (86/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083823607 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.294348085 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.092830524 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06826617 seconds)
    (90/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.054816477 seconds)
    (91/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.092762659 seconds)
    (92/309) benchmarking ("sort", Int8, false)...
    done (took 0.171085968 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097876582 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.099111017 seconds)
    (95/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.262534228 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.164066936 seconds)
    (97/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.119321066 seconds)
    (98/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076476257 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.168807042 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.076865102 seconds)
    (101/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096911002 seconds)
    (102/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076616364 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.147395897 seconds)
    (104/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074058277 seconds)
    (105/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.253195772 seconds)
    (106/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.261584709 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054604096 seconds)
    (108/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.264937174 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.123476935 seconds)
    (110/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.267386924 seconds)
    (111/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.112129164 seconds)
    (112/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055035893 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.092629126 seconds)
    (114/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.084727171 seconds)
    (115/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.071334789 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093428644 seconds)
    (117/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05472118 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090723341 seconds)
    (119/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.058152191 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.172407004 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.097127346 seconds)
    (122/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053462144 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.1170967 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.162685668 seconds)
    (125/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.079263841 seconds)
    (126/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.12111663 seconds)
    (127/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054607141 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06776526 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.174576366 seconds)
    (130/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053709507 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079878497 seconds)
    (132/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.083588166 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.101216428 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076741605 seconds)
    (135/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053806495 seconds)
    (136/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.091332717 seconds)
    (137/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.056156633 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.196655824 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.10741032 seconds)
    (140/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.248188552 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 0.164902053 seconds)
    (142/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076583819 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.206599373 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.19741176 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075257949 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.078398138 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120617397 seconds)
    (148/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.295536589 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.056710502 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093976078 seconds)
    (151/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.097082679 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074646161 seconds)
    (153/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.257539334 seconds)
    (154/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07545387 seconds)
    (155/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.248940587 seconds)
    (156/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.24649188 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069878644 seconds)
    (158/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.146612998 seconds)
    (159/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079619818 seconds)
    (160/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.100124857 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091027701 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.091382547 seconds)
    (163/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.080322574 seconds)
    (164/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.246697436 seconds)
    (165/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.119245082 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.092416949 seconds)
    (167/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077112098 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.117654009 seconds)
    (169/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07532303 seconds)
    (170/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.052990758 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.076502004 seconds)
    (172/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.055034239 seconds)
    (173/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067449902 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.100318637 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069416056 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.160871611 seconds)
    (177/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.100674774 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.052764964 seconds)
    (179/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.088311669 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.125388612 seconds)
    (181/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080152115 seconds)
    (182/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053884698 seconds)
    (183/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072088679 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.094387022 seconds)
    (185/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067947772 seconds)
    (186/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.07016223 seconds)
    (187/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.088476905 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067714284 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067124642 seconds)
    (190/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.078718558 seconds)
    (191/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.269968859 seconds)
    (192/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07986114 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.053409365 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09228844 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053780934 seconds)
    (196/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072997384 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.13627232 seconds)
    (198/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05331102 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.092272611 seconds)
    (200/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.142609653 seconds)
    (201/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.10184713 seconds)
    (202/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.101139158 seconds)
    (203/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.087572181 seconds)
    (204/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074856264 seconds)
    (205/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054424889 seconds)
    (206/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.097813374 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.142701439 seconds)
    (208/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07907264 seconds)
    (209/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091022662 seconds)
    (210/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.133956823 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.173496141 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.076058633 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.117354119 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095756827 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06871053 seconds)
    (216/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.09443304 seconds)
    (217/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.102861655 seconds)
    (218/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.25523084 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.090409985 seconds)
    (220/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054566351 seconds)
    (221/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074608637 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.112445788 seconds)
    (223/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055416911 seconds)
    (224/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083413459 seconds)
    (225/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.1039439 seconds)
    (226/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067160839 seconds)
    (227/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.098253334 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09232739 seconds)
    (229/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.0998243 seconds)
    (230/309) benchmarking ("sort", BigInt, false)...
    done (took 0.215948859 seconds)
    (231/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.175843109 seconds)
    (232/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.095907961 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053886091 seconds)
    (234/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.100117049 seconds)
    (235/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077416074 seconds)
    (236/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075391347 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.12158997 seconds)
    (238/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055765455 seconds)
    (239/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.140851575 seconds)
    (240/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069976866 seconds)
    (241/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055529745 seconds)
    (242/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.078799198 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091837022 seconds)
    (244/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073061041 seconds)
    (245/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.078873449 seconds)
    (246/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09248923 seconds)
    (247/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.077783567 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068943477 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074030412 seconds)
    (250/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.090560365 seconds)
    (251/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054668125 seconds)
    (252/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056111759 seconds)
    (253/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.093324647 seconds)
    (254/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055003231 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.197943096 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.14213646 seconds)
    (257/309) benchmarking ("sort", Float64, false)...
    done (took 0.154128874 seconds)
    (258/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.054613728 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.080242802 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.055246906 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.142883141 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136984533 seconds)
    (263/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.09504145 seconds)
    (264/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.065912066 seconds)
    (265/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053830787 seconds)
    (266/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.077291678 seconds)
    (267/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069770243 seconds)
    (268/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067539375 seconds)
    (269/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.199390854 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067531122 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.100135309 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076723832 seconds)
    (273/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054266152 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.093549378 seconds)
    (275/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081271319 seconds)
    (276/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.077034448 seconds)
    (277/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087526757 seconds)
    (278/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.245105447 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092000688 seconds)
    (280/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.092561468 seconds)
    (281/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070340958 seconds)
    (282/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054493005 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.078510352 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093790604 seconds)
    (285/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.053107036 seconds)
    (286/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.093932305 seconds)
    (287/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054199167 seconds)
    (288/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116758252 seconds)
    (289/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054055847 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075671767 seconds)
    (291/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.092276668 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067343513 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071187868 seconds)
    (294/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081229154 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066995798 seconds)
    (296/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093708435 seconds)
    (297/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077944289 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075154801 seconds)
    (299/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.099378225 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07503322 seconds)
    (301/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053520009 seconds)
    (302/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.094084318 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068696202 seconds)
    (304/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054020511 seconds)
    (305/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.080862093 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069015066 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.175948967 seconds)
    (308/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063708381 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073276215 seconds)
  done (took 36.233993766 seconds)
done (took 37.20166539 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085492289 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119456215 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078658209 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.120426647 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084465679 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.105270851 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076816322 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104719853 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085339809 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.109341742 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082701064 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056062113 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102910841 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077320019 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.101948439 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095887337 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106428728 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075419526 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.100325962 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06845611 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076445395 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.09309388 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070199726 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056478942 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105470731 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075435134 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.100194361 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079121849 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06761237 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.092809793 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071806463 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.099314354 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068757144 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080735152 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.100014894 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076132207 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10284685 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080225476 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069424761 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.093038405 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076718151 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.092065459 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.0772648 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075233623 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.098508655 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074584732 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.09953538 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.084511349 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119405746 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071744302 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076163489 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.104750206 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079532003 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.100641829 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072976336 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.099885236 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074768237 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096061272 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.102355936 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070519797 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.100487935 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078369688 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073482608 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.102018162 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076420277 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103092145 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079182737 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.097753791 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079146989 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073599752 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.092966559 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077066603 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.095036885 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069706375 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078466788 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.104370757 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067624292 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073398526 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.099684257 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074517954 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.09231581 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071098888 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069716882 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.099191662 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070610011 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056858779 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.096688837 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07522343 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066706404 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.101665264 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074099863 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.099274435 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071085455 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102023004 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.07010406 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073723345 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.092202704 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070035897 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070445705 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.097058115 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068483494 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06963357 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.102655924 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069543722 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.097500381 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084272815 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067991774 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.099641249 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067555744 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090710894 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086810866 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077425126 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.093530429 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070204773 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091303201 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077483221 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067375733 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.092288914 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068380326 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067569291 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.098615822 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068603788 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093846385 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077393061 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081510776 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.094922979 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071878017 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069001993 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.093142679 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074221197 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091781037 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069510095 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069581212 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.090239581 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070858812 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067688832 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.101415063 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070268119 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.100344759 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070942539 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07683087 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097429014 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075278741 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073008703 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092479253 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061241936 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069715182 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095724127 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070362843 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091526621 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071344604 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067948118 seconds)
done (took 13.764365465 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069941312 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.178322288 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.132230276 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100509587 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.117074471 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068630929 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.105189109 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.134021463 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071752215 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.133835306 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091705274 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.114130946 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.144188751 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069558389 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068951603 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097841269 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07108919 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.118547797 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.106490343 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.114681316 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.147319337 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06849228 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12602498 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092953914 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.117345079 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.123247654 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069333669 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.095881011 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07401293 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.130315248 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090290031 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071321042 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.094539952 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128540042 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099426549 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11380731 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068613139 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112548295 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069551448 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067597979 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.121242965 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.128986097 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084440917 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.110416262 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072076045 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.096798859 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069945296 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.114142511 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093611428 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.109453718 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.116454918 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140388393 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072825284 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.11061191 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068408402 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115053537 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086634001 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.095438987 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069783127 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070687979 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.09333019 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072302984 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.117126578 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.096652171 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.098223257 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085321679 seconds)
  done (took 7.599337468 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088772611 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.120336774 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088349976 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111674568 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069133403 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069679701 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.095081419 seconds)
  done (took 1.677127868 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070917398 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09123174 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119051004 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092100764 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.115088621 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090349637 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105004794 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069678327 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.112528547 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071311124 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115450354 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110140211 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095792717 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077377675 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119347976 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070632942 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093794166 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.095229655 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072319258 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.118667067 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072660396 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.114943743 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072192919 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068982289 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110678076 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069677343 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144758289 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073685525 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096329653 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073399673 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066858902 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.1456659 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110126041 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08081565 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093807274 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086319811 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.108950665 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068789813 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086225079 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100474992 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084949824 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.095166663 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072261139 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067629 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099691472 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081106121 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.095091865 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071742369 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072023464 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.115667641 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070925253 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109144334 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070914149 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07290108 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.096422588 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076219518 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.103630389 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072255503 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090173773 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096990895 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088764819 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112572708 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084932205 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11248994 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072731382 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109188873 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085542827 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072282346 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097114269 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073092647 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112191631 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068339132 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071323729 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.107472451 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071285522 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119759754 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093565936 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095817786 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081167746 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068815984 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.096226475 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070145739 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.118836901 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073801146 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069076064 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100339804 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072399437 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.092776813 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069909047 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07288543 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.093827902 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072018744 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072983553 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.096333386 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072563463 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.11228002 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070894755 seconds)
  done (took 9.725846915 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072328502 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070946651 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09687831 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071438145 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070047281 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096224314 seconds)
  done (took 1.524176614 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.10339011 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.097916042 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085827691 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.10063979 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111475353 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.109702018 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086004918 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112723386 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088314532 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.109291131 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085825694 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.112672627 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091725575 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101796696 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085010289 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.101460137 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086209288 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105949139 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081867199 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10165253 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091565172 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.102219406 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077322723 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111147614 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074214597 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100218106 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.0821463 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.107148568 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.084572369 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110549186 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077957335 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072797993 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.100854587 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110208747 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087200321 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.0994068 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076870126 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073683847 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.106246053 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073549583 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.111820149 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076046291 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.107790889 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074661812 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.111857312 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075111334 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.099773011 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080864242 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.110814138 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074729463 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.099575536 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075986088 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.097215345 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076055577 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074423458 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112149707 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097602297 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08828941 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076100548 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.100410009 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072402019 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.099019839 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08482893 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.099048788 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08350894 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.099784241 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075208592 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101452836 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077019926 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.100633728 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.0749541 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072691751 seconds)
  done (took 7.687644552 seconds)
done (took 29.236634025 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.671439418 seconds)
  done (took 1.710107748 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.81121891 seconds)
  done (took 1.851088568 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.779188866 seconds)
  done (took 17.82230138 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.663859656 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.847569455 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.831804677 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.163879281 seconds)
  done (took 3.547964644 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.913206681 seconds)
  done (took 1.973306212 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24852726 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258411584 seconds)
  done (took 1.551860375 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.76390772 seconds)
  done (took 1.814558899 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.330777155 seconds)
  done (took 2.377634549 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.346659173 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18896993 seconds)
  done (took 1.589623402 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.536383896 seconds)
  done (took 1.588415775 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.835256688 seconds)
  done (took 7.892683454 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23698375 seconds)
  done (took 1.303806838 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.276489342 seconds)
  done (took 1.33326172 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.460722287 seconds)
  done (took 4.516939516 seconds)
done (took 51.918647247 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082590094 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.0837438 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110270828 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081601456 seconds)
  done (took 1.408063082 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083059858 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076250363 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106139626 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.0756644 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107714733 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076364397 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103011363 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081515569 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098963126 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078354702 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075986541 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.101512368 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078574454 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.10265976 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074824023 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078719144 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.106042609 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075705068 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.1051132 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07648671 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.098918216 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079568393 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078261448 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.101022805 seconds)
  done (took 3.1832678 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082030535 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075398783 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.103355621 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075813028 seconds)
  done (took 1.399285402 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082354308 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.119928734 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094130126 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.105151576 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.098113004 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116125155 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073006823 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072218491 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.101345949 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079760791 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095782206 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.104008108 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.117753039 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078954732 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.107610952 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069798559 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.095574959 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092852656 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079363683 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.107248466 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072965215 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.105402753 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070972618 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.119952388 seconds)
  done (took 3.324969303 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080958496 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129811895 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084155561 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.116842692 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097241319 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067186486 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.105673586 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093610073 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.157576659 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067424036 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.09964848 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068405048 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.101519681 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069456735 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079027824 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.139654733 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.140495509 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073206023 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125778286 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069690652 seconds)
  done (took 3.028447113 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079477464 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072882464 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094159763 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071945305 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07872157 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101521053 seconds)
  done (took 1.569385362 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07230474 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069973239 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094678067 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069895643 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07445493 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096237069 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069295286 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068642238 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.096098273 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069929216 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093878751 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069966051 seconds)
  done (took 2.01388881 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.472681396 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072002363 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095695633 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070258191 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074391819 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094755767 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084391705 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070897733 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.121558387 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069203647 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096283988 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072607657 seconds)
  done (took 2.467504155 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272760683 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080889438 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.340941875 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173750139 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144521717 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162763816 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107513127 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146327399 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206492549 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144218028 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236978482 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205666294 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13947225 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173074989 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11954876 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.137821921 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191204264 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230109161 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135160434 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233847616 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189998229 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161695388 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214740348 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131988635 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113735949 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176731353 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076344309 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082669969 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267120864 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17029554 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183349552 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143266115 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125297806 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241751954 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229690289 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17608675 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168085058 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115644331 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.161399448 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.174061102 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271473522 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117879495 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202381295 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139401603 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110518361 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180321918 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151531333 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.152102309 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141431086 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118485078 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181662996 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247262195 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172427707 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118211448 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142774597 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144706414 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148278757 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132101676 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258816022 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202033772 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191433735 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07506498 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126313852 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194881177 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165226307 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.147234089 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.185646559 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097251936 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203820651 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195277493 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148773605 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208497825 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.166614095 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120030427 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152787746 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17704924 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186740361 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214366586 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16030149 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.102495136 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15737519 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131862745 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084099733 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.174201818 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079094598 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244991193 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129901604 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.145910346 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142680813 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140776653 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116020461 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227914558 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212540102 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133700988 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070323349 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134585992 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156023794 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182483975 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118334697 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140206344 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153281937 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081501484 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200749159 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078412856 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157360026 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.108148492 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158341029 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168146263 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.105284474 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158758089 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106900107 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.133191989 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195855025 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203944097 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120474943 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085709558 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236003347 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160473692 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136856563 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208613585 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200402011 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.13210795 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131773936 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185213391 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252573067 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120531504 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232240663 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10976128 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114033063 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.118527759 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161569975 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146813321 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155119123 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08675081 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159049915 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236573632 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.104661092 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099501499 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197878299 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085269164 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112119962 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146144609 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130716691 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100125567 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.1326786 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138833379 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174998716 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184176307 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114677619 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185293976 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104933411 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230905478 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120265044 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.135589441 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109637807 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.10135854 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171678617 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22865674 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082686114 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235882605 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160931308 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136568698 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153701168 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112505952 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179636773 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082547789 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.101333984 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179131247 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144769479 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143850253 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.191425792 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135819723 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161496313 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182635675 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169912088 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168011262 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.169610792 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138309126 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.118506787 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146201177 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163194284 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076393582 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12518408 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.112751233 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134630032 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100606591 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113839761 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178719412 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160350562 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129367688 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145645032 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128624258 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18831843 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106670053 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167571042 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153602023 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125851194 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.194832611 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226053489 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171504385 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132848525 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208114394 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075924643 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076814411 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.121130866 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161853113 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114399993 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087352435 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149764341 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216773437 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164267449 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170782073 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144288429 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155815674 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22608067 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074065945 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.149400857 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187694846 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185698488 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.13949967 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122256759 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103512103 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211217322 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136771133 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259747695 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150050879 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159190439 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219429399 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.113449697 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112273133 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135870519 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17642083 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137054858 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217590323 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104842517 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120313965 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143821696 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110615115 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137560423 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164098367 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152547157 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172599826 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150259787 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196972576 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081863505 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150387499 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158095264 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154988218 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.094593953 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155182891 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232539939 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100116291 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152178761 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222494883 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109046685 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.130093363 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249102438 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211063671 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115313039 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115367086 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181779518 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168249814 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154292747 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177952595 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142527082 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171253702 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144400718 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.114448161 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0931253 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131435013 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140699386 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099926624 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.173626845 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.152104611 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.098446967 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195020034 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145995287 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142506062 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154359445 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.104186163 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.122554205 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101448274 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246673774 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156386925 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244203383 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.133350832 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.217081947 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209481874 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106370138 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082522642 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.111420846 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177673606 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116100609 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168982785 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.127046628 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110424625 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1886878 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183285209 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127993056 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072836367 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143917583 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169706193 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144811309 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131493187 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13909947 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205214076 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.136482685 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110971051 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16166472 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109443889 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13657376 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245213959 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.092206452 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102311899 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105519534 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085444622 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165925528 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225732822 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.114333612 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.136004554 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154639961 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182048043 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168247777 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130712013 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103937849 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146082099 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212107883 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166504027 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094175011 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147952576 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193624784 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19895311 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139220304 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.127592016 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238724334 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195513208 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.235306423 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.120847331 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150332652 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150467153 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145545828 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181865823 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11492563 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238267201 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087760682 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200342544 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136411346 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098658334 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190594793 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.102123262 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122429436 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189062225 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154349868 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114405774 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12562736 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147943215 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15733529 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135480939 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079968436 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175465552 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.104641325 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173518894 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237840841 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084558664 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139750912 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129514977 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112513125 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139673157 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109897817 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119138233 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.149910204 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244413991 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.096191206 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218705505 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17782985 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148592774 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203011782 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133730516 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670865127 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082095365 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223673894 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153188593 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250817117 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131557525 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153889724 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14463813 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157438192 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180100674 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138964735 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.209559904 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167774062 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156794414 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111629638 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136507558 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145294858 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.093869036 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140645358 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149529682 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149676305 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133213604 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156503841 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190770103 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087272372 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128028013 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201031867 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152357699 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21107951 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17874223 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116971536 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154726976 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179724099 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112334112 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.15764415 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225882579 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143480676 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13171104 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086443737 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13950856 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242262814 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076284549 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231415606 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158835944 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145715927 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150531788 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.155328467 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197269014 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140429661 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16278876 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127438574 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.148047975 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150675846 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090114665 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.109731713 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139274426 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147682657 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.104487566 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13603494 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.153061147 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196932192 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.102890646 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099741805 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13586939 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210463958 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252498824 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.094873765 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115506878 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152951561 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148657981 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.15132137 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161133514 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.112684383 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088145955 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.114044398 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.117407985 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.146235497 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150858672 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136395768 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145577567 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239177489 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089871666 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.258237538 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126700962 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116179133 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.101229694 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083486094 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128986868 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128961696 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137254267 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102281826 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24260991 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.129489193 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.095072745 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125538801 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.104146574 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089078947 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167255677 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145359966 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156516337 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13069993 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.092818865 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11430987 seconds)
  done (took 74.526101183 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.140374033 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.110960213 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.126074886 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.181000738 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.15565697 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.2467043 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.189401333 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231852772 seconds)
  done (took 2.527460625 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073406565 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.125234611 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106172031 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.121024711 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.096071011 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072020414 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.313541117 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.115070816 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068885773 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121835559 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.123965517 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.098994673 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.493264339 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068505811 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.099344835 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.09122808 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071054573 seconds)
  done (took 3.392044612 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.454037555 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.66960595 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.458347577 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.102771593 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.999207829 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.114834451 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.53438904 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.17144299 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097659776 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.441821039 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.732852049 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.162410765 seconds)
  done (took 18.080208582 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078288931 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072113659 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.114964772 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086944301 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.102195961 seconds)
  done (took 1.592803045 seconds)
done (took 119.558599906 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08425849 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.384947868 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055771403 seconds)
  done (took 1.615203846 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088467792 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08850935 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.118073449 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086595371 seconds)
  done (took 1.533768828 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078521517 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07918544 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116846969 seconds)
  done (took 1.424457792 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.302852218 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172686419 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093996448 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087800349 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079978566 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.109137988 seconds)
  done (took 1.429882202 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076824123 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077688247 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104029236 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079115906 seconds)
  done (took 1.483317054 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081067246 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055025805 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056923032 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08670249 seconds)
  done (took 1.431384964 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095978534 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.110455822 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08501815 seconds)
  done (took 1.441058711 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.115318706 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.117708123 seconds)
  done (took 1.385286113 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085897077 seconds)
  done (took 1.229227827 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097739814 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.147857132 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.165711329 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.142758511 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.174848212 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.143127667 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.118325754 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092364676 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.109497533 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.120957196 seconds)
  done (took 2.462057391 seconds)
done (took 17.22211326 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082915503 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.395181337 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364714053 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122746203 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67204958 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385852736 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.023137462 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123876468 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11248657 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099058498 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087325856 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677696026 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975207327 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.349910645 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.962121782 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320937997 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680320911 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071376335 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097210352 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07215982 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.006773872 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098654676 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071344195 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098288545 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652242718 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373808682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100035237 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321278432 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097475104 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073971164 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356958764 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099026573 seconds)
  done (took 16.166466487 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074316918 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.147982649 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078573662 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086757108 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103349545 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072490512 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.103108012 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072720051 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154043096 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070541499 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116411901 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07085223 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101776751 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072549325 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089992331 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100594608 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071595611 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098300166 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072480949 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071420484 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117867557 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070602381 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098509216 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072874206 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070123879 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111676964 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071770148 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.098376664 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072533977 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073253394 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102315011 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071205769 seconds)
  done (took 4.011656565 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119929585 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.158742597 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077729549 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134595 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.144170293 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075120349 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.176977882 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096496708 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157162808 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070624691 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117476208 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071449712 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.133522879 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071301795 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11984966 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071466986 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099178616 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073835034 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071199311 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099225214 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090636906 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098436749 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072125326 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071326746 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099900057 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084008942 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099633054 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074240877 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096641726 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074454114 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074376818 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099629076 seconds)
  done (took 4.334737152 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077070914 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07705689 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114254801 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087246382 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099326375 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07565295 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075525619 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100823228 seconds)
  done (took 1.863186669 seconds)
done (took 27.51585263 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083426398 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072312846 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105000713 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084106691 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102809059 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083688474 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069451596 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.106320178 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078072703 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101676728 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.08040102 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070431423 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.102218685 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070165339 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076716043 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.100406453 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082863234 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102536057 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082920742 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110855695 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073955011 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078254366 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105363327 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082552116 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.111253587 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083432574 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.110003777 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077712901 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071087473 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102085688 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079634679 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116686384 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07146794 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.109274253 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072856706 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069914907 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.098755901 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071691793 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081818212 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.106305761 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073355997 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.106418564 seconds)
  done (took 4.869996225 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09359357 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095661246 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.118797124 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064725539 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100282806 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065519546 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120724623 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064234493 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064761657 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.121415575 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058551499 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060564335 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090040235 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05791699 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060515493 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058796307 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.092122539 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059616103 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059817876 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.088934708 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.064294542 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056596075 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090548667 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063445813 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058299553 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063848798 seconds)
  done (took 3.150403933 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079036715 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084818779 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119044638 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132046735 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.138697733 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078264328 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.110180458 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.0881133 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115973242 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070363347 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.100949379 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.101252991 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089090104 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.106528174 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07090764 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114020386 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08569553 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070713457 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.107087424 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091157089 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115937044 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080968373 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119869566 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084178272 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069007387 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101452168 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074714445 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.122308468 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076349962 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.107018577 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.076113279 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073663214 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.101933592 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082755185 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.10366468 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072767036 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089131208 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109811774 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079451567 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.099635738 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073970779 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071011423 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.120890909 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.114692623 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.099503559 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076946889 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.106697623 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081002532 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070058346 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.118034741 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080329278 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.099123258 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074046821 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069543129 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.099955555 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084580587 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.100786225 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073791022 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078923618 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.102649809 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082457808 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.101744746 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087207681 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070154009 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.107398353 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06913244 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.099730459 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.07025283 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092183053 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.1009361 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109998403 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101972368 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071418978 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107635142 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079438927 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075786383 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.100035446 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086004456 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.109107843 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075057497 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078675851 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.104164246 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073337662 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117378087 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073060444 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071767498 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.100623466 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076755105 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101059577 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073483369 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084097745 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.100320994 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073739397 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.116572163 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071054685 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071009604 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.106079861 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075404264 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098403006 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08468006 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.103575789 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072482465 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079299018 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.100030529 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073437466 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.107982697 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07707694 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069367067 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.104560979 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076536966 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099279624 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073711446 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074399055 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100787857 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080100461 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076270642 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.103909279 seconds)
  done (took 11.78291016 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.203081411 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.192757161 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073137304 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.185476104 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080575263 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.112728164 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.187302942 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.101636837 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.100836811 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.0711642 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.100674028 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110740313 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.134205808 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.146500493 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084305475 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070069632 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.119391642 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140550326 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.188648018 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154405484 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.120455873 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078127794 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.102461618 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071995163 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071927431 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.111741087 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086860378 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.110596135 seconds)
  done (took 4.488687775 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085515024 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130504425 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07704242 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.118403862 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096215054 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.097968688 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076519938 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072176422 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.112475085 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.084096608 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.099736665 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077426863 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.105241779 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.081587817 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071472777 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.110319769 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080545468 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.100182909 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075417887 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074514821 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106191256 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084066553 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103858118 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071041191 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076685787 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.099934608 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066932674 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.118045794 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070008882 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.121277195 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06847185 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105534434 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081337399 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071163044 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.10008655 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073106052 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.100248556 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.074605814 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072522587 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09724678 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070013525 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060158617 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.098378334 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083571592 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104577138 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063889633 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076522332 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.105625458 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076030043 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.09506359 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07510221 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07299393 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102887474 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078920556 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075705781 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.105497421 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073610816 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097749997 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07854826 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072340476 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.095371642 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070339209 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075150515 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.099065381 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078183123 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103834437 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071056526 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072451392 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.104711207 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077415606 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071471691 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.102994916 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067904209 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.101250131 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076706456 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074845128 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.104422969 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06946189 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.07038841 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.100689936 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058336223 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.099019672 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05814368 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074291252 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.097579092 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070934155 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073131462 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.109155707 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084449401 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.101703246 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07707208 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.098979131 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071714456 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073830783 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.093633626 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075385811 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084487001 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.116989837 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070447897 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.098552793 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084161809 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.104415049 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070900996 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058653836 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106876484 seconds)
  done (took 10.240047044 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096877541 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.122387374 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074809611 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084620332 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126536386 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095863663 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107584301 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078071148 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072425539 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.118115116 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070513748 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107743351 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075352289 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078390541 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125687792 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078539449 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.102267792 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080620323 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.106926625 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.109734236 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083678856 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.115370422 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081303491 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.100154957 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075800964 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081795352 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.128384771 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080721825 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109695857 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085265462 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109284823 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09933841 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.084814545 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.105344497 seconds)
  done (took 4.432560792 seconds)
done (took 40.11339813 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.253571279 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.460995372 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.228278932 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.189585796 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.228773729 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.264307335 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.239846432 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.230419563 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.277133401 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.231033907 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.465766091 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.967288033 seconds)
done (took 59.209801507 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.323205247 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.378736821 seconds)
    (2/2) benchmarking "String"...
    done (took 1.511818916 seconds)
  done (took 4.063298547 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.594534133 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.22928851 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.521088612 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.230828929 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.232538515 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.679504538 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.952700839 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.115161892 seconds)
  done (took 28.131763079 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.230684184 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.628587698 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.738761482 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.729191633 seconds)
  done (took 18.499687156 seconds)
done (took 60.783769535 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.233509746 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.304055082 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.246364408 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.2161871 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.342253321 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.258133038 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.556968292 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.46064114 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.238529068 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.218747403 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.25068203 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.234018662 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.248147988 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.563808512 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.239759609 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.233048208 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.255263607 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.688452707 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.639932233 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.23750536 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.26613896 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.279285423 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.241359643 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.233317232 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.264469319 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.232960075 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.241271856 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.233673469 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.604604506 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.233871678 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.332391135 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.746580662 seconds)
  done (took 192.748409252 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.232169362 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.258211925 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.393974267 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.27958002 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.704638006 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.440858221 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.390712868 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.785462198 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.251459766 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.264730849 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.504674895 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.233608014 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.570025545 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.263808516 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.2412244 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.342177834 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.54574821 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.594571493 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.253259495 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.505403584 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.24626379 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.41044717 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.315438795 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.482802499 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.257980074 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.280557425 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.25761834 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.238159757 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.426889749 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.466771251 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.276998566 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.27545909 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.833578817 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.093551771 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.254014359 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.262479612 seconds)
  done (took 151.607933747 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.516770407 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.233147798 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.233240461 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.232899036 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.233386393 seconds)
    (5/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.233482391 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.264196588 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.233274075 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.790286084 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.792434271 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.740338177 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.488623523 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.295997067 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.46140996 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.235299536 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.326486278 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.24524997 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.234548287 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.248586843 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.25951846 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.236834459 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.234080181 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.790536374 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.249140782 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.355786767 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.242429327 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.234777144 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.266292455 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.627965683 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.235477204 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.26543008 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.553410961 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.282980686 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.234912353 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.558909701 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.044430019 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.343347755 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.236490274 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.265668319 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.234026678 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.503431538 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.235015454 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.235480652 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.235444959 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.23786541 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.835777712 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.236551882 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.791703469 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.237202184 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.129564558 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.235638648 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.235543861 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.820934628 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.676059231 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.235667792 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.234431443 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.238642024 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.235796249 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.235987441 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.266044968 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.817586115 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.237910465 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.332656738 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.238030221 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.239123087 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.267627945 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.23647454 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.323714216 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.236657625 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.610048562 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.295222842 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.353671329 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.792280748 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.239059797 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328776922 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.354666477 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.23781682 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.237233849 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.236144766 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.236987584 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.343290068 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.2370614 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.639799969 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.243134885 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.23758616 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.296385606 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.329343314 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.235473709 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.569452294 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.239777003 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.237285282 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.940016688 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330355218 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.237201598 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.236876617 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.236803739 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.641950285 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.796614589 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.439084457 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.239668467 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.687113874 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.239762563 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.653444853 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.772404828 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.828479265 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.23755545 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.344081369 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.242351707 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.239255024 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.238263313 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.266609447 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.237481166 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.298009353 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.238337619 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.634709383 seconds)
  done (took 349.264642441 seconds)
done (took 696.311202354 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.942846271 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.890218266 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.036440541 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.908235965 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.891340035 seconds)
  done (took 10.846344615 seconds)
done (took 12.025116347 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.430302839 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.43074689 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.298996135 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.431833699 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.268624329 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.449210736 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.411152375 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.258498453 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.344423972 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.317668664 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.343389406 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.289461587 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.266764159 seconds)
  done (took 18.71940443 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.575831556 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.551900841 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.302643709 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.61186316 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.27967754 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.575401376 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.442694107 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.469328526 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.441496117 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254813207 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.253625319 seconds)
  done (took 16.939098335 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.569457822 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.573833815 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.306895013 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.569047033 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.280413176 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.573079677 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.447755349 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.460719543 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.438696056 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255776501 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.252964864 seconds)
  done (took 16.908871147 seconds)
done (took 53.747097192 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.247774064 seconds)
  done (took 2.426684413 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.281640339 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.447029557 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.266469721 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.252581311 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.248670039 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.24920287 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.252834141 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.250048804 seconds)
  done (took 11.430133714 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.245413267 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.246552333 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.245104893 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.247220768 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.245099347 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.24353702 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.245941364 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.244593812 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.247844332 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.247315286 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.245133015 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.24761396 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.245464853 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.247849395 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.248186052 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.245669805 seconds)
  done (took 21.119550537 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.24734371 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.243993425 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.245107683 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.245772357 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.245388435 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.245446352 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.247994835 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.244709377 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.245040329 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.244629109 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.246381904 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.244366545 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.245866007 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.245504975 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.245545441 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.246574776 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.245399857 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.244822347 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.250244242 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.245712269 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.246701766 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.245857198 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.244992319 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.246298856 seconds)
  done (took 31.082824562 seconds)
done (took 67.240148771 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.351024674 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.935939944 seconds)
  done (took 9.468543765 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.248655566 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.248939488 seconds)
  done (took 3.68043197 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.248872145 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.248480278 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.248826324 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.249164588 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.248591599 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.249941057 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.248646234 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.249154713 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.249114895 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.249315993 seconds)
  done (took 13.672084084 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.248595773 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.248927383 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.246249997 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.250186246 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.249725373 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.247042504 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.2504459 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.249021643 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.248891241 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.247375895 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.250145894 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.246876436 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.249149304 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.247188144 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.250109001 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.247015037 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.247448943 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.247416057 seconds)
  done (took 23.654897145 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.250512859 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.250103407 seconds)
  done (took 3.683548027 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.247914453 seconds)
    (2/7) benchmarking "second"...
    done (took 1.246564019 seconds)
    (3/7) benchmarking "month"...
    done (took 1.24757648 seconds)
    (4/7) benchmarking "year"...
    done (took 1.246976878 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.247369026 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.247989876 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.247915262 seconds)
  done (took 9.915056093 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.250203309 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.424361441 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.50285413 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.832471308 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.250889932 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.253553047 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.103221625 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.254096568 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.256773553 seconds)
  done (took 14.312345605 seconds)
done (took 79.5700378 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.261578274 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.242483079 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.15580749 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.265493683 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.259932933 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.58527706 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.265087867 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.365884394 seconds)
done (took 37.587489985 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.262626959 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.958767348 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.959467689 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.244207913 seconds)
  done (took 11.346323092 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.241804985 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.218831938 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.246587007 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.284947119 seconds)
  done (took 18.17776802 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.889634371 seconds)
    (2/2) benchmarking "read"...
    done (took 1.580533168 seconds)
  done (took 4.655054361 seconds)
done (took 41.628074207 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253114442 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.252044105 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.249080299 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.253128647 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.249221412 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.249584468 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.252158999 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.248523497 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.251761545 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.252068758 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.253037164 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.252188502 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.25262635 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252829552 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250909783 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250564558 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252616403 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.249943909 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249805562 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250629913 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252810683 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.249943001 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.250077128 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.249955442 seconds)
  done (took 31.215514131 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.253962865 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.250943783 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.253255577 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.253163441 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.250849947 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.252968088 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.253194141 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.251216736 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.253734711 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.253797949 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251797524 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.250848508 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.253457388 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.251093514 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253353766 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.251951743 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.254780043 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251369814 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254563245 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.251307194 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.253486265 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252365459 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.25219725 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254130216 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.251701237 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.250754784 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.254288533 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.252521642 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254361172 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.251999 seconds)
  done (took 38.766280352 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.259476101 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.260298018 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.254763071 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.254501486 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.254976821 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.254392282 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.254382606 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.254879685 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.253632007 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.255171815 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.255863708 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.254962311 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.25487003 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.25412482 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.254953187 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.254587929 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.254691657 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.254704867 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.25530029 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.25443976 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.254830329 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.255823868 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.2556363 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.254987816 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.25542017 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.256050182 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.254528403 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.255265942 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.255166238 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.256309991 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.254692454 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.255315178 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.255953664 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.256156702 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.255841 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.256310955 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.260160766 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.263336785 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.255221972 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.255744939 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.255394572 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.256247039 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.256649186 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.255914873 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.255901038 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.255936995 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.257166328 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.256032532 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.256924774 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.25708396 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.256056887 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.256767195 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.256560967 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.256860352 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.256910405 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.255671445 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.256380167 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.256925866 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.258345461 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.257021478 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.257241673 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.256750276 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.256550318 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.256851835 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.25731356 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.25713055 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.2568515 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.257203942 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.257968001 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.258174196 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.257633027 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.257524679 seconds)
  done (took 91.635700434 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.258531881 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.255152484 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.255883539 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.255540416 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.255873351 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.257542886 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.255184771 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257909966 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255192021 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.258069858 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256913885 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.256740053 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255593727 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.257659157 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258133343 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.255996393 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.25822221 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.25569812 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.258238194 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.258098527 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.25889436 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.255202311 seconds)
  done (took 28.840625263 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258689744 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.25884575 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.256299265 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.258635448 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.257015065 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.259000156 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.258584936 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.259288086 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25920948 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256202527 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255669269 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259168338 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.257044476 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256166924 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256025689 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.256846744 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258984114 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.25678629 seconds)
  done (took 23.830952317 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.258492295 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.25762315 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.259715141 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.257138039 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.257416362 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.259914004 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257110497 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.260050559 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.259444153 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.257632633 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.259280436 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259959508 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.260380595 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257099401 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260345096 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.257636861 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.259991555 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257540816 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260918016 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.257292209 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.257840273 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.259783154 seconds)
  done (took 28.88530204 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261960808 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.261398056 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.258563812 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.259121996 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.259166072 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.262519025 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.262522809 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.260055877 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.261920076 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.262206082 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.259340288 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.263185005 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.260853165 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.261763158 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.258797495 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260152029 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.262818711 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.261370225 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262501682 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.260757524 seconds)
  done (took 26.414242627 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264420876 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263229116 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.264026577 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265339642 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263517639 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.264220168 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264457952 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.26453594 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.263508025 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.265528156 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.263622646 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.264858994 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264251735 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.265321847 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.264822594 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264118061 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263925021 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.263234428 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.265087442 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262984259 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265547011 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265290835 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.264794838 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265379737 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.264979483 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.265521881 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265619834 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.265437701 seconds)
  done (took 36.603523096 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265009511 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.264689027 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.261273167 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.263080473 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.261437957 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.263336539 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.263150196 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.262407709 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.263766011 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.261151545 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.264755312 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.265204512 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.264719485 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.264932324 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.265382504 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.265463848 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265362609 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.262438128 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.262446495 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262046955 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.265796813 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264822046 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.265529618 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.262452762 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26245864 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.265617049 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.263186809 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.263252797 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266201255 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.263117383 seconds)
  done (took 39.112009586 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.28475112 seconds)
    (2/2) benchmarking "in"...
    done (took 1.284296091 seconds)
  done (took 3.766168752 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.263230421 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266564953 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.265480518 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.264921674 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.264136493 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.266369384 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.266614647 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264659359 seconds)
  done (took 11.320671111 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.26676304 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.265900589 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.266413314 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.266166908 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.266979095 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.266430543 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273383408 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.283652157 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.267740013 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.268848837 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.274301405 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.27475627 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.269641924 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266869208 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.266976672 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269097719 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.266472801 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.266871945 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.268144714 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.267399291 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267486879 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269788863 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269361769 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.264935194 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.268291327 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.278839764 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.27164873 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.266423594 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267016781 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.270581022 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.268121009 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.265080465 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.26919119 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.26870741 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.267471893 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.268028103 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277292063 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.286627569 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.274034425 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267860509 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.267823938 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.265759267 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.26958211 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.269978634 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.268680116 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.268264945 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.268200781 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.265623253 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.268650794 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.271501413 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.27398175 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267934335 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.266154941 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.272246503 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.270202484 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275939075 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.286780978 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.271492158 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.278722432 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.280046732 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.282286658 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.277010569 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271427948 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.268849371 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279860265 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.29219348 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.276028865 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.284349998 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.26643935 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.269309788 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.277590495 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28317012 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.279173511 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.26938866 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271317881 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.270423455 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.270419373 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269522654 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.277882041 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.290844409 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.270917454 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271003536 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.280739497 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292064204 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.27021732 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.270284908 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.271039278 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.271248794 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.27103003 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281761094 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.288887935 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.270145743 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.270463472 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.271026787 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.271995272 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.270788506 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.270386017 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.272581752 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.2688771 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.271664297 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.271428982 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275184182 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.281193946 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272093425 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270813668 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.277921597 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.270908476 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271359035 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.277787542 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.271575363 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271394171 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.273509723 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.277958525 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.268432121 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274994349 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.281096371 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.272235152 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.273669893 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.270305404 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.272198877 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283263001 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.298236935 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.271918255 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.271263363 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.278028868 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.284846119 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.272011513 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.275738381 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.271786548 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.268520396 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.269643222 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.27477414 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.271810337 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.273657456 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273118604 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.274901054 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.270528647 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.272488348 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.273678757 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.274806702 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.274518139 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.273022612 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.275173587 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.27546775 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.273265084 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.274273604 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.279232973 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.27362942 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.273146346 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.27389183 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.271166503 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.272939346 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.274686313 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.275301353 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.274246333 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274042989 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.273998205 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.273790502 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274375387 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.273887333 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274129513 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.276472778 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.27832923 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.274600512 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.278203722 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.273946345 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.271965081 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.273751067 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.274294642 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.275259707 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.274054048 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.274561044 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.278568608 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.283343274 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.273604235 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.274299918 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.278690281 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275098944 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27611804 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276503422 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.278697397 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.282930595 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.275137442 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.282060586 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.274670253 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276162247 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.27577908 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.274713017 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.276261916 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276719868 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.279674698 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.282563883 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287718119 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.285124071 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.277482023 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.279189815 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.277751592 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.280436837 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.279973259 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.27610724 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.275812581 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276386412 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276284817 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276207219 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.277924935 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.27670742 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.276203067 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.275879284 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.276169377 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.276456158 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276053586 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.276676215 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279142484 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.273847621 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275970164 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27689997 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.276697581 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.273899329 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.276006264 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.27441482 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.276286756 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.277799258 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.284001407 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.274078995 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.277865169 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.278767885 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.277492795 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.276081814 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.277816065 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278994738 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.27876429 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.284531831 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.296329124 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.280123281 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.283984724 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.295666203 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.27714846 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.279871188 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.278146127 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.274974814 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.281817092 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.286120448 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.27872673 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.27888516 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.278647238 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.278452805 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278479466 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.285397996 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.274463236 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.278026094 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.277359863 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.279782811 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.276083712 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.280184091 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.279317916 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.279945238 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.280573646 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.279380667 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.278457935 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279946804 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.280283539 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.279622216 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.278814321 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282883649 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.286883899 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.285013295 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.279210566 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.281172165 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.280176502 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.2832272 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.280546581 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.279569922 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.280068215 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.290935654 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.288118466 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284966452 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.280994813 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.280063677 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.285164843 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.281847023 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.284577288 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279571003 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.280724082 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.279549737 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.279607729 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.277458872 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281294342 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.279384204 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281217711 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.283271134 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.284594484 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.281173043 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.280025297 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.280984217 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.281222709 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.280612588 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.279899315 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.280296073 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.282592767 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281304039 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.280610246 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.28131772 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.287411616 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.29927697 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.283709587 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.280246622 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.281152686 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.281036219 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.282989036 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.281984572 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.285169003 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.289828698 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.284961057 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.291698844 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.283789896 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.291285026 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.281996335 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.285778667 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.290202257 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.279498287 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.281191977 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.282848213 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.283188914 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28956978 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.300260492 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.284666466 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.28603959 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.283224063 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.28296338 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.282025131 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.282543907 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282798898 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.283180844 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.291112684 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.302453975 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.286757443 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.285861397 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.280072829 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.282527394 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.283616743 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.282880995 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.285793414 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.283697613 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.2850613 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.283837483 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.283595794 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.282299646 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.284290239 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.283475285 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.280911291 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.283002386 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.290245648 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.302421281 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.287521278 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.283204834 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.292183917 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.283393997 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.291136123 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.30199544 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.285291431 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.284393975 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.28344675 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.284283666 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.284930064 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.285716281 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.284337353 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.28570571 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.287525603 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.284102514 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.286904615 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.285052403 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.284194422 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.284629219 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.294418519 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.307405633 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.286704594 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.28857245 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.280622015 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.287269952 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.290173781 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.285469303 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.285226194 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.287676264 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.295698494 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.291796463 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.285925435 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.285953752 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285332383 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.285250221 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.284731365 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.285666666 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.286695776 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.285477011 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.286943412 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.286027449 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289248427 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.285855536 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.286359794 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287542146 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.287172293 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.296397855 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.286306403 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.286956017 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286213636 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.285830908 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.287298916 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.28568886 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.286614707 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.287318979 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.286004275 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.289348683 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.29401437 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.295183142 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.289008166 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.287147269 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.286594315 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.287586146 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.287014085 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287260412 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.286723772 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286730412 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.288167272 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.286641293 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.287407648 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.286139451 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.286602244 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.287162328 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.287009534 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.29051721 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.295077412 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.286797224 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.284196727 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.287549697 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286973632 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.287151382 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.28819202 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.295204886 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290538662 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.297839864 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.297320575 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.290998606 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.288292346 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.291392214 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.296859112 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.287330928 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.288635743 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.288208436 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.289884014 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.28913255 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.291927933 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.288155535 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.294798772 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.289169865 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.287942287 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.296161034 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.308083981 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.289149163 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.290654199 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.293477852 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.289516201 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.284801485 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.2892777 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.288375701 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.296833982 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.309608522 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.29066939 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29118197 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.289170101 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.292327794 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.294291017 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288322286 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.291458811 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.286869912 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.29034195 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.290010015 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290882074 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.286891823 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.289136097 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.290473379 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.292727887 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.297664259 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.287013718 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29192388 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.290386417 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.29137208 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.289364002 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288721929 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.287231646 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.288040957 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.290668525 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291077635 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.291590157 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.29338478 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.291334758 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.292582507 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.291670346 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.290873834 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.293654863 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.302124729 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.298193696 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.288106975 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.291127928 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.291098281 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.292527156 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.29141938 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.291000587 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.291443111 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.292878723 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.291350693 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.291547087 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.291403762 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.294977124 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.307207758 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.30918966 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.292005659 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.292145004 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.294588217 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.290729251 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.28796743 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.2914896 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.293652333 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.296252304 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.300687744 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.292617091 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.298898878 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.310355272 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.29398858 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.296068042 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.295555938 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.300850478 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.294241935 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.29265335 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.292401736 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.297517948 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.308271128 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291476008 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.302512578 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.322302394 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.311730135 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.293383291 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.293066523 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292186183 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.292702526 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.295812614 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.294580469 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.293331751 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.293196787 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.293781025 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.295361544 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.299441698 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.295059215 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.293800919 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.293169702 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.293510925 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.295718066 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.290514333 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.293558865 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.293850112 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.295300392 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.294163315 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.294484169 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.295195025 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.305481649 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.3051187 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.293866634 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.294019159 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.29188923 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.298094644 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.298208652 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.306334073 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.302365007 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.294362971 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.293866903 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.296226453 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.29384822 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.291365804 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.294522861 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.294778344 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.294095498 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.290830267 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.307178991 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.303513255 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.299695127 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.295854322 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.29641326 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.295004801 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.296199257 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.295098062 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.296280992 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.297726789 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.296319007 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.299472225 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.295285011 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.294443029 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.298597943 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.302693267 seconds)
  done (took 766.103316422 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.293644404 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291838518 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292733813 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.292825192 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292418065 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292580861 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292108879 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.293241464 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.293298377 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292243769 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.292557661 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292143068 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.292854142 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.29314126 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292381451 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.292916571 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29354233 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292858762 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.292743994 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293318507 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293349891 seconds)
  done (took 28.376384663 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.295561764 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.292606964 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294749586 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29571397 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294029308 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.296435712 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.29520735 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295430403 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297684233 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294490071 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.297328608 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297232626 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.29502622 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.294318636 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294592802 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297183369 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.29664495 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294083629 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.297832096 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294510095 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297051426 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.295268347 seconds)
  done (took 29.731059184 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.298060436 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.297668947 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.298229035 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.293863769 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.297660789 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.294753098 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.296999721 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.297369581 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.297578859 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.29945005 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.296884311 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.300229728 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.305141379 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.303309477 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.300063508 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.297594997 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.442262241 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.299083977 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.298713216 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.299548331 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.296461255 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.302403119 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.295781781 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.295762354 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.29759893 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.299136753 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.298376517 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.299157934 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.298580769 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.300340795 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.302482807 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.298213632 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.298969834 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.300947994 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.29911553 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.300431292 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.302079772 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.298858364 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.297088931 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.299702884 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.309650554 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.320257594 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.29984362 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.305962766 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.299782845 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.299316565 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.304108502 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.30766322 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.298450527 seconds)
  done (took 65.072100868 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.300530934 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.300216125 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.298188468 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.299991789 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.299741327 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.299486768 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.300538143 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.299204063 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.296978987 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.296769851 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.300520472 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.298139315 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.297930519 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.299594946 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.300401351 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.298238019 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.297296189 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297578646 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.298199671 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.297825892 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.298434561 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.301548813 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.299731488 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.298712058 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.301473494 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297850692 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.299517775 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.300710762 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.298234138 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.29949841 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.301355663 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.299814775 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.300899473 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.299223549 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.298711012 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.299983865 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.301128847 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.298395651 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.300728672 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.298191207 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.300843477 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.300344131 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.300675591 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.30191621 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.298638618 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.299145354 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.298801057 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.298570893 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.298513679 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.301236926 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.301927658 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.298693929 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.300779153 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.298439014 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.302229477 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.301894564 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.300076844 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.299648272 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.301875461 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.299527888 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.299345456 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.302025904 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.30051228 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.300349966 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.301761535 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.300333624 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.299150513 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.303037752 seconds)
  done (took 89.614971306 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302724273 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.302608488 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303833045 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303228011 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.303051502 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.302602129 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.302924441 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.303807052 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304094011 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.302980949 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.302916065 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.303558583 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.303713229 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.302997711 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.303437817 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.304158379 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.304330978 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.304478193 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.304168223 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303706 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.304545103 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.304516371 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.305378986 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.304790366 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.305229706 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.304232315 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.30437788 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.30375543 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304220459 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.305055614 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.30537241 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.305132591 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.305099579 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305558979 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.306089355 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.305455188 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305093402 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.304331908 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.305034312 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.304253057 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.305891907 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.305029452 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.306473827 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.305356364 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305271575 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305028565 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.304905773 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.305736694 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.306152401 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.305431765 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.304874155 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305808599 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.305274945 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.30498181 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.305183157 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.305666847 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.30591642 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305355712 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306381278 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.30549619 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30590615 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.305559561 seconds)
  done (took 82.125462696 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304763771 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.305544832 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.303729746 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.303503214 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.305253111 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.302388297 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.306773794 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.305762599 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.306162204 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.3050789 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305590633 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.302792369 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303394898 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30592514 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.304139213 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303088135 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.303402799 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.304020416 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30608275 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.304454999 seconds)
  done (took 27.328951823 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.303515182 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.305710534 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.304159533 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.304021936 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.307264446 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.304173393 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.306936696 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306394971 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304151477 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307007538 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.308064117 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.307703197 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304325164 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.304488788 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.307045139 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.305241577 seconds)
  done (took 22.128862701 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.305629405 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.306677912 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.307816659 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.308399375 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.303951954 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.303962104 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.306811089 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.305284486 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.306072003 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.30877711 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.306448384 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.308159439 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.308111314 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.308634247 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.305146564 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.30719043 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.305118556 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.305145634 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.308286111 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.30929561 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.307170602 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.305466141 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.307414352 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.30861239 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.305548885 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.306394541 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.304981569 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.305246935 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.306985068 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.30770033 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.305893982 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.306310407 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.305705556 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.306217171 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.309196246 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.305577211 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.30893259 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.308818677 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.309100248 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.308501782 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.310346035 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.306337081 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.309540629 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.30936304 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.307238194 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.309795093 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.307063492 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.307725212 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.30677282 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.307540345 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.31013087 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.310296616 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.309757539 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.309974504 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.310741939 seconds)
  done (took 73.148559346 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309858425 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.310504519 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.307119262 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.309322364 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.310441212 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.307392285 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.309795063 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.307262104 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306461185 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.309726269 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.308723074 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.310210378 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308261016 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310817872 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.308363534 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310684748 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.307807843 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.309034517 seconds)
  done (took 24.803494969 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.309215148 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.309850993 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.311938884 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.307828969 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.308588854 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.311794547 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.307915653 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.311357045 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311020415 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.30941784 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309127712 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.31160627 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311592019 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.312052554 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.309343021 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308888509 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.311600014 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311002606 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.30841436 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.308643023 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.31169612 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312399001 seconds)
  done (took 30.068265892 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.31023233 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.31024114 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.326928969 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.351196637 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.341815865 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.310767384 seconds)
  done (took 9.194282339 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309110702 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311677114 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.308258504 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311830367 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310466135 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30793389 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308687314 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308864836 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310665313 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307864205 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309271303 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311134419 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311186502 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30903686 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31154325 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311236639 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309481071 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309591714 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309482457 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311778217 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308918671 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31103509 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309106831 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308388419 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308172728 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308976739 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311054735 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30964522 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309192669 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31045252 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31133228 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307296039 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311020861 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308908851 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313188326 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312368595 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309580552 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311311261 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312098986 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309713558 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.311035781 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312584423 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3130565 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309316104 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311887738 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31006944 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30983303 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308865217 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309864392 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312251369 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311258779 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309170976 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3129218 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312545143 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31193924 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312164962 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310545308 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309718285 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313053351 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311059651 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310336002 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312560333 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311005663 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310300669 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313431245 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309972091 seconds)
  done (took 87.736222351 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31029218 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.310433197 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311039561 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311777434 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310502981 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311069964 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311480837 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311828298 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311284548 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310776411 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313338072 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3105603 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311970065 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310924968 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311504319 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311505245 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311920051 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31065508 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311024153 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316159013 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311479528 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311112798 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312113269 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311777383 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312304068 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314227735 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311213977 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312389691 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312402963 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312108529 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311885891 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312852196 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311967501 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.311868558 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312291573 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312200765 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311985577 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312403687 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31298723 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314925565 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313169666 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314611853 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313022949 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313135467 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313054465 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312418032 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312764506 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313212649 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31235236 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313411084 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313646557 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313020117 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313167316 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312900817 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313472537 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313032515 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314104097 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313556936 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313783915 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316392692 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313475671 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313693121 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31789931 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313094812 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312972442 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3143163 seconds)
  done (took 87.877142767 seconds)
done (took 1784.887398397 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.299267085 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.39723626 seconds)
  done (took 13.944243002 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.478716793 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.432859937 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.315296687 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.321408927 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.315912172 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.325303991 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.316604035 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.316386824 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.315932178 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.315901733 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.315514649 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.506061575 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.326585051 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.315744688 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.316421839 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.407695426 seconds)
  done (took 42.897971229 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.343070527 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.321554478 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.437628948 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.33815398 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.343546813 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.509364677 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.377075456 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.320305056 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.498566093 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.359828022 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.911638686 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.343505626 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.319369766 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.453186751 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.340756888 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.510369287 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.576188619 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.920169847 seconds)
  done (took 30.47299837 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.782200745 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.313046276 seconds)
  done (took 9.345034615 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.33187064 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.326085817 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.316075271 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.313061323 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.360740846 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.378078595 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.376951647 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.373646466 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.332337683 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.311684452 seconds)
  done (took 64.674980666 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.341662452 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.321068515 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.320390336 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.319436792 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.3118424 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.312325428 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.319305294 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.311643576 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.08642956 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.453662421 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.337772916 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.325699825 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.320339305 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.322216599 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.317553949 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.357399256 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.450846115 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.316684415 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.316978369 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.325989583 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.320432806 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.40851084 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.363444222 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.318282668 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.450807506 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.104979754 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.326022489 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.32750901 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.430970446 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.316952562 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.319853816 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.320774741 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.324218802 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.897605718 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.823087126 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.330703784 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.345148919 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.328864847 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.318243498 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.456098539 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.320586572 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.327068311 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.314035292 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.799859398 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.48097228 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.438542504 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.622104928 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.324051231 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.32328497 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.383146158 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.322137449 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.323412602 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.351523655 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.083001651 seconds)
  done (took 110.987306309 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.372566229 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.80457979 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.486132233 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.337845112 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.118459968 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.936644958 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.318073032 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.616064967 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.362574464 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.315898849 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.652193401 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.831702266 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.316832002 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.378217201 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.018997313 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.399976169 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.314503978 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.08245011 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.318864652 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.320378751 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.737636951 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.33241809 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.326832818 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.485449724 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.358337144 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.78939146 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.795975552 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.638304477 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.317482724 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.317706828 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.797592157 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.32438612 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.365013688 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.318116928 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.594829715 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.695406529 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.674905352 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.322237818 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.346476513 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.316981794 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.316394434 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.795213308 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.677718951 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.318292253 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.327791027 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.796794613 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.319420861 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.31699436 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.320579251 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.519543268 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.273857643 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.317386811 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.836171801 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.31997978 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.668647529 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.386760347 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.38319929 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.830153352 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320233936 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.317879817 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.342146048 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.318707312 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.318717119 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.32042757 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.322783252 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.687405521 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.450311477 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.324321966 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.689704942 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.794696217 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.321312424 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.860450447 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.248570633 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.327287249 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.385725764 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.317683049 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.919458291 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.832176174 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.346775065 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.318843559 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.67342949 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.323113503 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.643230472 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.333608144 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.319444377 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.748304168 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.339084064 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.371387544 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.319673759 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.319601451 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.948174071 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.31958566 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.592617091 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.370114671 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.318857122 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.319280221 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.319741689 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.323748529 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.320418597 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.322343702 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.863915208 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.324988254 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.629767458 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.339536196 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319824793 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.321070343 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.323109111 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.322566503 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.539593627 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.807169606 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.324493148 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.322030953 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.320527859 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.325639769 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.463578205 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.325789943 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.649321396 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.325178696 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319833986 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.321462548 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.011116505 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.348413882 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319694151 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.33789601 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.192350812 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.534148176 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.340908851 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.321939314 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.32131835 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.336145635 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.710160454 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322069707 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.35838802 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.324230628 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.03673109 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.327903791 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.345618443 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.94454656 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.325777825 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.321001666 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.342634647 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.32196363 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.63164358 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.603234384 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.366415435 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.322727032 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.322351057 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.0306453 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.347206423 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.472634366 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.342463541 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.337717553 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.522481119 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.693094314 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.32217832 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.901868713 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.324696923 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.534740503 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.322700286 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.644124733 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.825534409 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.325860821 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.322079346 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.038182311 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.012508924 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.169445767 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.323664793 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.662128564 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.339111642 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.776884089 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.322387449 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.32594615 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.76482444 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.325441458 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.323320201 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.322740232 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.323783442 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.473804537 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.499419865 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.941930866 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.327707084 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.806970952 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.336965652 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324017008 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.331985381 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.324604434 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.67706654 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.409139993 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.323627195 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.363320229 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.322999299 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.324276312 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.820514446 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.281215939 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.324714198 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.479830995 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.971741876 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.327530066 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.325377253 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.987516884 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.560572113 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.856258457 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.390413006 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.656171356 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.332585835 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.366007717 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.071297642 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.340580156 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.824572019 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.329326041 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.325586884 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.94903066 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.328042685 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.682606164 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.325411283 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.340701548 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.878827722 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.327705421 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.325527585 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.718989946 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.333832264 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.573494577 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.325014425 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.353608707 seconds)
  done (took 1110.379429535 seconds)
done (took 1383.95152205 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.326131167 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.327235064 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.313392603 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.329016122 seconds)
  done (took 26.558407055 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.336906421 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.334930303 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.335459532 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.334060828 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.334573914 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.333969815 seconds)
  done (took 9.273698459 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.433814858 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.329229197 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.329412778 seconds)
  done (took 19.356922856 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.561208281 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.633137464 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.716419969 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.61083567 seconds)
  done (took 10.785707984 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.334248125 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.33479622 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.33515221 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.335515491 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.336931487 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.340287228 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.335949085 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.336845915 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.338672378 seconds)
  done (took 13.291263847 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.427092535 seconds)
done (took 85.956054457 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.89519644 seconds)
    (2/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.644487902 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.860540988 seconds)
    (4/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.354102608 seconds)
    (5/309) benchmarking ("sort", Float32, false)...
    done (took 5.363094522 seconds)
    (6/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.637033881 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.589720944 seconds)
    (8/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.690208543 seconds)
    (9/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.662262448 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.370400888 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.328962494 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.365461725 seconds)
    (13/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.357918841 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.355403661 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.406364719 seconds)
    (16/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.795462741 seconds)
    (17/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.329192408 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.816390055 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.313845413 seconds)
    (20/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.254704664 seconds)
    (21/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.347275278 seconds)
    (22/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.969863901 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.969057413 seconds)
    (24/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.33172468 seconds)
    (25/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.356227526 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.416204433 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.758566943 seconds)
    (28/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.993628883 seconds)
    (29/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.663164177 seconds)
    (30/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.452744137 seconds)
    (31/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.244493942 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.241179659 seconds)
    (33/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.614462629 seconds)
    (34/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.718692414 seconds)
    (35/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.37081531 seconds)
    (36/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.374959601 seconds)
    (37/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.626061618 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.433817385 seconds)
    (39/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.393247082 seconds)
    (40/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.785623216 seconds)
    (41/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.355595532 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.429560654 seconds)
    (43/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.315761485 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.976783256 seconds)
    (45/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.958104526 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.647546173 seconds)
    (47/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.156782413 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.738242921 seconds)
    (49/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.56387115 seconds)
    (50/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.457173543 seconds)
    (51/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.356901683 seconds)
    (52/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.45147349 seconds)
    (53/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.315736157 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.550036791 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.457658146 seconds)
    (56/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.943411484 seconds)
    (57/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.688140522 seconds)
    (58/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.331540159 seconds)
    (59/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.237930979 seconds)
    (60/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.814987384 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.587443779 seconds)
    (62/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.411978007 seconds)
    (63/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.500905717 seconds)
    (64/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.321165571 seconds)
    (65/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.266047851 seconds)
    (66/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.373634084 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.330919897 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.388656836 seconds)
    (69/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.250938765 seconds)
    (70/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.123305886 seconds)
    (71/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.876036987 seconds)
    (72/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.416862636 seconds)
    (73/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.955772642 seconds)
    (74/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.983259611 seconds)
    (75/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.200794145 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.381513812 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.379202897 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.377880292 seconds)
    (79/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.53096498 seconds)
    (80/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.37646328 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.120170482 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.861509101 seconds)
    (83/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.362229424 seconds)
    (84/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.422619269 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.332296139 seconds)
    (86/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.649742634 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.322368032 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.532606079 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.118295632 seconds)
    (90/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.972240708 seconds)
    (91/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.332451399 seconds)
    (92/309) benchmarking ("sort", Int8, false)...
    done (took 4.361476189 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.192568652 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.374999564 seconds)
    (95/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.758171354 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.355351642 seconds)
    (97/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.348580917 seconds)
    (98/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.331878948 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.464044767 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.757490544 seconds)
    (101/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.473486551 seconds)
    (102/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.357861818 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.452774528 seconds)
    (104/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.358024756 seconds)
    (105/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.326635294 seconds)
    (106/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.76570555 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.329303549 seconds)
    (108/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.923492654 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.296958603 seconds)
    (110/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.197793774 seconds)
    (111/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.699874711 seconds)
    (112/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.32098082 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.290696607 seconds)
    (114/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.071337924 seconds)
    (115/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.426542307 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.335043751 seconds)
    (117/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.950718068 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.373842668 seconds)
    (119/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.524082919 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.455810026 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.547855141 seconds)
    (122/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.780025345 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.167206222 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.334081163 seconds)
    (125/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.339895976 seconds)
    (126/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.339447443 seconds)
    (127/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.732982858 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.754391211 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.350483225 seconds)
    (130/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.586961927 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.329912565 seconds)
    (132/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.464477254 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.997514699 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.156156085 seconds)
    (135/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.234009475 seconds)
    (136/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.334240902 seconds)
    (137/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.526757906 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.432671718 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.42239116 seconds)
    (140/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.649673692 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 1.853613265 seconds)
    (142/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.358711652 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.334972882 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.335247867 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.632916002 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.210980034 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.409556206 seconds)
    (148/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.334598501 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.232321062 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.19910308 seconds)
    (151/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.415727395 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.124396468 seconds)
    (153/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.5333285 seconds)
    (154/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.613877242 seconds)
    (155/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.119578001 seconds)
    (156/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.650403984 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.338466343 seconds)
    (158/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.337137127 seconds)
    (159/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.422301348 seconds)
    (160/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.462821748 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.962305872 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.055951948 seconds)
    (163/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.365511446 seconds)
    (164/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.724551938 seconds)
    (165/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.336797587 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.147965648 seconds)
    (167/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.361938486 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.791425336 seconds)
    (169/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.447327311 seconds)
    (170/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.658382755 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.042227761 seconds)
    (172/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.763899449 seconds)
    (173/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.43599346 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.357979854 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.297463928 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.437730966 seconds)
    (177/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.527845815 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.477615597 seconds)
    (179/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.682918612 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.361290919 seconds)
    (181/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.34259333 seconds)
    (182/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.200220594 seconds)
    (183/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.355031036 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.360934004 seconds)
    (185/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.799258211 seconds)
    (186/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.399430401 seconds)
    (187/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.829721608 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.010593141 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.204845507 seconds)
    (190/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.327876191 seconds)
    (191/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.765652597 seconds)
    (192/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.348756504 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.619699232 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.966328909 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.039038735 seconds)
    (196/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.417808682 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.3220284 seconds)
    (198/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.773696056 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.081009295 seconds)
    (200/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.263784927 seconds)
    (201/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.387132751 seconds)
    (202/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.222600461 seconds)
    (203/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.846917347 seconds)
    (204/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.381966447 seconds)
    (205/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.734740698 seconds)
    (206/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.356418639 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.322188543 seconds)
    (208/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.39739351 seconds)
    (209/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.352922954 seconds)
    (210/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.745050451 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.340495485 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.188747425 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.929449237 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.883341754 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.448928661 seconds)
    (216/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.422010769 seconds)
    (217/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.030056753 seconds)
    (218/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.844322008 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.291315188 seconds)
    (220/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.594388622 seconds)
    (221/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.36424181 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.754133202 seconds)
    (223/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.57477045 seconds)
    (224/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.756676901 seconds)
    (225/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.347593598 seconds)
    (226/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.395390759 seconds)
    (227/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.421216693 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.414052888 seconds)
    (229/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.346642312 seconds)
    (230/309) benchmarking ("sort", BigInt, false)...
    done (took 6.33966871 seconds)
    (231/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.338650842 seconds)
    (232/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.507077241 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.770656468 seconds)
    (234/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.976668069 seconds)
    (235/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.558502206 seconds)
    (236/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.363660532 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.641802296 seconds)
    (238/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.368256474 seconds)
    (239/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.956793599 seconds)
    (240/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.355167281 seconds)
    (241/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.332054364 seconds)
    (242/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.786669012 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.426865144 seconds)
    (244/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.362241509 seconds)
    (245/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.464528816 seconds)
    (246/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.42487052 seconds)
    (247/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.990606262 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.709555137 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.383841241 seconds)
    (250/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.37993087 seconds)
    (251/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.736411245 seconds)
    (252/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.32724579 seconds)
    (253/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.381765122 seconds)
    (254/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.60045664 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.358177995 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.340004672 seconds)
    (257/309) benchmarking ("sort", Float64, false)...
    done (took 5.677426637 seconds)
    (258/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.004897441 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.341859991 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.852708445 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.349472734 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.341030976 seconds)
    (263/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.417266956 seconds)
    (264/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.76195948 seconds)
    (265/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.533555612 seconds)
    (266/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.971259348 seconds)
    (267/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.398034648 seconds)
    (268/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.566520432 seconds)
    (269/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.360520114 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.238603943 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.367135177 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.730295931 seconds)
    (273/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.32564611 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.147789429 seconds)
    (275/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.070040035 seconds)
    (276/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.575751921 seconds)
    (277/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.837281209 seconds)
    (278/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.960671755 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.916894809 seconds)
    (280/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.342771159 seconds)
    (281/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.468967684 seconds)
    (282/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.924957561 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.149400787 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.803834551 seconds)
    (285/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.509394968 seconds)
    (286/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.468368874 seconds)
    (287/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.326699372 seconds)
    (288/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.368844293 seconds)
    (289/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.955590125 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.434917022 seconds)
    (291/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.442847923 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.42371519 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.34193463 seconds)
    (294/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.803850804 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.457032581 seconds)
    (296/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.405824826 seconds)
    (297/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.350543789 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.106820899 seconds)
    (299/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.35125926 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.383192836 seconds)
    (301/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.669411024 seconds)
    (302/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.432733405 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.710243513 seconds)
    (304/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.012654393 seconds)
    (305/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.314206088 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.782167827 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.360303532 seconds)
    (308/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.720387087 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.367189657 seconds)
  done (took 930.706960143 seconds)
done (took 931.972544164 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.374352448 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369073148 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.351568189 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.373525585 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.46334599 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.379239004 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.361791983 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.354948471 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.399718998 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.401815493 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.351065977 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.379299423 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.353946473 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.352541501 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.35152664 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366741481 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.440209688 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.353137888 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.369687766 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.361536779 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.368984235 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.351216206 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.40184215 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.37922858 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.356282478 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.355148941 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.356446207 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.372444294 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.464624287 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.354637598 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.356348554 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.365079526 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.440023525 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.351293811 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.347089342 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.372503945 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.364214652 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.363323978 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.356935815 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.385164738 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.862082126 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.352278881 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.354623098 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.353058437 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.353157859 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.357118173 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.355758962 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.36133822 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366020836 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367657119 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.906840153 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.37079106 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.358145514 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.355096092 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.365065877 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.354257608 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.357267 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368706084 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.37341341 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36888093 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.430748389 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.359518756 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.356343019 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.371043385 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.361759461 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.889860381 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.349629335 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.359726447 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.868267121 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.360524577 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.892016805 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.363426897 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.355899268 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.369014619 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.387532384 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.44733319 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.350066265 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.354157503 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.362764574 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.352490082 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.364468567 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367685124 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.36006078 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.355937446 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36867216 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.38401836 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.366007009 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.356443334 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.364965451 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.375090252 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.362688356 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.36750493 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.360456606 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.35136134 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.365442101 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.360791123 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.357917541 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.358279501 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.361472212 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.366375129 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.868600194 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372657609 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.352581005 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.352740989 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.355284038 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.370862004 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.870619354 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.358165873 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.379030878 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.404844914 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.357962799 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.437767182 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.360692679 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371805881 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.366497998 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.360249499 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.352386012 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.437767745 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.864385277 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.372058193 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.358800179 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.355361109 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372966162 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.358042044 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.354948225 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.456848809 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.358976113 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371189765 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.478476004 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.368313614 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.390465836 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.356452152 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.362050328 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.386551561 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374762218 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.389058757 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.361182671 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374692755 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.374349687 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.355229298 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.37047412 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.369343582 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.360612472 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.364943379 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.352562261 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.391706227 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371638201 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372395532 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.379441959 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.480407626 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.355085346 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.443477279 seconds)
done (took 229.878050571 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.420081518 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.35865674 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.442220739 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.357169318 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.458140937 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.456834331 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.35466049 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.354166712 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.354916528 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.737767734 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.355708778 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.355218999 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.35723834 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.354269122 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.439456822 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.356554102 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.354697957 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.698851857 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.356967665 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.428444768 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.357591371 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.3553953 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.357709735 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.738513209 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.355723074 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.356309656 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.42931277 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.357294458 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.705126484 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.353619123 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.357539202 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.703983831 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.447508598 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.375991556 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.368295735 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.365044736 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.461522794 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.376318898 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.43982355 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.440291153 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.44436044 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.397502758 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.352199818 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.352298425 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.359540925 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.359928993 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.356637596 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.385209166 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.357038297 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.356180355 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.701361887 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.369845927 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.366405626 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.357057328 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.357483485 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.379498102 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.356499839 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.360338995 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.449480948 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.36047519 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.423139734 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.741972699 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.738223241 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.360594262 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.359084102 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.357910479 seconds)
  done (took 150.104633456 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.428423161 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.433908774 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.476420933 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.362608798 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.412414983 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.479650585 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.361699306 seconds)
  done (took 11.244559843 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.367316329 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.36029075 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.410356206 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.410465663 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.360090896 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.510950958 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360484957 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.373240999 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.358975535 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.414106316 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.361322193 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.360915525 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.366379647 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.363152879 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.408528119 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.372786037 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.477808575 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.362696426 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.362100301 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.513337891 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.358015318 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.369280967 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.414677494 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.373574158 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.363251282 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.367490562 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.926426911 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.360992266 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.359205505 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.361545763 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359525549 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.399151632 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.363221468 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.360864294 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.359645416 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.478819341 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.361339305 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.359071073 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.361924801 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.360560461 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.362315662 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.361857813 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.361907794 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.360904634 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.362063403 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.386707857 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.36305139 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.361458796 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.3632289 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.36318231 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.414078358 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.363256519 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.359768127 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.359506079 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.419629688 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369268137 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.363533082 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.359660642 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.362920401 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.360208078 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.515216773 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.412671972 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.363231836 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.411292046 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.363375262 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.364495775 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.364270225 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.364188171 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.418724691 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.362863483 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.413444365 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.361292625 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.519436719 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.387063558 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364781016 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.368510433 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.367758503 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36309025 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.362497311 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.370149088 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.361515336 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.366603439 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.371391775 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.362643149 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.361874922 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.467430175 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.473487146 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.362184942 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.376855841 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.372297608 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.361471014 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.419107338 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.363748921 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.361369757 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.41652895 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.480635592 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.419012917 seconds)
  done (took 156.08290341 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.371008012 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.373836415 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.366451897 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.381566281 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.365716079 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.36631871 seconds)
  done (took 9.518991004 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.3677195 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.366922859 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.36546447 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.365779977 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.365385618 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.366498611 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.365417392 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.368032163 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.369205706 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.366147458 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.366295916 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.365960489 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.367150236 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.365466842 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.366566533 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.366933172 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.366037116 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.362790013 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.365473017 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366377831 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.463252656 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.366568843 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.365584779 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.36835442 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.370794251 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.367105782 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.375945935 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.365710183 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.366575018 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.3755061 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.369783382 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.368605947 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.368775515 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.374998693 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.372033695 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.370000901 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371543168 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.369196572 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.365767393 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.367726454 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.369230203 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367580193 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.367712391 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.368452289 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.369633328 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.373830588 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.372866519 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.375317158 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.367416534 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.369234482 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.368241777 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.367655218 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.368020351 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.369122377 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.371029503 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373631953 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.372416565 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.368020771 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.367940653 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.370419002 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.368272698 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.368453297 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.370331805 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.372442018 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.374273709 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.36860254 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.370599192 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.372340121 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368687042 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.368220574 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.369233165 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.366324953 seconds)
  done (took 100.940763176 seconds)
done (took 429.180064689 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.815136642 seconds)
  done (took 8.112080249 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.504324875 seconds)
  done (took 7.803008375 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.129456485 seconds)
  done (took 23.431690534 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.406438501 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.437522311 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.394513444 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.370343215 seconds)
  done (took 26.907585154 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.376076783 seconds)
  done (took 7.673384172 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.370040478 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.374621582 seconds)
  done (took 14.043620579 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.487913303 seconds)
  done (took 7.785383219 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.103012608 seconds)
  done (took 8.407202823 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.360262656 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.362683783 seconds)
  done (took 14.277173061 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.34755169 seconds)
  done (took 7.645697064 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.510339023 seconds)
  done (took 8.80783825 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.360939438 seconds)
  done (took 7.659643289 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.375400313 seconds)
  done (took 7.673934984 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.835757323 seconds)
  done (took 10.133806915 seconds)
done (took 161.662119354 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.363531034 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.365374613 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.366306268 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.364694546 seconds)
  done (took 26.75912125 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.40276196 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.403518153 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.404612968 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.41422388 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.405999759 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.402601161 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.395233815 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.395480972 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.413585356 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.40579 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.4052301 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.406049054 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.403961359 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.395900757 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.405931378 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.405842917 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.414671375 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.405420391 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.395698563 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.407572403 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.370896777 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.41552886 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.407263479 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.371084569 seconds)
  done (took 34.954799172 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.580525933 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.447863555 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.525938621 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.423726219 seconds)
  done (took 7.278280227 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.422275764 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.425935499 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.438047933 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.479441711 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.507995369 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.433687755 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.39898003 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.392285836 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.37858749 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.424309761 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.501002584 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.440397302 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.520359926 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.371568409 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.564042157 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.370777393 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.370616696 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.42362283 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.474878319 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.49948893 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.371656937 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.423264149 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.430943364 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.441165863 seconds)
  done (took 35.806113965 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.371785898 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.380212349 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.377671739 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.371753328 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.371357553 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.371656273 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.376931079 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.372927818 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.393453521 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.372949551 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.370917843 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.37110709 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.370727564 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.371700387 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.371318071 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.383733169 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.384358579 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.372349746 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.375112079 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.377330907 seconds)
  done (took 28.811543433 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.36681671 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.219887765 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.717895316 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.623798508 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.367102423 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.368861527 seconds)
  done (took 27.966931274 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.449528995 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.592260636 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.374233878 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.765197014 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.846869793 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.376658691 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.37371101 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.632138247 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.971895188 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.970868478 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.436219173 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.446560384 seconds)
  done (took 20.539624164 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.378617685 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.369807669 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.375727485 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.385791377 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.434800844 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.381668658 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.381247893 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.367674337 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.435936569 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.439516187 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.38110986 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.435749428 seconds)
  done (took 38.071226769 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457229732 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.417268461 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.358499785 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283132057 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.555526988 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581195444 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.281934894 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.839377207 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.37213088 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642511928 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383429286 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458509009 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.62616438 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372083583 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371913553 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.429972084 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595780957 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912111798 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371214906 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.580786561 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394827775 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373200646 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.74738274 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.399546088 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581545864 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.353948293 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.66380902 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.148518886 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675176234 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381104846 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378894483 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369094134 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644554702 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044166946 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46531854 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379570909 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.317551501 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.917624533 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.355828442 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.648151567 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385860288 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373524979 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380081736 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370612789 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304961657 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373468497 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846055371 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.375518422 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.082291448 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.370960952 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380269985 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465156844 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.374278155 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.94349163 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.586945312 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.376337967 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.368196247 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377754427 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943233453 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.092346063 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376691047 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.308260279 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.925690944 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.654428636 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046639027 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.472804174 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.374124864 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375877039 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305518172 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.63130877 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388143076 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514711683 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.397826081 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.063557252 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204667155 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.374572003 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.30427059 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975582741 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374869374 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.309291934 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600316917 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.147464515 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312201814 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.320426771 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.305851479 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128009653 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380817282 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.803219814 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378948812 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.838682024 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.382418689 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388455304 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395472972 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.596592949 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.256727508 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371923203 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.376804428 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494854082 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393761111 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.842436214 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306514624 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.376347947 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628895537 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.584746394 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382762454 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.431779021 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600475417 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379887709 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.38928255 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.382472519 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.38571374 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.026522358 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387699606 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.184617494 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392443906 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.148020878 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167743671 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388814431 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.475318502 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.3780751 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635539801 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.209305614 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.283731301 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439595866 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375947655 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.374497185 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.714853547 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.230287476 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.272265268 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.375910962 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384812956 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.385272216 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.374676651 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335820844 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.385742138 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3798622 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.15230759 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.598967751 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383112219 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651079021 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308609919 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517814298 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.420557693 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.598830307 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.683039685 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.375790566 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636734104 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38081331 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383600567 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388267126 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39289655 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471669634 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39568496 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.375047857 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633727622 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.377924496 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.378748011 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.669426491 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.154827651 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379061351 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.381463596 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.347246954 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031421058 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36195672 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383709309 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.269098879 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.38935011 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443392657 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380920185 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.386715002 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.318363176 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.436921991 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.382639524 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.387415107 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600434613 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387199082 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.708324917 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459057964 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.598992974 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.036368614 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389422947 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.310295334 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.087292301 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.068812495 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376636253 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.567017123 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376630258 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38522825 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387616674 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.098221337 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.034580034 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379109829 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.639344581 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.383938013 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387480566 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.382056992 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376372116 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.285542056 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.253311943 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392434424 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.389382195 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520935532 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.392065938 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.311609492 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.893461831 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382534065 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377961608 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.153905678 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412280141 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.641812426 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88873967 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638623616 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.284438308 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388426049 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.757889903 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.412629777 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.377390848 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392341058 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384372124 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.390959768 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405755375 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.389141047 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.65161575 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.861500204 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95288732 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19720826 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979015943 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383161644 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.386973228 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.273597241 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.85416384 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313320616 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.037299362 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583116381 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.855814962 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334391834 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607071298 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.691381017 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18945622 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389986175 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609062974 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378485443 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.383669457 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392120427 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592453746 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412788085 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.385607339 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.311577466 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.679296985 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667002427 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389671446 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457631157 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85260879 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383912123 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.160111519 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.379710239 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.753282524 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.56364023 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.927705507 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.775404285 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392619089 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.382269522 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888944488 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388936961 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.909429283 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066897337 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.391332615 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.607367458 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319941073 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.392160283 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.391278431 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.381490118 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.786387971 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.378993795 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.639394473 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392210904 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315352809 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391396899 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98372005 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.240288054 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.386766198 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382086952 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182062758 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399373101 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692431496 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.38524267 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.30612589 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38818631 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.316534643 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316944379 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.07511388 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384545656 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365910667 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926854809 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.886838547 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.579749065 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408336895 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235202092 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.640672529 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.396044385 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.045164565 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610685269 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.400716335 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406870087 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.482567925 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392283532 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.369524348 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.264635445 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.61887717 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357009768 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.607349998 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.377857554 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.288039893 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.381996999 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594967767 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.277474271 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396746952 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642765396 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.095751991 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.400509397 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175887833 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408648998 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383004681 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.43105921 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.937398722 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390398898 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453215304 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.394168653 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.393649319 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.394980586 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.566003806 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389900857 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386159883 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.397315256 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477735125 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.244544802 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.311817389 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.1596217 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053443997 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223967069 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.05299964 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397360563 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38569957 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383999209 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318974157 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533789284 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.913594526 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658084676 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51157185 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.024010944 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40773418 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397041254 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397689125 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598560455 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659682611 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.260170973 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385028479 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.051507908 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.266586024 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395459093 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.597132093 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932158978 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991644478 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504046513 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.385421588 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.859249079 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659536701 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.462286241 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385672993 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.979110379 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.410479496 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.765960691 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.390512397 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388958109 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53410002 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396583555 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062243316 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.395389862 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.542385406 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.159402438 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.66625065 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647299535 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.905417836 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.397497613 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059412157 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.187156956 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653159452 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457292647 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398380239 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.494622727 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532160932 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.383968603 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.270812147 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387399066 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233874378 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.096103545 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.397102232 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057345952 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65291823 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.38429855 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.387910158 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40979736 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.396782346 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.611861311 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153606845 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612773763 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398326816 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388812837 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.959792013 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060764374 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402930872 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322586756 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.392607951 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649063893 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623595858 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413225794 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.901172984 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.098376114 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994574408 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.362918587 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409849448 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400383514 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.191389773 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059029447 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.320712544 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93356266 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.048959007 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404766723 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665523423 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.393884675 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392778061 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666159744 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.393680562 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.398254073 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401705724 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.056593789 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219456528 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.390832445 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.694141704 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.328962444 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.617562811 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.166167795 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329227876 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399201856 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.589856691 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.390246848 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515633549 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40204604 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.39222286 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397709594 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.150580155 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.701981941 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.395627871 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.392288369 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.37456485 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412799985 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399194245 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675027948 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395452929 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.064966782 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.741310165 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.647935049 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.402006701 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.377888563 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.394045719 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390640435 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.115071437 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.367894198 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.115382828 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999576786 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.409592834 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.40214396 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395108577 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.608306944 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603134559 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393586667 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.403624898 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391197046 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407868444 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.296624593 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.192811524 seconds)
  done (took 1620.495170989 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.419601564 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.40304678 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.435729553 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.496011572 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.454725324 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.420955587 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.461977474 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.420505296 seconds)
  done (took 52.839357076 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.396520326 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.547470374 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.424707014 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.396658028 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.405434647 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.406457144 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.899771615 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.395233923 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.402750981 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.401719008 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.393857263 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.402050924 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.115914039 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.403885813 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.407293483 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.379342614 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.402114778 seconds)
  done (took 66.513468075 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.393758822 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.675011744 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.414560242 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.395791158 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.622296221 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.410495808 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.592745087 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.476049948 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.395472735 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.554519432 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.069084321 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.438563288 seconds)
  done (took 80.765958074 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.400852455 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.401308578 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.401559643 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.401304063 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.401786857 seconds)
  done (took 8.3349968 seconds)
done (took 2050.43809202 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.817553022 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.168037894 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.063928831 seconds)
  done (took 5.558914978 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.54086111 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.590443121 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.773437772 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.752546537 seconds)
  done (took 7.984908504 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.681049728 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.77586991 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.58402476 seconds)
  done (took 6.368257849 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.908274508 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.401008579 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.539841547 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.390278323 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.396244184 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.394767642 seconds)
  done (took 20.50932458 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.398378836 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.40062222 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.396688314 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.399559781 seconds)
  done (took 6.923944688 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.380429024 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.123545959 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.379441986 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.394308432 seconds)
  done (took 18.606137708 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.143854096 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.155891538 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.141581718 seconds)
  done (took 7.769763631 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.395329857 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.2353897 seconds)
  done (took 9.959420818 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.697349705 seconds)
  done (took 3.02512985 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.527885226 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.726115093 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.614295484 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.470853411 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.618107188 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.59150231 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.198035522 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.731753663 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.454187341 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.778131718 seconds)
  done (took 30.039389331 seconds)
done (took 130.740789535 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.42224139 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.408890945 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.596757979 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.393779622 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.630106371 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.597237103 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.924627173 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.363128483 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.902628273 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.890440857 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.394699616 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.629213054 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.64717059 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.417033996 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.649435038 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.421897061 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.630293499 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.456141788 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.123470342 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.286426555 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.921835525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.035306521 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.23198721 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.058889425 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.632428928 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.548936288 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.614652567 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.419868283 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.299916888 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.632761956 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.549515347 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.396405012 seconds)
  done (took 195.457903833 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.39667159 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.414128564 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.398803088 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.41038432 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.4046269 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.399168936 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.396137546 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.413135669 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.398596248 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.4090121 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.396464988 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.397081593 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.414990961 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.397636787 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.397448231 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.413348544 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.412889653 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.42260158 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.397733854 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.397335622 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.400231629 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.414536098 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.414055049 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.402224645 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.398333134 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.398583108 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.428167888 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.399726782 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.398656672 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.397988371 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.41500559 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.427987868 seconds)
  done (took 206.315570482 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.413817351 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.398119278 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.400504905 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.41575552 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.398930078 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.400199026 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.4175054 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.398797865 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.414028517 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.397798739 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.398917643 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.399289516 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.399934168 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.406459831 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.398282222 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.398042673 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.39925256 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.401443984 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.409034874 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.398908382 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.417179084 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.412080445 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.399644709 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.399473069 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.416511119 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.40014357 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.416615693 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.416022194 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.399405535 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.400135771 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.400731231 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.416821804 seconds)
  done (took 206.293206558 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.603351775 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.406387843 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.40678927 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.360678375 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.406802908 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.406051338 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.401375876 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.59840226 seconds)
  done (took 14.924228815 seconds)
done (took 624.321963694 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.89310159 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.58084654 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.611052109 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.427241567 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.336693133 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.43001741 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.426660376 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.609796928 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.37507387 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.616480688 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.740336651 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.426689415 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.903271608 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.426010359 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.692938388 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.528412969 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.318913679 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.410606823 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.760622371 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.092662208 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.696896942 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.994447705 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.611047108 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.393145184 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.905945281 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.9923464 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.163750918 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.292566991 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.426980236 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.764735794 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.30052982 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.465733893 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.493425364 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.474291365 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.526582621 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.507534144 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.3870845 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.470415597 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.609894218 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.705502201 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.08526136 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.172215874 seconds)
  done (took 96.383214393 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.396831033 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.396751854 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.395214926 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.397075435 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.397569639 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.396431004 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.39614281 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.396013007 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.39653501 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.396893141 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.39694663 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.397812309 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.396802784 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.398427925 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.396508984 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.397409148 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.396949399 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.399556791 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.397309 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.396799386 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.397963861 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.39640138 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.397954336 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.397676186 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.398227272 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.398551244 seconds)
  done (took 37.6645161 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.409788077 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.675347449 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.851835323 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.419334381 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.410447125 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.415120605 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.49360525 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.41398241 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.413820759 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.413722585 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.568811378 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.412772381 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.445496481 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.874524808 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.414737051 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.411200245 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.410482349 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.411670127 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.680564928 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.422246074 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.514353441 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.41164347 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.494656228 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.422010317 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.433266906 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.411385904 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.41591815 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.93887818 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.413748898 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.570935735 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.276011012 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.495233708 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.886855441 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.863666714 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.275692429 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.415976387 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.412269876 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.575113769 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.414650963 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.412800657 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.494950608 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.41352592 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.862738014 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.06081645 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.433374334 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.412477556 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.956724154 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.576455821 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.684221146 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.424548328 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.884573338 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.419876302 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.414092062 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.414907133 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.684118178 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.423825967 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.413776527 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.956786049 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.435908948 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.496560688 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.41572573 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.413576892 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.692160454 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.417184708 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.678830133 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.418247203 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.421342477 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.413629863 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.863930696 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.41913902 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.078483103 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.433632755 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.413761705 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.570953601 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.68139191 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.995601285 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.419079714 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.695062901 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.902945698 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.496034606 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.419700835 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.921561807 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.501474303 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.419749936 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.415657426 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.415440882 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.414092725 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.467874654 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.496820966 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.008577252 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.072126423 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.973657915 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.518388289 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.431188499 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.415687036 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.957564203 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.43403737 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.415890007 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.857831656 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.079496385 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.435798815 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.422852843 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.066874721 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.437913086 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.500349516 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.423085085 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.872638652 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.419601622 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.469228506 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.416097478 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.423751345 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.420475221 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.502041141 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.421744127 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.416320705 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.052844139 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.599008168 seconds)
  done (took 186.009535816 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.410248731 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.409017256 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.411460098 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.428742133 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.411269569 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.416521707 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.410250364 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.410059208 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.416414279 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.410485531 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.408665468 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.412837572 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.411558291 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.416852347 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.439538787 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.416425549 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.024750344 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.411178637 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.419384531 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.410683161 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.229396992 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.414048757 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.415387796 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.410556497 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.411081792 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.411302887 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.418383469 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.412556616 seconds)
  done (took 154.373611774 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.418028891 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.043837797 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.422027101 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.560366269 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.441441095 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.415135456 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.556691591 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.479803597 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.420722879 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.416859749 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.416550165 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.73995905 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.418952694 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.963897274 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.625647424 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.558633599 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.965102636 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.418752112 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.416093991 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.417496649 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.561798045 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.42903709 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.74182948 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.022793614 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.419996754 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.022770272 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.408291683 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.419234177 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.417703585 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.024630755 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.4180573 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.750327438 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.503181656 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.4826019 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.036600687 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.967822335 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.967170806 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.578420651 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.420957549 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.41687693 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.416239699 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.407827313 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.052101868 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.422669377 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.419660248 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.048561916 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.438207042 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.419354359 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.428229366 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.416759297 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.483511966 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.482885602 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.761320734 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.058583865 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.503725918 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.438961962 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.563617003 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.828899629 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.423560678 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.967382921 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.407706769 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.055966213 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.424838679 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.407548189 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.418965318 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.42425698 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.579403716 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.563206825 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.970761237 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.421515466 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.969692162 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.583902919 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.421011271 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.418722184 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.422164294 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.056414431 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.972917712 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.583405153 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.567847337 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.63265173 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.411599973 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.420474189 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.409793634 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.503940025 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.420746962 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.059108918 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.974607267 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.42260481 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.42220123 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.421912352 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.422060307 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.611206099 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.060762388 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.507687132 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.967000982 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.780207615 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.766716611 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.424394499 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.483414606 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.421424251 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.764666862 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.425461798 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.48244932 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.897778391 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.766604412 seconds)
  done (took 170.009421322 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.685657473 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.647629857 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.515832975 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.541287463 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.045688286 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.002752166 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.792257451 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.559138996 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.534704559 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.674382676 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.663259179 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.514836233 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.602460089 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.499036203 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.196829961 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.49561933 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.519582642 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.546723366 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.52238309 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.469272506 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.088366324 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.734239427 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.603619445 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.491601195 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.522650801 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.206862828 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.993395444 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.984703956 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.601285776 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.793424177 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.98970705 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.567196494 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.442307723 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.148137774 seconds)
  done (took 68.547461851 seconds)
done (took 714.322943511 seconds)
SAVING RESULT...
DONE!
