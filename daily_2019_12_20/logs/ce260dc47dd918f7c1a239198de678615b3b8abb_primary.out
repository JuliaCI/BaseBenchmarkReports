cset: moving following pidspec: 28359
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.388045963 seconds)
loading group "string"... done (took 0.568800754 seconds)
loading group "linalg"... done (took 7.266036854 seconds)
loading group "parallel"... done (took 0.162884988 seconds)
loading group "find"... done (took 1.153491421 seconds)
loading group "tuple"... done (took 1.895954611 seconds)
loading group "dates"... done (took 1.283295714 seconds)
loading group "micro"... done (took 0.224217324 seconds)
loading group "io"... done (took 0.969843536 seconds)
loading group "scalar"... done (took 38.754876937 seconds)
loading group "sparse"... done (took 11.973336277 seconds)
loading group "broadcast"... done (took 0.942160103 seconds)
loading group "union"... done (took 12.166189841 seconds)
loading group "simd"... done (took 4.488595178 seconds)
loading group "random"... done (took 9.046567365 seconds)
loading group "problem"... done (took 1.835669189 seconds)
loading group "array"... done (took 20.813318494 seconds)
loading group "misc"... done (took 1.682820366 seconds)
loading group "sort"... done (took 3.329050463 seconds)
loading group "collection"... done (took 17.302874534 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.525593074 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125767426 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11876434 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120443413 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147343273 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112215929 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127142443 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086324618 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.792030422 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148122841 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117834517 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.431456545 seconds)
done (took 5.170630517 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174397771 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082948294 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083935901 seconds)
  done (took 1.306283458 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065293427 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122906055 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067049542 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067510179 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067482823 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066348785 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06685362 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066485439 seconds)
  done (took 1.664056954 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073907183 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069504952 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06807417 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068772867 seconds)
  done (took 1.420558103 seconds)
done (took 5.780010491 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.790972571 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.206672071 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187872232 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.412573504 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131002042 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160104254 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.635908841 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.296569604 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.189295605 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081611339 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10921687 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.330194538 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111315314 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.632594393 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074651178 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090634133 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138872368 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.410925116 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067344483 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082406191 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089011773 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129253206 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085292098 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074210333 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146875923 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067789986 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136807125 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080203372 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067020483 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213455718 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172981816 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663985067 seconds)
  done (took 10.244425725 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096206391 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097454358 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06945632 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123185721 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096344513 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069877413 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071092578 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067755031 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087387706 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127503852 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088624869 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101884614 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066031001 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068539566 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085006778 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203724645 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080216096 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081637701 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071047654 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075628072 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105418547 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077830741 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078217625 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076954231 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130143903 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.181038427 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098385872 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097364658 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06692032 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079554996 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114983222 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125540484 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065945789 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065946415 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124124856 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09446671 seconds)
  done (took 4.58372241 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.002251135 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14448491 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090483145 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13510308 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064851965 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10946187 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065311467 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081030847 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209685938 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.470811161 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.584652367 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111221175 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10395248 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067443158 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068348354 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06746611 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.504894199 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096469344 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107992713 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08265521 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070805803 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069825077 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354540805 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067953777 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064578174 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069057638 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057499938 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125977503 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.111026175 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068599447 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.945645284 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126357571 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066229881 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101238463 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161144911 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090185079 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.275684729 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069581494 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064862893 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153019112 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065945599 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070157469 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066115128 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083598193 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103556639 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112828616 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065747917 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066507665 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16636065 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064785357 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079209243 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.652295952 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154158002 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076381234 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064288014 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.25361103 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087882988 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06906466 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065897655 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.176232755 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132341328 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068429246 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06427632 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066953185 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068707468 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070372013 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.359285454 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067146547 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.113671304 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070269101 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077583495 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069377495 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069769267 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074335612 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072775517 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08812467 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06629831 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075567965 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066040739 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066627303 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066936269 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084241302 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.375872044 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06675362 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068470911 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065443476 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089858023 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096831073 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067397428 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065598097 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101043404 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06821169 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066627002 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106769959 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066823635 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083486289 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069426808 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113563208 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066033212 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.185859222 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066856313 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06549748 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096329892 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069897613 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098186819 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080300522 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070504601 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.416539889 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065233485 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065078262 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068121604 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065663727 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067935806 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067024624 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079212599 seconds)
  done (took 21.36094767 seconds)
done (took 38.328021184 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.23517597 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077800854 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076601832 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073704718 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074279317 seconds)
  done (took 1.760608736 seconds)
done (took 2.962975009 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123452864 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10036669 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063908637 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097582813 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064486871 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102042317 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101107286 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082164151 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100732196 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064347676 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09771603 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064802022 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064589865 seconds)
  done (took 2.352013025 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084035122 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084487107 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070279832 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083139258 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063714428 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083169245 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081634 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089259382 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081710178 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0730966 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063918668 seconds)
  done (took 2.056473856 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082975405 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085763681 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069849975 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082817779 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063970137 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082904935 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082271955 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086703907 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08269254 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074213397 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064015548 seconds)
  done (took 2.052132874 seconds)
done (took 7.653346651 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077668097 seconds)
  done (took 1.264107651 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.593713464 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.082144057 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081978785 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.1119738 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190567919 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120008995 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273570694 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087754071 seconds)
  done (took 8.909775412 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088420549 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069115811 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081503493 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068210616 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069292758 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071103476 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070825631 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072081832 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072459143 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068663843 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069748717 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072145891 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071252174 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069295789 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068407001 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071520525 seconds)
  done (took 2.414237177 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092975601 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091445883 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073481496 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074756851 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072404572 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072207243 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074050394 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073791963 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07046151 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072334125 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07433625 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073477548 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071310411 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064871547 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073906531 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075307495 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071338558 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074330028 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074633734 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075152572 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07465528 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064021626 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071214153 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073715221 seconds)
  done (took 3.075709537 seconds)
done (took 16.858313658 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115810546 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071511531 seconds)
  done (took 1.379638489 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08214077 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082693304 seconds)
  done (took 1.363831972 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083482924 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065669748 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090159338 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077753984 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065978775 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065286525 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087810687 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066395789 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065515498 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066164713 seconds)
  done (took 1.933338595 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068107683 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076756436 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070924593 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081457986 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073716215 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064107057 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072032398 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068281479 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077833457 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062373412 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07131679 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082825521 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070847693 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084413148 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071789473 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068566518 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070950368 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067540709 seconds)
  done (took 2.503928926 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065979741 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067045967 seconds)
  done (took 1.340592016 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067076377 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063748889 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066097457 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066550542 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063817859 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062409384 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063326966 seconds)
  done (took 1.657010758 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.384369961 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113259404 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.311037856 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070697767 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081808178 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256957056 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066191004 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070541604 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071446811 seconds)
  done (took 2.67442835 seconds)
done (took 14.05916618 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079693067 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085954514 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096021455 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.375744111 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09140855 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066135516 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113744382 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187487342 seconds)
done (took 2.314609129 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212581057 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.637327298 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403952325 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.205006084 seconds)
  done (took 2.457425193 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344065208 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088260536 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058716825 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067452413 seconds)
  done (took 1.779775734 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066277798 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069795512 seconds)
  done (took 1.352053533 seconds)
done (took 7.018158493 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066102811 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065634663 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08535889 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063571119 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065675661 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063443071 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063538247 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066306426 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06658703 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06362259 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068448993 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065764772 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065893885 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06642721 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063577778 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063402513 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065495632 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063281377 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06359052 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063474939 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063450078 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066424436 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063989044 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06384968 seconds)
  done (took 2.827714699 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084193384 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065804948 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071239257 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071092112 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069515394 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070713036 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070920403 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06640391 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071533233 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06871268 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06934812 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069437802 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068470697 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069243892 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068877367 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069290715 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071460604 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066190691 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068394454 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07002401 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071056257 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065774103 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069086839 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07112279 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069214444 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070965092 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068338677 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065558148 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07117016 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068956494 seconds)
  done (took 3.31547289 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069618217 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062959277 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064159827 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070888663 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063363236 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063838054 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063371265 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063789252 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064526884 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063076652 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065191727 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062822177 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063634787 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064361294 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064273886 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066941002 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079352714 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063698348 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063746585 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065382694 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067157414 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063312043 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064380279 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063372315 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063590874 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063158926 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064060095 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063973109 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065211146 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06396623 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066567309 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067267654 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063320572 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070803726 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067209569 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063614307 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067750016 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062938363 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064373317 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062988091 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063071928 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063543155 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063881495 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070607412 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063868186 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065614499 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063585266 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064420763 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063848251 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.179825502 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062960698 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063191442 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066021139 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064967213 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067441278 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063161063 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064280432 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062919851 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064870286 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06327245 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062896997 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063388983 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066158257 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064013275 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07805335 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070103063 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063075895 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06484555 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063792847 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066387977 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064476031 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076999364 seconds)
  done (took 6.045183379 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089761033 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087330156 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065351474 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065352598 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061741049 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063711302 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069647844 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063801465 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064870992 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08173386 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064044527 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065047 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065032657 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067504045 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064085864 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064993874 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072147427 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061403089 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063667084 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067493432 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064188123 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069071514 seconds)
  done (took 2.740730914 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15613144 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070126026 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105712411 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075400607 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069324168 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075522835 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069556943 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069600041 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069588481 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067830463 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066882117 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069596725 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06974971 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067897641 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067994553 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067026182 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06948302 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067171213 seconds)
  done (took 2.6083859 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076960335 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065605393 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087246361 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066303749 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065369403 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069003654 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070200278 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074268268 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068133052 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065687736 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073797601 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068450304 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068042984 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066343298 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068093897 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065473057 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068738979 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065509782 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07364779 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070435357 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069740804 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074016052 seconds)
  done (took 2.775461846 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079571249 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067979204 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081177416 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067927917 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061549711 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063604682 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069905775 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065517955 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069904413 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067852147 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065571919 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063391545 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069065386 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064993137 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068836152 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065288636 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067025811 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065355861 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067318022 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061293063 seconds)
  done (took 2.587869625 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086420776 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067266965 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068387216 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075415573 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067503159 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067418465 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074999584 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067411062 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067652351 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088821052 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067178913 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067275239 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074953836 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0727607 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067652069 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074657122 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074493887 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075057768 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066994896 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067249508 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088376622 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067461489 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074649847 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067629803 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067651762 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067732046 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067756361 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07255884 seconds)
  done (took 3.249663126 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066615849 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066029497 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064199112 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063213721 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063561932 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06280011 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0637772 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063547681 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065839637 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064980834 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065538673 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065766326 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065879361 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066310287 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065867463 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066379185 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066376809 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063231645 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063298114 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063799937 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066203322 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066238266 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066449662 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063435611 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063234752 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066455129 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063174691 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063731886 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065627158 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06320893 seconds)
  done (took 3.184845369 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075048858 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07295004 seconds)
  done (took 1.388635463 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063110868 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079558618 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063165005 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069997763 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069634989 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066547124 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073297634 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069504323 seconds)
  done (took 1.791933828 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082113887 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077403542 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067428909 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07864926 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077276998 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083708613 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134946277 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066711009 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073007141 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064512029 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080259336 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065672542 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072853439 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067083851 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071802866 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072752287 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064137175 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072053921 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068407279 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064410012 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067390992 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07529561 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069328693 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06173309 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067513928 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088653413 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077525252 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065477192 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069123883 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073771701 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071698733 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060123752 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06631685 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066910323 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064341294 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075837375 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080497665 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069059025 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075106629 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067313509 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0754714 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061463782 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070854762 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072638457 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07612253 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066969671 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066369216 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061331407 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063772852 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068545931 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061621997 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069099038 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060639804 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072958281 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070148058 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077080917 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065102704 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068271968 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069428474 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070513867 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073350075 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067927615 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068870067 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066010658 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076149997 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070813668 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07460308 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061005154 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060573899 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063585326 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075399526 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089038045 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072527271 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066538968 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066565163 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063744654 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06951936 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066441917 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071955794 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072146337 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066235556 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071848675 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073781437 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066220102 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068827777 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074015764 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064300883 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068698087 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064275024 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083109565 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065248036 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064140832 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064119267 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077049239 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069811593 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066508879 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064158412 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073156332 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060455352 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066598178 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067250183 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067374954 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076548633 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070341668 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070580611 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073974342 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073101532 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065865732 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068434107 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06234253 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066231794 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06437036 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072571651 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059767142 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067900567 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066091013 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065730314 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07333868 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063545868 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065393647 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072541654 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070473801 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.190498742 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064180148 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070436653 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066901859 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070471675 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074292186 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065993429 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061888135 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06210687 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070496555 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066546484 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070543267 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070594719 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06948944 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060642132 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065165514 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071995223 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075653842 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067779112 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068507516 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072949431 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06843886 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066237247 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073713708 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069230906 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066004631 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072375163 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06737257 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061678102 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069400814 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069484879 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06597519 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07094149 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070107615 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069126178 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06788434 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065039763 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073502129 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06732406 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065141471 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067647602 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065092606 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077968084 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068565054 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061953093 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063321135 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075565111 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065646968 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.0666461 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065749551 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069084662 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067067479 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064265556 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066401969 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06955912 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076525438 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071236235 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067339332 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071940086 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077150301 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066427529 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069562352 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066333733 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068285124 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066027092 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075555128 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073007071 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070326049 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068591729 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06348176 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072352562 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073608548 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066067824 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064363903 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064923993 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06953182 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072477359 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070306233 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066439452 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064899426 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067531415 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06933007 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069161194 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065451173 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06578849 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071766012 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063962078 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072937653 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066682991 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077067367 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069666841 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061172578 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069461254 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06514578 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072703532 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061364821 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064404961 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065617779 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067263438 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065744186 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068875959 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061047307 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07370106 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074080008 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067511153 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066496292 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066132537 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073752773 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067821019 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070232299 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069756392 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071266556 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075735883 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064732416 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06931371 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075482314 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065407231 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059133458 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070345484 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063440676 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063726354 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.0641894 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06359801 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067865283 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072701936 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071411575 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.187938448 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069615696 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065155534 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065908076 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062407892 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07097768 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069367786 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068242972 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07402835 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067970862 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066598244 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070638984 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066090328 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067623483 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067443269 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070517308 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067199283 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06867275 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065950214 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069645458 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065886484 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064304391 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068332123 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067031037 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067412695 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073151024 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065790908 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067799043 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069505507 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067031533 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06718146 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067050141 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066883194 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07007534 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067856006 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067013377 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069072445 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062180595 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073829874 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066343705 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074477377 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066650464 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062954153 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073423054 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069138467 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071538708 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067827781 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067793902 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068529541 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065858609 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069787559 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073919556 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064174382 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077206156 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073783125 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067537517 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069725151 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067455199 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06762889 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065418689 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067391872 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067329508 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067034438 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066719929 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070954699 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.06872245 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067474835 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067982828 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.0679525 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066975037 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068444514 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060645055 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066020961 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066132731 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066462921 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075637073 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067062809 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065778338 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065137283 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068010546 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06564812 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062934652 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073569005 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074992713 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066864671 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073278824 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065271173 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068038547 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077033732 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060642699 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064282003 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063995489 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064336178 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072978875 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06650422 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075125199 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066515254 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065807972 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063356973 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06731262 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064527525 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060473193 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063846383 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069577527 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064912995 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065760705 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066227079 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068864734 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066954866 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07524207 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066087945 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066957003 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066298886 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06289029 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064704384 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064528679 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067999589 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065908364 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063593501 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063041972 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065010229 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06609852 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066970985 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067788319 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066991232 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072546402 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065839836 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068236945 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068283139 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060703751 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.200428584 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067092429 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066600797 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066508123 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070857376 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070188897 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067062084 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075405335 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066270627 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067286085 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067638061 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064317465 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065065235 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065929846 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065608078 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066027099 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068759648 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075763426 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06403709 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069063799 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066804486 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.0672151 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074131451 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067867498 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070035201 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07331561 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067543987 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06813005 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075421076 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071258091 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069962299 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067312238 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067741841 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073396803 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06636022 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072970788 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066829657 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067529079 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068044539 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064454078 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066961839 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066056586 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067119205 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07367468 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067107577 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065871155 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066145209 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064855778 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067961029 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068952654 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074228405 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068789495 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06949942 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061168612 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062965395 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067918851 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065583783 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06813253 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06924681 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072127434 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068438253 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066683543 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066194754 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075234361 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071772209 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070088163 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064727378 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.07016228 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06697833 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068337545 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067408957 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066811119 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06851493 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070395278 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068173657 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065840126 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072858851 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070566384 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067003988 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067479834 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06731218 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066793299 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061442639 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066626003 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068402375 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071032648 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068356063 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066084295 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077364108 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063861598 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067034194 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069951642 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065535881 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070310233 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061019586 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068100603 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067149186 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067015562 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061875371 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065690497 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06415979 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068565221 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065353556 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061390641 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076763157 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075191301 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069337891 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065770823 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06490521 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061111624 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061044427 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065669971 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067102387 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068186526 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076568898 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06552426 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065308919 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061011796 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065734059 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068311489 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068990406 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062903738 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060566269 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064305833 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06830361 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.0706182 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064137936 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06506607 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068345307 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067742909 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.195264684 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070747314 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063583453 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071112235 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078809238 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067042865 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067848208 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073126292 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074568627 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067899362 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062159076 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067188465 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06991032 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067937147 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06800785 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068221108 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081610987 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069485464 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066034789 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065490565 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070045481 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067040703 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075061071 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067564573 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06734561 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072378211 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069108632 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074800596 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069727074 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074104356 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069195535 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07032101 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066096021 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067354939 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065076317 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066351437 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067814504 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068054191 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071351806 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.0742015 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066290588 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076584508 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075841362 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068590898 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06399377 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065494981 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065950725 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061589721 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068861414 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065281928 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065900266 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064553593 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066232842 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067881754 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072526634 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067354781 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06686126 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066650019 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060832204 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068716427 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069059579 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06770469 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063037597 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06584479 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067598754 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070505559 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070526068 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065129019 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068256906 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067608444 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067143383 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06108247 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073557208 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06583939 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068343052 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065915727 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066348704 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066353154 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069305694 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070987115 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067257441 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068173375 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069954425 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068288092 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063689328 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06321973 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071514378 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064201732 seconds)
  done (took 42.55652891 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100530051 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062437314 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061475707 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061256157 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073052148 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062338329 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061767706 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062587267 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062619136 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064686802 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061968357 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061277005 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070252531 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077406352 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072584954 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066374376 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061769655 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062829233 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061852847 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062257895 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069867095 seconds)
  done (took 2.734724523 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073514239 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077186927 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075053701 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081639844 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070963015 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069639982 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075103376 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069624796 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077695416 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072420761 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078270076 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069708768 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072458991 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071906441 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072227883 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069825045 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077500286 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070430876 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069648617 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07521102 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070361888 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074676214 seconds)
  done (took 2.93048529 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067391864 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065333012 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067620689 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061519474 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065964929 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060989593 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069087515 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064360346 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068944087 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064644102 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065436271 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065198314 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06742346 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060896124 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066526551 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064275119 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106959162 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069284194 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065992599 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067050739 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060823503 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067158961 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060905309 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061454997 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065121823 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068602949 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065994525 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063917229 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065212518 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064355078 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065198545 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063458319 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067159675 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06584637 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064865207 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064772128 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065181603 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065656424 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060736916 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064153635 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065683799 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061380042 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065516344 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066566354 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063574014 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063014722 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067581465 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065289523 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060620595 seconds)
  done (took 4.543723853 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079280288 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109514657 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067075745 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090570317 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079933778 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072033933 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068932996 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089603418 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062476154 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064581721 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080657295 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078940471 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06520697 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069542295 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068734962 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065288635 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065929961 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06438356 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069217891 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06449153 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069040833 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072447952 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079193651 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077648781 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068590711 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064447419 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064417822 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069460806 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076867567 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06905597 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069463896 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070307703 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080412733 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070864447 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064503376 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067441722 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080865444 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065247668 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067516138 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062818003 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068046843 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069512576 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071640686 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080886365 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066014447 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070055907 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065054809 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062593468 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076773772 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067600544 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072465195 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07840292 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068691267 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065803147 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069259097 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080261121 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065106438 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.0633736 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068324087 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076630668 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062755135 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068586469 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077595143 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067045581 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071870495 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078334405 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069891774 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068946466 seconds)
  done (took 6.314896651 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075854618 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096602491 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082683976 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082665355 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074918563 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075545082 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07553858 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075875476 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074932214 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079759204 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075159406 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115157314 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070856177 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077407661 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074943052 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075548349 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07512748 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074993909 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074836879 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074929718 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075431012 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082311257 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074994454 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08234263 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079279825 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070644034 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074901669 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074772762 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082418195 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082802635 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079240335 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075650476 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075224553 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083384018 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079084238 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074582962 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065219246 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075056206 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075262553 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075088898 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070403694 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083243319 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074882404 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070579039 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074851941 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074659635 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082345711 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079529142 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077264687 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079512876 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07516451 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082893533 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074672202 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075117452 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082686952 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085324409 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082729163 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082978995 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075072161 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082621718 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082688668 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085035725 seconds)
  done (took 6.192510129 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08230597 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073223412 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081941882 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061635526 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064085008 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071604805 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064412575 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063945861 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073624338 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073664357 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076151907 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071082632 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074758665 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076206221 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07203028 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07422204 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071467199 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071488974 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073008236 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071578922 seconds)
  done (took 2.780918665 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074384663 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082713183 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066590803 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071156913 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068562531 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070517999 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067868113 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068747494 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066565434 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069205718 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07551039 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075783971 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066702594 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071131677 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075135048 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071235356 seconds)
  done (took 2.473420397 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084050287 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07284964 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080874482 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066142873 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066440072 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062778133 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065372199 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061157571 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062092993 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077985564 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065332111 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076441804 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065769626 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06474307 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063129298 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07155211 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061864266 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063088034 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065704679 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078276096 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069813324 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06413994 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068614448 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065652824 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068119171 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069941531 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064859549 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065975695 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063136593 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066093094 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068355039 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06878636 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062511918 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063038969 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064600862 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062991567 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06522838 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06597356 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070620411 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064934689 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063464962 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067809468 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06569344 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066255185 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06171998 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066622122 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061665846 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067485638 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063455108 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067593525 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06581692 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067854963 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06633321 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073316492 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06870578 seconds)
  done (took 5.025900763 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078931927 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069190899 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06195304 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064294746 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068664867 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06735805 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069276151 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066719161 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067326626 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06376369 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067100727 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068582342 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067409114 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069112013 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067243695 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069625685 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06150311 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067193273 seconds)
  done (took 2.558579209 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.0712121 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065705517 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072597366 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066325867 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065600181 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068435009 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061736873 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064132673 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064566666 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066311962 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065415633 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068133026 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064404046 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068209041 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065821769 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065854549 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068018729 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064931263 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066013995 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0620174 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067968562 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064088032 seconds)
  done (took 2.795511554 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093450789 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083743362 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140354021 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079395988 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084639802 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071632941 seconds)
  done (took 1.892824234 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09135768 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100198941 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066579443 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070065989 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076312875 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069242725 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069343374 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069578362 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077635736 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075755608 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069626865 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078221429 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077642411 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07700486 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075241317 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075502065 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069684868 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070419566 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065739454 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083261898 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069835185 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077735815 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069683193 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069521178 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069625693 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076819505 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077395352 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076073787 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069730632 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078017805 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075050002 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069981497 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077962708 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075714239 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068877559 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07778972 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06944703 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083197598 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075311783 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077203514 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068889797 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075722596 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078187438 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074591986 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078192612 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069971229 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074801525 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07004121 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070570628 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085707137 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076431181 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077419462 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078147158 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078598865 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078372386 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085849589 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076281017 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077473957 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075833005 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075948077 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07794723 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076084862 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07742373 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07640207 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075657862 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077565328 seconds)
  done (took 6.327562692 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103272555 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06700806 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070378794 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076824988 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077841535 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070037411 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07114337 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069816102 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070000319 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067174651 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107917403 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070233907 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07769373 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078018257 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070373187 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069670165 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070354578 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077940879 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067219512 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085635549 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069699644 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077354672 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077290793 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077541644 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076087489 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076007424 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070350834 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070473803 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069965705 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069801841 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074581974 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070606169 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078018382 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066596633 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077476498 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070077166 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069773059 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075071521 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06959343 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075639007 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077429443 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083384417 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069907408 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069480938 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076195515 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070555064 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070196649 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066813949 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070541685 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066792603 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075871386 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075929444 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076159043 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07775127 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070169065 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070476103 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070498369 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070971214 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070165853 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075783555 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078079464 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069921241 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085728798 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070411221 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069906406 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077396605 seconds)
  done (took 6.246451436 seconds)
done (took 129.103795198 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186957806 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164998536 seconds)
  done (took 1.690435353 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069366939 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099656417 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077207129 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128505394 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066083669 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101070455 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09934513 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077862887 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.0670368 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065899249 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066075317 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068946612 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132052844 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066507125 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066228929 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069694211 seconds)
  done (took 2.672606241 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099591713 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162932516 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102628451 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065110859 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09984209 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072979919 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065053279 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075390171 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071713336 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065994635 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072989264 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070552247 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065578976 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070460438 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070930701 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073114118 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065177091 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073080111 seconds)
  done (took 2.797778174 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099464654 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091581099 seconds)
  done (took 1.546079079 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162247284 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106396717 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.146719839 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.352613024 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16622391 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148460015 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.14464049 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143420908 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11673974 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139051125 seconds)
  done (took 2.977085343 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099918711 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153713438 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.265799903 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118148431 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072724737 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094464443 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11920325 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078886165 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080721961 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080506394 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080361606 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076939244 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099420228 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074497474 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073827503 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076477938 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103344098 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072870883 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07476455 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076791827 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100474525 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066234535 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073687543 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072845707 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077354695 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077568565 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065957092 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065688353 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076688144 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074603059 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077174918 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092969 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077333894 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106288584 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070768386 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107062557 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077242282 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073691177 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074755431 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073920521 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078446573 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078444056 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072942953 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076370864 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06529928 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076657016 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06622054 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06632569 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078188443 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067186059 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078899879 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077329898 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105833093 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067324532 seconds)
  done (took 5.985773011 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103569144 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105565605 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072647422 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112357085 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102755881 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072038648 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10326075 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095744998 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103850698 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070523154 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068625736 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070521247 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082389082 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082697573 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116304347 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107419595 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073569139 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071738501 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108839353 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105615144 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068540391 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096942285 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091265867 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103453951 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067361852 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070087624 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068395 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070452123 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076922918 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079605165 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069844544 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080406948 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085422116 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078390149 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067442235 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06796426 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068676261 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079732389 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079124062 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078783882 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077703665 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068291641 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068565358 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069908181 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07066283 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067471467 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079169472 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080883012 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078857455 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069857918 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070784658 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068229452 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070046151 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080295174 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078117037 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080894404 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07972134 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069076404 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06959797 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072823261 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080779085 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079486467 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079996051 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069534362 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.0787872 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068716526 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079671317 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083358266 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068442932 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070285543 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068595211 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069647241 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070373683 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077780704 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077685478 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06979474 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069131717 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068677394 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080008161 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078265598 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067862113 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076536294 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06748058 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068987278 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069530149 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069864448 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077530908 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080278525 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069441403 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068421401 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069563193 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068423325 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067511393 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076668132 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079895822 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078928421 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077866139 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068906234 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077399209 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077058207 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069046742 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07819886 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067785443 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069113178 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06829818 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076714272 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075788425 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07749609 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.198470459 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069267039 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078757434 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080947795 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06862225 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079411457 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081089113 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079370426 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067771614 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081191261 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06970325 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080154398 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07079582 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080105507 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069383851 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080049467 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06886131 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068577576 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068557228 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080341655 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073740772 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069233081 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07175522 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069687233 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080075423 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083466189 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070948506 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078485419 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078749127 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069700566 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079145422 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069598774 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078749662 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070289967 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070154277 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068066491 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083192034 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069575483 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068934404 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070519278 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080337373 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069095604 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08099917 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077919024 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068825355 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081590355 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079941807 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077714433 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081774788 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071044107 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069316342 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069129875 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069825992 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078447878 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079641067 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071605798 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068859581 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077386405 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079686583 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068106499 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078113007 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077382103 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078495476 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068515933 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06981285 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079935499 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080811284 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077885292 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078181685 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078217215 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068876244 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077499339 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078196248 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068339477 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084301531 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068643263 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082485143 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078812149 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076082208 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078610309 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080118256 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080315522 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079743955 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082555361 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067800171 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068730961 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07918248 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068312455 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069204656 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077984164 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070259446 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069591524 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083414673 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068401976 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079176806 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067801931 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079073596 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067340171 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069589892 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081946789 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067684202 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068311379 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078072358 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068799593 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076173164 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078383292 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076259206 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067150907 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0690744 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20950312 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078659783 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068783954 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068375273 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070324487 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078538204 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077721609 seconds)
  done (took 18.67251469 seconds)
done (took 37.704433017 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.214097703 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15401325 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183183831 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119357112 seconds)
  done (took 2.126559884 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.116993268 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101485533 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093767281 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065981513 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099417172 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065466045 seconds)
  done (took 1.935660802 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311725273 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212144115 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18928465 seconds)
  done (took 2.10107849 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203140732 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190886636 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.421941748 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.266204277 seconds)
  done (took 2.58304372 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146130223 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089379284 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067893927 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08563797 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135474747 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161936595 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101383722 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12613926 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079766444 seconds)
  done (took 2.43714628 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149991716 seconds)
done (took 12.730046082 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.20984226 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.203322575 seconds)
    (3/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.225048176 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.171369185 seconds)
    (5/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.188867149 seconds)
    (6/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.231436486 seconds)
    (7/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.20347182 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.104042857 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.113064852 seconds)
    (10/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074642106 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.095002832 seconds)
    (12/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074489353 seconds)
    (13/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.216423341 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078220643 seconds)
    (15/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.210098341 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.113044446 seconds)
    (17/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071733122 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073793013 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.063561848 seconds)
    (20/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.206552606 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.187363473 seconds)
    (22/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.122347452 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102074961 seconds)
    (24/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.153654613 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.142737355 seconds)
    (26/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.115606369 seconds)
    (27/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.093709475 seconds)
    (28/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076558578 seconds)
    (29/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087508748 seconds)
    (30/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081344944 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071734931 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09278015 seconds)
    (33/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083016232 seconds)
    (34/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079967611 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072109083 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.112204355 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.205379897 seconds)
    (38/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.167297846 seconds)
    (39/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.202196688 seconds)
    (40/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073047228 seconds)
    (41/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052235069 seconds)
    (42/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077318304 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090346431 seconds)
    (44/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071195945 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064772551 seconds)
    (46/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.110519154 seconds)
    (47/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.13329595 seconds)
    (48/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.08190225 seconds)
    (49/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075242345 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073382841 seconds)
    (51/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073308413 seconds)
    (52/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073723212 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086082228 seconds)
    (54/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073821011 seconds)
    (55/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.216549504 seconds)
    (56/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076971866 seconds)
    (57/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072427284 seconds)
    (58/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074481469 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067871839 seconds)
    (60/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.150770468 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.11425337 seconds)
    (62/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078347381 seconds)
    (63/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070151055 seconds)
    (64/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.112723905 seconds)
    (65/309) benchmarking ("sort", Float32, false)...
    done (took 0.132594321 seconds)
    (66/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.184251682 seconds)
    (67/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.176394326 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091289719 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076476919 seconds)
    (70/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076388328 seconds)
    (71/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060971826 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.127637194 seconds)
    (73/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.197865792 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.0891084 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.082815774 seconds)
    (76/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.122320972 seconds)
    (77/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.161161934 seconds)
    (78/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052285915 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128446723 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.194795369 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065071156 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.213701619 seconds)
    (83/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050925409 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.066091378 seconds)
    (85/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065984119 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176829614 seconds)
    (87/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.211538859 seconds)
    (88/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.103785549 seconds)
    (89/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074532843 seconds)
    (90/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.05173551 seconds)
    (91/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.120448269 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.095984692 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091042126 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.145257375 seconds)
    (95/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066284029 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.178275535 seconds)
    (97/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064320784 seconds)
    (98/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052436162 seconds)
    (99/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062701799 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094118638 seconds)
    (101/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051137774 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.093149582 seconds)
    (103/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070644634 seconds)
    (104/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052669911 seconds)
    (105/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.216824495 seconds)
    (106/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077057835 seconds)
    (107/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074389754 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.14305794 seconds)
    (109/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076538394 seconds)
    (110/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110302612 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.174701134 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073813861 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.154143863 seconds)
    (114/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065716317 seconds)
    (115/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054659873 seconds)
    (116/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083353648 seconds)
    (117/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064774093 seconds)
    (118/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075653466 seconds)
    (119/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077029549 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.149019002 seconds)
    (121/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.195963668 seconds)
    (122/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051584877 seconds)
    (123/309) benchmarking ("sort", BigInt, false)...
    done (took 0.195097926 seconds)
    (124/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090433533 seconds)
    (125/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073531522 seconds)
    (126/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.194312884 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.138450061 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074512812 seconds)
    (129/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050754218 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.086381833 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071745959 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071695571 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089846822 seconds)
    (134/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.0518444 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072669194 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113627978 seconds)
    (137/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.108201039 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130360311 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120725474 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092456348 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06560453 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072316134 seconds)
    (143/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052441426 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143048188 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073031932 seconds)
    (146/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.195143574 seconds)
    (147/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052740082 seconds)
    (148/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088765251 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065307535 seconds)
    (150/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08702812 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072913931 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050771274 seconds)
    (153/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050908877 seconds)
    (154/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.0721442 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072755328 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065270582 seconds)
    (157/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051400438 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088027848 seconds)
    (159/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.107614595 seconds)
    (160/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080323267 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074070196 seconds)
    (162/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050737763 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182422185 seconds)
    (164/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064395797 seconds)
    (165/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051814219 seconds)
    (166/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.284533065 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096308298 seconds)
    (168/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.117004276 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065054422 seconds)
    (170/309) benchmarking ("sort", Int8, false)...
    done (took 0.143339305 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051199125 seconds)
    (172/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.11633415 seconds)
    (173/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054270931 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092952274 seconds)
    (175/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053304578 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065548426 seconds)
    (177/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050922551 seconds)
    (178/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065662461 seconds)
    (179/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066203817 seconds)
    (180/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05106003 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.141647559 seconds)
    (182/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077189084 seconds)
    (183/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076808273 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072732275 seconds)
    (185/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071864006 seconds)
    (186/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066889546 seconds)
    (187/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.063650835 seconds)
    (188/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.154760195 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090348503 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074723175 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090775669 seconds)
    (192/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066268047 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066943067 seconds)
    (194/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100539663 seconds)
    (195/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051751754 seconds)
    (196/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051847316 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170425804 seconds)
    (198/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050457815 seconds)
    (199/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051061537 seconds)
    (200/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064606293 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092983642 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065757243 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062916746 seconds)
    (204/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.226112308 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.159235802 seconds)
    (206/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052572786 seconds)
    (207/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075201031 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.140543131 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068630837 seconds)
    (210/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051904288 seconds)
    (211/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.157026282 seconds)
    (212/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100999041 seconds)
    (213/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061526284 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075534445 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073922807 seconds)
    (216/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.156895646 seconds)
    (217/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.111049351 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087615773 seconds)
    (219/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.163154764 seconds)
    (220/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.0514897 seconds)
    (221/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053613756 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066283525 seconds)
    (223/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053191998 seconds)
    (224/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073474217 seconds)
    (225/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.156013322 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093725787 seconds)
    (227/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.162020956 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072009417 seconds)
    (229/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069593532 seconds)
    (230/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077084012 seconds)
    (231/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054536744 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064634135 seconds)
    (233/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.102428093 seconds)
    (234/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053172846 seconds)
    (235/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066993425 seconds)
    (236/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089486447 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142380672 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.102270513 seconds)
    (239/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.197976533 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150244237 seconds)
    (241/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.06240344 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065536345 seconds)
    (243/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070110461 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065852524 seconds)
    (245/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074389294 seconds)
    (246/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078953369 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.077362071 seconds)
    (248/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069341006 seconds)
    (249/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052212363 seconds)
    (250/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052474719 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08875834 seconds)
    (252/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050612002 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06553238 seconds)
    (254/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051540538 seconds)
    (255/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066501142 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096642297 seconds)
    (257/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051483086 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072443474 seconds)
    (259/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05286157 seconds)
    (260/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052885346 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066861658 seconds)
    (262/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075179087 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073663197 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065384023 seconds)
    (265/309) benchmarking ("sort", Float64, false)...
    done (took 0.131607092 seconds)
    (266/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051242218 seconds)
    (267/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052169158 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066080171 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.0529233 seconds)
    (270/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.06841873 seconds)
    (271/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051233927 seconds)
    (272/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073810715 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065736621 seconds)
    (274/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050916088 seconds)
    (275/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068372761 seconds)
    (276/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068058867 seconds)
    (277/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062914132 seconds)
    (278/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079168617 seconds)
    (279/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067716733 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07355914 seconds)
    (281/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078783723 seconds)
    (282/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051392929 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064010841 seconds)
    (284/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07104808 seconds)
    (285/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05116069 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063778717 seconds)
    (287/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051019515 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067156045 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072930454 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089015071 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090918263 seconds)
    (292/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064503634 seconds)
    (293/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051233397 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071545652 seconds)
    (295/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052096634 seconds)
    (296/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065931042 seconds)
    (297/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067254017 seconds)
    (298/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179704545 seconds)
    (299/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067153706 seconds)
    (300/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052619888 seconds)
    (301/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088479196 seconds)
    (302/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072471457 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065706078 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071131154 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094031318 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065509011 seconds)
    (307/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067693298 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065813718 seconds)
    (309/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050963344 seconds)
  done (took 31.067894788 seconds)
done (took 32.468727537 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085842347 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093212517 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075554191 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093275603 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080219609 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07677178 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073041437 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078700333 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080942205 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081803771 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078018971 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054249141 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073863511 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074439115 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075460008 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091975751 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078750598 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073809743 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073628901 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064819835 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072951852 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065670954 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067683678 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054004941 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079208911 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072191726 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072356869 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073881102 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065449379 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06579078 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069077956 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073634609 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066012976 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078534945 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072333745 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073252083 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074532885 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07675323 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06718792 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066210781 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075213277 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065593006 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073188633 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073647172 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072344509 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071648649 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073600602 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078072661 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091414839 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067787631 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074848162 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075953201 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076137139 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.0731938 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069807725 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073558666 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070826426 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091608336 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074286682 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067698165 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074613859 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074450103 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071611192 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07365745 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074229097 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075689163 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075570322 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071141133 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075041324 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071844147 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06534075 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073058118 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069182235 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065540316 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076545258 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077644422 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065091778 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071832693 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072640409 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071150825 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064482344 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067145085 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067294869 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072438589 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066870148 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05404335 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069451047 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072683168 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064551173 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073164958 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071827302 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072213726 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066996569 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075838472 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064498809 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071119267 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065349251 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065298284 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067270674 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069338858 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064635331 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067574137 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074693737 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066649525 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072342663 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078972544 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06515221 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072304428 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064667217 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065086949 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079987795 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075407387 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065610642 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067256675 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064867957 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072660843 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064344734 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065118609 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065552565 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065480616 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07106762 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064792639 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066669896 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072315886 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078261883 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064994018 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06801642 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066315366 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064086813 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069703801 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064889508 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064348869 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066073937 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060990613 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066087554 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06424234 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071934587 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066756764 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.206834568 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067067377 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07474443 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071643827 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072127731 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071241593 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064529037 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059016069 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068469187 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067124776 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067989254 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065601779 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066402813 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065569784 seconds)
done (took 12.46584132 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066228065 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140398388 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096857344 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095831202 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086154845 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066963074 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076490726 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101186976 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06781913 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102145154 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087904686 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086274663 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114556662 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064304098 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066464531 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07013799 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067064187 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08284304 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101813062 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086770167 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11611293 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065569993 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093097038 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090062874 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088157693 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103790865 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069677066 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069598815 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069918686 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092846309 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088780173 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070143088 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06610885 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098330492 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093634024 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083967105 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066365285 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083595807 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066320786 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065708631 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067301712 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09922822 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080822589 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081464847 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069749421 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069164044 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067324333 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084004201 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09027546 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079101909 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087077502 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102779838 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068940217 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066044308 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064223917 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086709596 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065285209 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069797379 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06663606 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069008468 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066066746 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069439069 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081484616 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080545845 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070269526 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079988686 seconds)
  done (took 6.815082651 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084085345 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091327758 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083292481 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083645576 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06599167 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066380139 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06616038 seconds)
  done (took 2.035622202 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066693841 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088446778 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089975467 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089391693 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081574793 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08762168 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075601927 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06666312 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088325959 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067635645 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087947165 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101601373 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069767555 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074155923 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091171948 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066588583 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091163854 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066793116 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070014992 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091070069 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069237742 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096261973 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069786511 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066958026 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081259909 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066940269 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113757412 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071269014 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067772996 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069162324 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064274643 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107935945 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080321859 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074472393 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067180905 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081411524 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081292747 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064864822 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082947502 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074998626 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080275471 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067184318 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067619761 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064666879 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070975349 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076539535 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067283108 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066968332 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068724432 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086162872 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067411645 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080664862 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069391698 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.0723499 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068192171 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073103528 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076649593 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06729162 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086417189 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068114103 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083744708 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083592737 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08083921 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083220406 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069327327 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080419601 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080459805 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06930868 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068653737 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070715305 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083011264 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065269935 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068283215 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077573189 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069072835 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089948755 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089779108 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068439755 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.08037934 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066784572 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066278237 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067161327 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089570953 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071901349 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066636233 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070685647 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069824843 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064885041 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065478597 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070581733 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064904726 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068018246 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069212749 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069787165 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069286154 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083415384 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069060881 seconds)
  done (took 8.820438184 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068055322 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067958168 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069346087 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067188266 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068666233 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068097059 seconds)
  done (took 1.928161471 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093373117 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069008877 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080488521 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071598025 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105169615 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086894202 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087447747 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078444619 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083586801 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078407814 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08775042 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.0883918 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092127595 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072695521 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086443193 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071970096 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087275375 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074818898 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077560498 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072881604 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087105682 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072361005 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072421849 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081356855 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076008964 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072482273 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067224671 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079258676 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078060742 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078279436 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072143187 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076119706 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070864432 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078258543 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087214159 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071032152 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071832181 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077044844 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072143097 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075920654 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088432511 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073057986 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073837738 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077689133 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078411819 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.0707566 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077344993 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074833985 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086679235 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077664396 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07706699 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07155342 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076103073 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077047108 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070573927 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077658118 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077352444 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087359658 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07237141 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070349545 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068792388 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075347879 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078652075 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07535649 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078673961 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076982739 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070998931 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072904288 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072665318 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071288603 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077207189 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069684745 seconds)
  done (took 7.084915489 seconds)
done (took 28.166598363 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.554792755 seconds)
  done (took 2.040039693 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.618146498 seconds)
  done (took 2.12707767 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.36306646 seconds)
  done (took 7.868761657 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.400119565 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.525281198 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.722268386 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131927794 seconds)
  done (took 3.32223182 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.698985213 seconds)
  done (took 2.21467233 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.21462315 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201565838 seconds)
  done (took 1.941472411 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.375476608 seconds)
  done (took 1.88365417 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.13026001 seconds)
  done (took 2.640332977 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257480067 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175074551 seconds)
  done (took 1.943123314 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.473369493 seconds)
  done (took 1.981670218 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.862573916 seconds)
  done (took 6.371927159 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.211832521 seconds)
  done (took 1.769424745 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239078892 seconds)
  done (took 1.752682391 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.7110636 seconds)
  done (took 3.224608306 seconds)
done (took 42.595524629 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081167488 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082219641 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081098733 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079182789 seconds)
  done (took 1.827773196 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077543078 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073620378 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077935521 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074670478 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077705623 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074355599 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074736418 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076230963 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.0732931 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073640333 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07338408 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073220409 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07577517 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074694678 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07178471 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076494029 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076979184 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073330348 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076104307 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073152163 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070963917 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075168789 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075954969 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071996478 seconds)
  done (took 3.313749686 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077612203 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072931518 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075933009 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072275289 seconds)
  done (took 1.822331969 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079999824 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095161256 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090946981 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078874777 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093478251 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087246755 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069443569 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070050029 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071167177 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07829929 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068408416 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097038766 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089639089 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078268535 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08039185 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06613818 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068562544 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088491277 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078290675 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078854486 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070926229 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078082894 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068501497 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089532042 seconds)
  done (took 3.435854634 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086062504 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106162041 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082168996 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089148584 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092358294 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065514152 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088995284 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092433996 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127141889 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066022986 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070992733 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066146108 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073434358 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065698655 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081918968 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108801796 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111945833 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069100929 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097437856 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066090996 seconds)
  done (took 3.238362235 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073367171 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070120048 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066129427 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070448025 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077194746 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074082629 seconds)
  done (took 1.963343723 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069851585 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068132142 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067800702 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067412097 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072875532 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068060404 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066564381 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068206 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068888647 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067616051 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06735706 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066514896 seconds)
  done (took 2.347375285 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.202281597 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069175403 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069994057 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066277505 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07066815 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066875786 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081692901 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068117323 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092599672 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067125628 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066946792 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06869702 seconds)
  done (took 2.520158037 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207774784 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076307859 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240262292 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15128579 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111411909 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116289126 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112644751 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114767815 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142704538 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101303595 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169049257 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168173668 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108028994 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137971485 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089022778 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.10131442 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154749527 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163864529 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105756418 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168179401 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146585354 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126764202 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153910811 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104165543 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106540169 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122710285 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071934095 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080603304 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170819715 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133612876 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144584963 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111777751 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092640831 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178102228 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173176492 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14149995 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147589111 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084484987 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105351012 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135094049 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202693953 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092008595 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165542976 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109233351 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220629717 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134855651 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120402257 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12275491 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106558512 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090926242 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146995269 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186723652 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137653255 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088391783 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125335638 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115038145 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11517696 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11445954 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181880217 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164078506 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128508487 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072270621 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109274881 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154620703 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135033399 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108900538 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126094171 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092873295 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136140889 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156525424 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121184099 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145917197 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.118271105 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089465839 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120363088 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141533763 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128767548 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162428353 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125306328 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073602836 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124804054 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102899645 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081655948 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146022897 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075870259 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177770723 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099915075 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109548979 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126103014 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111581015 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112379285 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159567422 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144683709 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102843082 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065538452 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248479802 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123185191 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147475912 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088937222 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110367045 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118861026 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078398555 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139285505 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075955907 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125057443 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079579571 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129340859 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13172188 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078155639 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123924795 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104649702 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102104642 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134310702 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161797999 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088941647 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082660681 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170637999 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122450713 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104322572 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145596718 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158343311 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103034215 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102316958 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150444743 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181322543 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090247947 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164691663 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107390648 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084316151 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08836968 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124275297 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112676908 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124331351 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082500369 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118955998 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170400733 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075603364 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09650611 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135315183 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079687328 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08136104 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106286712 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105599542 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096259184 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100735883 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103454676 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136367556 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124132739 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106200013 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124645433 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09864127 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315227836 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089682643 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10326546 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105405211 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070981584 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137474799 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159425952 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080558514 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167200766 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125527099 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117207581 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120683607 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084340423 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14242022 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079718452 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070700257 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1453016 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111106143 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110894053 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153248421 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11670254 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126095211 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119456644 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134971787 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132294627 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131441507 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105917245 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089329968 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112630663 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127045215 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073350587 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091711003 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080024547 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105592533 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09607913 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08312868 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142301186 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124896758 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109900641 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113077587 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097225525 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149260648 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076792925 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129129424 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120856756 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096500334 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154548161 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154081194 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132113735 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09953464 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137160113 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070822565 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074123178 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088179848 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123188155 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082939735 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083296125 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260956859 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150379887 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131757648 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137811635 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124022378 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121704664 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156361823 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07037241 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119152423 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14845581 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123273851 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105054354 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090735439 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099934872 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144667796 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108580249 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184102417 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117470678 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125036047 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154282241 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102264429 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080246953 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103698249 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136022522 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104251657 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14532456 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100179279 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08874741 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110342185 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074946353 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099677377 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127517846 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11982625 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135572291 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116345636 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133271077 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078231535 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116659677 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122476284 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123238296 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064275297 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121743135 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163862785 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095301495 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11900965 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154090406 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07936936 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134686044 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175615299 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145335991 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084955529 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254233336 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121865863 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131172622 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123328245 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142748374 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108894948 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139338739 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111937827 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087550936 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088435821 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097947805 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105827573 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095407506 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107991192 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112851689 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096727979 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132697218 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104383292 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110349837 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120043877 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09942904 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092532021 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096740037 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177198858 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119875232 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172160893 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100672476 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145897565 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165420508 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075244483 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079723483 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078756648 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140790672 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084886209 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131120008 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107739583 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118262319 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124894895 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143518029 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096140112 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068916761 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110292556 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13395277 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125556375 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099038163 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104102101 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165478923 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101890196 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080297884 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114840801 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116429172 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103454192 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172432265 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061920463 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106141533 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076711 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080334808 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127833167 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294998959 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081208736 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104506508 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121133472 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11367126 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129627737 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104508815 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10956851 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127978357 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15170132 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129352237 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090652897 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112207748 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130121557 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159195524 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1060211 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097637828 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174951511 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154256507 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162589153 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087994515 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115310617 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115552885 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109245346 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13932738 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085035836 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164504032 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082647268 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137384142 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104448445 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089360652 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12925573 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108724328 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08862187 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149050066 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118138466 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083490147 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077902085 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118598224 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120899409 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107070162 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07609689 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140550403 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074430746 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133210733 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160984548 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081600143 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107961094 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097202472 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079694453 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106284022 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102346203 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087416571 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.241459075 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178021518 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089140937 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152721791 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135717552 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113925401 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138708068 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103705906 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640384976 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078637168 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15504235 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118132165 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175738177 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102031312 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11995534 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110990975 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123559332 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14634401 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105127733 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182626128 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132699168 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116617096 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080532191 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102720881 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104704915 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089065226 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108528978 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11516505 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117484645 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093270367 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11656484 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125457402 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082350327 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096503321 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157836241 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117541903 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144793771 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141350332 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08592673 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119066729 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13937669 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081533869 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121795518 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153182141 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106474848 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100066874 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081101256 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100495186 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158030839 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073636766 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158464925 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118558162 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.254758493 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11510512 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115092211 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132911972 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108588462 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122014151 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093391013 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112039964 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115826376 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082231044 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077704779 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107149759 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112523589 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098886412 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09903629 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100461117 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15404177 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072677954 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099613696 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115451101 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146568741 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174393272 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089495889 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083623285 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119156784 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11479668 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112817427 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122727058 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080063556 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082562598 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081310783 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078142113 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109970701 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113280306 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115635268 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112680653 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164004098 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083584307 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.233896484 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09630152 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106153209 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070155378 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079590039 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097139383 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098833367 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108511405 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111149854 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161068801 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096879241 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090907576 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092327182 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07436661 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08385798 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130045601 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111318721 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119303159 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098603715 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06277886 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107429818 seconds)
  done (took 59.400133602 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109372731 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084393871 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095352699 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145478582 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123231309 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202877084 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155150416 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189533934 seconds)
  done (took 2.759537104 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069030658 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096444773 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104037677 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084143997 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067212244 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06959594 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234228274 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082549934 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067307319 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099649305 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079304615 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070061608 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.431431406 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067045275 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068708139 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062589185 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068524652 seconds)
  done (took 3.449382564 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.392223355 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611816974 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.354470039 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072928567 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.483039561 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085748655 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.148873379 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129452984 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074050346 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538807562 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.409843854 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124839713 seconds)
  done (took 18.063941199 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07673317 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069997524 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084651886 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084681503 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074227026 seconds)
  done (took 2.024632884 seconds)
done (took 107.737240952 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081692471 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.606572034 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053436828 seconds)
  done (took 2.32205151 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084642966 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087242647 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085866303 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084797107 seconds)
  done (took 1.983674917 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075648154 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076974352 seconds)
  done (took 1.788113113 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234576458 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16558094 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097113303 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084660931 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079836853 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079498876 seconds)
  done (took 1.887275961 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073600611 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075470369 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07400438 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077479369 seconds)
  done (took 1.938674071 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077745197 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053047588 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054582772 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058676973 seconds)
  done (took 1.8852042 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088377045 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08053394 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07943639 seconds)
  done (took 1.888748427 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103147342 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086383327 seconds)
  done (took 1.832210828 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083494677 seconds)
  done (took 1.725216626 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101013452 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102300977 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134325304 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112012498 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141070573 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.111177066 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085411657 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086654738 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077364287 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087474663 seconds)
  done (took 2.680285959 seconds)
done (took 22.142888145 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080585115 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.369266352 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361486081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091245636 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670927142 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357508376 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986841717 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094115395 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115911927 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06876343 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085423932 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649876168 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.976820762 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323265745 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964582723 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.413584898 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649231893 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069074822 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068332434 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068397917 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.969491645 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068551379 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068646033 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068806209 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650784212 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37316653 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06937591 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.41876362 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068511826 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070753514 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355642858 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068753515 seconds)
  done (took 16.342669161 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07143552 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121726987 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074779445 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085337751 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071039479 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070474052 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07328002 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069700959 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123238781 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068545624 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086459373 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068720598 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.08978286 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06963208 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089243334 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06913586 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069797555 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069441585 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069601027 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069107274 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088001714 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068475069 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069253273 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070026298 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068801488 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081020086 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06947348 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068748463 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06981888 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070682284 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071858528 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069486435 seconds)
  done (took 4.100747461 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120002275 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128943137 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075672788 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106759551 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11565241 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070904063 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149600042 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094500722 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131507059 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06929236 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086317739 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068881858 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103450739 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069358991 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089673002 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068899216 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070386313 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06917499 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069009824 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069433613 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088516278 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068627148 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068953804 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070069712 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068623467 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083417349 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069358779 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069087006 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069473522 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070954164 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07224383 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069877685 seconds)
  done (took 4.355614878 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073823786 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076989331 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083999011 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085512371 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069792034 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072390673 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074045411 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070717362 seconds)
  done (took 2.263258337 seconds)
done (took 28.709636689 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079382122 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07005781 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073782245 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083268942 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073831245 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079467319 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069571915 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076722257 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073930876 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074442227 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076347679 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068006357 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072174023 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068757257 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075262406 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068517224 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081417317 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072350721 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080085953 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080074214 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071140519 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074273866 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07565591 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080012982 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080102316 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079437442 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078279058 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073858993 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069657547 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071209463 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077779399 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084807283 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068944136 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080227197 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067988042 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068493188 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072619624 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068415624 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079919893 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077600192 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069741708 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077413587 seconds)
  done (took 4.77994183 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089014382 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09390719 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085931057 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062085008 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068279519 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066302909 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090119502 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060979981 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060426438 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089769011 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056101238 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060161193 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066973238 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054579783 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06099477 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057117199 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062741632 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055967954 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060894486 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060885833 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089787531 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054033384 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079088918 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063995794 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056683901 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061951438 seconds)
  done (took 3.434980043 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075445914 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08671024 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090919908 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132755182 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107332898 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080652005 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080475555 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096454877 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09011741 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067821138 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071896039 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09388126 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090797789 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074657112 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068062563 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087272387 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084904274 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06979323 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074071775 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096015006 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088392095 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087045271 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097346718 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.0855155 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068036004 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070580304 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073277499 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08263796 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073599643 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078382023 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073056293 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072315402 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070662801 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080350558 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072628041 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.0706326 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093682964 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079376239 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080027546 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06961512 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077942952 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070510858 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094322617 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129400212 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068488862 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075963667 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072719199 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079256356 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068860672 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08975352 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080813518 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068716821 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072407513 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067945977 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068934685 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082403792 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071396878 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070862808 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078492994 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07538682 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094252119 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073880658 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086091043 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.0687375 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076958498 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068804586 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070658976 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068601239 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097815935 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070440685 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113057866 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070183133 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069896327 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078257722 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07704537 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075179128 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069391379 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085376634 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080010219 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073429569 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078492482 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07232465 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071755838 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.094013941 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071472114 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072243145 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070019884 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075473988 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071416143 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.0702318 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082771029 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068079613 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071930635 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08660132 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068717102 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070671591 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074396463 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074021623 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069018512 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080490986 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.0741836 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070267864 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078489459 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068766525 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07209717 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081700848 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075105967 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068174055 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073287406 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074525042 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070019329 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070587771 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071555758 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070585038 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077583491 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076133188 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073348071 seconds)
  done (took 10.829367903 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166895757 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15924805 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071602629 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.15033328 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077813989 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08093884 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152688009 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09690777 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069097241 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069096567 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070039667 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111880348 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107702906 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117134671 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079781645 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068806299 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086849252 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11604072 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15447058 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149151324 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08621377 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078218909 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070783116 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069990507 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071417437 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079540781 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086778282 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077639505 seconds)
  done (took 4.476458396 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082854509 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107499982 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076499831 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092206574 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092057139 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068653049 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071496144 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070913634 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082704264 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079338801 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068759684 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07556444 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075146238 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.0719064 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069846517 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076300502 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075595082 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069829557 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072078255 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074124256 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079745112 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093028265 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072984308 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068025414 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074209107 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068566713 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064416461 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086059524 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068942314 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.0969481 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067178929 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074004406 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082854336 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06922488 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068191859 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068698166 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068649876 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068145824 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070531575 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067370106 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066892108 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057566544 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067726129 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080296647 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075584515 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05674298 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073297377 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074199546 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074272741 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066211362 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071914681 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07160968 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072409037 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076459286 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073038697 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073978932 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070278954 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075470884 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077801203 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069259264 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06549536 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067131186 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073415534 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066134213 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077169509 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073771849 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067045738 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068374 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070266479 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075684383 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068554839 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072798066 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066366338 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070622935 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073384218 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070887932 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070314547 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067472403 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068464903 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069645793 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055937597 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068844171 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053940702 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071707337 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066923884 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067465219 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069496009 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073644166 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080908431 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070103816 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074468764 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06943718 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068089413 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071915125 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06138282 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071378211 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08455333 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083850789 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068720428 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066816022 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082535132 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074039263 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067535413 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056552166 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073991263 seconds)
  done (took 9.311305512 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092791063 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071070248 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086206129 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092840622 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088400804 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076052954 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07854394 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070498273 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084744049 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075319924 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079014874 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06908843 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079434623 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078484362 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071540093 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079295309 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073024954 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086692548 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083959422 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069264231 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077991366 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081888241 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091817638 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083782147 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081764823 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083506038 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09209981 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079379244 seconds)
  done (took 3.969106908 seconds)
done (took 38.450947546 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.753310062 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.926135789 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.749088921 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.1139439 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.005421405 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.808068217 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.888664128 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.744017228 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.931478138 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.783991543 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.948848324 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.920415781 seconds)
done (took 65.252456204 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.760670857 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.889841009 seconds)
    (2/2) benchmarking "String"...
    done (took 1.983926402 seconds)
  done (took 5.558085091 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.087262508 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.302951662 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.995025304 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.741898503 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.750634716 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.076820544 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.539066763 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.253854008 seconds)
  done (took 30.344091978 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.853214369 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.984284491 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.413738872 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.441338488 seconds)
  done (took 15.420265772 seconds)
done (took 62.940117926 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.755501967 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.789126662 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.760634665 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.728447435 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.805492903 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.756616008 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.22610408 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.963820182 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.746747838 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.731938213 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.748919236 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.184773471 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.746010149 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.20209328 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.745885892 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.753336947 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.801264907 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.326337141 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.906344116 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.759260155 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.761349767 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.765395804 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.748493488 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.750726731 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.77127095 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.743070565 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.187179355 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.748908277 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.366610602 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.745666568 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.776049128 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.24929047 seconds)
  done (took 204.733318485 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.747264285 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.776549054 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.856972665 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.757004146 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.339334986 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.933225631 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.872752219 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.36831833 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.751099821 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.768071432 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.900665865 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.746383241 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.921510676 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.760385743 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.775682047 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.750284384 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.948053563 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.933384713 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.779997131 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.924001088 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.773594464 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.727727879 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.699349322 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.894027429 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.755645243 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.846982893 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.915590142 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.776456366 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.948209854 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.922134994 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.786647551 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.77666774 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.971975604 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.620981082 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.753710439 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.756968418 seconds)
  done (took 169.222291679 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.142004989 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.750348551 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.747051927 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.748127372 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.756432097 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.749604276 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.871155742 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.872587041 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.356178364 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.555900652 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.802907872 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.563888846 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.747430468 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.817401391 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.761418784 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.750942808 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.764591598 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.775613337 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.750929085 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.750586491 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.873724781 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.763166539 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.788533191 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.756296374 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.752280872 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.755201264 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.122752919 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.750702189 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.750212418 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.754692544 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.011337724 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.750904188 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.751125438 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.640580694 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.402581263 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.840622672 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.751336194 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.756147366 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.752236212 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.971422098 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.750921763 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.753505669 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.752649871 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.754991636 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.926336586 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.75096007 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.8738247 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.750765445 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.251098103 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.751010317 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.752267239 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.731655242 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.425768553 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.751788268 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.751681795 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.75508631 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.751791574 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.752599947 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.757920427 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.603922656 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.826249625 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.753143521 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.752494646 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.754302007 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.75556111 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.753685174 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.889002024 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.752818141 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.804288082 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.81461917 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.990419349 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.873315375 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.754426057 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.820948711 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.847496401 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.75225224 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.751997274 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.75319659 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.753211702 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.835874403 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.751895478 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.887016928 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.759591277 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.755316986 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.805347625 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.82393716 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.752979708 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.637402539 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.753343652 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.750933342 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.06569989 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.8215268 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.752847634 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.754190536 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.755272496 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.886041278 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.876489626 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.535530544 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.756300668 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.541340273 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.756181753 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.753137762 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.904872475 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.754862974 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.928987771 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.755034006 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.837040354 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.757244818 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.756394176 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.75435718 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.786551287 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.756814491 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.815285568 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.753240686 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.129872643 seconds)
  done (took 401.25112786 seconds)
done (took 779.087591443 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.446824819 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.402454024 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.518335705 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.430341607 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.397672676 seconds)
  done (took 13.884928779 seconds)
done (took 15.574530935 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.843491514 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.846274 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.777246727 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.845056441 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.776414764 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.843674451 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.829691385 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.78241209 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.812225272 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.780001172 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.814369088 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.781320036 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.767767739 seconds)
  done (took 25.191088224 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.978128555 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.983805885 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.825690129 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.982831344 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.802286543 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.978845958 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.915571175 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.90431374 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.908439258 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.770566954 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.768312049 seconds)
  done (took 22.513114139 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.987053434 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.991100713 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.832434479 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.986039061 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.80558606 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.99143804 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.929176965 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.909166786 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.905349233 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.77090396 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.771073404 seconds)
  done (took 22.573512484 seconds)
done (took 71.969074091 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.764329607 seconds)
  done (took 3.455470059 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.79006095 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.94514426 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.776362385 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.769134807 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.762565526 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.765457634 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.766803018 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.77015519 seconds)
  done (took 16.039193585 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.761787487 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.761184608 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.763675183 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.760616405 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.762773394 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.763479801 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.765846937 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.763573428 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.76398282 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.762397414 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.763158053 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.765306557 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.766161567 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.763653941 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.761020714 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.767003215 seconds)
  done (took 29.907799405 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.764977994 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.764243735 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.76239466 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.76264539 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.763371416 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.763112354 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.762949663 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.760480172 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.762025704 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.762558724 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.764239608 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.762353506 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.764599882 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.763788476 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.762438893 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.762867705 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.762642622 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.764916367 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.767264663 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.760841165 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.76369424 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.76168139 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.764458391 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.765723318 seconds)
  done (took 44.018524093 seconds)
done (took 95.111803923 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.647728204 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.147086627 seconds)
  done (took 8.490811337 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.767450155 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.766296542 seconds)
  done (took 5.265119153 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.767183997 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.765611707 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.766704091 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.767182988 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.767238727 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.767700447 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.765724635 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.766902396 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.76633943 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.768692209 seconds)
  done (took 19.365834086 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.768000828 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.764635682 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.763998676 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.767699645 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.766313667 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.765376137 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.769232663 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.767713649 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.768432798 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.765034798 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.76827881 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.765630405 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.767106211 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.765407189 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.765510254 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.76639884 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.763782389 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.765296954 seconds)
  done (took 33.491844582 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.769846495 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.768041639 seconds)
  done (took 5.234596801 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.765271335 seconds)
    (2/7) benchmarking "second"...
    done (took 1.765859481 seconds)
    (3/7) benchmarking "month"...
    done (took 1.764293352 seconds)
    (4/7) benchmarking "year"...
    done (took 1.765285072 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.763705692 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.76743147 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.765822788 seconds)
  done (took 14.055010513 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.768684676 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.932461744 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.006120432 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.417861628 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.767445408 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.772656396 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.682889324 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.772470885 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.773125321 seconds)
  done (took 19.591925204 seconds)
done (took 107.188457198 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.585765935 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.76758532 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.14088997 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.870075355 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.786308499 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.108088611 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.792645017 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.061453335 seconds)
done (took 42.808530921 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.838832782 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.327614701 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.372606035 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.720663993 seconds)
  done (took 13.117983543 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.751095954 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.300738285 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.800020524 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.35566399 seconds)
  done (took 19.953405218 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.13571894 seconds)
    (2/2) benchmarking "read"...
    done (took 2.104427784 seconds)
  done (took 5.94519462 seconds)
done (took 47.556489634 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.770430206 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.770201608 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.769950578 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.766007569 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.77075004 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.767521743 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.768337171 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.76966368 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.768968827 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.767619051 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.769414992 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.76972896 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.769087479 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770545336 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.767601979 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767318936 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769423928 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.768486093 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76808352 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.767456647 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.767217676 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769047768 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.767059528 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.767573454 seconds)
  done (took 44.146160117 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.771945497 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.768068934 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.770655346 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.771246109 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.770182669 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.773401842 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.771466653 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.769266153 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.772217637 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.770450744 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769810964 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.769596988 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.77091273 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.767707759 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771588163 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.769583321 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.773744936 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768479403 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770123804 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.768053909 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.771819561 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768638842 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.769055222 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.771792246 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.768002155 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.768537404 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.772412236 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.769370668 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.77338545 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.768749273 seconds)
  done (took 54.812468619 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.777326718 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.782754792 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.772103429 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.771612414 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.771601241 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.770517281 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.773980724 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.772280671 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.771848718 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.771516154 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.773169283 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.772112632 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.772957812 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.77208767 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.773756312 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.771517272 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.772446129 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.771622455 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.772387576 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.771638 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.772267905 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.77359464 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.771208324 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.77310436 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.773054956 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.771121179 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.772994251 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.773439153 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.774189121 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.773806074 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.772841481 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.773487388 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.77383979 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.772343288 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.774091751 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.775304426 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.777942746 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.784211523 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.775070181 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.774119994 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.77415148 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.773961076 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.773673603 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.77433237 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.774275553 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.775634845 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.775532644 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.775260074 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.774203592 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.77329803 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.774656327 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.775751405 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.773825102 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.774272541 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.773762283 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.774437865 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.776228434 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.774719112 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.775503904 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.775298204 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.774829466 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.775810682 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.774799606 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.775510084 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.775961708 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.776208275 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.774638749 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.775641953 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.774602519 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.774107588 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.776389833 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.773411141 seconds)
  done (took 129.440847232 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.77682596 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.773536746 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.773374047 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.772433434 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773338938 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.776483693 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.773220171 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776050487 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774176727 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.775589226 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774345305 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.773993509 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774992283 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.778275541 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.778084107 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.774122057 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.776572346 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.774730429 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.777427217 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.775643528 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.776182128 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.775277343 seconds)
  done (took 40.761567765 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.778621773 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.777165558 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.776400376 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.775924517 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.774189806 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.778574065 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.778987983 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.777302444 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777363569 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775931873 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775399088 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777738245 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.776093331 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774035612 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.7747279 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.776831689 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.778522236 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.775422848 seconds)
  done (took 33.687041354 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.77700602 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.775538518 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.777068845 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.776802287 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.774430111 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.778041378 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.774849844 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.780289996 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.777556611 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.776702267 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.777926723 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778045365 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.778614483 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776313277 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778492254 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.776371718 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.779861835 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776291583 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.779545085 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.777334428 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.776353611 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.779342887 seconds)
  done (took 40.810635044 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.780904934 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.779961293 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.776536381 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.778442311 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.775577243 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.78007925 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.779428117 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.774688558 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.780701059 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.778957952 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.777799806 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.77997218 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.777369068 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.77775559 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.777489948 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777856354 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.779534958 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.779499369 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779314673 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.77680874 seconds)
  done (took 37.279201742 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.782425632 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780879983 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.780822026 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.781654966 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778220911 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.780647404 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.78205874 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.781968513 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.780283984 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.782109255 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.780987714 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.780687778 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.781674967 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.782322464 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.782315233 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781171047 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.783165448 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.782109137 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.781887686 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.781159807 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.782893484 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.782921208 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.78288675 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.780171829 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.780925842 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.781015038 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780437195 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.783025958 seconds)
  done (took 51.59139577 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783576735 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.781962939 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.778862302 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.778168811 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.781053347 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.77943895 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.779419031 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.779583552 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.781368344 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.77949688 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.781986839 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.780828836 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.782342684 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.782509423 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.782677152 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.783342191 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782044671 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.781378877 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781031184 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780339657 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.782949384 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783081159 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.784001704 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.778566793 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.779049986 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.782823845 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781327421 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.780540377 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.782176466 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.780073877 seconds)
  done (took 55.146827333 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.803804077 seconds)
    (2/2) benchmarking "in"...
    done (took 1.80332834 seconds)
  done (took 5.319644813 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.78070777 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.781951718 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.781802161 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.780744303 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.781463727 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.782186986 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.784315387 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.781577451 seconds)
  done (took 15.967480917 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.785938916 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.783395665 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.783785236 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.784353976 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.78487607 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.786916471 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790801836 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.786044173 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.786297865 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.787087216 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.795237785 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.796882296 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.790559859 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.78475564 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.7845601 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.789044313 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.785415302 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.786302879 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.783531489 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.786591979 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.78502576 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.78819688 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787388115 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.781672726 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.788600067 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.796461294 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.788444289 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.785857503 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.78796199 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.790915038 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.785655378 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.78509224 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.783956535 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.786011007 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.784113177 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.786787584 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.793987126 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.784666582 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.793093339 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.786641007 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.784487976 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.783231279 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.787682597 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.789712324 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.786986267 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.785954678 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.786497248 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.782691009 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.787290632 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.791734191 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.791713686 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.787231153 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.782512906 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.790109063 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.788554328 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.793243438 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.784262345 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.7906146 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.800453589 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.798932838 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.801198491 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.797158048 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.790482281 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.787903391 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.798175073 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.814587509 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.793852252 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.785366366 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.784394241 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.787560528 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.794878162 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.802882576 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.798672853 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.788472922 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.788388588 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.787192079 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790614581 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.791557971 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.794536732 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.792803236 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.787368784 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.788077064 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.798971573 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.815815914 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.790603998 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.788990161 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.788155941 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.79201669 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.793364618 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.801603049 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.789325081 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.789769991 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.791333138 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.789974292 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.791055502 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.7903458 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.790644527 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.792706507 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.787611874 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.789183395 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791550535 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.795457814 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.802965734 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.789041912 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.790226569 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.79598583 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.788702707 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.792008189 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.796406715 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.790258945 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.791031828 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.791642592 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.798901689 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.787677506 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.796785065 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.802411413 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.792447857 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.793036751 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.790564398 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.791397038 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.803600791 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.821428753 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.789917832 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.789336912 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.796687631 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.807187398 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791533821 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.794913983 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.790159644 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.786441232 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.787090738 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.793821744 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.788773333 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.795281535 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.7925524 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.793123161 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.789703353 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.792527604 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.790486937 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.793486215 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.793296625 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.792256219 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.794428927 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.796634885 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.791833944 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.795583193 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.798664024 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.792025266 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.797608571 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.793512564 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.791917154 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.793647821 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.796294633 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.794258462 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.796934317 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.794443313 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.7941901 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.793361225 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.793710194 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.792508341 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.793377557 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.796140134 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799764222 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.795549599 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.799944421 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.792286197 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.792007939 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.794441121 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.794253589 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.794704306 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.79546774 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.794600892 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.800040625 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.803233759 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.791405037 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.793088141 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.797458007 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.795793345 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.794966992 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.795410773 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.800414351 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.805517298 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.794445299 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.802747315 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.792811341 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.793610811 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.793758121 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.796443751 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.795365757 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.796471353 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.798287137 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.803222472 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.809074722 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.805515405 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.797802674 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.801580326 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.798161311 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.80548327 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.799550918 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.794925191 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.795550482 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.795732274 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.794137391 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.796982819 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.797440304 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.798680703 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.796758664 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.798668907 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.796611729 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.795381237 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.794526175 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.797516179 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.79616963 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.793301005 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.797636818 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.795015554 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.797820943 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.793587732 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.795819335 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.797671588 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.795092778 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.796667511 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.803210406 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.793557885 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.800153906 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.799240945 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.797608803 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.798454971 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.798348138 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.79780031 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.796956761 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.80555492 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.79895466 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.798067503 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.804865501 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.797979083 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.799953676 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.798668966 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.795022157 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.79605033 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.802137484 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.805829106 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.797067733 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.798064804 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.798094537 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.79789223 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.797355457 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.803135825 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.794635365 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.798250276 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.798035571 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.801469746 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.793335665 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.799501481 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.800447946 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.798494504 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.800253237 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.798829368 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.798766779 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.799733099 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.80000126 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.798840794 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.799884638 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.802089753 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.809372112 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.802774541 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.800459564 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.800407653 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.801341634 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.803033452 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.799859383 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.800759098 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.79935719 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.813434523 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.806799962 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.804208063 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.801406657 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.798624359 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.804328907 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.801495959 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.807981149 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.800391833 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.799699167 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.799679842 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.799999215 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.795479327 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.801876828 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.800153322 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.801243392 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.802277256 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.804958317 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.799334098 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.8002653 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.800430321 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.800080532 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.800073551 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.797943763 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.801371786 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.802368396 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.804148044 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.799056175 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.802234493 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.804161369 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.800407751 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.802892859 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.802207027 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.800237621 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.802989685 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.805874056 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.801348572 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.805733911 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.810064195 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.804501505 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.813089632 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.804383194 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.810570803 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.801586546 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.805805723 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.809614931 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.800044207 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.801301701 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.80440178 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.801783909 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.808390645 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.798811596 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.806209879 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.807763688 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.800980922 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.801461574 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.80253579 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.799516635 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.80299274 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.802423673 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.811480181 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.804624677 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.810745905 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.808288181 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.797699234 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.802425034 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.800946069 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.802483195 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.807006674 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.803032205 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.802762065 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.803322235 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.802247592 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.802438823 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.803704115 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.802281812 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.801060215 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.801625002 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.81013228 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.804781491 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.809567161 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.803218868 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.810828984 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.802790566 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.809915074 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.803722759 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.806470191 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.803941989 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.80631578 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.806097527 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.804409107 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.807811229 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.804222891 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.807606624 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.809923899 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.804783905 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.809189758 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.805848485 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.80583477 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.805235553 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.815793705 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.831612212 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.806511793 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.809782261 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.802446738 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.805734302 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.809760513 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.804205074 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.805104071 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.808601985 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.819026009 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.814566825 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.80409852 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.807545813 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.807600415 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.805067516 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.805416067 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.804996141 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.805922022 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.805639349 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.805612941 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.806219099 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.809908327 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.804589135 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.808075452 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.807242388 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.808225299 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.817770474 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.80540768 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.807794047 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.806665299 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.806366984 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.80804247 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.80743749 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.806086901 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.808628825 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806977242 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.807950758 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.817152628 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.815735004 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.810489565 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.807238283 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.806420463 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.807871877 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.809833712 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.807873681 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.807885269 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.807454797 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.810561203 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.80769814 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.809650071 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.808916612 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.808995425 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.808209011 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.808266519 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.812393896 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.818984006 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.809947085 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.804404342 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.807630518 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.809191758 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.808688749 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.810207119 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.81802767 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811002081 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.822212143 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.81971627 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.81308221 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.808290145 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811852826 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.822100834 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.808912334 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.809792013 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.808859505 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.81235471 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.811573498 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.814439445 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.808866963 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.815266183 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.810431326 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.810650255 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.818328028 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.810317443 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.80925125 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.812237391 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.817704294 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.8097101 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.808455889 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.808165315 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.809169731 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.815216594 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.811949774 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.811354338 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812055199 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.809756845 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.811860755 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.815676753 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.810074183 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.811445277 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.806992781 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.810763383 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.810488575 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.808740638 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.807221663 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.811075947 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.814254821 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.814650839 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.82195475 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.809165639 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.813832447 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.813229649 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.811855746 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.811809135 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.810506647 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.80717009 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.807788089 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.811571374 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.810839202 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.813610599 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.815521199 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.810785701 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.814960574 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.812364581 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.811401287 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.818170931 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.823583778 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.820559683 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.80913257 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.811550159 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.812660293 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.812820693 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.810278132 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.810523036 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.812658422 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.814058986 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.812227779 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.810882541 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.812238366 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.815321378 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.829232759 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.811543223 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.811477864 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.813151582 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.815962089 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.810871262 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.809668077 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.812834235 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.814550719 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.814883671 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.823841859 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.813305959 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.821016387 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.813422035 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.815559743 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.817419907 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.816888115 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.822908254 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.817773505 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.812418759 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.81337874 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.819242015 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.833190927 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.814420766 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.825530824 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.845264508 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.815000782 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.814313548 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.814726351 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.816383185 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.814935732 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.816784309 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.813558899 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.813280844 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.8119434 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.812103981 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.816449753 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.822410038 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.815890588 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.812648171 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.814168809 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.811578126 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.814969651 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.814003689 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.813391507 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.814290381 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.814117911 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.814880131 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.81363523 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.815246751 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.82862514 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.82815221 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.813831363 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.815267975 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.812216175 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.817081428 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.8194644 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.829257918 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.824771923 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.812836848 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.815328489 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.816194719 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.814422201 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.811186837 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.813830371 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.816363542 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.818375907 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.813906399 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.830082296 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.826198336 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.819970074 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.817894864 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.81661532 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.815358031 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.817163929 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.814756998 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.816882913 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.818126905 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.817405943 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.8202707 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.817011741 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.816054905 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.821087562 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.824208996 seconds)
  done (took 1076.306327623 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.813694331 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814134955 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.816192842 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.813596202 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815300679 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.814574554 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814317376 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.813685786 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.814236582 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.81430628 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.812860666 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813970048 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.814595621 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.814566331 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813383183 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.812443751 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814723577 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.813854612 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.815904431 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813285557 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.813757136 seconds)
  done (took 39.844008163 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.817272828 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.813348439 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.813664995 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.816657328 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.815646997 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.81729534 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.815504987 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817216171 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.818499845 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813931777 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.81776956 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820114015 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.815367276 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.814976041 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815029272 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.817590763 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.818275111 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.815825802 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.818884389 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.816622843 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.818546256 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.817381364 seconds)
  done (took 41.713271388 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.821217193 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.821644747 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.820617015 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.816266044 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.82189957 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.815312612 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.820628847 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.81908569 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.819215729 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.82303261 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.821760963 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.822910359 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.830054447 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.826208572 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.822674097 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.820407216 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.964087255 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.821034782 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.820620506 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.820716564 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.817055474 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.825931794 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.816036707 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.817182066 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.820426383 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.82250783 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.821787485 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.81824566 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.820889168 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.822697074 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.825866703 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.821492699 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.820893338 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.822486136 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.82143478 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.823954963 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.826909033 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.823266291 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.81823638 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.818493191 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.832776231 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.845552427 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.821888974 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.82787173 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.820886731 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.821046132 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.826949073 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.832523852 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.817874419 seconds)
  done (took 91.191941716 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.821881262 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.821824701 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.818732774 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.821172952 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.821623807 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.82264788 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.822225789 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.820074462 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.817857728 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.820856041 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.822810234 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.819387577 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.817512891 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.820692615 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.822578746 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.817478141 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.816645092 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.818904274 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.818979781 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.818121622 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.819039711 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.821238745 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.822202218 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.818609044 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.822087659 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.820111724 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.819325433 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.820108562 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.818863142 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.821654849 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.825263655 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.825370884 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.82523785 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.822870907 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.820628499 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.82338155 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.824038735 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.824955935 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.822101307 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.818882957 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.824447606 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.822481168 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.824536217 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.822493849 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.819782161 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.819016258 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.819484688 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.820861271 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.819680586 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.822276775 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.823356148 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.818475134 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.82061862 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.819176902 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.822611007 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.822203121 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.819396026 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.819033661 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.824182479 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.821817565 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.822260262 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.823239106 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.822245821 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.822580555 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.824790513 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.819708759 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.821381281 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.824611168 seconds)
  done (took 125.593859978 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826132269 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.824743354 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.825802389 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824692352 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.826512687 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.825989128 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.824417879 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.82453023 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.824992549 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.824202917 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.825153529 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.82464598 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.825861876 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.82489242 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.826600585 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.825885853 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.824841128 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.82546679 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.826664663 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.825441713 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.826044546 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.825144626 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.82686465 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.826216057 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.826510841 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.825748585 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.825491614 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.826894753 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.825350785 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.827176219 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.827026256 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.825327953 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.825941206 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.824698901 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.826894794 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.825810233 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.826749196 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.828342533 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.82707239 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.826966445 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.826811958 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.826536218 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.828166027 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.825450675 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.826705259 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.826054418 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.827478871 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.829186106 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.828745866 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.82796526 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.82804164 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.827253848 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.82821747 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.827683853 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.829273719 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.82694339 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.827274732 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.828220902 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.827355509 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.828291772 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.826663428 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.827498947 seconds)
  done (took 114.9950101 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.828974259 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.826905019 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.824474322 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.823805819 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.827764481 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.824374077 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.8273808 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.828091387 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.827131678 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.826655941 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827772467 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.825448922 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.825179089 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8281056 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.827830396 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824828562 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.82523892 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.824889249 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.827489677 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.82558876 seconds)
  done (took 38.284203495 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.825371489 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.828607867 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.824239777 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.827393744 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.8275021 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.826034637 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.82828391 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82831108 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.825379435 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828879838 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.829115573 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.828341595 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82541581 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.827394326 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.828350805 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.828656527 seconds)
  done (took 30.99391792 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.827594194 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.829673926 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.829898776 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.829822543 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.826528541 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.825714483 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.830112597 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.825744788 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.827345821 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.831565683 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.830043459 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.829779634 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.829808599 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.830608089 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.827198042 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.830251038 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.828198965 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.82792054 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.829693267 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.83000994 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.828142913 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.826491228 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.832551977 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.830025951 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.828074837 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.828299727 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.827788327 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.828870568 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.828031021 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.831789442 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.829275454 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.828709441 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.828933057 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.826411457 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.832018612 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.827803161 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.832426232 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.831785742 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.831567142 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.835147055 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.833197653 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.833619864 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.83587104 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.836075827 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.831562344 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.832673798 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.828642048 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.829559967 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.827506979 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.8290415 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.830653895 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.831444757 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.832719616 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.832805918 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.832459087 seconds)
  done (took 102.406793631 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.831491103 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.832923685 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.827824227 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.833595508 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.83378086 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.83090804 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.832142475 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.829395766 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.830490712 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.832001338 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.832576102 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.831807014 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.829668824 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.833853049 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.82821908 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.834325569 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.830620083 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.829023462 seconds)
  done (took 34.725410072 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.832095016 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.830086761 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.833439044 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.831777185 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.830421714 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.833369719 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.82968215 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.83462857 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834898196 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.831698528 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829076089 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.836444545 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834208016 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.833752342 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.831185006 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829246551 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.833247979 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.833837132 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.832030842 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.83105215 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.835265748 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.833960348 seconds)
  done (took 42.078062423 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.83754987 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.834535465 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.851488628 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.859116843 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.858559281 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.872758351 seconds)
  done (took 12.87692559 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834553086 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834918302 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.832823871 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834572916 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834132599 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829978525 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832623507 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833317678 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83584071 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834553717 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832388901 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835546707 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834041864 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83313886 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836202886 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833130558 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832796868 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833503417 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831897061 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835574786 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833840981 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836357417 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833890279 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833210099 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833304884 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834461415 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837442101 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833185402 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832804702 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834889961 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837027425 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83337848 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83584978 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833457548 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834883384 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836615413 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831377037 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837514782 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836336389 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833659929 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.836977437 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837366804 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837190722 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836272485 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836660467 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835450538 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834804788 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832567713 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834082803 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836361559 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837062602 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833012824 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837641332 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838646116 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837910087 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838471245 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835834437 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836414593 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83712773 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834189146 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833917344 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836465127 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836577108 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839582101 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837407485 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835064233 seconds)
  done (took 122.875869614 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834861817 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.835941126 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832659897 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834233794 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833332812 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834488531 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835259081 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835473123 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835978055 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835376673 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837096675 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835287285 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8356394 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835126972 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83465942 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832789035 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833941992 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83428498 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835363576 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839319474 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837745761 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836057679 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836342094 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832531282 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828475466 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832145468 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82874269 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828974678 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830256275 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826589986 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829219135 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830100172 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830215245 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.829305636 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822787134 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817646387 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817509695 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818952518 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818681788 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823747798 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816318988 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819631305 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816323256 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817120225 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818181312 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818060314 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817121219 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816562582 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816105489 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816920932 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819025254 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81671553 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816220617 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815836784 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815798821 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817810375 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817429325 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816554466 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816489758 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819034251 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815430894 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816685037 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819689144 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816447716 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816195562 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815564829 seconds)
  done (took 122.267352318 seconds)
done (took 2506.814796516 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.859442558 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.87188369 seconds)
  done (took 15.476279634 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.984485636 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.93486765 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.819470998 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.864026759 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.818446545 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.838042535 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.836662431 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.818496199 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.819315153 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.820420406 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.818868067 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.006058556 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.84144344 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.818937179 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.819495519 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.91191973 seconds)
  done (took 51.678621645 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.825796112 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.823312 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.83625369 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.827238996 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.82324835 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.843284933 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.860042685 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.825805954 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.884739874 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.836291194 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.942727705 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.837005329 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.821418987 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.89532157 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.83825364 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.838612718 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.923567912 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.905910343 seconds)
  done (took 35.136577576 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.903722571 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.823606955 seconds)
  done (took 10.483027963 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.834865371 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.818511669 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.834614038 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.829651139 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.828978005 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.825474705 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.828253133 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.852736889 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.838381977 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.849614302 seconds)
  done (took 70.093072117 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.826988122 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.822719192 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.82226484 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.819697757 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.81590651 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.819049955 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.820422996 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.816086688 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.519296906 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.85923018 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.829986423 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.82589165 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.821723196 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.824129892 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.818255002 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.845943877 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.962222296 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.81820928 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.818124178 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.827426981 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.819152893 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.890917984 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.834786635 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.822046914 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.852828037 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.519308434 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.830116754 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.827294701 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.931400468 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.816866832 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.820797338 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.823480521 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.82483455 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.217520853 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.12273791 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.823764735 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.828072671 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.828146524 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.816008454 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.953687928 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.823588452 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.824212287 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.75399993 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.106744811 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.931399738 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.861016837 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.188142599 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.822494291 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.820116179 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.847177224 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.819914095 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.818696612 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.831655104 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.32812217 seconds)
  done (took 130.068169538 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.81326341 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.073476382 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.964903911 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.809119411 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.099104018 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.018839705 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.811073044 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.859728604 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.810426588 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.040783363 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.976100136 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.917502516 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.811237541 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.8091431 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.809177839 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.807369182 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.967446465 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.882229844 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.812411869 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.803783476 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.840285462 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.05500061 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.934928434 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.810261567 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.8268809 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.017578089 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.935468005 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.916032422 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.091400611 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.802804919 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.871589345 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.808757769 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.803063507 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.801025556 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.963839985 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.903486391 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.893499375 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.807220756 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.803466238 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.801946898 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.48226755 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.00071705 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.905874851 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.951710118 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.052318867 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.009748093 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.591822079 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.799701595 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.541510249 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.964659867 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.037757258 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.041625842 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.929151412 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.803801417 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.057436015 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.802764727 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.806356604 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.037645085 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.031271879 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.907632778 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.80554262 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.799826754 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.800719031 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.049401022 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.803242308 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.898418946 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.805024616 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.799674772 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.898258851 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.909727183 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.034000024 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016800891 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.83679352 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.124964843 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.278639236 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.052490937 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.871395332 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036620276 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.802866952 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.799783148 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885638712 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.643537936 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.962577403 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.055128788 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.058273937 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.838944806 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.530614391 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.800096296 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.030516118 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.027656598 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.102314687 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.046798647 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.954943259 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.000377968 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.798627186 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.799756825 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.049811202 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.940334029 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.806464983 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.160982881 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036280881 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.375795439 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.83095912 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.113307442 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.934232581 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.803326125 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.441133157 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.800735245 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.027397137 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.841326121 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.801529842 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.800771404 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.023160485 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.875498788 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.798971487 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.427129681 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.865384376 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.801972804 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.037081874 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.801839536 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068559227 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.804785201 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.042399811 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.952802029 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.834635357 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.973318851 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.043740932 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.804091376 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.06583574 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.049237359 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.919437203 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.022755752 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.432765981 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.800815135 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.093167042 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.802017768 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.799347643 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.972911866 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.8001208 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.977180641 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.80255806 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.13827436 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.828622398 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.957212577 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.804229146 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.059532623 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.838447145 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.854730153 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.805423282 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.929581836 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.803130527 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.688884975 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.956738354 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.804263423 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.802472957 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.341568284 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.802058266 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.959021676 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.036852802 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830389519 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.87778453 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.473011433 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.799811058 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.88983736 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.828580285 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.150161882 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.802995885 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.959919167 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.806192796 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.343928523 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.802690917 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.045356147 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.9879649 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.806567273 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.803081945 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.70592828 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.800810022 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.802770699 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.965130204 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.832047998 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.802798358 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.008284521 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.806227979 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.934643016 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.806049553 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.8811115 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.15597031 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.801848327 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.803746899 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.801816942 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.802921956 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.803140462 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.013524232 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.834917967 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.330887487 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.943124551 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07587314 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.123493966 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.057743135 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.84844755 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.806015917 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.056386354 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.805273953 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.86828423 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.81251296 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.826050953 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042121021 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.805683726 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.015413434 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.089634711 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.736153342 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.854308513 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.805938374 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.803928314 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.765852875 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.958142775 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.900956435 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.80830729 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.805412851 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.92539615 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.930246838 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.019349031 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.809778967 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.93449401 seconds)
  done (took 888.063007613 seconds)
done (took 1202.742808027 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.803950365 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.801226567 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.793199248 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.806618609 seconds)
  done (took 28.939477785 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.811786813 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.813090509 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.812389158 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.809990245 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.821134235 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.811835594 seconds)
  done (took 12.619069345 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.910664414 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.804422659 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.807661914 seconds)
  done (took 21.261358678 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.881981817 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.228622435 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.923927588 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.251129866 seconds)
  done (took 10.025828155 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.815607564 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.817959512 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.811066657 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.819879191 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.814545808 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.814630885 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.821475314 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.827322309 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.814755384 seconds)
  done (took 18.098730408 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.285878822 seconds)
done (took 96.967190325 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.108939721 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.164308763 seconds)
    (3/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.999931477 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.918398201 seconds)
    (5/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.423065498 seconds)
    (6/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.789635474 seconds)
    (7/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.558171132 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.933467419 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.884320508 seconds)
    (10/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.919772165 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.101835533 seconds)
    (12/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.831381016 seconds)
    (13/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.107194888 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.852232718 seconds)
    (15/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.271094458 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.786088918 seconds)
    (17/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.899808546 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.831769312 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.988864278 seconds)
    (20/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.808990762 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.100359044 seconds)
    (22/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.933107614 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.078895785 seconds)
    (24/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.002491812 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.741742405 seconds)
    (26/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.632502875 seconds)
    (27/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.705554216 seconds)
    (28/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.649407398 seconds)
    (29/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.972608086 seconds)
    (30/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.318262882 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.913851958 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.5930764 seconds)
    (33/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.641626011 seconds)
    (34/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.47954161 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.054100429 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.327929359 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.209420334 seconds)
    (38/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.912113662 seconds)
    (39/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.287218014 seconds)
    (40/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.219525626 seconds)
    (41/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.188371275 seconds)
    (42/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.896268498 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.741862251 seconds)
    (44/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.897731578 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.027211739 seconds)
    (46/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.951706197 seconds)
    (47/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.817974658 seconds)
    (48/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.806059171 seconds)
    (49/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.730982348 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.014032381 seconds)
    (51/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.832177784 seconds)
    (52/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.255261948 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.162644818 seconds)
    (54/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.934046584 seconds)
    (55/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.057227668 seconds)
    (56/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.906187137 seconds)
    (57/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.961604633 seconds)
    (58/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.890215842 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.866733962 seconds)
    (60/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.87461964 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.884103888 seconds)
    (62/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.816518163 seconds)
    (63/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.891355823 seconds)
    (64/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.009730379 seconds)
    (65/309) benchmarking ("sort", Float32, false)...
    done (took 5.583729282 seconds)
    (66/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.178741819 seconds)
    (67/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.727643419 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.010830123 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.105911614 seconds)
    (70/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.812301904 seconds)
    (71/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.031083797 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.914404796 seconds)
    (73/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.264598531 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.187642575 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.146697403 seconds)
    (76/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.96459103 seconds)
    (77/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.318688608 seconds)
    (78/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.134863004 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.838257788 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.22856996 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.141630883 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.801909294 seconds)
    (83/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.179635057 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.480931604 seconds)
    (85/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.337021384 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.920639324 seconds)
    (87/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.212838441 seconds)
    (88/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.978716275 seconds)
    (89/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.928705923 seconds)
    (90/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.406581361 seconds)
    (91/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.795779039 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.837592126 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.881717038 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.839133634 seconds)
    (95/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.810679804 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.83390096 seconds)
    (97/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.798180554 seconds)
    (98/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.666046668 seconds)
    (99/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.171689534 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.455599489 seconds)
    (101/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.913437259 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.508779253 seconds)
    (103/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.874058198 seconds)
    (104/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.307592669 seconds)
    (105/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.8004266 seconds)
    (106/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.983127146 seconds)
    (107/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.820597355 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.812117278 seconds)
    (109/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.943724245 seconds)
    (110/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.82715267 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.047939558 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.044778416 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.810247207 seconds)
    (114/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.180779828 seconds)
    (115/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.274176271 seconds)
    (116/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.503921895 seconds)
    (117/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.133247246 seconds)
    (118/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.839518644 seconds)
    (119/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.89367811 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.812748331 seconds)
    (121/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.105537167 seconds)
    (122/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.175001678 seconds)
    (123/309) benchmarking ("sort", BigInt, false)...
    done (took 6.811885437 seconds)
    (124/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.842864313 seconds)
    (125/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.835778176 seconds)
    (126/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.769094988 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 2.327157715 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.833418673 seconds)
    (129/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.979541411 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.076375086 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.98254769 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.036472588 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.020727963 seconds)
    (134/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.82157711 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.068125263 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.887240484 seconds)
    (137/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.978412526 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.937256189 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.798803994 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.842322638 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 3.759236464 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.931093886 seconds)
    (143/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.805525148 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.829392827 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.08309 seconds)
    (146/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.436536437 seconds)
    (147/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.812069302 seconds)
    (148/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.903612863 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.041621575 seconds)
    (150/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.837877916 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.841876964 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.06418541 seconds)
    (153/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.917633328 seconds)
    (154/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.91308194 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.844217948 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.122350351 seconds)
    (157/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.951612614 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.754939005 seconds)
    (159/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.999624831 seconds)
    (160/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.990250424 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.838751454 seconds)
    (162/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.250553326 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.822629142 seconds)
    (164/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.902422281 seconds)
    (165/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.153367561 seconds)
    (166/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.011840494 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.876886208 seconds)
    (168/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.366564159 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.963682562 seconds)
    (170/309) benchmarking ("sort", Int8, false)...
    done (took 4.839903426 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.106549823 seconds)
    (172/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.104254618 seconds)
    (173/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.902691513 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 3.528402463 seconds)
    (175/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.165769407 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.060294503 seconds)
    (177/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.11063711 seconds)
    (178/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.095333506 seconds)
    (179/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.399735711 seconds)
    (180/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.273050307 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.823606371 seconds)
    (182/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.84122874 seconds)
    (183/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.827992581 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.845684311 seconds)
    (185/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.8353437 seconds)
    (186/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.94526557 seconds)
    (187/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.162691079 seconds)
    (188/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.896880043 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.62831091 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.860021124 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.472060618 seconds)
    (192/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.828433523 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.877705398 seconds)
    (194/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.061934277 seconds)
    (195/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.954263145 seconds)
    (196/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.297618767 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.826983084 seconds)
    (198/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.058985033 seconds)
    (199/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.042511074 seconds)
    (200/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.959255221 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.512206836 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.830533007 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.898295417 seconds)
    (204/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.82442841 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.86877687 seconds)
    (206/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.00747069 seconds)
    (207/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.834050918 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.925674223 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.821871829 seconds)
    (210/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 3.304451838 seconds)
    (211/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.079602467 seconds)
    (212/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.152684094 seconds)
    (213/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.320065063 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.609663258 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.022369056 seconds)
    (216/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.922938749 seconds)
    (217/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.10485815 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.724347068 seconds)
    (219/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.022663311 seconds)
    (220/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.12652277 seconds)
    (221/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.809267272 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.205743203 seconds)
    (223/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.808114976 seconds)
    (224/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 3.506252548 seconds)
    (225/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.906881765 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.927659188 seconds)
    (227/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.378551693 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.840123501 seconds)
    (229/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.840194021 seconds)
    (230/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.591167605 seconds)
    (231/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.93520964 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 3.207593805 seconds)
    (233/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.951791731 seconds)
    (234/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.393888756 seconds)
    (235/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.939820315 seconds)
    (236/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.914809897 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.915466314 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.896459877 seconds)
    (239/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.803620964 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.822595319 seconds)
    (241/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.077451449 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.15930029 seconds)
    (243/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.885377857 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.158023862 seconds)
    (245/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.842904477 seconds)
    (246/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.907451855 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.204866531 seconds)
    (248/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.8835786 seconds)
    (249/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.298275369 seconds)
    (250/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.181163138 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.774511173 seconds)
    (252/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.853002693 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.911784087 seconds)
    (254/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.016685351 seconds)
    (255/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.805672767 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.903506456 seconds)
    (257/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.952904777 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.848771428 seconds)
    (259/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.38268341 seconds)
    (260/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.804347735 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 8.29542818 seconds)
    (262/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.946428241 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.182205095 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.458150808 seconds)
    (265/309) benchmarking ("sort", Float64, false)...
    done (took 5.579470821 seconds)
    (266/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.021385048 seconds)
    (267/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.860609897 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.148073707 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.907170233 seconds)
    (270/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.961850244 seconds)
    (271/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.808143413 seconds)
    (272/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.859296732 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.511612255 seconds)
    (274/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.015910176 seconds)
    (275/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.890486329 seconds)
    (276/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.932598163 seconds)
    (277/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.118239756 seconds)
    (278/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.390338171 seconds)
    (279/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.295961797 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.042947851 seconds)
    (281/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.335686488 seconds)
    (282/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.976173734 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.905609332 seconds)
    (284/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.842590029 seconds)
    (285/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.974352028 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.948299096 seconds)
    (287/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.748715499 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.82118027 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.964736714 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.934966011 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.227264244 seconds)
    (292/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.926507958 seconds)
    (293/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.982683421 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.862593217 seconds)
    (295/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.950889784 seconds)
    (296/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.825466772 seconds)
    (297/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.953663764 seconds)
    (298/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.825956446 seconds)
    (299/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.941440809 seconds)
    (300/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.81021862 seconds)
    (301/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 8.134411795 seconds)
    (302/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.86038779 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.215506461 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.843920117 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.844169088 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.157838279 seconds)
    (307/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.928354318 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.210296786 seconds)
    (309/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.039322156 seconds)
  done (took 1001.76664024 seconds)
done (took 1003.58208714 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.863875277 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.84983372 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.834964825 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.856534457 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.948655379 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.864187817 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.844542583 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.837843709 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.88495951 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.886550264 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.833389323 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.863873039 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.83611325 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.836039464 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.839627793 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.84577623 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.139915965 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.857095834 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.852208018 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.846403175 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.850887665 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.832487633 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.885520116 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.86451734 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.83960994 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.838387258 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.839864258 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.853684654 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.946796612 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.839165741 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.839570134 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.846432642 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.137254988 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.854304971 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.831703799 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.854982161 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.849273834 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.844909489 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.840868708 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.867671836 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.270999978 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.838558561 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.837150012 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.838150391 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.837006496 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.841867654 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.839922009 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.845446497 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.848287197 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.850269708 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.267547513 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.855020106 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.839652325 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.837666235 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.848224778 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.835962019 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.844610795 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.852356944 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.854886959 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.852548532 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.128291838 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.862787393 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.842434911 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.853478246 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.843340424 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.301921291 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.836904294 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.844050352 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.270473583 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.845344828 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.303864558 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.849192506 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.839841728 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.852105979 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.869231607 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.139602495 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.855003013 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.838743342 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.845411517 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.836208714 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.847302491 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.851762547 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.842348167 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.842709386 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.851788683 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.869235021 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.849064616 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.839671598 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.849214378 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.857711551 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.845097848 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.8488183 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.842692483 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.836210117 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.85356339 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.848244776 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.84238701 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.841350762 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.844691369 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.852048421 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.270473874 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.858742338 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.838531996 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.839344544 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.842235013 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.853054563 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.268224709 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.842283417 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.862296135 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.887456114 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.843055719 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.134511641 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.864010371 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.855732062 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.849101876 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.846471885 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.837579374 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.133866881 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.289429267 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.857550659 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.846504231 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.839347112 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.854587897 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.843737014 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.837177168 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.145183847 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.864282106 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.85424448 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.961692489 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.851484703 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.874269854 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.840236877 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.843709695 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.873536741 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.856696719 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.871567998 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.849105956 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.856453996 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.855495719 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.839084752 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.851676344 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.852224991 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.843857718 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.848642371 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.837309959 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.874631293 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.856032068 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.856201667 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.864529527 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.963858995 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.83995744 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.134672699 seconds)
done (took 289.055057415 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.909818984 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.835874734 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.937729709 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.836372974 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.920673308 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.92376681 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.834407725 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.834793927 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.837312593 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.210710527 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.836546837 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.838127752 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.836393643 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.836259427 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.923365057 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.837685036 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.836107808 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.173600456 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.840093142 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.912232328 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.838968458 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.835885861 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.837316098 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.212605829 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.831902052 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.835238382 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.91253101 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.837036457 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.178311968 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.832659909 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.837093895 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.178044803 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.931294749 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.855501257 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.848418359 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.848170967 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.924275062 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.841395368 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.923147632 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.920588362 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.940051683 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.879175397 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.837432422 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.834770635 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.840432544 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.84111281 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.83654706 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.868491554 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.841355195 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.837152722 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.176360023 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.849333343 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.845689409 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.83745722 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.837484783 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.863096866 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.837833734 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.840392587 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.934756897 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.84253148 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.903604863 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.214795983 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.213001021 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.841639696 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.835771548 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.837744571 seconds)
  done (took 182.244280264 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.908941517 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.917255089 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.90792132 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.841800958 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.894420391 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.910420026 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.842819706 seconds)
  done (took 14.989728764 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.848380987 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.841822619 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.892823387 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.893367144 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.841952987 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.992698096 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.842370293 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.854229186 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.839505405 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.896075428 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.848768567 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.841643896 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.848470907 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.845534541 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.893780364 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.854745267 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.95909523 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.844712364 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.842637682 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.99430977 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.83870708 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.847886041 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.895674594 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.855475245 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.848468726 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.848852494 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.434315384 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.841454643 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.839830882 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.841430352 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.839722137 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.88506571 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.843660288 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.841988595 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.840903972 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.958991504 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.841996171 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.840900275 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.84316879 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.842042087 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.84319523 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.843362918 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.843448731 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.839701458 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.84257999 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.866847571 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.842169277 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.84589388 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.844356607 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.844573846 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.896886325 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.844303951 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.843320737 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.842084039 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.90180223 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.850684437 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.844654112 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.84054568 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.843821841 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.841554488 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.997210095 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.893433008 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.843428153 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.894125895 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.843414585 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.844868471 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.844451197 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.842468113 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.942781772 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.842208516 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.894671013 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.841803794 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.00627645 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.870595611 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.845070638 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.850301167 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.848630516 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.844939219 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.84687766 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.853045465 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.84170453 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.847584183 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.85249169 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.843752687 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.843620131 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.958303419 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.956117807 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.843141638 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.860164575 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.854529847 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.844559376 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.89914918 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.845643915 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.843684679 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.900940154 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.964826501 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.901941019 seconds)
  done (took 203.355446453 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.854650892 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.856476705 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.848745861 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.865212923 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.846907681 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.846747461 seconds)
  done (took 12.888735902 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.850245377 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.846102445 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.846690109 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.84643946 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.846144965 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.854422325 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.847337369 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.847201424 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.851237692 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.848493449 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.855111225 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.849280744 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.85589349 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.84548748 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.848002158 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.845845582 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.847220216 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.845745532 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.847227306 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.84698171 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.004465222 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.848171258 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.848567415 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.84871443 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.858911775 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.848736984 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.856608097 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.846587326 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.846362108 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.856137952 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.84996394 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.855492608 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.849662053 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.854527097 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.852443754 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.850243851 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.851224912 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.852465249 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.845604209 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.855979311 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.851334954 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.850443024 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.84826678 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.853427563 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.850336493 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.853844945 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.857364728 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.857416655 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.848978851 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.851761835 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.853458884 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.849853908 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.856424376 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.852106742 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.852223411 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.854274721 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.856786928 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.850614854 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.851745409 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.850066587 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.847395914 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.858128447 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.852840976 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.85200266 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.847369259 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.853296361 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.852935462 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.853265495 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.84835085 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.849165259 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.853303125 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.846669415 seconds)
  done (took 136.191087529 seconds)
done (took 551.444636941 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.953879852 seconds)
  done (took 8.726138396 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.861822553 seconds)
  done (took 8.738504661 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.088682847 seconds)
  done (took 9.862652361 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.899589385 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.847166037 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.844040995 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.848012543 seconds)
  done (took 29.221923437 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.968906452 seconds)
  done (took 8.745501096 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.855098381 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.840570395 seconds)
  done (took 15.505660801 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.031674949 seconds)
  done (took 8.806386477 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.929942158 seconds)
  done (took 8.710597474 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.857208331 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.88189571 seconds)
  done (took 15.527639537 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.833345758 seconds)
  done (took 8.608945126 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.53709768 seconds)
  done (took 11.321128563 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.845616334 seconds)
  done (took 8.634762604 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.852729487 seconds)
  done (took 8.629702594 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.950185392 seconds)
  done (took 9.72579803 seconds)
done (took 162.538788823 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.848004425 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.845299925 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.843392273 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.844416346 seconds)
  done (took 29.156870491 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.884925555 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.890429406 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.8859878 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.894597311 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.886231212 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.884873394 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.877458823 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.882786235 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.896437686 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.887760978 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.887803717 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.887448059 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.889733981 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.87782919 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.888056597 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.887862269 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.896151263 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.892084124 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.877006007 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.8880812 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.850921658 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.895892298 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.888768997 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.858684379 seconds)
  done (took 47.01547188 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.055781093 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.925645393 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.008511755 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.910357448 seconds)
  done (took 9.677317127 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.904084208 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.904772967 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.915888962 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.961538693 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.978320731 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.914371203 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.87736386 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.874360885 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.867649372 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.904496868 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.981846309 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.899316202 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.997618414 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.85286834 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.037813206 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.852683156 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.852972794 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.905714381 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.956761579 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.97909841 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.85408063 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.904732344 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.908246972 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.903200789 seconds)
  done (took 47.767439495 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.85141354 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.86065132 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.859612581 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.852993176 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.852424918 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.853127677 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.858534016 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.854685028 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.876297774 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.85358292 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.851213677 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.853649792 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.852320573 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.853531891 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.852312264 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.866196812 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.865748213 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.854085863 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.855461673 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.859907172 seconds)
  done (took 38.916070884 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.847281941 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.705528828 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.202141321 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.104841835 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.850349805 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.847335745 seconds)
  done (took 31.337664603 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.867356335 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.859128686 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.856619104 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.91056467 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.989088139 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.860718937 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.856528473 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.865055784 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.897326861 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.914588568 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.873822034 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.879031232 seconds)
  done (took 24.411676236 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.851709932 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.850237853 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.850153644 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.86692631 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.865893171 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.860504291 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.86284103 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.849105122 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.867654515 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.870336179 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.859917715 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.868788982 seconds)
  done (took 44.107887983 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941175257 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.739616007 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.936158588 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.575783872 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.32234523 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.063883032 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.381354884 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.193580093 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.856318154 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.126809894 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.995905911 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956311502 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.1047556 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850013043 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.871858662 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.337625229 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146920153 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0839193 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879459183 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.62899829 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899626125 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.286800743 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.702072529 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.907093041 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061184987 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.985605837 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.112098437 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.811398648 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987825335 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888217626 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861833876 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.852016693 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.125969357 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233315462 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948958707 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861903016 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.506567729 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.570564305 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.957048976 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.637859697 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.685290002 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.977537636 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860581498 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851555332 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.786093712 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28883771 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222918495 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.855683694 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.564568984 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.851529525 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864558072 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941295744 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.856105267 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.667262779 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842438446 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.129149399 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.849982062 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860000272 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.424350113 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.981639234 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.326699243 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.820678659 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.049411639 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.644505749 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259441249 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.001065015 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.856609483 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.856313028 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787369447 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.643721692 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320964601 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.000076387 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.872352052 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.504392998 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161471388 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.067648308 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.795031489 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14484534 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.566867607 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.821664344 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083832755 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.817322622 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791998709 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.723226724 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.788928491 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12979014 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894788134 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.510524131 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901624569 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.194338513 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.864348417 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87355326 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863053984 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.080785014 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.738925936 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861961366 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.765668569 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.006795574 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875176392 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.196859955 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789721641 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.859584161 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111777182 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.068480833 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.004955919 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.365069073 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007343729 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882189159 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.861364578 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.689303562 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.891181052 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.129942286 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908544477 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.973530203 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908992989 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.806145962 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156023588 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922576089 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.954467428 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.006590542 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973681608 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.189153999 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.147202684 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917591458 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.852317303 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.853465408 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.646920364 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.407520794 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.119328928 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.85766841 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276440257 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.894623244 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.854015236 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792606664 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.469766599 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.966261163 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.831876165 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.077285502 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.731708236 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161112862 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78829039 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.999632242 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.969478336 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.075988442 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.504760467 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.93555817 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110777626 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307458294 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.035887927 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89495407 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877405054 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9443494 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876279608 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.197424979 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.139743997 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.859345641 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.860317916 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.652140515 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.855928395 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860957595 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.861267273 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.657510727 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145675668 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.882656176 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.860329611 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.748090586 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.871325662 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923596186 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.863603961 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.870050132 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.406512387 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.604667914 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.86665487 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.47799064 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080076962 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869510586 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.649924288 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975900268 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.94030707 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.136316735 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91728383 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.793978769 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.57051184 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.553360327 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860870522 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.797167044 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.859583004 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869120856 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872825075 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.240601828 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.141627517 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901155501 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.64582138 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.903365088 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87146667 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.864530047 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859801849 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.397411905 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.974687092 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323441031 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.898365554 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995520628 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.875070404 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.796446961 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.864731158 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.865245875 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.859834436 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.814443501 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913226706 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.731905264 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246264282 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115693984 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.513052444 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874808529 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.675645122 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.915723642 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.880500559 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.764425545 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.702054152 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.966819186 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870412951 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.871444355 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.649644937 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.554256486 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.430023912 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1776717 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182368328 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309536703 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.240358123 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.158723066 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.205142083 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093888317 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.389924526 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.920258228 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204209304 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804774758 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944571177 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.509904854 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217460039 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875595743 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095147698 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255628087 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.822991505 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885835972 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072891814 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896918795 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.694221737 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.817042475 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.067057145 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005818734 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.666686407 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061609564 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202806956 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.643404929 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.951069084 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.863651602 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.569922512 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953476757 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.569426149 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.224164849 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.293238832 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.893408649 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342655056 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.866144747 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.30815748 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223812469 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.085771138 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.976200514 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798562297 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.875167343 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.873628798 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.86442853 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.856004507 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.72388639 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.11287522 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873785052 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098123049 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.034807615 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159066771 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.78437999 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.868278156 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863027369 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168596894 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.569210888 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025305597 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.21630138 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.380764944 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865184416 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.797726712 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798480593 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.557495407 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.873075851 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.84126797 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093998507 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.055959889 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.816844231 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.274329429 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098725511 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.117938652 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.876512032 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.14866487 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136975007 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.602004258 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889058884 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.965061683 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.635945042 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.972822274 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.13252144 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.099978011 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.664624443 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.091385164 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.930351874 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.682301045 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.865367117 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078362829 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.132644463 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.879725843 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094875551 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.585106215 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.963121044 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188918422 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924299451 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.887926053 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.016759301 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.058552862 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876917931 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949167171 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87593667 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.876558446 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.875463355 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915916862 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.887675765 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.989028279 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.880120756 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954511893 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.999779852 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.396361696 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.869395951 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153745815 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234524029 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.197017954 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924091281 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.865471053 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865321804 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799429747 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001385637 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.312036655 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140082713 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.997994979 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.16660555 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888845956 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.619162549 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.145389309 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100267707 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141071023 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.763545063 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86627917 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.896898101 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.132851128 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880459187 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.078163177 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107732241 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194440157 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338843842 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.021034442 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.225952017 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138784526 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.235136948 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.866787695 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.460162669 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.995461412 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.579006143 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.91090264 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.904553325 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132255458 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879029499 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254026253 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.888861021 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.066189234 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.385801849 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.665861688 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.154985779 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.859994441 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.930832056 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155505739 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.265065443 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179414428 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938360259 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879262482 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.579622957 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006376316 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.737758739 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.137523572 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.868604887 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081579984 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.57942412 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.87938371 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153503611 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17693834 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.864392815 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.737350619 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876805393 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.878209506 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.092703051 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145518106 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123639595 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879230038 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.879495844 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.688831347 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151946798 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92783104 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804636102 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.871457145 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970570536 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.116971915 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904261343 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.387359438 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.583137309 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17324202 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.790129043 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891233587 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294754299 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.242679819 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202789862 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.415811419 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101523969 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.429263521 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.742509054 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164488944 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.875820155 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.293695553 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170303575 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.875508038 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.405230596 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901785722 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.154459306 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192556455 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.018027906 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.672681969 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.838694557 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095168557 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.471534808 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813260583 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.879683236 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.932102617 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.869457966 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.004125458 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.88116933 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.747351795 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.707894594 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.679513698 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365102593 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.874896709 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.86492109 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.658586161 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.430676086 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901467127 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015849267 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878916037 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.587585206 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.166832302 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.128308333 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.403956446 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.874255458 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.878265762 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872992708 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.800838795 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.07125062 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.252895376 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179384567 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.239734934 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.902991335 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.877230593 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.087838181 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083754804 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.88769953 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.01087807 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270461827 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903949295 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.64571266 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.552261938 seconds)
  done (took 1681.640530394 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.877939642 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.897294656 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.943885962 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.923487479 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.907626057 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.936635902 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.932978011 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.943598844 seconds)
  done (took 57.167306873 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.876461134 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.068927057 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.884667561 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.888925101 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.881231479 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.874076981 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.040418888 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.880868331 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.899847219 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.88544912 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.875184261 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.882986198 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.227087155 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.89635488 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.875825504 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.908418709 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.895824577 seconds)
  done (took 74.586415726 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.878253948 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.079312787 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.917967933 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.900419322 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.815592912 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.877320655 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.851517636 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.927314308 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.878271905 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.095744041 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.21301174 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.885277001 seconds)
  done (took 90.125648498 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.886717781 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.882580077 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.883132702 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.881898062 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.883025076 seconds)
  done (took 11.224900737 seconds)
done (took 2188.937600381 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.197611236 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.11085349 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.116493123 seconds)
  done (took 6.031579062 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.032391872 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.081335562 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.201892429 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.206412384 seconds)
  done (took 10.336329119 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.181382157 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.281308687 seconds)
  done (took 6.274624999 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.283766017 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.883737237 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.275931694 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.88177544 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.886197575 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.884289605 seconds)
  done (took 22.469579417 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.885024787 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.887782876 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.885371023 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.889064504 seconds)
  done (took 9.359783907 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.867292765 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.619163981 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.865222437 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.878715828 seconds)
  done (took 21.043658646 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.633500682 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.285265813 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.629131496 seconds)
  done (took 9.359241338 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.428907803 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.788853883 seconds)
  done (took 9.030398402 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.158094547 seconds)
  done (took 3.970842902 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.914032294 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.158105584 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.413455752 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.419978873 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.49541909 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.725473953 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.193045793 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.12061337 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.30643588 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.319463528 seconds)
  done (took 24.880766067 seconds)
done (took 138.203275428 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.26227319 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.128009916 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.088479855 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.273753065 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.105307829 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.091487397 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.094887851 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.257958781 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.72464396 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.722201717 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.225456651 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.105830973 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.043056545 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.121286901 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.046526027 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.245250894 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.109421256 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.271601007 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.922274891 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.119580789 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.102679779 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.853069213 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.068525285 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.86352511 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.158064004 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.067806401 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.430020206 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.240383044 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.075258966 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.432842518 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.083526772 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.274585287 seconds)
  done (took 171.423729819 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.614136981 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.882881161 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.885642524 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.882063497 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.335043428 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.883329143 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.882435146 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.884052889 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.076788211 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.059886747 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.883910617 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.351909997 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.893060807 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.883870949 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.897239762 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.882989984 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.244333286 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.706203701 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.905824881 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.910365821 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.915246138 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.28635405 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.911527966 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.333319252 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.255034043 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.910625415 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.864520798 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.909198914 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.891055299 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.851792469 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.901083678 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.884115191 seconds)
  done (took 208.675536163 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.887289524 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.88654522 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.886744429 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.88508062 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.887521284 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.886456142 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.885333206 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.884148109 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.552992845 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.54743543 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.894293954 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.892586553 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.895375395 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.885893946 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.895125584 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.885653259 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.885774531 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.890300436 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.890262352 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.892402503 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.896566372 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.711147153 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.900834874 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.71343171 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.893270977 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.89386788 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.886554897 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.894541298 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.888477493 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.89392966 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.899339842 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.887167503 seconds)
  done (took 221.287080347 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.090540652 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.894495528 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.89391262 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.829304962 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.896030572 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.895388709 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.832591931 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.085212847 seconds)
  done (took 19.257846305 seconds)
done (took 622.466381315 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.339894458 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.173763817 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.067677173 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.917563236 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.145538884 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.950830226 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.915248132 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.978191513 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.639820329 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.979712747 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.551113358 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.92714349 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.652164326 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.930867549 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.034349935 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.969784088 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.506812457 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.601862769 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.088197306 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.970162093 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.086770973 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.849530309 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.986275089 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.669185186 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.667059252 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.89596999 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.082430696 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.516002994 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.920303959 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.074718789 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.661365691 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.294752182 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.921974418 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.910941178 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.969720421 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.948168371 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.258381389 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.921191324 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.035986843 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.654042279 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.965130097 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.524422608 seconds)
  done (took 103.972837419 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.887438356 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.888824402 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.887740059 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.889197204 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.888913273 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.888522331 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.886271538 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.886524614 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.888037962 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.889324383 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.887799751 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.892246019 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.886459536 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.889098295 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.888169477 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.887705832 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.889178594 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.891922841 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.888533177 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.888905325 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.887314711 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.887237337 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.899312936 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.888675067 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.886044173 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.889014607 seconds)
  done (took 50.942190977 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.899552209 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.052150982 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.149692157 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.91232509 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.900578718 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.903325794 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.920158705 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.902669105 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.903580127 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.903872506 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.006710316 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.903757648 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.919440276 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.154428142 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.909718962 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.899113012 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.898680926 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.900511578 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.058755463 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.912572709 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.918395343 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.900291196 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.919369849 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.910611977 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.902740979 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.901694418 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.903974955 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.377026131 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.904405541 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.006516618 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.940553326 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.923176216 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.319807878 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.160196234 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.947665125 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.907949912 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.900372824 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.009815507 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.903352174 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.90320216 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.918348564 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.905209364 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.154745247 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.383407531 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.909223778 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.900712318 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.389025354 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.015256262 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.939126057 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.911105318 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.159020314 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.914366077 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.901907041 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.904301129 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.937641985 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.909458394 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.902387344 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.230477694 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.912278826 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.919220014 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.904228188 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.904112423 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.063025704 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.906634015 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.051821466 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.908450454 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.909016338 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.905503986 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.156071176 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.912812771 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.397872739 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.911842129 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.902107599 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.006764392 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.056348489 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.414378269 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.913184744 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.066501211 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.336218917 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.922378013 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.906939635 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.367828204 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.928460324 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.910372294 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.903636746 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.902970876 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.901293911 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.945850486 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.918282045 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.330950327 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.398662405 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.240376019 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.925406794 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.918677373 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.903349616 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.230336304 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.906689572 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.903146741 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.150299954 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.400592578 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.911121057 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.911973004 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.383508147 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.91483126 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.922136117 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.910302806 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.161250638 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.913158965 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.948971198 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.903948498 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.911885723 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.910395123 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.923399077 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.913269026 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.905093835 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.370706248 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.022454551 seconds)
  done (took 235.899127117 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.899901336 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.90708611 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.899698763 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.912091312 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.898414341 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.904008867 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.898886965 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.898388536 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.905821247 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.89820961 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.899983282 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.900191924 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.901563319 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.901185263 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.417135075 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.920544934 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.52326008 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.912494795 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.914878004 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.923872618 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.595752447 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.920434062 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.913429912 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.930504976 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.914081255 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.915224165 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.921855813 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.95592895 seconds)
  done (took 169.134113841 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.919978864 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.10448201 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.937501853 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.95725253 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.929368627 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.916934161 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.943565311 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.940785095 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.925592249 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.917026192 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.918149501 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.980716059 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.929297404 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.05876544 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.951122295 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.948190832 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.030211675 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.926948451 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.917763976 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.916663457 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.949480403 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.916836716 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.982172473 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.047450622 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.936153792 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.040079213 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.92519621 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.920622014 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.921590579 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.038977735 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.9351116 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.978610274 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.949433755 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.941318555 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.040673439 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.038667847 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.027560262 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.946523702 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.926445364 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.918940639 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.918917926 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.908344277 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.037259208 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.938597331 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.922669302 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.028993325 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.939352209 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.923964959 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.929189458 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.9196422 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.933980227 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.939678166 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.988928027 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.061955317 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.957524729 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.952072471 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.950349726 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.207734455 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.935420955 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.02624998 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.916481554 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.036963358 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.940109546 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.907405393 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.92024339 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.927132133 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.949202713 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.953566695 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.031383069 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.9292733 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.023483833 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.955400456 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.93006953 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.920178211 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.923221241 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.040536873 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.041738167 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.955533025 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.956759525 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.954935366 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.917364216 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.921842366 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.909430887 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.940638089 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.927396561 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.039958543 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.041715019 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.928633131 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.923291874 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.923562535 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.923379937 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.947865658 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.049909566 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.957023061 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.022433359 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.990592619 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.996340807 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.935229591 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.936433346 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.924826384 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.988820424 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.938665256 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.933992612 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.249914958 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.997055313 seconds)
  done (took 208.199120136 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.409155426 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.976747061 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.985285239 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.233857975 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.358727861 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.786590125 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.96840976 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.971550035 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.998210239 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.161361061 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.042192713 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.993052573 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.957779153 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.946672894 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.969304495 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.994516132 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.986454936 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.319697899 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.099304863 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.065380337 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.954640202 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.280677209 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.299574329 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.433331519 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.013550448 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.317905605 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.656003475 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.117472214 seconds)
  done (took 63.150411536 seconds)
done (took 833.113777629 seconds)
SAVING RESULT...
DONE!
