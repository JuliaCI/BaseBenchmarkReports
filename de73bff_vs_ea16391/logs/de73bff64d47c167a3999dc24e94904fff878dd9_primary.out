cset: moving following pidspec: 20382
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.309379348 seconds)
loading group "string"... done (took 0.469876701 seconds)
loading group "linalg"... done (took 7.643197352 seconds)
loading group "parallel"... done (took 0.173362496 seconds)
loading group "find"... done (took 1.169131755 seconds)
loading group "tuple"... done (took 2.111482104 seconds)
loading group "dates"... done (took 1.349897308 seconds)
loading group "micro"... done (took 0.250445253 seconds)
loading group "io"... done (took 0.671274805 seconds)
loading group "scalar"... done (took 42.355952719 seconds)
loading group "sparse"... done (took 13.047338805 seconds)
loading group "broadcast"... done (took 1.126990766 seconds)
loading group "union"... done (took 14.204880524 seconds)
loading group "simd"... done (took 4.783986964 seconds)
loading group "random"... done (took 9.639154791 seconds)
loading group "problem"... done (took 2.005494224 seconds)
loading group "array"... done (took 22.443532259 seconds)
loading group "misc"... done (took 1.432891297 seconds)
loading group "sort"... done (took 3.580244378 seconds)
loading group "collection"... done (took 19.370880225 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.532575517 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138698736 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.134634615 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.149385992 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204913518 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144660486 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15798278 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.114519381 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.961258215 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.18334596 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154629608 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.518560829 seconds)
done (took 5.114786054 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.240461342 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094298129 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103289834 seconds)
  done (took 0.85806975 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077895507 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146120025 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094479317 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079119012 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095312868 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080784148 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096535675 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.094707862 seconds)
  done (took 1.353296475 seconds)
done (took 3.202329389 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.719541142 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.28027121 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.208108163 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.465377472 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.192656238 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214764068 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680462939 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.357495276 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254670091 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100943321 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144565052 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389922698 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136971856 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.691256336 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.093473934 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126677007 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.182284505 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.450261799 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08555809 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112572265 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117896265 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144508253 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131987567 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093789395 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.188829095 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.087313463 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.201265715 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110605452 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080976238 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.292795532 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203515553 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688188315 seconds)
  done (took 10.933169895 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11204088 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135974871 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101063311 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141277974 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138769836 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102094475 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086595284 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098847799 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124664596 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181292345 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133579952 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124373569 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.098428869 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084555954 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118039313 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247341831 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123260869 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.107574586 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.104077202 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106412458 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124191439 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116541135 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111433259 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09534055 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169457711 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223767445 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115161246 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128030367 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099350483 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114425106 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.147257225 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146946003 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.098925742 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08252479 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175919718 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12711774 seconds)
  done (took 5.224389738 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188152185 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121971087 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169533648 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165346564 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142026783 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.164430273 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117284337 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.248564588 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.138122037 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166588378 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144036008 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116701749 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08093893 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.101594382 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098960506 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.597200127 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.162839781 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.1157479 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115853345 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102855823 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086458474 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.387124532 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104780795 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096672934 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083981757 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082552961 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160783538 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081970617 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.130981657 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121679961 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100000707 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116632385 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.216975227 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128954697 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120204175 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09950385 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079642096 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.19930001 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090283127 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098789731 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105495212 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138445332 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136421199 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099140507 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083899939 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.224242855 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082145369 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.117230621 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.942242228 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182537297 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.123427267 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098058695 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323927188 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115136015 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081317497 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094878943 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.247294027 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135085884 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.101173562 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08171877 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099486168 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078927441 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.101483998 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.384311108 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099475459 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.650887942 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084574021 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109049675 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084902063 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099340923 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106054907 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08989361 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11752736 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081640325 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099569346 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079898151 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096848839 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081316614 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108541422 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101351616 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079654178 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166496022 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.125164826 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080873165 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11856051 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128686601 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08755441 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097385568 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133170976 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081687306 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102872273 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082452654 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133668268 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080758921 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108650842 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100396035 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143862028 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08409174 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.176594678 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096298927 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126644361 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100563795 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114792293 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113388697 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094902182 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083267003 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103766128 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078621725 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096786957 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149075231 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.097057537 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082269931 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.102023482 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111428976 seconds)
  done (took 22.588149432 seconds)
done (took 39.411012021 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.331556347 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10548584 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106033909 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104638315 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102590698 seconds)
  done (took 1.487987266 seconds)
done (took 2.200620729 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.282919673 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173052694 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094416645 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.169805989 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077091387 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192896971 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161316117 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112433271 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.185027264 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093745523 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16424614 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077553277 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094513029 seconds)
  done (took 2.617003255 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095657197 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115282497 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085077736 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113637524 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078656815 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114098293 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094931547 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120714984 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111911174 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086589818 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096052928 seconds)
  done (took 1.821340956 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094639477 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114343254 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083977431 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113307267 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07848755 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112196119 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095356622 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119724169 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112963974 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087184659 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095163688 seconds)
  done (took 1.815153151 seconds)
done (took 6.956878201 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092167069 seconds)
  done (took 0.797016467 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.005657779 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.63519681 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111603967 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150991928 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.318129614 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.195393129 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.540528265 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124553575 seconds)
  done (took 14.981041251 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.116597879 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100815961 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.115300708 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083743565 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.105059581 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087712815 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100949612 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.102137609 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085558788 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.103331231 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08823889 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104544159 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.104787424 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088104815 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.106013693 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087521607 seconds)
  done (took 2.35074045 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121595766 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121848262 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.109791868 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112482252 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089460836 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107817372 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109515988 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.09217099 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105230152 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10703804 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093797601 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107801142 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107519861 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082390741 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108768428 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.111306974 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088944652 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107898758 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109988247 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.093115731 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109423201 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098857541 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090713184 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.110527242 seconds)
  done (took 3.315959082 seconds)
done (took 22.155968471 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161864387 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110969031 seconds)
  done (took 0.987361665 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096678347 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113627212 seconds)
  done (took 0.928779669 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.100585378 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096266491 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.127444146 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114247615 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083510174 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099768061 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.124570611 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.083310101 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099268128 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083190803 seconds)
  done (took 1.733843201 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083385977 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110629655 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102896776 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096536359 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107576601 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09893299 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09106581 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.102268844 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.114371609 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07885745 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104635743 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117432227 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08791594 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118893571 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.108093689 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085954775 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106627956 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102328708 seconds)
  done (took 2.543620471 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079800961 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098415774 seconds)
  done (took 0.902493675 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082534493 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095500226 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083567097 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100452002 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.097526665 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.079178275 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097490176 seconds)
  done (took 1.358125567 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.474616567 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136558116 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.254848693 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085850253 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122154681 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.307295949 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098153452 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086228853 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103000041 seconds)
  done (took 2.446846105 seconds)
done (took 11.621992222 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093777937 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118522095 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113606297 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.469813237 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107730982 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.095393888 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.16119786 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.25690457 seconds)
done (took 2.147582651 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.151174056 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325998571 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.114252308 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067131372 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097337897 seconds)
  done (took 1.334671725 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08054717 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101375139 seconds)
  done (took 0.909617671 seconds)
done (took 3.125368428 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080584399 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098147498 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079747419 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099827258 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.078960424 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097962211 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.114695307 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.100599089 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.101120989 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082355703 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.101601009 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.082337934 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.100159196 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081792073 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096579921 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079062932 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099327974 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07986132 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096560012 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079916384 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.0968118 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082929734 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.09663918 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080047 seconds)
  done (took 2.951731729 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101751952 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101205496 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106720535 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088229446 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104721261 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089428693 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105790813 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100660317 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088999885 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102414187 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103149525 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086932592 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101682902 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086720326 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101729198 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104603724 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087863412 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100855325 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084639151 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103608888 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10542417 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083946556 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103057374 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106016011 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087621667 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104496782 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084920572 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.10002698 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106379533 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087329636 seconds)
  done (took 3.653654163 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085864108 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09647634 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080610151 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104771971 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080213026 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099654115 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080536967 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098659487 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082108032 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097820272 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08341285 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097709641 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079955256 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099228512 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09923799 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083353961 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11176642 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080237416 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.098276142 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081420574 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101053948 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080964829 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098369841 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080516787 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097260511 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080238672 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097759236 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080753446 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098781603 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080114155 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100763817 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08436021 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098279835 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.10463651 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083414206 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.097952308 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084248048 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.098445556 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.081260321 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09747149 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080604862 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097429724 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081211864 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104308735 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080625165 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.101031448 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081251012 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099179501 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.08142361 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101760768 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079808672 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097410456 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.100459709 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081318032 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.102127295 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080872695 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.099439178 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080520903 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099473795 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079881713 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097208585 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080707906 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101230873 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080994862 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113370621 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08736912 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097805798 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.099994941 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.081257167 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.101124462 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.082680609 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112667164 seconds)
  done (took 7.331495286 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084466906 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107299243 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083578811 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099803802 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079694626 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098920359 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103172793 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081117717 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1005036 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088373518 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09943379 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083135194 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101359625 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111823658 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082150663 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100439561 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087726991 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097402033 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08168414 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102464132 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100115517 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084626719 seconds)
  done (took 2.802052218 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.213729855 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10509635 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143371886 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109246161 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086105852 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110126861 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105571528 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089478053 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105259402 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087263294 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10403659 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106119186 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085849779 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103830053 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103980251 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088614331 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105682749 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088473705 seconds)
  done (took 2.687824763 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095139166 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099544241 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.120697903 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.082849839 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100005542 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085197663 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107638438 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11191661 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086353343 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101549453 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093652187 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104139623 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10489302 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0843839 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104270223 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084567505 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104376638 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100860748 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094498315 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107648713 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.108144921 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095336502 seconds)
  done (took 2.925391233 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09879296 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101199594 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120239558 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086345597 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097690674 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.083055424 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108373022 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083228927 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108178009 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.104157071 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083480302 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099775516 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090429623 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100918759 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108221949 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084894378 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103749052 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084410119 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103128605 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07992696 seconds)
  done (took 2.679541589 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103666294 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100119014 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099944635 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092777679 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102243807 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084716892 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11222521 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102895257 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085802648 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13063312 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103493834 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085394575 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113418718 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109391314 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103521593 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095088363 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112615032 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113410734 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085973533 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102639116 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.240916772 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086625317 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114342509 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103930604 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085563668 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103172315 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103500978 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092057256 seconds)
  done (took 3.721387077 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081989921 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100616363 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081846666 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099586114 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081401125 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099453546 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081160207 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098906944 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084312567 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09844115 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084686317 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101784023 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084185825 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101761207 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084180611 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101868728 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086620926 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099126199 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081939017 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099419694 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083671859 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100643672 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084166092 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099520921 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081766952 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101514884 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081924728 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10033434 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1019579 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08097747 seconds)
  done (took 3.502429117 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09140233 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106409246 seconds)
  done (took 0.951855789 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078696352 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115544392 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079419936 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104884777 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107564565 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085176671 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11158739 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089563096 seconds)
  done (took 1.524345019 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097593644 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110517676 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083872841 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113411872 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111046742 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095774306 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162754129 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101489261 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088030281 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098115153 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11345561 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081680072 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105243813 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08280635 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105743979 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088898845 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098116219 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.08980519 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102665872 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098703118 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083885257 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111627475 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085164927 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097984546 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101450567 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093131059 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109875599 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084573845 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104348007 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109513439 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088120736 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093475087 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082693473 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10183126 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081233178 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11050643 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115647995 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086379221 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110467667 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08463613 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112306036 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096276878 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087276492 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105601461 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093687527 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100638751 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10135792 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078596172 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09729602 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085030321 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095494117 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083218191 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094395112 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090320519 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10525074 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113707498 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082019741 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101939512 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086758541 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104097143 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08993594 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101898761 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103752746 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082282752 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108563061 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086332271 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107806601 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079417475 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093631166 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080604561 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109123834 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123123385 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091760839 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101604601 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103103647 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082033387 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106379253 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087021277 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110987158 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111938654 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086394615 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110935916 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093948174 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103283693 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087756759 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111649445 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101498807 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089445038 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.10164713 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119180067 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08378582 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.101402566 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083134287 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111579994 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087990887 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10337976 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083286637 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114010479 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079422267 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104733605 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10528806 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085809577 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112934801 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091891655 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111731441 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.112005435 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.093241177 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104750333 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088837333 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.101192307 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105824569 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086953425 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110708989 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07955691 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107411835 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087218334 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104901592 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112123732 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083315773 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.104730372 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09441176 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110457677 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083103739 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098477145 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086806374 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101585371 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104775474 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090027442 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100591085 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079412017 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098402346 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089284333 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103463788 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.107185188 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090289748 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105201424 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078586724 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.10148755 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.108577716 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092470674 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103401903 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085988731 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108020113 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087050239 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102140129 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109866713 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087387729 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102944237 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089832513 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.105324527 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.081371473 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108150813 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106605491 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.0844551 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107571239 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090263474 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106735835 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.087620609 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102969355 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.111053511 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087368866 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.103223744 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086409253 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.103231629 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096255527 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105854823 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080335901 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.101591303 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110927609 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080799615 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100856081 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082646258 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103496453 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083894779 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098652087 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.10059101 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084471684 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113590083 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089134706 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103315832 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106776762 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093758734 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10071598 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08584095 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101650511 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084730489 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102475037 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.10890447 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088989205 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106870749 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086279581 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098157377 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108757246 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091596704 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099607014 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081650279 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099341081 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087001656 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107625905 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105495397 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085075804 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099751503 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084807082 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105771444 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086873162 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100945919 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100041881 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.08799085 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100125861 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090835988 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102260757 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.11114391 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086873283 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095963349 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087494806 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099269515 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089106371 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096442917 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08086669 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100106512 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102095842 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082179108 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103915034 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07730932 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109107962 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091602067 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101192339 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100360144 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084521725 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110450456 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085477967 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104354499 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086668139 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107265669 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115109531 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083283149 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104141105 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093617856 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101842288 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076632443 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107572443 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100335439 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.0832893 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100134378 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081420159 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104476681 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111009933 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089524539 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095543931 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086503297 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099931621 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082474836 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096467826 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090538695 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105748321 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103253348 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092538956 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103047232 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.084274216 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105315075 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083920365 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104547184 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103328445 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086450151 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103562495 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086287415 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101029679 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.084940364 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100708089 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082303647 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103233368 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101940964 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084394111 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107703077 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085973893 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10184852 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086767366 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10338109 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103318381 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084302751 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101774904 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087331581 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101896535 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08358686 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104867174 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079397572 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109251204 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101446848 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092584974 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102582977 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081432339 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108916653 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087394141 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108568045 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103494342 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085377191 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103539406 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084345646 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.1048724 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110139367 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081488598 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111434965 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090817948 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102804521 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088206376 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102376817 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085230739 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101349523 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.103247954 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085477043 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103231556 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08788698 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110674529 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089782159 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.105321421 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088276313 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107631311 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.104552537 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088558137 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099081102 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08552131 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.104010539 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086929084 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112739487 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105711355 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089701598 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099992415 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085531663 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100870016 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080740193 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110422543 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112706005 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085528971 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110151698 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082653702 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103359043 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112247525 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078230392 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099925084 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.0817542 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.100004347 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092620322 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104033794 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093284114 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102697502 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.102048099 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081720981 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103378254 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084069419 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096044186 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082039762 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10542941 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087105815 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10092522 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084099265 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104991942 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103434231 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091431105 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101224225 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085330698 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102727415 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.08128912 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100571761 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083230774 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105015919 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103180734 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081353101 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099959465 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087376535 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.113972721 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08603574 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.104969903 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087112327 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112747432 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105221734 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090123412 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110929005 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081291527 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108935292 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086767146 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.106511642 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.105642412 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091850153 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110162894 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088633728 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.113068213 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.087376596 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106553931 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106259359 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08430545 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105833111 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086902973 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105974988 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08605406 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106160182 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114182139 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.084887033 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109351618 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086991876 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.106611649 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091525749 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.107315218 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089752304 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11462751 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.109894347 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088623262 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111569397 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091533645 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10953523 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10867299 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089935687 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112331533 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085295985 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113799657 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.08637571 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10389417 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104401431 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082715189 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102509729 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083727093 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10226049 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089192329 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103709742 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083832297 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101342799 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081762692 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.104617799 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107305793 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091848493 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10561698 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087799887 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097860693 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081017819 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104277791 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100167501 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086368086 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105163642 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090406017 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105026437 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084342173 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100751714 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110538415 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090512604 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107478282 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08224671 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.107488991 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.086383469 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104823513 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104355275 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.08481131 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104493328 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090557989 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104061567 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08430481 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110522211 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107878442 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085664188 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104902888 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085269795 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10366047 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080601487 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104416649 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086813258 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110895327 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10527222 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085567604 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113284891 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085047185 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.103827223 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107641861 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084131179 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109788731 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.08048699 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103530922 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085742688 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105623177 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079534898 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103621115 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101840885 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087463 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102752491 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.08082705 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113366658 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092120632 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106567246 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102206414 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084774112 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09807943 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080663018 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102604238 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086622196 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104940393 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093363181 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102547117 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103156012 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081265831 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103164745 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088406228 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10622929 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082098698 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098930003 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083708092 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106896627 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091751867 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103862153 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103728899 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088956872 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105738435 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083339883 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106926863 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081001556 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107074098 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113727211 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086536092 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103595612 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090379344 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111923262 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10396735 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081439671 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104099522 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088042454 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105373816 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.090035087 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108711724 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121827812 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090402511 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102662731 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083815923 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10634146 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084953424 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111048225 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105186165 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086713327 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108724497 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087215073 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113556885 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106077767 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091605033 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106070957 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087793469 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102383536 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085727971 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101769721 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084243056 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105742098 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.105693711 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091638206 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112217393 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085054068 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114005808 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111636192 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090275505 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099983052 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085403468 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.10301755 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080987575 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104448478 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083326372 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102153327 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100875937 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084419309 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105033065 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091233287 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105679688 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087150136 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104276351 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.07884627 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105754183 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088385851 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104773486 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101022757 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085143917 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105136675 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090765926 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110766026 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08581161 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106285371 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104784878 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085972922 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099158226 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091797308 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102875624 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086985477 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104310828 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086275707 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105510969 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107228256 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091433457 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105931147 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087791373 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117026051 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10762784 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082634093 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100855468 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091077992 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102144856 seconds)
  done (took 58.700318594 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149545176 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082081164 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099413956 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080889226 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113859634 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100606851 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080659156 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100293168 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082447766 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102876291 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080786881 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099936178 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110711853 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126695089 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095554008 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104636819 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099513799 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081454046 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099674403 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082314077 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109755858 seconds)
  done (took 2.887420053 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106415988 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11874623 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11610093 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120999946 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091215195 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116853125 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115485481 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096802188 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10246665 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111499722 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120856406 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116580003 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092542911 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111012192 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112087015 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09538919 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121147005 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109425229 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116907161 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09724705 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113425189 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115241432 seconds)
  done (took 3.240409426 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085971405 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10267894 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086001287 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098050878 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084514251 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098767013 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.08950131 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10187492 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.088071362 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.10303847 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.102328272 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.084129252 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10564327 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07966332 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102984945 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083389906 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154988979 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107834112 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083605439 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10597422 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.099752708 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087874647 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099147755 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082068532 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102531354 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08941839 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105209536 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082811422 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104427262 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083048795 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104955094 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.101641946 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08688148 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104448805 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083839293 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102625004 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08555318 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103948979 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080468882 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101112879 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085737164 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100160352 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08530055 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105499206 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08220748 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.103076494 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.105688924 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085817302 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.099062278 seconds)
  done (took 5.499345122 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.107434961 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163035642 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086991441 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144038352 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121981714 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114233468 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089204822 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143441543 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103066486 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084157337 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125051128 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121330573 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104195493 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090811828 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111760044 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104710015 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088002728 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103582968 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109593456 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084637846 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11034615 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09186943 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121124494 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12028962 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109341256 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084737177 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103465253 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110388274 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099608379 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110259803 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110305731 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091000581 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123309557 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.111354563 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103532288 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088438035 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124372934 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105113201 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088518337 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102479075 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088101248 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111738433 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111727173 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.123144719 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087600374 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10992383 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085680748 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102570125 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119076777 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08887085 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114522363 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120558588 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109321572 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086445775 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109933248 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121652108 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085896314 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102865732 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088677032 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119559863 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102672256 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090111929 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.122449681 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107659285 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.113108425 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.10084368 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109588311 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10899615 seconds)
  done (took 8.197331814 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096149244 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11215144 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122214403 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12271971 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093306272 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112480644 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112108959 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.093202276 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11282139 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118484287 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112023946 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.135978161 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088168717 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116025476 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112212513 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093215013 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113007561 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111892226 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092156836 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112145419 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112655262 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123157467 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092915956 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122655429 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144427259 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106718795 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092156916 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113166819 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123095966 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112187006 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126119566 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093034424 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112722484 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122412017 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125565097 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092897137 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103909167 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112291251 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093519059 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112546288 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106251651 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102769204 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112440198 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10561862 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092873841 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113488722 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122551603 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125705524 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116549463 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098704832 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112436019 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12285459 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111490368 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093456138 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123031719 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.150711236 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122990502 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122534016 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113157179 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102638721 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123789724 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131377656 seconds)
  done (took 7.763293704 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110542458 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116300689 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119355837 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101321639 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084147058 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108833136 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08414228 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103189743 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115448214 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097142244 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11843757 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110126161 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093740852 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118709351 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110062918 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113607125 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091061033 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110947985 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114718116 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109611005 seconds)
  done (took 2.950280571 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095440838 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125203995 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08625567 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113938151 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108994312 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093278775 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108752471 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109578169 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088127291 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109835543 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097483723 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117719763 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106064316 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093366435 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118031051 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113471056 seconds)
  done (took 2.503615878 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096996277 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118956783 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120799572 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086180244 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105302755 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081366772 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107350044 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101360882 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082599699 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122433895 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086402959 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109962207 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105580082 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08440626 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102824936 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089278761 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102816968 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084129822 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107105012 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.122370281 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097084843 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105154676 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107061811 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088413527 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105566636 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092087451 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107621248 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103389478 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085112624 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106780438 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086009423 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114182658 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102984864 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085363001 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103798215 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083843118 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106015197 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085797825 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110023876 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105026195 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084375239 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104514077 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086344869 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107838734 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101143693 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.087393281 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101088093 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.0930492 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104308806 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085638135 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105452852 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.10801539 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.088242765 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117043231 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.109130437 seconds)
  done (took 6.304374442 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101458008 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10939318 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082656055 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104628723 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088448748 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109010554 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109965451 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089717035 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107313841 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083964948 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108302821 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090975418 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108408069 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109421079 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088107435 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110250219 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082155891 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107719615 seconds)
  done (took 2.615276306 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092103782 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105556803 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094265761 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106085891 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086455868 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109118405 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081822647 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105007034 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105110115 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086954579 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106195044 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088901056 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104778526 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088664394 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107901665 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085673358 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.1092087 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103877195 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086542337 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101111641 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089377097 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107132684 seconds)
  done (took 2.978680383 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119570454 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.128186488 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09404543 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228941332 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.105174638 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133874885 seconds)
  done (took 1.637430072 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110659737 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123169526 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106854507 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108010667 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115969234 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108083529 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089583367 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108534998 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1194308 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103356928 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109513642 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119769615 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118053236 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098348862 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116413357 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115002142 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108187092 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089935883 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108076499 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129973133 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089551805 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12002686 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108244596 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088809992 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109768322 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118833756 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11955013 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123281147 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089315937 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119813402 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115427991 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089398152 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119396562 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125180113 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110184266 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100013155 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108702504 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130215793 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115814264 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099551257 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110282158 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11556878 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099090335 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115219106 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119778286 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108622001 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094821367 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109839562 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109054407 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137139348 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095791821 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11946791 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116128162 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119553321 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098314668 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15650701 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104832017 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120128339 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117002901 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124466935 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119186969 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095444616 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118330047 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125442888 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116117974 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119472689 seconds)
  done (took 8.22754522 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104606879 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126868932 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10856938 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12519087 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098433433 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109539256 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108520171 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088993456 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108979094 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107623622 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15397435 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089560605 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119562159 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120378516 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089150177 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109301971 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109169671 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118894222 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088272467 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137236279 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110063371 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119026062 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120228702 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098793659 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124891571 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115849252 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109674391 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088756812 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109643366 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108854397 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095537633 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109999351 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119123429 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088315025 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119394992 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108893723 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088378167 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115842989 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109449957 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116055444 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09927484 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129851315 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109926426 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108560102 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105322287 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110903984 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109918173 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08918302 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109799928 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107791134 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104135397 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124639476 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124376943 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118982042 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109573216 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089087332 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109921178 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109165954 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08911062 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117059378 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119587907 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08910172 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137131334 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110507274 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109372533 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1193644 seconds)
  done (took 8.098761862 seconds)
done (took 157.063322676 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098902157 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137182695 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096526149 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170244316 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107983507 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120799359 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138830984 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098637288 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107622808 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087858998 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107878276 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087525686 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172484965 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.106715306 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088094324 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108122028 seconds)
  done (took 2.672231386 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201039179 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256427415 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104140798 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106689285 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089689849 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112159529 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105604173 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.092995783 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110038056 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.087214023 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109539722 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087248849 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106400644 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087662478 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111386472 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089554892 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107714276 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.108836449 seconds)
  done (took 2.915682797 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114458921 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155154061 seconds)
  done (took 1.111536246 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120692946 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182879709 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299196477 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156338051 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120248723 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12821174 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157594515 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131966625 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.200499948 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12431754 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12407611 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09818409 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142521455 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116602806 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094496842 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119666923 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142870241 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.0939906 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116819563 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116940771 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116979272 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107194759 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116430175 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094008468 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182845617 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121926114 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106791692 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086405765 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117088456 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096051244 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113635702 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126754472 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099311265 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178926414 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102868218 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.181130649 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.0986617 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113856663 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115406312 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091645878 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120140409 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118592651 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105954741 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119889169 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.109381957 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.099347703 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106461805 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085931976 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116317356 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119094341 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094452962 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112880977 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.159701546 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119689801 seconds)
  done (took 7.587430886 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.808025012 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.153831945 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090411208 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.896240494 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137176113 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103596986 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.792212993 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.1331503 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235300254 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762160224 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133849835 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122201683 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228494639 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.239266163 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.940556466 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312672461 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.680300473 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10567225 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.140908687 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154456211 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118865662 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135026518 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.107283839 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.451764545 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094966182 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111479768 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.094916248 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118803701 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161407358 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.111808562 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091822973 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200947618 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.24730112 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206918211 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093345079 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111384739 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088209098 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.193631452 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267700195 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195276025 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181262586 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109291278 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087854822 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120249233 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130421602 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085610598 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.186200441 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.176274356 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170773703 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114600772 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117653533 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098945053 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120546274 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166977304 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122428194 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315863567 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.323053371 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088749497 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119492344 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123843892 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242516422 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12434537 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226992085 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137057681 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190217488 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111481561 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807468491 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170499242 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109475905 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095759562 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118269887 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114052291 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098468399 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167970719 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39268758 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123838669 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113795136 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091806511 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225804845 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.089911859 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110069912 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162908502 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114694913 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.096671801 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123853109 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120061213 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170644337 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.229877434 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122794682 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11815718 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094889942 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12345608 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.113551359 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.216063481 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217860343 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164394298 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208541888 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121735815 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164814626 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189668397 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098486481 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192231759 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096137836 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125173178 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11872468 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.196676003 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146060913 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124848691 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114539855 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.095265036 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148157362 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114865013 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117909366 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.172379982 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.457453611 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.191302273 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087687901 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.114589537 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097732672 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184982525 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095276745 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261257753 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119349529 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.17054194 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116455526 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08793035 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119097424 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164570494 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122654627 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117484732 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09940714 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119513271 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234571832 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219975836 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120763584 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221023336 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184444318 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118120968 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172569683 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119349652 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168542976 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120668284 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097886259 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116310186 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793444356 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122855055 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096530917 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116410657 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188099021 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088984499 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125617838 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.110853493 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088701138 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.791593365 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.091500354 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.123942421 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125239383 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094641217 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118836972 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116865881 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09282603 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18482612 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230789117 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098213381 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117499367 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.088740764 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182993821 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095122163 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.11212563 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.089331055 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.112380387 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117751503 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09339517 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125394455 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170764415 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164116468 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22164206 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.599712197 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089878897 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.112136329 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230258756 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08944775 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290825245 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119405605 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225599125 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165192898 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121595813 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320744104 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166063196 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187765672 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.091544688 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195398119 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086582768 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117878857 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165825712 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11262592 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095974825 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.185829022 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100639365 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122896899 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.964516922 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111215298 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227426376 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086689314 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192411839 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094822405 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119967109 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294572635 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089753683 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128488133 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164583158 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115500296 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.088920387 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.722167428 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.111329772 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099797409 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117980029 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.22305722 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164905551 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118119475 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096314613 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120306254 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163273711 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233400849 seconds)
  done (took 43.74562355 seconds)
done (took 58.873091398 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274172265 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217193776 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259242826 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172460486 seconds)
  done (took 1.864990854 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172385945 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150936341 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12148885 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109058033 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150135167 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086306585 seconds)
  done (took 1.660180294 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.362079387 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277004202 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242610079 seconds)
  done (took 1.755641476 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.243427283 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.26329777 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.324085828 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.410711911 seconds)
  done (took 2.206441185 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.203346883 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132508855 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111341158 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106293212 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196471381 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.240327306 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140981357 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.169272046 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.123170401 seconds)
  done (took 2.343722311 seconds)
done (took 10.704006829 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.286813001 seconds)
    (2/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.136251203 seconds)
    (3/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.225160217 seconds)
    (4/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091059778 seconds)
    (5/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.184239007 seconds)
    (6/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117316254 seconds)
    (7/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.232736307 seconds)
    (8/286) benchmarking ("sort", Float32, false)...
    done (took 0.151110808 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.117784163 seconds)
    (10/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.170661816 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.123821226 seconds)
    (12/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.095375574 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117815173 seconds)
    (14/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.093482164 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.212904212 seconds)
    (16/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.119503518 seconds)
    (17/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.121049524 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087937977 seconds)
    (19/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.124803341 seconds)
    (20/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138681605 seconds)
    (21/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.101216254 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.140926221 seconds)
    (23/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.216590039 seconds)
    (24/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.22944313 seconds)
    (25/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.216787904 seconds)
    (26/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.246723625 seconds)
    (27/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.138973154 seconds)
    (28/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.112994291 seconds)
    (29/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.198515866 seconds)
    (30/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.214322345 seconds)
    (31/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.124674131 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087537245 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.226775578 seconds)
    (34/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.218404867 seconds)
    (35/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.118170877 seconds)
    (36/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.095802179 seconds)
    (37/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.136542708 seconds)
    (38/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.187405647 seconds)
    (39/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.096740255 seconds)
    (40/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.121049436 seconds)
    (41/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094590977 seconds)
    (42/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.1153603 seconds)
    (43/286) benchmarking ("sort", Int8, false)...
    done (took 0.189341498 seconds)
    (44/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.11520952 seconds)
    (45/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.226075062 seconds)
    (46/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.199727666 seconds)
    (47/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.141915239 seconds)
    (48/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.228473412 seconds)
    (49/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.246342521 seconds)
    (50/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066804268 seconds)
    (51/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.090298577 seconds)
    (52/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.169212093 seconds)
    (53/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.146432772 seconds)
    (54/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.248685742 seconds)
    (55/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109325916 seconds)
    (56/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.080259576 seconds)
    (57/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116750695 seconds)
    (58/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09598813 seconds)
    (59/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066630249 seconds)
    (60/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.185989775 seconds)
    (61/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.113318827 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.090524532 seconds)
    (63/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.126270427 seconds)
    (64/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068770093 seconds)
    (65/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.156054901 seconds)
    (66/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.095849382 seconds)
    (67/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.174486254 seconds)
    (68/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.119916706 seconds)
    (69/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.148073338 seconds)
    (70/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.19027937 seconds)
    (71/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.11669059 seconds)
    (72/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.099810003 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.137088619 seconds)
    (74/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125856592 seconds)
    (75/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067825912 seconds)
    (76/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.10934999 seconds)
    (77/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.135940929 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.110278499 seconds)
    (79/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.131356473 seconds)
    (80/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.089132551 seconds)
    (81/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.17534534 seconds)
    (82/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.118467118 seconds)
    (83/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.06632573 seconds)
    (84/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.172721724 seconds)
    (85/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.143958504 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087262616 seconds)
    (87/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.120171553 seconds)
    (88/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220852379 seconds)
    (89/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.147323639 seconds)
    (90/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.143321759 seconds)
    (91/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138436351 seconds)
    (92/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067021346 seconds)
    (93/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.153170038 seconds)
    (94/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.152496485 seconds)
    (95/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067423379 seconds)
    (96/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109474602 seconds)
    (97/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067428133 seconds)
    (98/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111912405 seconds)
    (99/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.152693728 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.13709652 seconds)
    (101/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.126730993 seconds)
    (102/286) benchmarking ("sort", Float64, true)...
    done (took 0.23435554 seconds)
    (103/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.089970759 seconds)
    (104/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.154771469 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.095486537 seconds)
    (106/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.18744983 seconds)
    (107/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.184217611 seconds)
    (108/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.126041872 seconds)
    (109/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.13727124 seconds)
    (110/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126201631 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087890436 seconds)
    (112/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.13941161 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.138804998 seconds)
    (114/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086857297 seconds)
    (115/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.122531343 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088248204 seconds)
    (117/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.182275354 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109506552 seconds)
    (119/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.089648985 seconds)
    (120/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.066494324 seconds)
    (121/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.090924689 seconds)
    (122/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.077573155 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 0.181883285 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.120082256 seconds)
    (125/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.0880898 seconds)
    (126/286) benchmarking ("sort", Int8, true)...
    done (took 0.223418768 seconds)
    (127/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126025672 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094429657 seconds)
    (129/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175685051 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116064019 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.109649812 seconds)
    (132/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133868719 seconds)
    (133/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.067369112 seconds)
    (134/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.090087912 seconds)
    (135/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.098085397 seconds)
    (136/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119694584 seconds)
    (137/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.093680401 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.120176959 seconds)
    (139/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067608785 seconds)
    (140/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.12113417 seconds)
    (141/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163243075 seconds)
    (142/286) benchmarking ("sort", Float32, true)...
    done (took 0.234117983 seconds)
    (143/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.11958434 seconds)
    (144/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.078663945 seconds)
    (145/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.120825652 seconds)
    (146/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066754861 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.112162759 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087040247 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119453144 seconds)
    (150/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.190083985 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.140833854 seconds)
    (152/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068506858 seconds)
    (153/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.121697114 seconds)
    (154/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068418363 seconds)
    (155/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093959757 seconds)
    (156/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.120812995 seconds)
    (157/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118523156 seconds)
    (158/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097811835 seconds)
    (159/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.23542498 seconds)
    (160/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165940075 seconds)
    (161/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087331469 seconds)
    (162/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120204931 seconds)
    (163/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094500419 seconds)
    (164/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.091956634 seconds)
    (165/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068889242 seconds)
    (166/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136541477 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.09722304 seconds)
    (168/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.110767308 seconds)
    (169/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.089026247 seconds)
    (170/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.091575314 seconds)
    (171/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.133089224 seconds)
    (172/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.142234019 seconds)
    (173/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089969808 seconds)
    (174/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.099697315 seconds)
    (175/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067682668 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066721661 seconds)
    (177/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.186211147 seconds)
    (178/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.11244147 seconds)
    (179/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.068547178 seconds)
    (180/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.135199703 seconds)
    (181/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.06810227 seconds)
    (182/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065918151 seconds)
    (183/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118617669 seconds)
    (184/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06802244 seconds)
    (185/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.152685652 seconds)
    (186/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.169256745 seconds)
    (187/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09830753 seconds)
    (188/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113281569 seconds)
    (189/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.150553839 seconds)
    (190/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.193060293 seconds)
    (191/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.091942506 seconds)
    (192/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069045734 seconds)
    (193/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.110480913 seconds)
    (194/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.088053377 seconds)
    (195/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111750658 seconds)
    (196/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.083536587 seconds)
    (197/286) benchmarking ("sort", Bool, true)...
    done (took 0.225995603 seconds)
    (198/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095843751 seconds)
    (199/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.128231159 seconds)
    (200/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.110049601 seconds)
    (201/286) benchmarking ("sort", Float64, false)...
    done (took 0.151251224 seconds)
    (202/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.14019837 seconds)
    (203/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067351866 seconds)
    (204/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.092111538 seconds)
    (205/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137237113 seconds)
    (206/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.069672222 seconds)
    (207/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086723174 seconds)
    (208/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.09273493 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087478623 seconds)
    (210/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.090298655 seconds)
    (211/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098367581 seconds)
    (212/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118775947 seconds)
    (213/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.390379086 seconds)
    (214/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.0922461 seconds)
    (215/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.077257699 seconds)
    (216/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.090374479 seconds)
    (217/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.068337625 seconds)
    (218/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.132947763 seconds)
    (219/286) benchmarking ("sort", BigInt, true)...
    done (took 0.258861244 seconds)
    (220/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092395005 seconds)
    (221/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.118310438 seconds)
    (222/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096658317 seconds)
    (223/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.117161358 seconds)
    (224/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095050874 seconds)
    (225/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119788931 seconds)
    (226/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104537315 seconds)
    (227/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.09150943 seconds)
    (228/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.0938145 seconds)
    (229/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109282986 seconds)
    (230/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.068445257 seconds)
    (231/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.152454036 seconds)
    (232/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067728634 seconds)
    (233/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.165069116 seconds)
    (234/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067867546 seconds)
    (235/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136885162 seconds)
    (236/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.076482364 seconds)
    (237/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.123150682 seconds)
    (238/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.090848017 seconds)
    (239/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.182896568 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109853534 seconds)
    (241/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.159634656 seconds)
    (242/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.090501329 seconds)
    (243/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.098501858 seconds)
    (244/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.111352291 seconds)
    (245/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102130703 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.110904373 seconds)
    (247/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087730436 seconds)
    (248/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.182290479 seconds)
    (249/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.11152741 seconds)
    (250/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.088952013 seconds)
    (251/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111675873 seconds)
    (252/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068483008 seconds)
    (253/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.11089489 seconds)
    (254/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.069383606 seconds)
    (255/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.146791614 seconds)
    (256/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088274679 seconds)
    (257/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117247974 seconds)
    (258/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067872798 seconds)
    (259/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.090113415 seconds)
    (260/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068580894 seconds)
    (261/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.088087314 seconds)
    (262/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119384012 seconds)
    (263/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067962687 seconds)
    (264/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.101372971 seconds)
    (265/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094361627 seconds)
    (266/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.099264141 seconds)
    (267/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.067756728 seconds)
    (268/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068731223 seconds)
    (269/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.100371281 seconds)
    (270/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.068238671 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117608656 seconds)
    (272/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087297769 seconds)
    (273/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114939697 seconds)
    (274/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095426816 seconds)
    (275/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109401973 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087707875 seconds)
    (277/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118049251 seconds)
    (278/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068367028 seconds)
    (279/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.117801832 seconds)
    (280/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.090277665 seconds)
    (281/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067720932 seconds)
    (282/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.118245957 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087426374 seconds)
    (284/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.11287076 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093916968 seconds)
    (286/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.114378604 seconds)
  done (took 36.330048052 seconds)
done (took 37.209779956 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102022636 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150942352 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096869463 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137343618 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124749051 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09297639 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119320521 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099296659 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125232337 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.12597921 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100523219 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093329607 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097910823 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120359116 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097337578 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140699873 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124065955 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09497905 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119855917 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08710235 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119631235 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085973351 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112959592 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069482899 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121525661 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094326781 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117236415 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.1204205 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08806094 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.10988706 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093277608 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118380762 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088015295 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124641146 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094422464 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120805834 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.121189902 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098445631 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.11219012 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08800203 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118276945 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087438422 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117217401 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096393859 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116079349 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093228375 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119093869 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12303048 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11737024 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115731848 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.097394958 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12123506 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096596802 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118937574 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.114105423 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097012474 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.115502853 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11689988 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121011176 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092582837 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119666991 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094685685 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117432151 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.119327567 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.096562409 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121268512 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100024385 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116754444 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096854946 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117560034 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.109138308 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.09776916 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.113434838 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.088325626 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.119380607 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.099374579 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109113574 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093850885 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117813886 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093774921 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110158199 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090398088 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112814433 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094402201 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114160437 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070717359 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.11469058 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094604953 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.1096495 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09625073 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116508021 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095485073 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114255297 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.12255409 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.088364874 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115890031 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.089285743 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.110874019 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090555162 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.114001432 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.088631469 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113009054 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.097199108 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.111762199 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094329287 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123026752 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087645035 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117938807 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086701626 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111576135 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126544119 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099607682 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.11092078 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0939529 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.109706982 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.096424493 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111270941 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.088073744 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110778283 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088573921 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117177879 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.088048759 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113707787 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095292623 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125385576 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.109959973 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.091964916 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113863349 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.088684197 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.116290512 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088707835 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.111389291 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.090420327 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.101706287 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091633265 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.111614155 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.096155515 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114232714 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097272529 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11322131 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.09771012 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.115672393 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094851664 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.118339143 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.088551936 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.09836183 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094252539 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11409786 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.091252821 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.11097567 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.089464453 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.111296556 seconds)
done (took 17.052811781 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088544677 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18475006 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152641196 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142460731 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10843658 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112544476 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122595117 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120445942 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113553617 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143547091 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.112184612 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133303188 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.1479949 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088394587 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11344998 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092562972 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113695959 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.126610207 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124346082 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133055837 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166115924 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086699767 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14789758 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136867378 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120571154 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114764846 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113671328 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.09289422 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115968125 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103178826 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133233319 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115272165 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.090383797 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134273108 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105552571 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121120147 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.110720469 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.096101613 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.111546304 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.088956148 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141656366 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133418236 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094702383 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117899282 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092044432 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115165945 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090567162 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121240928 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.122487483 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.093443487 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126947321 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158357711 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092656802 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122469961 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.110421852 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.100543487 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122712748 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091500731 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113833212 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091656027 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111824035 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092123694 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128436715 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142623798 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091895271 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122859699 seconds)
  done (took 8.650786232 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106126943 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13967376 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105662258 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132891756 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111576295 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08994771 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113015324 seconds)
  done (took 1.738936026 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089609202 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134592049 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112973329 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136581423 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134150662 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.114007168 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12434697 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090567401 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133980997 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089972661 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135310974 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150978666 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091367482 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121657107 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138966123 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090718666 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137355123 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089602762 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118348536 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137829261 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093790436 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136198315 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091890119 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114692596 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103797301 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115007707 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163349559 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095766427 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116441506 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093413673 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112737939 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151967271 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105124208 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127072738 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089449422 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131453576 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128861607 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088109463 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126103749 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095189358 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128587414 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090023076 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115933518 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088894465 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120105248 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124871683 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.094641606 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.132255873 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093957711 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133915838 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.09064958 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128370907 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090771415 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119093678 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090674995 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120556661 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123544881 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091533779 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133477636 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091832088 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131116538 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131044193 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105349135 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.1307648 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092758666 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128622337 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104152293 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11818464 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115848488 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093923493 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131188497 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089274532 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116055829 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100931185 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116622191 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113628882 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.13933946 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115671164 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101642669 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114905684 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090812578 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114567551 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113358058 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119405569 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090040158 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119362719 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118096951 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.08857715 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.112856015 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093728343 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.112542293 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092245989 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117793306 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.091578053 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117748851 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106985401 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116620647 seconds)
  done (took 11.904554458 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.0909214 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114855335 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094846974 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115857655 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09171211 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115547453 seconds)
  done (took 1.575018594 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.118486353 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118495224 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105681925 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122663388 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157612142 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.130460287 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.105405031 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12394364 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109001575 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12882248 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129841246 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106155363 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138060319 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122897093 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105913358 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121982881 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.131292364 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102004172 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127639533 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097375327 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138598835 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122246524 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098098349 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133573631 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119354977 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097577202 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128153004 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102613007 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129590414 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124701434 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097249614 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118787184 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.122042016 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.099290779 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130646257 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097174867 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122473639 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119010094 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10159886 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118654911 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.130476892 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097907859 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12680203 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095027404 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124493846 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122107539 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095981436 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126406116 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.129933795 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096128683 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120480715 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095799909 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119775812 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119742105 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.098130733 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127949917 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095094089 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.133550837 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123763401 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097919338 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118768021 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119820921 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.100658952 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119048405 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105953435 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120937635 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122316095 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097457249 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123452991 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097112778 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120217976 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119179165 seconds)
  done (took 9.320176477 seconds)
done (took 34.120747623 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686368155 seconds)
  done (took 1.635529865 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.837130427 seconds)
  done (took 1.788063715 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.966399676 seconds)
  done (took 17.947739453 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.494695631 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.594699204 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.987029867 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.171862764 seconds)
  done (took 3.200056937 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.949874604 seconds)
  done (took 1.921569856 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.285312736 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235516701 seconds)
  done (took 1.476405738 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.77070684 seconds)
  done (took 1.737776705 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.405413823 seconds)
  done (took 2.365737181 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323863646 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183578231 seconds)
  done (took 1.472280415 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.553708487 seconds)
  done (took 1.514836795 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.040406604 seconds)
  done (took 11.006776923 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26979595 seconds)
  done (took 1.243972164 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302773752 seconds)
  done (took 1.26810072 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.550465137 seconds)
  done (took 4.520705443 seconds)
done (took 54.056214365 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100742215 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127591983 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103491725 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124595581 seconds)
  done (took 1.419699727 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102446773 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121319949 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102256275 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121407312 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127610237 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.099092812 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123769681 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102139357 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121378909 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097614667 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121957146 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120825719 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100979361 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123608826 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094438769 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126006217 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125567246 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.097555315 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125459745 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09733366 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119917122 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099337787 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125368189 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120125809 seconds)
  done (took 3.690927834 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10150738 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119709675 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09807113 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118625432 seconds)
  done (took 1.407242091 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101562189 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132127072 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106731567 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126002653 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132189535 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106917902 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118659197 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.09452184 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119834346 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.101605478 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116381413 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.140557003 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.108515616 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124754977 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103854621 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11552798 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091256948 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.133888377 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12713238 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102041397 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119554372 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100894863 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.117147 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110258524 seconds)
  done (took 3.72392513 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172322765 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128790846 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.13997031 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096484897 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162351444 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141841009 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089361793 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142139135 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089370698 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132002902 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118318848 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134858992 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129794321 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089951181 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115381483 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088720558 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128528313 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127782318 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092575277 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128421416 seconds)
  done (took 3.427632834 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098986136 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118388909 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090758291 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117971745 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099945946 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120980241 seconds)
  done (took 1.624133199 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092017711 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.11610477 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090885873 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115029425 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095706813 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115883101 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090557758 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115744747 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091317006 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115415234 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091061252 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114307623 seconds)
  done (took 2.221090689 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.506081709 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122473847 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121022932 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090798533 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.123083322 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090992954 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129913691 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093374854 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.143223414 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.091099633 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118115898 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.118784311 seconds)
  done (took 2.727516556 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223496059 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126443314 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250436135 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.371929599 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156497973 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167203238 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284150412 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159903771 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.221917338 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153013735 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199569935 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1798915 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154244712 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194696366 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142020741 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146711248 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191556458 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25561872 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155203613 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213325072 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169840636 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170561737 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208007151 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126022706 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139855483 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164091135 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123513183 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131303994 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190366986 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176410335 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187675708 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164020865 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148309781 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230901103 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230794256 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193861706 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283300679 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137104635 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.141697685 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170798434 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257868021 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140090807 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20580063 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158584421 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132794734 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199930796 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161629669 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176592697 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.148440197 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14126901 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224951218 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199244704 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.188381991 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140324606 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300885574 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152212657 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.161771235 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191311762 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238326257 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200711785 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219166832 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096065563 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215451513 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19410615 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185704581 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.15396357 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.177659801 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148983348 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174744064 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217083733 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168616762 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172697216 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181455674 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137843149 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170753168 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172509918 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170595119 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263440771 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212262209 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096758847 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169588139 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150607201 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13230883 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.16976746 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126957228 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241691267 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119118421 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164773908 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236787236 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160930231 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133998803 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216618464 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177295584 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14887991 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085098344 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154365846 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156652492 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174985909 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140355971 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15816622 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150689327 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.105454009 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16994965 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125616808 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187047479 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118738602 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169879809 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188149979 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127225267 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162942073 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126899662 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152541908 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178761853 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227745578 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140731315 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108521575 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236770556 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181714892 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143375825 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17887925 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202632508 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146673183 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150082699 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201225283 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247760292 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140998537 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203178085 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149344995 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136023273 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.106487107 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183335743 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156789812 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163744827 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135339732 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183237339 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229510507 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100281751 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139832999 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198716121 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134543724 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133733151 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14652355 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122127113 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139372184 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14399168 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146478573 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178168987 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18152124 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15671135 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165749613 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148999336 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232078957 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115280829 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.153473941 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151020545 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121117 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190054459 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199483878 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132771776 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206866709 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.169866937 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228209585 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170836355 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136003909 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178047056 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104446902 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122930699 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195746003 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167862074 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16224643 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.222224625 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19690846 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.176784666 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.211836332 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167762268 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174526467 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167274713 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154653353 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112279207 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163181229 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16009639 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125372208 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.139988181 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.10827464 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150639989 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143828936 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134203618 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19421553 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171738096 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218978107 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162701348 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123012079 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.2112782 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103341459 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174695168 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204056436 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12070958 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.225200051 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194595324 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191477966 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146128544 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226994132 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.095083311 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126237367 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14378086 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16773085 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107392776 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137340877 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165173745 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183705518 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176036625 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173305676 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235331574 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174356212 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193135169 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123998127 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170377091 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178932389 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179667092 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181491215 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117223171 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151481406 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179212265 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150375148 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240044386 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169007102 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177075817 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20105064 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152455423 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133221513 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150306639 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172701585 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155687366 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173649896 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146828183 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111749518 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153931035 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132113302 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162476824 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177675885 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16361572 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208193683 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.124010461 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214986725 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102041553 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164343884 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162323359 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163621669 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109799076 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170779942 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195266448 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145531259 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161087572 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182656935 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133716463 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.30948849 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20110411 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216696164 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110617628 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156826971 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164104028 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164532984 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165702797 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180075151 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160141281 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186948465 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160916025 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138123132 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139110426 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148384852 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12650919 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133876656 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147588254 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178118155 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139136387 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183554465 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148080661 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159777587 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173580617 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151389261 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117822427 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150995421 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245326553 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186626552 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190777367 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152576553 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.175336286 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235498557 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099953962 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134133807 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133576162 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178345602 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109770204 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222531031 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188469467 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226681411 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187314626 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174599545 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141003894 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.094355436 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159836094 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168598476 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230495912 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146816269 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.148894055 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200097588 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109347197 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134824936 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168094337 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28748893 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145686721 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188266994 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108829541 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280640024 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100914198 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132410246 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164521332 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183939337 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139070715 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178475409 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174071714 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150903644 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163694994 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124037039 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219173292 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213714561 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230644287 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18147606 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132660162 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129387606 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19618835 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187975253 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158699389 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111438738 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21426769 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197472179 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.193963677 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143674531 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17013849 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168444645 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159865441 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188540479 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1364848 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236262196 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108445331 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222566146 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155757896 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138872877 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175622874 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189612985 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141518277 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181548169 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184423839 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137429341 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133599328 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160481475 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178851799 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149888257 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101120055 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204418151 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.099747532 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195287559 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267033017 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135323706 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155083007 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14674567 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110004802 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156987416 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160320792 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139611944 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164195103 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198585186 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134888922 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186499517 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201453067 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196768392 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167115348 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119061034 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.688550395 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132832583 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195520832 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15008999 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182465173 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15226545 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173549897 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161528568 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167389822 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223406632 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156756629 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205549291 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222720229 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179896797 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13271827 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161127498 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147820447 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117520525 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15456362 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169843495 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159663346 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.148653032 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180938249 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157179194 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134995871 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140726889 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201772745 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147578975 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182350947 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181378652 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139766231 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174303368 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189505386 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135968466 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.175570869 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184994735 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143594642 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151096463 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135207661 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.153025116 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239829252 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127378875 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18394484 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214220328 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133673207 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168596493 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149578544 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223908102 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159654599 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189231819 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145070515 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157214352 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15864355 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138708485 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104282057 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157025036 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165101548 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151698882 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16151632 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163532722 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196890606 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096731379 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146409253 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286130011 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199675965 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219428708 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137310911 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108161906 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161394183 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148901516 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178588933 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208991503 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109864965 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137924166 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136738915 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130980214 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139820458 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156702807 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195823288 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159168363 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211193709 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138094492 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279686882 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112332218 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156799449 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118142614 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107105804 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152342637 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148453147 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151765021 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193761537 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267056162 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148160623 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.135100211 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151075193 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099583089 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137969992 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164987603 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163163548 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18104939 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143317945 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082904078 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158522804 seconds)
  done (took 81.901453855 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175757388 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15226141 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.164508987 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219534167 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196937425 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287016911 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.231135382 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.275702885 seconds)
  done (took 2.770123108 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096721216 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146864277 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157742723 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.135653882 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091779513 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120787401 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.341681521 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134208996 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116659566 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122752793 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172626133 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.096068949 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.556380898 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091774141 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120655527 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108147704 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093173353 seconds)
  done (took 3.768956503 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.290794998 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.485054275 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.054882723 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.197849011 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.179916741 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.12077483 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.695022558 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.11975391 seconds)
  done (took 12.212287002 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116784363 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137550404 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.12566675 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.154432995 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.142754976 seconds)
  done (took 1.749862781 seconds)
done (took 123.610327222 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098996061 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128887335 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098957503 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131368731 seconds)
  done (took 1.51536037 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.096077251 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071186634 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101533481 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075070219 seconds)
  done (took 1.410432312 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.191634105 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.170503631 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.38956226 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072650839 seconds)
  done (took 1.562798881 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.116839594 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133366256 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105027312 seconds)
  done (took 1.433233765 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107891118 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129801278 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103879316 seconds)
  done (took 1.416746305 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.107851852 seconds)
  done (took 1.180543596 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.109429416 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138324245 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111550562 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137414315 seconds)
  done (took 1.570578358 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099854438 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127665598 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111189482 seconds)
  done (took 1.411875723 seconds)
done (took 12.932114078 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104481602 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.425459186 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.414198164 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11160369 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723869629 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382323649 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.037494646 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14690716 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165183319 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095026962 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140667413 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674661384 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.029137754 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378983259 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.986623119 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377408945 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678281211 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122278998 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092491099 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123520697 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.020294249 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093244392 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12287765 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094675528 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705648543 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425958903 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096254139 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.37596514 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094356145 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125184389 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381896213 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123811036 seconds)
  done (took 16.935865284 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096823679 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175250145 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098477847 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124687805 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123677362 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095603665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124421341 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094680458 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178759379 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12312714 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112640019 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122347371 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126045719 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096055937 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14296725 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094611669 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127101366 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093898352 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122682645 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094927203 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141623963 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12056222 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094987973 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121989552 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09522999 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136389093 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096520489 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122528431 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120489076 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098499368 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125215444 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096438449 seconds)
  done (took 4.816525338 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142222917 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184807812 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128687174 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127976531 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170108374 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124216961 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200032522 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147330845 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154995639 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124500046 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140244459 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094899952 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157935969 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123063272 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116322646 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121453232 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096826554 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12316071 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093867083 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124339536 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140969491 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094073703 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122901689 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094174075 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123540519 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110016958 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125023495 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121384325 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094575487 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126143039 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098104207 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124078335 seconds)
  done (took 5.155957922 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098497809 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126997336 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111059285 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139307224 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096248511 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127203091 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097941428 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125521376 seconds)
  done (took 2.00403869 seconds)
done (took 29.992008902 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112354757 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127264514 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108382955 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135753337 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103455007 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131885947 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092801961 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133795754 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134092741 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.1038416 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137313286 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092683809 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123228372 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092484448 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135574881 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098329795 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133443652 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102598465 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135210068 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132139375 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095366635 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134908996 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103193719 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133747898 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105394962 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134101905 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137054464 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100832863 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124176575 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09585651 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124949121 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104285932 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125116017 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106120227 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127387698 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097233723 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124182223 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095162333 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132855179 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133493062 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101465546 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134005769 seconds)
  done (took 6.011597721 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109125249 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140110733 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.1054394 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.0817563 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117559265 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080776323 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138751324 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079343395 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110614797 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108837265 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074361701 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107192793 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078847911 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102342506 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077609144 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075845849 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109018519 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077153064 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076588589 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10687077 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080421214 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073243907 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108867762 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079419551 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.103802341 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082324339 seconds)
  done (took 3.574496995 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102349872 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135267788 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115251776 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18495635 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162743322 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.101572598 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133288996 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141011663 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109691881 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120513263 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097548236 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151423405 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111173887 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131530663 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.093057556 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138621767 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136728272 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095472505 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130202353 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113050869 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.1399277 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10329948 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142375383 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133738451 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093942766 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123584425 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098121469 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137207571 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.09861417 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133203719 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126656731 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099060418 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124525202 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105912268 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127807151 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095383682 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143531266 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133198696 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.102668826 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123270045 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.104071016 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123724408 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11540925 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162424055 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.121132464 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.101133703 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125681232 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104637155 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.12331811 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111662385 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132685944 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092825516 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126536414 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092205845 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123208253 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136807108 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096456602 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.125070227 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102931909 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.129167767 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10659018 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127290402 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109437757 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123582723 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130011971 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.093765728 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.123270596 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093104041 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.145687233 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095483031 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163843574 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.123880258 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095555031 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.132045324 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.10274897 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13102074 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094510466 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139623898 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132610794 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.09822044 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.13178894 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.097358319 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.126861001 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.112588971 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125646059 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095672145 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124803854 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100623575 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.126200175 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094612978 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137403933 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.12113036 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096970073 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.141615348 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093482491 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.125215922 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.10024098 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12846315 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092185278 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13708551 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.129622082 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093820354 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.133803346 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093815655 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.126025826 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103005491 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.129535626 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.120544495 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.100395022 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129794535 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.095011933 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124906059 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097826917 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125472376 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.104705982 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.131747638 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098923292 seconds)
  done (took 14.9515648 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.231279326 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.218480658 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190241844 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.296335136 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135605594 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.117520616 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214405745 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15680594 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.093190207 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161112468 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171476605 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183611259 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.17052482 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.18110241 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169892322 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.124885456 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112880271 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.167545151 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.224206962 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.292848029 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144578765 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.103681087 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162970381 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161731932 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137339094 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.103126741 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142224842 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.13786815 seconds)
  done (took 5.81657244 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.11013538 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156122988 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099724171 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146658631 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150021052 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094156764 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129861603 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.096190183 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136915032 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13781067 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093918099 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130416962 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.10158206 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133387545 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123892872 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104087154 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13391314 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09581305 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126718305 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09825979 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134638971 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.132085478 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.09946902 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123004336 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.10370649 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124395912 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088597937 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144226158 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123168591 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116945944 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122311481 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103451018 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137842735 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094604288 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124172097 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096056997 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126385647 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096390355 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125702195 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092908476 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123692784 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07780385 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123580426 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13741941 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10111699 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109795622 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.101986111 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129150578 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095700052 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121798604 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097617625 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127115587 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.098537237 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132612043 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097061946 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12596313 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097614799 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116985576 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101079581 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126809546 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085248804 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12232077 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099745466 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.1191431 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102442954 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130033521 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09354135 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.127520516 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098419512 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131209978 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095456313 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130441635 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.1211503 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.098089807 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.1268411 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.101400943 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126683482 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093920531 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.124283177 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095372205 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.105340241 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.095845596 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074352019 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127823591 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092183903 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122908832 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.126251226 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.101958549 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139947816 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09543084 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133258773 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095134419 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123565798 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.126917026 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.084618918 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097423813 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140851188 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142837573 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094523454 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.12410504 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108035913 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.128153954 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122926753 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078106336 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.104090351 seconds)
  done (took 13.07492983 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131407076 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154638388 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125624522 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.113791175 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158382725 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157893987 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101812569 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131484737 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097408261 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143945755 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094719909 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133654681 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09499067 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139666358 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157709911 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105895955 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126491821 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.109631364 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129949353 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170051457 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112687293 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144171537 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141415944 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097333341 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.13010207 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111656184 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162792152 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.137797416 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109430521 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142656809 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109195569 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161584733 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143540527 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099663279 seconds)
  done (took 5.50678615 seconds)
done (took 50.017705957 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.224045976 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.399714843 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.179663321 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.059255033 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.244996168 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.178727341 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.190367075 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.177213811 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.790989457 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.179528281 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.446578148 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.785331709 seconds)
done (took 59.964612402 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.184280576 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.337438747 seconds)
    (2/2) benchmarking "String"...
    done (took 1.480296685 seconds)
  done (took 3.930682675 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.759245639 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.128384011 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.438613819 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.178483569 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.178404313 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.471559386 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.875793862 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.524926227 seconds)
  done (took 27.899885185 seconds)
done (took 41.87980685 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.195206292 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.254465983 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.222874339 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.159666877 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.291591779 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.209732932 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.37777431 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.29002518 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.195867537 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.165645686 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.199763485 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.209701955 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.205517825 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.254569744 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.185630698 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.180830827 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.260208678 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.804836946 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.58521793 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.183527941 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.18224365 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.264788918 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.190456557 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.17968268 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.192994499 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.186445082 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.180635669 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.210386804 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.753567736 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.180198566 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.19614397 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.475476891 seconds)
  done (took 189.730482457 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.181481886 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.286960502 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.369966969 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.216673132 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.679072781 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.382380903 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.332122182 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.737219301 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.201890068 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.191854402 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.436525247 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.186776522 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.504361644 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.159578699 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.210393053 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.24338393 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.376240587 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.512538646 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.222397154 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.342167958 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.19459398 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.435953739 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.340729889 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.39558555 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.226983921 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.246212957 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.204924734 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.213609862 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.376827037 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.312692992 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.197660738 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.237263741 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.816595534 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.035184851 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.194097537 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.188521176 seconds)
  done (took 149.500522257 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.182013858 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.182551615 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.183319587 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.215889236 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.183135405 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.771465265 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.776804595 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.738972357 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.456717209 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.602941024 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.482117806 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.187938156 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279049561 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.197455863 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.190526774 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.199878401 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.225802924 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.188808247 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.1851381 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.772267211 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.200808596 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.184894123 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.361401984 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.199768771 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.216340106 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.575316092 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.184751701 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.218143845 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.517488867 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.233985051 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.184475081 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.5706115 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.965135803 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298688445 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.187155322 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217102282 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.183999576 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.466200756 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.185603993 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.184878068 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.187267935 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.869622401 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.189828257 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.774643818 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.190859533 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.170153823 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.189849754 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.18530548 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.819127924 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.917271797 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.206649468 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.186361213 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.189369411 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.186160589 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.186496633 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.219470748 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.861223056 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.285237882 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.20365973 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.188946086 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218793108 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.186932042 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.186349488 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.531246598 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.18712501 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.348457607 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.260872354 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.304893328 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.777028763 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.192539952 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287029698 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.309228507 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.18789706 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.18763937 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.187571804 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.187845372 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.299705497 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.188740768 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.607890818 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.365455302 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.2041884 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.612178755 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.192717875 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.283849584 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.188025305 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.608632397 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.192560695 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.188057212 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.950696747 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.187754936 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.285882253 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.18892271 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.188462447 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.187864115 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.608057188 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.778691645 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.468197129 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.193493139 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.008376991 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.195472372 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.62510447 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.752210759 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.881119014 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.194139187 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.188836742 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302248485 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.367153635 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.206083816 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.188854845 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.61366473 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.194486477 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.245818999 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.194364177 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.587482443 seconds)
  done (took 366.117637711 seconds)
done (took 706.453831253 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.798540698 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.787968666 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.893738206 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.779975336 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.747072116 seconds)
  done (took 10.121301728 seconds)
done (took 11.236415391 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.377893068 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.376754152 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.252815199 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.380345938 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.222709296 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.397999093 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.360282948 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.213475748 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.291979001 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.272246375 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.291359789 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244425045 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224380075 seconds)
  done (took 18.021701982 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.526747322 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.507286249 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.253925914 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.532617261 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230193403 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.506462842 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.392530606 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.408597303 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.410154445 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224968837 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.204333878 seconds)
  done (took 16.313656226 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.517446785 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.511951044 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257174949 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.513491527 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232754926 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.51938348 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.39641711 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.421957194 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.431980009 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.22533383 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.204482975 seconds)
  done (took 16.348485989 seconds)
done (took 51.799280151 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.201349134 seconds)
  done (took 2.316941291 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.237073213 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.401525887 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.222797362 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.207654268 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.201526925 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.205054467 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.207517025 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.201615314 seconds)
  done (took 11.00201934 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.198350348 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.199741608 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.200817515 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.197974033 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.200153548 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.202143125 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.198861942 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.198698531 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.198701322 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.198206335 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.202793511 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.202035374 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.20197415 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.202233204 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.20245563 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.199880364 seconds)
  done (took 20.322778922 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.201773759 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.198314388 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.199362049 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.199673927 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.199653312 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.199762413 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.200428186 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.20003375 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.199262175 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.199400498 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.201117395 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.199667366 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.200335068 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.199837324 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.200449057 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.200465274 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.198698013 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.200187257 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.204083436 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.199187606 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.200392114 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.199679547 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.200661464 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.200904956 seconds)
  done (took 29.923232062 seconds)
done (took 64.681619848 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.823994268 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.884366306 seconds)
  done (took 6.827299752 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.204085899 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.202581737 seconds)
  done (took 3.527925845 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.202634275 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.202480111 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.202268563 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.20358495 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.203453987 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.202649023 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.203617875 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.203425346 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.202589818 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.203595773 seconds)
  done (took 13.150214918 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.203426239 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.203307671 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.200645081 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.204357746 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.20242549 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.200836168 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.203235632 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.204223335 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.204281204 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.201869359 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.204438884 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.202691885 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.203693043 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.202381594 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.203913041 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.201642723 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.202220382 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.202531953 seconds)
  done (took 22.772979676 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.205202628 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.204514858 seconds)
  done (took 3.530789951 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.203654691 seconds)
    (2/7) benchmarking "second"...
    done (took 1.202301845 seconds)
    (3/7) benchmarking "month"...
    done (took 1.202337339 seconds)
    (4/7) benchmarking "year"...
    done (took 1.202069574 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.202751917 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.203495773 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.202812035 seconds)
  done (took 9.541081906 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.205785276 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.384183205 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.488257711 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.817759526 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.206699776 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.209304981 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.080837163 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.209704823 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.212716167 seconds)
  done (took 13.937208539 seconds)
done (took 74.407959998 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.227456941 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.216432086 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.464186452 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.213563353 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.219894852 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.543039532 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.233823328 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.335681345 seconds)
done (took 37.577105743 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.199239521 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.179259998 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.997125495 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.19523126 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.294105362 seconds)
  done (took 18.788976424 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.237822273 seconds)
    (2/2) benchmarking "read"...
    done (took 1.535353369 seconds)
  done (took 4.895743437 seconds)
done (took 31.007772647 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208112879 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.207557857 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.204206535 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.20736136 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.204716629 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.205501594 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.204261817 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.206960923 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.207653144 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.206855204 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.20776492 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.208578864 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.209412089 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208109042 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206413363 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205735238 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207511163 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.206483345 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205729859 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.205703651 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.205475157 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.207835443 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.20596124 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.206425004 seconds)
  done (took 30.084523866 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.208763271 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.207419871 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.208142102 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.209402187 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.205735194 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.208745323 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.209407205 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.206189618 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.209744012 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.208231247 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206099321 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.205538353 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.209046773 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.207310505 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210088622 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.207326919 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.2091205 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206286696 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208876085 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.207147296 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.209771629 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207089184 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.207116602 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209617294 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.207275489 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.207204053 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.210041522 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.208266005 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209913062 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.206906467 seconds)
  done (took 37.367054736 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.214991282 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.218859665 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.211172454 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.211027196 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.211314912 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.21000318 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.211188612 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.210964333 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.21089179 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.210432665 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.210675413 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.210293909 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.211129328 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.210326313 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.211246308 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.210314632 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.210901044 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.210953683 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.211533648 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.211511513 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.211134764 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.211279444 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.211665727 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.210986337 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.211482014 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.212046732 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.211867019 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.211792633 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.210586404 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.211324519 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.211771048 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.212441048 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.211810758 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.212069947 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.212109941 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.21232601 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.216887311 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.220760973 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.212911686 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.212222035 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.212332913 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.212121723 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.213035884 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.21240339 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.212773746 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.213203646 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.213225055 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.213927764 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.212968811 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.213620698 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.213427844 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.213083613 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.21299501 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.212918512 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.213302604 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.213479073 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.213155863 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.213703524 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.213959572 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.214071795 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.213404458 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.215171988 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.214690451 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.214087539 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.214803795 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.214634499 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.214096373 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.214085966 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.214579139 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.214582424 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.214632156 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.215045665 seconds)
  done (took 88.446036313 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.214334189 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.212348543 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.212082178 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.212487547 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212677916 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.214617037 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.212990791 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215859174 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212961047 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.215289057 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215804499 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.21329987 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212094613 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.215071449 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214604065 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.213103536 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.21569157 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212646602 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.215642868 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.216117186 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214485026 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.213064205 seconds)
  done (took 27.837898073 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21649385 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218230069 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.213478456 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.215561546 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213769914 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.217194442 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.217107246 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.21751654 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217219476 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21425065 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214514361 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217122494 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.214471731 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214472756 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213684741 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.21539982 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216941437 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.217128812 seconds)
  done (took 23.016317263 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.21584593 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.214659634 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.217640663 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215692908 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.215075593 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.218673462 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215956014 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.218814019 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.218576459 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.215554312 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.218665092 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217593832 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.219285362 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215696562 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217804289 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.21661507 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.218840138 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215169713 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218285895 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216731156 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.217628192 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218459201 seconds)
  done (took 27.910642161 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219356417 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219160386 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.216199049 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.216563539 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.217434558 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.218345066 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.219542394 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.215822807 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.220792833 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.219411168 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216774089 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.218531972 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.218405544 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.217336095 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.216938466 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21684727 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.219538589 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.219025566 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220121128 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.217101709 seconds)
  done (took 25.498263034 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.22091124 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221640285 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.221472094 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221514508 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22125087 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.221393863 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221559056 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.222036836 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22126614 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.221695519 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.221749904 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.221827259 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222250901 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.222601198 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222148482 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222102629 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222290789 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222172933 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222399455 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223347651 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.223368336 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223423279 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223471109 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.222638154 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.222972091 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22321814 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222788074 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.222968864 seconds)
  done (took 35.358675344 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222402602 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222428662 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.218928125 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.219381042 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.220048127 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.219738557 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.220897923 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.220017613 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.223304123 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219633824 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.222724937 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.222972419 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223073536 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.223558999 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.223423531 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.22395182 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223812487 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.221734123 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221403218 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220880422 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.223767781 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222959049 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.223373033 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221239947 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2213867 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.224841951 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221472536 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.221548976 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224938993 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222191911 seconds)
  done (took 37.800278423 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.243083451 seconds)
    (2/2) benchmarking "in"...
    done (took 1.242089861 seconds)
  done (took 3.624343238 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.221186218 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223876284 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.224880902 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.221630849 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.222758498 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.224779285 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224600828 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222323661 seconds)
  done (took 10.925541715 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.22513579 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.224868593 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.224418398 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.22436616 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.225144042 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.225425662 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23483694 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.245331573 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.226208998 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.226493006 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.232733422 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.233461339 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.227075001 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.225234836 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.225425815 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.227580132 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.226265224 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.226635553 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.226669765 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.227552337 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226598738 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228267095 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228301783 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.224489989 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.228486387 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.238473841 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.250754681 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.226206788 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226724431 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.23030545 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.226544899 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.22350956 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.227706457 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.228327145 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.22744017 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.22735362 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.238409174 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247548346 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.234344976 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24801203 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228751733 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.224795335 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.228419343 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.229354831 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228940361 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.227804902 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.228953959 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.225626262 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.228889273 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.231430769 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.233689959 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228994282 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.226008393 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230392069 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.230624416 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233977801 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.248922044 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.232633098 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.238899918 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.241384358 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.263285547 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.25464631 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230481091 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.229799586 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240649287 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.254704087 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238496343 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.247363468 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.227139541 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.230521394 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.237859076 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262880764 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.256609598 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.230169781 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230336263 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.231266891 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2298931 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230786829 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239010243 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.252281364 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.231126407 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23165913 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.247369721 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255172048 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.230145044 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.231151322 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.230866165 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.232915192 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.232202719 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241297269 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.250856896 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.231225716 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.230406613 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.230904176 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.231742489 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.231868801 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.231305213 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231402632 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.229432903 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.232175897 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232118521 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.235940608 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.24198268 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.232940671 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.231918719 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.23913152 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.252980485 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231806191 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.2391062 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.232714044 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232313493 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.234124566 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.238663022 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.230198662 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236244228 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.241912375 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.233275953 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.233674015 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.233380871 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.23315002 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243082928 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.26064445 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.233994209 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.233779868 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.238499623 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.246752344 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233813808 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.236546411 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.233670846 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.230980218 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.230903223 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.234050313 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.233904865 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.234508217 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233855622 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235321865 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.230969766 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.234753862 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.235434607 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.234950717 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.235110356 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.234757251 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.234881231 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.237188437 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.234319183 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.236115297 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.242334242 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.254592929 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.237405718 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.2360099 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.232271677 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235220013 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.235713518 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.235285529 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.235865122 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237055162 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.236745369 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.236157052 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.236886237 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.235315344 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236903099 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.235953338 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241239012 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.236307845 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.239462361 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.235378937 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.233586603 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.23617938 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.237234782 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.235460929 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.237240246 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.235796145 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.239681162 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.246151335 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.237581706 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.237554276 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.239265255 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237543339 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238123413 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23724435 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.241039889 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.246178265 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.237558773 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.245602407 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.257424843 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238601505 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.238530163 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.237538241 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.237767955 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237597985 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.241952308 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.246939119 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250509529 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263452519 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.239005945 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.242821658 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.23938336 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.243273876 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.242073908 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.238408463 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.238042674 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238781385 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238242816 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239430936 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.23907331 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.238442625 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.237582338 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.23940963 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.238769514 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.238336432 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240264078 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.239037296 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239461886 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.236167202 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.23981437 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.23949044 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.239003218 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.236756982 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.238479903 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.239001732 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.241146908 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.241065848 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.246593358 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.237254899 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242419705 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241362244 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.239621973 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.238520968 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.241917083 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242382983 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.240447328 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248834871 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.260257347 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.242057049 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247130254 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.25892736 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.240864929 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.243194958 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.24064555 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.239402855 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.244128575 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.251106832 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.241161526 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.241191422 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.241314587 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242163201 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241761434 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.247534555 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.258812607 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.241135803 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.242512007 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.243004252 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.239291769 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.242747488 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.24268361 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.242106302 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243617972 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242693857 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.241804478 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243716745 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.243280745 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.243939198 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.243545529 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246218376 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.253344945 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.248670648 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.242466618 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.245189507 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.243271973 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.248700338 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.243174574 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.244556885 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.243986004 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256094724 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.269789221 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.250037411 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.264820415 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.244319363 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250637284 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.264588506 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.248256525 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24363906 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24492691 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.243927438 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.244345534 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.241704731 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244869174 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.244645353 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245560911 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.245300253 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.250119676 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.244410561 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.243808418 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.24416838 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.244801917 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.245446967 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.243821507 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.244793404 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.246229092 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.246665703 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.243969653 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.245795533 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253869491 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266607053 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.245931004 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.245768049 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.245654677 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.2455219 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.246262049 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.247596017 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.24934382 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.254668017 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.24895305 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.255139374 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.247882311 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258413714 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.246398908 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.250500834 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.256335889 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.244096627 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.245106689 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.24670527 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.247568843 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255525675 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.268007322 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.248026537 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.25204289 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247518022 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.24853412 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.247283004 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.24704805 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249034393 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.247000716 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257155918 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.266758155 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.252284109 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248937555 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.244980568 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.247328593 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.24925547 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.246033252 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25113349 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.247811513 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.248519377 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.247709884 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.247085264 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.249180888 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.248930182 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.248756218 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.245491861 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.24761797 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257197739 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.270703726 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253586025 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.248712287 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.255998702 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269056108 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257129018 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.270283808 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.249960808 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.24873145 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.249398905 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.25039185 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.247940845 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.249674026 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.25006783 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.249818915 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.254490094 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.250224122 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.25148217 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.249882154 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.250478546 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.249665912 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261525925 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27601533 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.25241265 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254838248 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.24731897 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.251848232 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.256166776 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.250908463 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.249128981 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.253889211 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262423748 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259451178 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.250604665 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.252670616 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251401858 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252560028 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.250708084 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.252665976 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.252268893 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.252493619 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.253231971 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.252334899 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254312677 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.252639089 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.251587434 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254767189 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.252503373 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.262943797 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.273344213 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.252955125 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253002793 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.253264864 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.252631417 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.253174407 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.253332662 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253363247 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252542657 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.253055076 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260787606 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.260446377 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.255763925 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.252321096 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.252319249 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.252880146 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.253691407 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254488362 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.253360739 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25503018 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.253856625 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.253440684 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.253648432 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.252721507 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.25402196 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.253176161 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253466639 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256966945 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.262902243 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254502079 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.251268665 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.25437302 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254258871 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.252395332 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.254841989 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.263220364 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278400629 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.265116461 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.263152112 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.259789114 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.253818207 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257844762 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.262608611 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.254199409 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.256279026 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.254837342 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.25585297 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.256451416 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.259043416 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256693798 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.262907416 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.275212458 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.255162538 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265119172 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.275902683 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255444261 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.256830259 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.260739631 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.255655893 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.254013123 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.256247902 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.255556644 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265036677 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.277235275 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25748835 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257426246 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.255161629 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.258572781 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262109392 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257008934 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.257448429 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.253977088 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.257018865 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257597187 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257475445 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.254650558 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.255551676 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.255095137 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.260911887 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.264176518 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.255437287 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258202903 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.257047833 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.25779327 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258233049 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257915623 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.255411879 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.254682203 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.256681127 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259056223 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.256987482 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.259798968 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.256654401 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.25998319 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.260460147 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258222599 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26074182 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.269165438 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.267195614 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.254691689 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.25770373 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.258974899 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.260032636 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259175102 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.259303933 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25803155 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.25980448 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.259151337 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259765205 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.259770423 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.262947325 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276717867 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.278779759 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25953362 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.258943568 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263255054 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.260148966 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.256753657 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.259784086 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.261679107 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.263231309 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.269369622 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.260780489 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265366491 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279329484 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.261276889 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.265633041 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.264230847 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.267720986 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.264083311 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260876102 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.261296057 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.265756225 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.278430097 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261363232 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271630972 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.294384196 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.282305793 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.262292086 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.262219808 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260006072 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.262001789 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.262855136 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.262436366 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.261769512 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262815116 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.263304922 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.261812848 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268025041 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.264141766 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.263715226 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.26215091 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.261181183 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.263474875 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.262145476 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.263507589 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.262486665 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.262858475 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.262806661 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.263199778 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.262194407 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274910881 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.29132442 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.26390516 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.263123705 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.260868766 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.266217472 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.265461429 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274699609 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.271523393 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.263115897 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.263961266 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.265226177 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264026549 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.261237021 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.262935077 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.263933786 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263426331 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.261426661 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.276836854 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.292034973 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.269219475 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.262443481 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265980553 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.263540236 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264412035 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265487196 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264812824 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.264906187 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.266348114 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268343635 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.264637297 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.264877678 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.267749089 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.272246064 seconds)
  done (took 745.164218645 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262406019 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262074082 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262293658 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.263431493 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26317415 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262840256 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262850251 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.262676183 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.261882901 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.263252501 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.262206803 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262726839 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263153442 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263542306 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263175877 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.264204064 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262749903 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.264987881 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.263041609 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263347799 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.263767394 seconds)
  done (took 27.701041635 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.266860696 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.263436255 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.264080479 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.26700252 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265031853 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.266920171 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.264125514 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266731743 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.267335415 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263919082 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.266930328 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267058062 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.265006544 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.265267571 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265113579 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.267706634 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.2684971 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265244019 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.267544919 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.265417165 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268800042 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.265046416 seconds)
  done (took 29.031271043 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.26700792 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.268516954 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.267051853 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.265435331 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.268594482 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.266135864 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.269055792 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.267912938 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.268769357 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.268628453 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.267643723 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.269873157 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.276035987 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.274552524 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.270433293 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.268454018 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.412140704 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.268462344 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.269152125 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.269368509 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.266205448 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.275516602 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.288240216 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.267505976 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.266959532 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.27046897 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.269653916 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.268947044 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.269701769 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.270582101 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.275460298 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.26969567 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.269137166 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.270668617 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.269033098 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.270920074 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.274968739 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.271245531 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.26786424 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.26975144 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.281186995 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.292613708 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.270728632 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.276328317 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.292575845 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.270760402 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.274898022 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.279988417 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.2686582 seconds)
  done (took 63.634425824 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.270654871 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.270983693 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.269517008 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.271185277 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.271668841 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.271389814 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.271321388 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.271864096 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.269716247 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.269241885 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.271395757 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.268948753 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.269582577 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.272037141 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.272332309 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.270343152 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.269316652 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.27053831 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.269640389 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.269478473 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.26952771 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.271494785 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.273401533 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.270017327 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.272662016 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269761833 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.270333548 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.272775683 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.269403697 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.269825287 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.272792344 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.272493017 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.272843959 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.270255343 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.270678285 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.273030356 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.273344304 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.270825345 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.274135915 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.27001524 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.272895933 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.273080025 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.273150911 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.274174243 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.270979601 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.270646792 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.270779521 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.269894709 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.271037121 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.274803404 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.273728389 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.271444816 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.275054371 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.271733308 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.273398696 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.273171289 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.270811148 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.271181421 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.274553119 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.271939649 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.271181597 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.274901231 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.272206929 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.274182824 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.27377941 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.271885605 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.272725106 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275192079 seconds)
  done (took 87.659073773 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274728966 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.274806905 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276490989 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273420959 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.275141646 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.275610261 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275339068 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.274709729 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.275662184 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274882924 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276207084 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.27469283 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.275129995 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.276936872 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.276617157 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.277230752 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274932506 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275887095 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276336921 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274428159 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.275907088 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.276045707 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.275661534 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276210178 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.277225684 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276199827 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.276617537 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.276674806 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277420408 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276709523 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.276646463 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.277816908 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.277282865 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277393055 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.278141315 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.27706795 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276886901 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2776835 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.277374339 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.277790225 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.27704426 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277367503 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.2774947 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.277263403 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278259193 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277474052 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.278304999 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.278861103 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.277176178 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277999452 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.277694104 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277448289 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277504147 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278112142 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.278086222 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.278603421 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278579298 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.27902404 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277987165 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278894006 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27885916 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.278672875 seconds)
  done (took 80.353168526 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279061623 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.279065578 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.276613956 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.276223599 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.278419675 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.277638566 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.27887128 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.279594345 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.279432842 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.279548315 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279301638 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276831614 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276623913 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27942336 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277115572 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277507533 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.277739596 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.278190878 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279873663 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.277523206 seconds)
  done (took 26.754492567 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.277658443 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.280648195 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.277962662 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.278040161 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.280374975 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.277393507 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.280502493 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280508641 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278851586 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280685613 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.28063011 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.281448275 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277804598 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279248401 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.281584124 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.279156911 seconds)
  done (took 21.663189304 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.278357164 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.281819742 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.280223402 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.281415973 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.278839885 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.279016573 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.281219231 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.278674004 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.279442336 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.281385489 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.282102397 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.28137634 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.28208495 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.282045609 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.279433041 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.281169656 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.279539778 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.279727894 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.282163741 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.282998595 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.279907274 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.279024783 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.282542942 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.283864225 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.280702478 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.280512607 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.27961723 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.28021775 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.28076513 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.282483335 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.280416572 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.281773556 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.280210716 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.281191971 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.283476993 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.279838306 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.283304309 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.284151228 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.283877393 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.283520537 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.283510937 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.281057764 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.283554035 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.283639277 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.281395042 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.283982162 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.281327922 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.281798754 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.281367028 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.281703763 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.284035849 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.283664819 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.285206332 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.2850663 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.284039845 seconds)
  done (took 71.683238023 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284793673 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284521671 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.282260806 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.283704837 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.284334423 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.281829777 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.284337164 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.284045586 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281871385 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.284897909 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284160232 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.28625072 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283579631 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286438173 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.283322456 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285162764 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.28278228 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.2832508 seconds)
  done (took 24.306257323 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.285203365 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.28311995 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.285821777 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.283432183 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.283415983 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285864274 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283276042 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.286127014 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286832854 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.283016116 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284033333 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.28660315 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286877709 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.28692478 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.284493088 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283808276 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.28718202 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286816434 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.284549279 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.285295727 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.287476199 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287952593 seconds)
  done (took 29.475056047 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.286013402 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.285289693 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.286350181 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.304047745 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.30741883 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.310141284 seconds)
  done (took 8.976465932 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294001931 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288081391 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285323148 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289017717 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288321333 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284886683 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286222299 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284754063 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288826311 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286530205 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285576401 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288492222 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288216985 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285335402 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288432581 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28844163 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285949377 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285985104 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286832108 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288489348 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285904138 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288108692 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285866549 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287367471 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286434471 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285721704 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288388016 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287200606 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286578887 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289725166 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28994227 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286674247 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289606553 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287865645 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290043419 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289085035 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287053642 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288688654 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289392281 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286891009 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290168051 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290013851 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290804331 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288021713 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290208812 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287522619 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287918822 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287223907 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286871676 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290902204 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290633369 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288280559 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290621141 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291227084 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291052004 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290553723 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289055439 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288732284 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290572493 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288866255 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28870293 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291730537 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289018257 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289040931 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29302257 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289657982 seconds)
  done (took 86.258684113 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289013973 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289487617 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289642109 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290563874 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290423763 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289771843 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290357478 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290332182 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289623273 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289637755 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29288332 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289821385 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290573335 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290212464 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290083191 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290682329 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290192434 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290563277 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289961646 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293103534 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29072711 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290734854 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290259112 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290151176 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290889446 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293492125 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290829939 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291151489 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291474107 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291121532 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291646182 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291960131 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291564312 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290336775 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291604053 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291079638 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291300409 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291652866 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291854508 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294561305 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291964514 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294598828 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29186947 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291627922 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292978644 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292892868 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29222262 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292062533 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293566943 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292674229 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293189809 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294042755 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293131505 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294003156 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293958274 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292267007 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29325991 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293470514 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293696263 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295308251 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293299126 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293634263 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296524657 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293966002 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293497237 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293102219 seconds)
  done (took 86.465306058 seconds)
done (took 1738.11949122 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.458663037 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.411889678 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.293744479 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.3167774 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.294572331 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.316286256 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.28984744 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.29458505 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.293699514 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.294077168 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.295050064 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.499233509 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.298052846 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.295336832 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.295207866 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.389793497 seconds)
  done (took 42.543933066 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.323412388 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.300707633 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.422835012 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.327048375 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.323795407 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.497491532 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.361095742 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.301177761 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.490321695 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.351766064 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.984891272 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.324211475 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.300095734 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.498091193 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.319061186 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.496106691 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.574321071 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.994976378 seconds)
  done (took 30.398914854 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.80109194 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.340214131 seconds)
  done (took 9.349051213 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.320291448 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.300034842 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.30196441 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.299544573 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.291939989 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.291321889 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.298373953 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.296504388 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.361370617 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.444975441 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.307150643 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.310015025 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.321636375 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.300314064 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.298125918 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.340422096 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.458343335 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.298723344 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.297608197 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.306549467 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.30054735 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.417341642 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.346237526 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.305974563 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.439853006 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.37987834 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.30963665 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.308705547 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.437306442 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.300419471 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.300535482 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.301731481 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.302096153 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.237865938 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.812820087 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.319096598 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.334073647 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.31035555 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.299581803 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.475352536 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.303769874 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.308954078 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.298012506 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.803303516 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.448043449 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.435994012 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.693527318 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.328325768 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.304498236 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.367438918 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.306618208 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.303855245 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.348042775 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.110013248 seconds)
  done (took 111.261159695 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.346721089 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.688397306 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.465173405 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.317361198 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.025058372 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.025177638 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.321183305 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.610254507 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.381028701 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.295896871 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.588390504 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.830698622 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.32024808 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.321126132 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.352473954 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.309398582 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.302565544 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.08452418 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.315246436 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.30009684 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82282596 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305454133 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.322821683 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.438354838 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.337003618 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.782230229 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.891294394 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.809310606 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.324518738 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.296224055 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.798081175 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.323940457 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.330171321 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.298693294 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.572512401 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.684358928 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.679059228 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.320912785 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.344414273 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.303563672 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.318997843 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.774840904 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.68388094 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.322312514 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.29885094 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.780360317 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.316992049 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.300819943 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.304854822 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.508822988 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.189999232 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.303964752 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.877764386 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.305286937 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.604555967 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.380437345 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.379220895 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.808819264 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31684032 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.427594374 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.3505536 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.301224907 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.304736346 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.299254692 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.299549625 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.675864002 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.743343686 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.30136441 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.672557876 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.803207524 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.318679896 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.880039139 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.270652097 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.322296958 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.362122211 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.313877672 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.902454601 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.827834244 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.34380558 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.300143386 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.661242212 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.321584584 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.602434859 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.325999193 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.31994042 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834976778 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.316617605 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.34246253 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.300857924 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.335275084 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.933772867 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30994842 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.606754015 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.34545133 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.302307436 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.302560482 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.306553216 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.30168746 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.321677285 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.305242986 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.864293128 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.335490863 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.465828468 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.33084442 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303034474 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.328682523 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.303402939 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.305269306 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531614595 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.831247863 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.336149049 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.303439498 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.30396214 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.321904415 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.444446184 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.304313813 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.638269676 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.324658211 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303561245 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.313898256 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.032309829 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.347478405 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304611305 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.316678119 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.224563389 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.517257039 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.328117475 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.303697814 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.30518185 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.323127772 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.641183444 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.325480673 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.32606351 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.304724736 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039765631 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.355739512 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.316534923 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.858269906 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.317213142 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.306429679 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.307981217 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.306642551 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.598086877 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.590049134 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.664292393 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.310058272 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.324343891 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.024302546 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.340641237 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.444122217 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.330513244 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.371817204 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.505640905 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.57303876 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.304801564 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.901751883 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.306142096 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.529485131 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.312304764 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.61171703 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.83678914 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.33160309 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.313109709 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.034763794 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.050201236 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.982639229 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.308089411 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.596440719 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.31001274 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.781617593 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.306310074 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.30737364 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.763460883 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.31483076 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.312231062 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.307782827 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.30811012 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.447430363 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.483686318 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.931905921 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.310343598 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.786409871 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.358949755 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307627146 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.317984866 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.311214035 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.657167928 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.313511194 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.309651053 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.321006249 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.310185198 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.317840078 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.808651549 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.299689397 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.315963742 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.4639258 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.983118297 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.332700751 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.30798901 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.973963301 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.615248658 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.84872729 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.343159001 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.646285938 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.335791965 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.349964377 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.94220571 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.331249702 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.809379968 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.329619273 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.309748398 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.932044437 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.328201994 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.377264144 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.309487608 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.310841132 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.89765133 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.335000281 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.314233752 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.709282217 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.337878283 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.586444998 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.317132777 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.354461078 seconds)
  done (took 1107.357621397 seconds)
done (took 1302.116878214 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.311663133 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.310673105 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.298247174 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.310539868 seconds)
  done (took 26.457131077 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.320035759 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.316157761 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.318802561 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.315834912 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.320322622 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.316438652 seconds)
  done (took 9.135403455 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.527561479 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.311370722 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.318003083 seconds)
  done (took 19.383199388 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.541404621 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.689812457 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.680569391 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.692990219 seconds)
  done (took 10.833147269 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.319355512 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.318760774 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.318931039 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.320147582 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.320636937 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.323178213 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.320213528 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.32114201 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.323615208 seconds)
  done (took 13.112343858 seconds)
done (took 80.147839429 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.812719002 seconds)
    (2/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.31389603 seconds)
    (3/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.40992726 seconds)
    (4/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.377682226 seconds)
    (5/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.692157299 seconds)
    (6/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.339819387 seconds)
    (7/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.293684556 seconds)
    (8/286) benchmarking ("sort", Float32, false)...
    done (took 5.36405976 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.592821223 seconds)
    (10/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.078088915 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.38018871 seconds)
    (12/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.339598583 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.340037508 seconds)
    (14/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.539807241 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.010487233 seconds)
    (16/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.900131497 seconds)
    (17/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.313535903 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.999697757 seconds)
    (19/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.339264706 seconds)
    (20/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.355257294 seconds)
    (21/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.387494495 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.74398096 seconds)
    (23/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.312669828 seconds)
    (24/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.296951477 seconds)
    (25/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.338404288 seconds)
    (26/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.422088906 seconds)
    (27/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.31494464 seconds)
    (28/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.012843999 seconds)
    (29/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.643554208 seconds)
    (30/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.583756792 seconds)
    (31/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.462896465 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.682747794 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 6.331116924 seconds)
    (34/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.626349721 seconds)
    (35/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.170721789 seconds)
    (36/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.424657105 seconds)
    (37/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.323122003 seconds)
    (38/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.295941814 seconds)
    (39/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.409175424 seconds)
    (40/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.445044547 seconds)
    (41/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.341550441 seconds)
    (42/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.380837142 seconds)
    (43/286) benchmarking ("sort", Int8, false)...
    done (took 4.346510326 seconds)
    (44/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.861243333 seconds)
    (45/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.302671532 seconds)
    (46/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.071267159 seconds)
    (47/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.951404708 seconds)
    (48/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.364599614 seconds)
    (49/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.322773731 seconds)
    (50/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.061137661 seconds)
    (51/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.30368338 seconds)
    (52/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.434072218 seconds)
    (53/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.102052497 seconds)
    (54/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.109909391 seconds)
    (55/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.816767862 seconds)
    (56/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.296300211 seconds)
    (57/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.428080603 seconds)
    (58/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.575603225 seconds)
    (59/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.244489507 seconds)
    (60/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.320735882 seconds)
    (61/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.316136622 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.489874715 seconds)
    (63/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.32571753 seconds)
    (64/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.296837818 seconds)
    (65/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.775191055 seconds)
    (66/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.419442091 seconds)
    (67/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.302361347 seconds)
    (68/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.427857524 seconds)
    (69/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.626088617 seconds)
    (70/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.30467139 seconds)
    (71/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.861576826 seconds)
    (72/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.324965644 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.25832557 seconds)
    (74/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.934290019 seconds)
    (75/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.29889207 seconds)
    (76/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.16171191 seconds)
    (77/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.079450352 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 5.605425852 seconds)
    (79/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.743144319 seconds)
    (80/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.298312638 seconds)
    (81/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.323445686 seconds)
    (82/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.417107089 seconds)
    (83/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.746671201 seconds)
    (84/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.099526454 seconds)
    (85/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.534448073 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.334173482 seconds)
    (87/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.426797753 seconds)
    (88/286) benchmarking ("sort", BigInt, false)...
    done (took 6.317432357 seconds)
    (89/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.21622081 seconds)
    (90/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.36355097 seconds)
    (91/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.404888309 seconds)
    (92/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.298155088 seconds)
    (93/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.863506761 seconds)
    (94/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.50742729 seconds)
    (95/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.411622751 seconds)
    (96/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.885395833 seconds)
    (97/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.299201992 seconds)
    (98/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.38421163 seconds)
    (99/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.298898312 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.26214659 seconds)
    (101/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.433551031 seconds)
    (102/286) benchmarking ("sort", Float64, true)...
    done (took 6.318407629 seconds)
    (103/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.42645709 seconds)
    (104/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.781623842 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.531977197 seconds)
    (106/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.311893609 seconds)
    (107/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.295007851 seconds)
    (108/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.308881633 seconds)
    (109/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.083692166 seconds)
    (110/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.801823345 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.323333721 seconds)
    (112/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.971658344 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.138347718 seconds)
    (114/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.402060314 seconds)
    (115/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.410448089 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.315460734 seconds)
    (117/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.896868954 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.080524808 seconds)
    (119/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.405497045 seconds)
    (120/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.999691026 seconds)
    (121/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.24922685 seconds)
    (122/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.237315257 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 1.871817459 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.368750345 seconds)
    (125/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.334461415 seconds)
    (126/286) benchmarking ("sort", Int8, true)...
    done (took 6.321069627 seconds)
    (127/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.086008036 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.604737288 seconds)
    (129/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.300969422 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.15457271 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.580618811 seconds)
    (132/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.337601197 seconds)
    (133/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.018636283 seconds)
    (134/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.791881028 seconds)
    (135/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.347891475 seconds)
    (136/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.332066157 seconds)
    (137/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.347318432 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.432246594 seconds)
    (139/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.302096157 seconds)
    (140/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.430709718 seconds)
    (141/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.331558074 seconds)
    (142/286) benchmarking ("sort", Float32, true)...
    done (took 6.327919034 seconds)
    (143/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.510943193 seconds)
    (144/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.302985311 seconds)
    (145/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.339874687 seconds)
    (146/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.281773007 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.953486897 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.157489601 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.348503928 seconds)
    (150/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.301514353 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.335535669 seconds)
    (152/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.317067153 seconds)
    (153/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.337576286 seconds)
    (154/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.388805592 seconds)
    (155/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.356991546 seconds)
    (156/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.345446628 seconds)
    (157/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.331678734 seconds)
    (158/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.347520953 seconds)
    (159/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.324266115 seconds)
    (160/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.306336224 seconds)
    (161/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.331720844 seconds)
    (162/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.350006377 seconds)
    (163/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.170632654 seconds)
    (164/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.366888839 seconds)
    (165/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.590994376 seconds)
    (166/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.36270539 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.738975381 seconds)
    (168/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.423239899 seconds)
    (169/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.36073494 seconds)
    (170/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.517097531 seconds)
    (171/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.196069334 seconds)
    (172/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.234568291 seconds)
    (173/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.474916513 seconds)
    (174/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.707965644 seconds)
    (175/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.647289944 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.889363039 seconds)
    (177/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.323647099 seconds)
    (178/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.453368677 seconds)
    (179/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.30447933 seconds)
    (180/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.210168945 seconds)
    (181/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.330230129 seconds)
    (182/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.765216173 seconds)
    (183/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.349715217 seconds)
    (184/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.410976637 seconds)
    (185/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.835037739 seconds)
    (186/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.272948249 seconds)
    (187/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.365884887 seconds)
    (188/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.388581192 seconds)
    (189/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.326943523 seconds)
    (190/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.532360315 seconds)
    (191/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.335522672 seconds)
    (192/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.313223334 seconds)
    (193/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.330685349 seconds)
    (194/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.232528938 seconds)
    (195/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.350739263 seconds)
    (196/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.85653214 seconds)
    (197/286) benchmarking ("sort", Bool, true)...
    done (took 5.436300918 seconds)
    (198/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.470781196 seconds)
    (199/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.794678788 seconds)
    (200/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.384030215 seconds)
    (201/286) benchmarking ("sort", Float64, false)...
    done (took 5.691274018 seconds)
    (202/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.983411235 seconds)
    (203/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.330236756 seconds)
    (204/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.745244896 seconds)
    (205/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.352154822 seconds)
    (206/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.326580625 seconds)
    (207/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.593296287 seconds)
    (208/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.050082077 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.695279951 seconds)
    (210/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.338865236 seconds)
    (211/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.968495718 seconds)
    (212/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.547450973 seconds)
    (213/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.306623393 seconds)
    (214/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.326411853 seconds)
    (215/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.924514853 seconds)
    (216/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.597560445 seconds)
    (217/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.313775784 seconds)
    (218/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.313336776 seconds)
    (219/286) benchmarking ("sort", BigInt, true)...
    done (took 6.349883886 seconds)
    (220/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.363561192 seconds)
    (221/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.461375308 seconds)
    (222/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.352993692 seconds)
    (223/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.164366857 seconds)
    (224/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.350962607 seconds)
    (225/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.366927941 seconds)
    (226/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.972793832 seconds)
    (227/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.358378276 seconds)
    (228/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.372031303 seconds)
    (229/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.367421562 seconds)
    (230/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.016730582 seconds)
    (231/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.17182912 seconds)
    (232/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.311751811 seconds)
    (233/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.314650654 seconds)
    (234/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.860971258 seconds)
    (235/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.356860055 seconds)
    (236/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.709202692 seconds)
    (237/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.455045403 seconds)
    (238/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.410621985 seconds)
    (239/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.43015476 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.143843669 seconds)
    (241/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.345712811 seconds)
    (242/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.146149541 seconds)
    (243/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.348541571 seconds)
    (244/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.22664695 seconds)
    (245/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.906475666 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.771281965 seconds)
    (247/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.242877616 seconds)
    (248/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.419062751 seconds)
    (249/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.378692343 seconds)
    (250/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.335807329 seconds)
    (251/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.329947352 seconds)
    (252/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.884364794 seconds)
    (253/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.557098356 seconds)
    (254/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.350451054 seconds)
    (255/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.241384579 seconds)
    (256/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.337302537 seconds)
    (257/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.356483445 seconds)
    (258/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.621213058 seconds)
    (259/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.309352432 seconds)
    (260/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.957673159 seconds)
    (261/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.347050668 seconds)
    (262/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.721515003 seconds)
    (263/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.309543605 seconds)
    (264/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.309709368 seconds)
    (265/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.355138827 seconds)
    (266/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.739044015 seconds)
    (267/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.743320487 seconds)
    (268/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.938877956 seconds)
    (269/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.340378458 seconds)
    (270/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.024083013 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.418908942 seconds)
    (272/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.411942382 seconds)
    (273/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.415156991 seconds)
    (274/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.356777791 seconds)
    (275/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.448206779 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.757071672 seconds)
    (277/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.191770042 seconds)
    (278/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.836219483 seconds)
    (279/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.419406157 seconds)
    (280/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.330290091 seconds)
    (281/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.375035955 seconds)
    (282/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.371296069 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.337365534 seconds)
    (284/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.330772934 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.412046851 seconds)
    (286/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.429876968 seconds)
  done (took 947.62838589 seconds)
done (took 948.856462353 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.36456908 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359703463 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.341516512 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.363327796 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.454130833 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.367204744 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.352398835 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.344219223 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.389817294 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.391422289 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.340691307 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.365889176 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.343367966 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.342395076 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.342482476 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357311635 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.495238956 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.347035813 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.35886501 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.351191133 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.358755139 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.341473513 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.392250875 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.36663982 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.34665011 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.346560334 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.346172069 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.360265163 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.455525709 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.345793962 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.346916003 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.353837757 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.533503783 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.34859622 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.338245119 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.362835654 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.355029358 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.354459432 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.347543823 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.375763092 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.942178036 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.362367296 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.344364653 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.344658346 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.345177212 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.348230299 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.346197787 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.352553847 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358538061 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359750581 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.925623319 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.378039487 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.347631879 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.3461012 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.355671693 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.345513563 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.349230441 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362135764 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.365273042 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362864389 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.524792834 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.358391204 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.34854547 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.361897225 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.353525293 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.963757077 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.361062963 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.350983734 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.937440238 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.37012708 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.962565262 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.373395945 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.348770501 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.361295166 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.377868299 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.531591245 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.348620793 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.346489918 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.353866876 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.344722451 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.356123403 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360744061 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.3514701 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.347253642 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361415582 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.372701034 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.358225877 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.34779145 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.357889289 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.365862912 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.354531216 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.357967682 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.351648567 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.342280217 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.357578046 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.351748002 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.350445306 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.350510631 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.353686442 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.358626523 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.939734544 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386882145 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.345607336 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.344634198 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.34794533 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.362370054 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.93976515 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.368624069 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.371247603 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.396685221 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.349647162 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.539456265 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.358286722 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367505802 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.358740036 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.352557498 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.345516782 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.522339486 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.939410743 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.382933924 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.351634842 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.347255808 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367050461 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.351359376 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.346619255 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.494905995 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.351527504 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365739757 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.470309958 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.361558376 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.382427688 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.348456027 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.353745056 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.375634626 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367896509 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.382006881 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.354127849 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368176659 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.366270109 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.348414852 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.361388425 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.361683381 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.352522529 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.358359751 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.34481832 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.375174107 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365030918 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364685321 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.3724106 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.47090464 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.34909919 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.482654018 seconds)
done (took 229.965793039 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.409475888 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.347356455 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.433380862 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.34862614 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.45068669 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.450369243 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.34635853 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.346774945 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.346542456 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.754727747 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.347462217 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.346547909 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.340871967 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.346501957 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.429591926 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.349745221 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.346396722 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.688611017 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.350499055 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.422236233 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.342126331 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.347798252 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.34910124 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.730092561 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.350750192 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.346531989 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.422396854 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.350968332 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.694129483 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.344819083 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.349504793 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.695465421 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.442151464 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.368160618 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.359946168 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.357032358 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.452224452 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.371188002 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.429892289 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.431018413 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.436350036 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.38953815 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.344711229 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.346889482 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.353675533 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.351240861 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.349134952 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.377522014 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.347910747 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.350347814 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.690549165 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.361326369 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.359893509 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.34963485 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.349054792 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.372021503 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.349491287 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.353295522 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.444431813 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.353574155 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.415284712 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.731222238 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.730387098 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.352758336 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.352750508 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.351007028 seconds)
  done (took 149.558473858 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.419055489 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.427245087 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.471075328 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.370953678 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.40291931 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.476358833 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.373004649 seconds)
  done (took 11.199614545 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.359345898 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.355250391 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.403672931 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.402491061 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.354153384 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.53028528 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354870366 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.364944051 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.351328209 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.407218144 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.354903506 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355743963 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.360950574 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.344826552 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.402133258 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.366111761 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.46834661 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.354615093 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.35567459 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.504801693 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361355103 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.351031203 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.405015621 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.365952008 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.355565012 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.359383104 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.176288233 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354469702 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.352883235 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.355813918 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.352756914 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.430705133 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.356160116 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.35407439 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.352378824 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.47051466 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.355845367 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.352681685 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.356130487 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.354998854 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.357066863 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.355929785 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.355706602 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.352405033 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.356110502 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.377354245 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.356179635 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.356120358 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.356593572 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.357451795 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.409235454 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.357499927 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.355421158 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.354113227 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.41198456 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.365062617 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.358314775 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.354524566 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.358320793 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35448515 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.507335122 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.404199779 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.357676874 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.40534035 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.359009026 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.357656411 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.357552552 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.357086484 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.412262722 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.359033397 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.405449854 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.355888098 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.543030547 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.382339661 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.359484778 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.359280753 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.360607167 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.358796841 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.352321024 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.363742231 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.355953453 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.359322987 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.364229461 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.356000159 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355664486 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.526446361 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.466641221 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.35653637 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.371676394 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.366529563 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.356544822 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.411358298 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.36059177 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.357061799 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.410970071 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.474133181 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.411195476 seconds)
  done (took 155.826459406 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.363488696 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.367086853 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.362493692 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.381994612 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.380599109 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.358974318 seconds)
  done (took 9.479201636 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.362345635 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.362527903 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.360280328 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.360947014 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.359817493 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.361320793 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.360482421 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361095436 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.366020825 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.360953374 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.360251211 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.362137479 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.362086941 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.361065802 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.360815076 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.360306843 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.360998844 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.357447436 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.361240544 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361710929 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.465549335 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.362550561 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361122607 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.362969136 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.366244726 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.361612615 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.369014436 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.362556156 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.361887394 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.366549952 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.384389861 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.364189459 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.36310553 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.369931202 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.367514656 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.363476225 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366859723 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.36329491 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.359997887 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.362533337 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.363562615 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363137572 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.363310737 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.363120219 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.365313399 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.367785621 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.368692306 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.369436439 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.364331597 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.366224803 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.364188039 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.363507806 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.364897958 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.365399374 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.365862896 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387915302 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.3686733 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.363883851 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.364704103 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.364433979 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.366452713 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.364884941 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365272746 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.369456004 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.36171713 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.36615837 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.364857037 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.369736401 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366317768 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.364288516 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.365705833 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.361547906 seconds)
  done (took 100.611193622 seconds)
done (took 427.930258058 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.434435969 seconds)
  done (took 7.704305091 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.58974783 seconds)
  done (took 7.85986728 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.083956973 seconds)
  done (took 24.360127783 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.426786988 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.46495657 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.364220414 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.372551096 seconds)
  done (took 26.899366412 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.420977011 seconds)
  done (took 7.69021811 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.361141707 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.357599986 seconds)
  done (took 13.989652687 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.584164038 seconds)
  done (took 7.853891671 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.971186702 seconds)
  done (took 8.24814296 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.35953372 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.384820139 seconds)
  done (took 14.278695605 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.339559139 seconds)
  done (took 7.609945478 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.051963651 seconds)
  done (took 12.323072672 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.364408629 seconds)
  done (took 7.637259847 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.407786715 seconds)
  done (took 7.678820956 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.23599562 seconds)
  done (took 10.506452584 seconds)
done (took 165.909617093 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.357753613 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.365676702 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.367588107 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.365698408 seconds)
  done (took 26.727012762 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.399642264 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.400741231 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.401640805 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.41024135 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.404410981 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.399549534 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.393082179 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.393309821 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.411322259 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.403760752 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.403710447 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.403477668 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.407141531 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.393247996 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.403850896 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.402759455 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.412448981 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.402635694 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.393395955 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.405186391 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.368329647 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.412134099 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.404860774 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.368416761 seconds)
  done (took 34.872770905 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.899216889 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.445925076 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.524592648 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.423349059 seconds)
  done (took 7.565233878 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.419997985 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.422074671 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.439863237 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.474280196 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.504102873 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.432284545 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.393965792 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.390658693 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.375422506 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.422682707 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.497765652 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.436897121 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.514481014 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.368715492 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.569931923 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.368868205 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.368591004 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.422293952 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.47348829 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.490704073 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.37079357 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.421858565 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.427601043 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.438470604 seconds)
  done (took 35.719439176 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.369788864 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.387634154 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.369029289 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.36846083 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.377799427 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.368317709 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.370055716 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.371109229 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.369605419 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.375468925 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.368266632 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.382083411 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.369553266 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.369692904 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.376460791 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.371328105 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.375964038 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.370664322 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.370333995 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.375969655 seconds)
  done (took 28.733351066 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.362718563 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.217510637 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.714832084 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.619731542 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.364770684 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.371956476 seconds)
  done (took 27.926797312 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.452912105 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.621453805 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.370993675 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.778383119 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.871784715 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.390667829 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.372393763 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.641298871 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.024002209 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.016160162 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.443045513 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.446991721 seconds)
  done (took 20.708558102 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.369992894 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.372098271 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.37230773 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.406414034 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.433996979 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.393074837 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.380818362 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.36534085 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.441564942 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.45626831 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.394526804 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.435971074 seconds)
  done (took 38.099325079 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454173729 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.417529276 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.429218505 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392119413 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.093160491 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578879573 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.443005382 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.114290445 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.391866408 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641156611 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367620094 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476882505 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.624921466 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367730334 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375853739 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.453994953 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61443691 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898627772 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370927763 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.706639978 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392736076 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373763765 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.80369367 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.628162631 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602353258 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.351767471 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.630543865 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.14465776 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695202764 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390814604 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379192632 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369200602 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643806031 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065164098 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487636878 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.607003032 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403994191 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.918707379 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.370352562 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.717432915 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374996675 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371937163 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381650558 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369637264 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304943172 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378500435 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135244596 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.397305567 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.082444671 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.370153544 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670492888 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474189914 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.37504944 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.944907031 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385136612 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.399043953 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.374191637 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465683748 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959971608 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.971933912 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372806151 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.314069239 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387079021 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.714669287 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047301553 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.3963813 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.375498487 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377490774 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306914075 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.717287687 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388810561 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510787904 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.397500649 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.03368172 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14126188 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.393023859 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.303035437 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96439334 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388398917 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.313988965 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601877305 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.14826039 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312712687 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.32699645 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.306049434 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128193387 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381185855 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.868901776 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392613697 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.142796779 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.633199527 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412705002 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397101378 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.597204273 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.254283385 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373789916 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.374407257 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490515116 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395044233 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.123629414 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330007893 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.378564433 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63092279 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.585792024 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385441919 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.460019578 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912562072 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401615798 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.396893251 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.390620002 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.621454722 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.036472123 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40956413 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.173352668 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393927323 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.151943265 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171021072 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378576885 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.386425659 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.379686176 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670819441 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.193602103 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.259585736 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443753497 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380954656 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.374843788 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.741751085 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.227825477 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.27780534 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.599305552 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407929914 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.393137813 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.377095504 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335977552 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.387391668 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392506647 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.154013532 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.601365228 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377063811 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659197647 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311125044 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515216741 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.39302709 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.601051827 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.686525143 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.400174916 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638727753 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380644621 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393854048 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395616358 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397420169 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476892311 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399309359 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.387951199 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642835164 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.383038204 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.381629629 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.74395413 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.158308289 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377780713 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.386318748 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38660277 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031029316 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369417893 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382463913 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.27311563 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.392031592 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446247547 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384952557 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61894387 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.876790123 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401318674 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.403796249 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.377065886 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603703974 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390032562 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.741124645 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45900234 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.895592272 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045886917 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411262746 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.312835243 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.090862398 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.072273617 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381515692 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.570947571 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.381327693 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.618676104 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414975894 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398343697 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.02661683 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401245085 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.74285281 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.386292171 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.392895011 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.386194462 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380748624 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.887886859 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.04651036 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388027684 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.399150801 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524406682 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.394817337 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.315609981 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.89742803 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386128414 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381799728 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.159173758 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416108552 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.754194549 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231334573 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663304456 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382080322 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680031578 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.848145268 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.418075163 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.37995954 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397282318 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393961046 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.410781063 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397419194 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.393915222 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.749308477 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.82986119 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948586319 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172470503 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990642628 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.800529373 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.416007208 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.273302564 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.138641247 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338535547 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.041997903 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642896629 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.15869 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.359559517 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905109864 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.779624192 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.289569806 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.693452999 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62155105 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.781092024 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.41302445 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688624958 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603474796 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417857756 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.384894014 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.338395051 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.904968714 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985468929 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40554798 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462507699 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149458696 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42296875 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.163145351 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.403583182 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.222435322 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835608288 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.953770734 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.779865498 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39612927 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.404181719 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241247696 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.414310836 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.915219386 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064365942 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.409772138 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.912264165 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348051723 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.627934904 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.417954379 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.382618903 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.178372889 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.41234291 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.649771063 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.685626926 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321194354 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404068639 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983172906 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.263247294 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.392942841 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386817452 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182870958 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395233146 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.718776547 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.39051244 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.929554252 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41694423 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.32026645 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32143377 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.081772385 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397440071 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35796765 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921750733 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.393094418 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40704022 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399143563 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24354674 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.645738146 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.402405148 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.036900603 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633790419 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387785764 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410458164 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.392880465 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392105739 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.369419833 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.756082871 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.624374974 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430817954 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.633094603 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.472459169 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.289368636 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.397329988 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599729795 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.284860589 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388853216 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658124214 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.120885914 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.398499675 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185101609 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434139494 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389937116 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.407426225 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397431499 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409834939 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48070438 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631161093 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.421037095 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.399657633 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840594353 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411261679 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412839932 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.404095366 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483653997 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.047482363 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.933558504 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.189588422 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044968492 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21413872 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.071412024 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.715185497 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399214708 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391702431 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325806596 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539288093 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.919841374 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665421943 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511963487 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.391508998 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414715092 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390949839 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407382139 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610410892 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66707191 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.268116105 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4052062 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.061973551 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.551104674 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40397279 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.602916625 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933616057 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993387781 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514693285 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397217246 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.156623272 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687811225 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.485460283 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39199909 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.987578896 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.39373108 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.243523449 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.398779373 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398476271 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541217255 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69476939 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104102341 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.423753634 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.554584457 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.167049662 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.790650095 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.651137667 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.999694781 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.645343633 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068288613 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.210166639 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666825639 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463846612 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63966788 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.526990897 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541252279 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.394674073 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.29271767 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394413004 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243592636 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.104973307 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.405937957 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070100988 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686523074 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.397588565 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.39416673 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418226001 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.404725595 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.619272168 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16997736 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621022389 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406397794 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404544497 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.968846604 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077440914 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.733357409 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339427401 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.399702868 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665596792 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.651969506 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420713426 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.848537516 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.108334184 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998578112 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.372845672 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419738354 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399610958 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.219082606 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082764079 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.963800607 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962516822 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.059863322 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396965818 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67914228 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.402757256 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408576368 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680206729 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.400862893 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.396847188 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654810695 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.096740346 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.309502144 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.42098948 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.014587525 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.342177061 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.626507426 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407424199 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33429072 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396760558 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.869948152 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.420611959 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518333613 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410731861 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.401624225 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421363645 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.139272667 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.688777416 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.402911189 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.395402744 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.388177049 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410048778 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504086743 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008213879 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425008787 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.072017986 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.750716677 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.656923068 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.410933183 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.386424976 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.403197463 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400418432 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.123530805 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.3787211 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.420429546 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039651765 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.415948349 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.418211158 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404038939 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.615727905 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612336327 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.40986579 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66554168 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440736277 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421940725 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.30066118 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.17377463 seconds)
  done (took 1696.482311665 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.404451067 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.419605265 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.422475692 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.44995614 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.46492143 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.523772597 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.43303712 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.543680451 seconds)
  done (took 52.970768258 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.400277511 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.560635888 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.434789201 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.417361642 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.410815954 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.413062733 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.921383422 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.427327561 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.410838383 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.412322442 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.402193462 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.416292817 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.124251568 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.41135968 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.409086307 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.393754918 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.408255728 seconds)
  done (took 66.693986637 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.227289379 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.575633469 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.973947643 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.450241394 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.4161865 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.422664171 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.047757178 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.431659524 seconds)
  done (took 55.856443091 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.419304433 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.419737664 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.420919953 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.419207869 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.419845261 seconds)
  done (took 8.410598223 seconds)
done (took 2102.040035702 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.406331789 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.408835494 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.40693376 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.409273741 seconds)
  done (took 6.942116495 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.38309134 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.149062361 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.385230972 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.405476815 seconds)
  done (took 18.634503723 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.413456257 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.417670039 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.22691215 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.109164689 seconds)
  done (took 5.648736716 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.154421839 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.16861635 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.151720379 seconds)
  done (took 7.786478188 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.405855233 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.411105511 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.411995198 seconds)
  done (took 20.540810083 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.715371975 seconds)
  done (took 3.029455717 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.551267461 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.606502117 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.779875275 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.770920216 seconds)
  done (took 8.021911861 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.796120268 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.790237155 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.596019438 seconds)
  done (took 6.495567429 seconds)
done (took 91.242630204 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.69936523 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.430276624 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.612157318 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.672017241 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.639395443 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.62616754 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.702821493 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.632773693 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.178745039 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.166861168 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.677338263 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.637936614 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.649506335 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.430587304 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.649957156 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.426531005 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.636316324 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.759956534 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.362871933 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.404680446 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.699864127 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.312003497 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.50191664 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.339238417 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.637365413 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.565803948 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.910634733 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.42931026 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.413706808 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.929894 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.566290758 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.407323784 seconds)
  done (took 199.024516566 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.416098271 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.406330413 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.426046696 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.4326716 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.438328037 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.422677387 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.408283715 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.426200628 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.406244983 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.440859186 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.406923283 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.425178445 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.408759526 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.425824022 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.408430955 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.425771755 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.432457926 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.424315566 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.406036158 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.40631126 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.407434888 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.408435067 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.406843422 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.42434394 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.407855408 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.426591552 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.426472511 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.407732632 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.408269224 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.425793207 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.407673701 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.438165544 seconds)
  done (took 206.704711273 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.413204189 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.408292582 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.428973734 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.418122728 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.41527515 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.409945714 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.408418475 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.427319675 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.409463818 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.419804432 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.423180954 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.407914206 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.411814237 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.414516941 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.410564254 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.409515389 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.412530876 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.417443768 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.409705663 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.408544733 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.409779988 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.408960171 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.408459691 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.447921088 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.408397109 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.430579494 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.410712522 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.410259333 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.424066716 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.426924566 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.411175711 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.410355535 seconds)
  done (took 206.610324482 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.607148211 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.417122855 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.418216441 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.357171259 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.418240245 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.417540526 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.416273831 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.612956802 seconds)
  done (took 14.983449095 seconds)
done (took 628.636405736 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.852350366 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.553601162 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.627265768 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.438960561 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.311732634 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.45929608 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.439184348 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.630336675 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.382152719 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.645317517 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.791117713 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.464254995 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.952476192 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.439976127 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.722986987 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.549160622 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.424408776 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.573228963 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.803987606 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.131168049 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.7346458 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.053582389 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.662897666 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.431343918 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.940231431 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.992733403 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.269108223 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.382781809 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.457563784 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.801770486 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.231997634 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.509502603 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.514385043 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.517475593 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.575536092 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.557903878 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.511198371 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.511966885 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.659437454 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.748550724 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.052230964 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.192468158 seconds)
  done (took 97.822155781 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.403115801 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.402327112 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.402346581 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.402399583 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.403878144 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.403129131 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.402933861 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.403094948 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.403178306 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.402948374 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.40297218 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.404865312 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.402498205 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.404038203 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.402702276 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.402856841 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.40481869 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.405265148 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.403631843 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.403683375 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.404010935 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.404108492 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.404644895 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.403491232 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.404830047 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.404756888 seconds)
  done (took 37.8152416 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.421673571 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.688982 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.871848184 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.429106125 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.423103553 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.427858975 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.513786609 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.425050379 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.425469554 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.426354915 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.588410133 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.426568881 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.462906892 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.912357854 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.433002382 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.424964632 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.424519465 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.42377615 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.697666157 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.434288615 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.538640722 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.426241607 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.516469803 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.437987492 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.452012542 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.425330158 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.430760888 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.005241971 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.448999488 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.589259265 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.354099169 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.518617811 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.98211978 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.905573788 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.352715222 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.435465359 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.425861234 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.595832851 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.426975294 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.424914031 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.515297172 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.426944397 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.882274433 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.123296047 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.448461487 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.425679873 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.02863496 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.61393211 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.710225836 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.434945775 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.918949967 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.43604168 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.427678485 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.428633307 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.710284422 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.43319896 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.426143141 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.062104023 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.452858228 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.51750177 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.427997777 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.42765865 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.706629179 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.428248978 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.695404435 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.430471715 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.436423921 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.449741237 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.885711163 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.430845048 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.148514815 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.448853954 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.427910394 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.595914917 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.699208492 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.065341167 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.453544362 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.71103064 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.99609242 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.538036216 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.432509555 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.995873233 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.539834248 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.432863431 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.431277419 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.431587201 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.429265754 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.478403375 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.515120264 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.082743669 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.160645225 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.088989804 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.540433578 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.44228067 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.43054373 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.061921757 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.449585119 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.429575709 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.880528152 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.149954294 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.450824215 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.437366073 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.153417501 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.451195852 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.520114564 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.435321856 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.891009764 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.43106544 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.479293741 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.429476702 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.437769517 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.455340379 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.519015529 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.434078713 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.430529421 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.116095535 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.62113463 seconds)
  done (took 189.22627019 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.425264463 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.444112285 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.422011022 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.443451831 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.42440457 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.433330235 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.423916944 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.424183829 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.430140386 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.424164041 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.425085491 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.424148892 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.425394585 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.432288631 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.457522495 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.431599376 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.035439738 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.424906983 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.432813232 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.425464198 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.247500364 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.426065965 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.42558982 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.425531837 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.426104207 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.427525129 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.43485226 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.430625389 seconds)
  done (took 154.785474994 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.432606639 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.086168231 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.460607374 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.587982632 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.461292487 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.431055496 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.582539487 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.502042236 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.454156356 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.430431888 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.430584788 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.783644243 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.440012042 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.028874027 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.65580504 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.6063048 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.035445328 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.454318397 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.430996602 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.431241347 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.588311098 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.444700622 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.779979974 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.084871269 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.453455604 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.082029285 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.41936625 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.435524412 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.434112645 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.08631818 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.452417017 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.78202581 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.523417579 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.501258132 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.105057371 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.038377123 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.045468566 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.612260844 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.433596137 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.431818666 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.43145855 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.418155938 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.085602317 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.456486505 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.436074315 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.075983899 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.456030395 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.43560776 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.439847576 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.433215363 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.501775936 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.5241825 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.804740658 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.090761737 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.542238495 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.450356128 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.586129153 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.82441976 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.447272182 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.007396906 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.4262239 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.09331359 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.458490155 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.419448647 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.437397158 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.440342705 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.60857903 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.586670468 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.008825032 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.46272969 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.007891638 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.635831877 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.435057682 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.435499724 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.43675871 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.090273307 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.029730779 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.636024762 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.591293346 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.665162009 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.426733168 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.436791388 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.420755997 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.525268854 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.440128383 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.094063848 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.040891716 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.464272639 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.437557053 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.437427748 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.438479201 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.645103873 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.144758943 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.554673614 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.016532161 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.832232864 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.81365192 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.446949543 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.506980006 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.457967778 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.806688391 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.447336215 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.505672456 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.895845319 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.805033552 seconds)
  done (took 173.192782284 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.703580611 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.751935242 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.539540996 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.610911516 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.097855917 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.054955789 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.772617741 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.596144126 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.569076365 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.731520991 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.69838752 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.525466643 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.681162489 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.528981304 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.224719647 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.539638057 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.568191774 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.61118499 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.617389687 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.517334311 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.161266807 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.741003463 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.646343985 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.378215289 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.541332743 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.280941643 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.03912998 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.032353813 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.632636899 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.83430417 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.010410698 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.628980508 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.470028964 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.198655355 seconds)
  done (took 69.876951331 seconds)
done (took 724.038869057 seconds)
SAVING RESULT...
DONE!
