cset: moving following pidspec: 10581
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.305223234 seconds)
loading group "string"... done (took 0.469858354 seconds)
loading group "linalg"... done (took 7.640872765 seconds)
loading group "parallel"... done (took 0.171067239 seconds)
loading group "find"... done (took 1.161702214 seconds)
loading group "tuple"... done (took 2.090097056 seconds)
loading group "dates"... done (took 1.335713769 seconds)
loading group "micro"... done (took 0.245791955 seconds)
loading group "io"... done (took 0.664974825 seconds)
loading group "scalar"... done (took 40.984649696 seconds)
loading group "sparse"... done (took 12.644415224 seconds)
loading group "broadcast"... done (took 1.116381049 seconds)
loading group "union"... done (took 13.84051647 seconds)
loading group "simd"... done (took 4.799002231 seconds)
loading group "random"... done (took 9.682358066 seconds)
loading group "problem"... done (took 2.001416853 seconds)
loading group "array"... done (took 22.55352992 seconds)
loading group "misc"... done (took 1.442446013 seconds)
loading group "sort"... done (took 3.605018807 seconds)
loading group "collection"... done (took 19.536178 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.536498563 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139502465 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135955509 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.149647124 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20742847 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144159979 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158600255 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.114788779 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.003409204 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.187020475 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.157627458 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523424314 seconds)
done (took 5.188791329 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.223082969 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095887337 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104197204 seconds)
  done (took 0.868921539 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079240781 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14829687 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096021158 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078979563 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096201879 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080946968 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096506189 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.093375328 seconds)
  done (took 1.364625242 seconds)
done (took 3.220200634 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.724535598 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.280062253 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.206674606 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46714319 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194565824 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215931025 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679867881 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.349779802 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254848364 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100807667 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.145529153 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.394830542 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137211698 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.688683031 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091851854 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125407612 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179183284 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.456957616 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085971743 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110855738 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117628816 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143176188 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130229499 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092492516 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186857529 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.087169589 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.196413081 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109156819 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082081719 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.294008752 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202389445 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690774192 seconds)
  done (took 10.933551903 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11382753 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13543052 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099742433 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14076413 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136130962 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100714786 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085826398 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09829931 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123624535 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178439593 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132930847 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.123067775 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095993257 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084038627 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117006125 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246404499 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121823427 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105521948 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101861781 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10594924 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123694201 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113844106 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110200562 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094753999 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168482934 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222402265 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113489493 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12692432 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09873777 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115656794 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146959206 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144353068 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097022098 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081974408 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174967838 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125590774 seconds)
  done (took 5.192913827 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.127261095 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190335068 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105085358 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.18614775 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165073977 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142273186 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161880905 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113915295 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.233314339 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.108242659 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164397056 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.12764244 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143290875 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11971659 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0816452 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.100742819 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.080337176 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.625994672 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.125646347 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.157255664 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117983962 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104196723 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084724183 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368218291 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103728645 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080729643 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10064189 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067001505 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162076625 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100450926 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.267998221 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.084882356 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120633085 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099332832 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133720962 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.107693145 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128519694 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136834998 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080519179 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098833195 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.180702718 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088752325 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098527076 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122837715 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135018454 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120050473 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.102730154 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097497587 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204492204 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096390395 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099384707 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.966453391 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182072036 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091190766 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09660682 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.325420567 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098831005 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099450798 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078988912 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.268586945 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137845244 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082816138 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098307799 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080978295 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.09514945 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.087810122 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.35269454 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098356723 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.776055829 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085047723 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10645399 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084195864 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097819429 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105318321 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089646881 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115109491 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080927238 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101453973 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080645934 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097638477 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082575182 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109418842 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10333188 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081403891 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166445621 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080218653 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11529727 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128317948 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085495182 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096165265 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13286009 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084284483 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098603517 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134045164 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08190005 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109960948 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100113508 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143005506 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083178502 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.17553278 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08131754 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125802127 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100383032 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115428357 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109610609 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099897454 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086664447 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096970855 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078493572 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16610237 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080981986 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099187102 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082787152 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097138962 seconds)
  done (took 22.675169244 seconds)
done (took 39.47470568 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.332217254 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103956973 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105241561 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105077462 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102689766 seconds)
  done (took 1.495857532 seconds)
done (took 2.219463725 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.285351871 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.174728192 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095707089 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.170669365 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07853755 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.195249481 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163267127 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113871041 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.186669215 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.09528586 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.165619396 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077846446 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095158067 seconds)
  done (took 2.645441598 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096183866 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117126869 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084300734 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112649819 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078342515 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113053913 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094236555 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117796547 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111798799 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085742273 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095513905 seconds)
  done (took 1.824051595 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095958075 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114961156 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083857484 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112577886 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078471464 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111356508 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09404844 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117652687 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111668338 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087383968 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095259818 seconds)
  done (took 1.826254086 seconds)
done (took 7.01021717 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092050905 seconds)
  done (took 0.809102564 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.019060204 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.722364433 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112926597 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.155474541 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.321939608 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.199024837 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.580334334 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127446382 seconds)
  done (took 16.149904794 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.116281832 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.115223716 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.105036011 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084422521 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.102173335 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08555598 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103885614 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101606892 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085959204 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101430185 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084941057 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102837434 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104822516 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087274408 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.10380571 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087637065 seconds)
  done (took 2.353708819 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121054707 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120827401 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107822471 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111616607 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088744479 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107057942 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108601189 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091210785 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103747265 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105348036 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092612268 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106891522 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105790639 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081636859 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106815875 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110647133 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088164089 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107374414 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109984334 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092141685 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108093561 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098544519 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089141501 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106392314 seconds)
  done (took 3.298827531 seconds)
done (took 23.334557988 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.163692923 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11135198 seconds)
  done (took 1.002256635 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097283459 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114915965 seconds)
  done (took 0.943196713 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099939291 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097597518 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.125746062 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112484589 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081942755 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097570639 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121190724 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082904054 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097577762 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08201213 seconds)
  done (took 1.732985547 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083982345 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111420634 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103332302 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096215587 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106074526 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097072239 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090034909 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099610179 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11216375 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078434226 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104250592 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116370128 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087633849 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117693187 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106506834 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085645579 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104337283 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099690467 seconds)
  done (took 2.536578345 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080185528 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099161037 seconds)
  done (took 0.914325048 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082387616 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095806232 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083493566 seconds)
    (4/7) benchmarking "year"...
    done (took 0.0988681 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096478541 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078305253 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095783777 seconds)
  done (took 1.36538445 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.477122505 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136342131 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.255732222 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087089764 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123268749 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.3129319 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.09874969 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086871751 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104640225 seconds)
  done (took 2.473121127 seconds)
done (took 11.7002946 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094505739 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119620165 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115283223 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.473428169 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108932444 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097395974 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.162825321 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.256137509 seconds)
done (took 2.171129947 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.152471796 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328633312 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.115120076 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067226721 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097671934 seconds)
  done (took 1.350237734 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081382756 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101525229 seconds)
  done (took 0.922292694 seconds)
done (took 3.167016284 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083811497 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.13384433 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.082756505 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.098367677 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081845173 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.096739884 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079390052 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.099410707 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098949179 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081837671 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098032391 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081683456 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.098436078 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08090591 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096322369 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079045486 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096463339 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081960811 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095691357 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079939033 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095656567 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082058147 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095399268 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07985815 seconds)
  done (took 2.956918513 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102903691 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100387428 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105012852 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087825155 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103302101 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088496038 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103653805 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09852857 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08774315 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100598507 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103659456 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086240126 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101133428 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086145061 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101286175 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102980772 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088654458 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099996275 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084329465 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102624861 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104813362 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0820697 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102690575 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104711841 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087062341 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102293714 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084047684 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098439158 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105241191 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086078013 seconds)
  done (took 3.637901443 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.0866242 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095922468 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079539183 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102712845 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078698695 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099054245 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079724279 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097418371 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080748251 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096762719 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080631205 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096725097 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079672698 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09738343 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098086624 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083015739 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109337959 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080367169 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097332812 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080325452 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099528437 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079220216 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096139038 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079742498 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096403816 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079638758 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097457621 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079211984 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097259392 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080042602 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100001418 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083724556 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096357769 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103905864 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082745271 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.097131787 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083028305 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096294436 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080572511 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096898907 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079257652 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096317085 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079562353 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10279818 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080728935 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098920621 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080045566 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09797429 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080091537 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099491223 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.096046851 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079454516 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.099084743 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080742043 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101800073 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079577277 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097886288 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079670038 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098584077 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080830899 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096180205 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079606779 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099750445 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080328724 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112370461 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103866087 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078840654 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.099230064 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.081160018 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.100165808 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.081975897 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112072024 seconds)
  done (took 7.267420679 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085566672 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108783555 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082312967 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098711747 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078610807 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098834662 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100239863 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080946164 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100160863 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088236839 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097555606 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081565723 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099215887 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110807817 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081274829 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099748878 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087190511 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096053908 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081464084 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100771743 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098131064 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08438399 seconds)
  done (took 2.787320498 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.216429096 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107242562 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14484339 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109037238 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085465048 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108036897 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103816358 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089196947 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104447999 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085696742 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101830094 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105387631 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085441387 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102477944 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102605201 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08692128 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104511411 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087384175 seconds)
  done (took 2.681113924 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095368072 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100095883 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.12239421 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.08278088 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101502327 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085346841 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105781858 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110269443 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085862684 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09961933 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09347308 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102238626 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103135436 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083394124 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102981381 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08418599 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102623821 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100731135 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092737275 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106174438 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105901811 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092902951 seconds)
  done (took 2.911029864 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098896619 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103108482 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120339578 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086156335 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096581938 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082156181 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107511946 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083688733 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108327389 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102592367 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083137276 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098783928 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089572426 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099077813 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106455134 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083391361 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102051796 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082979186 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101682764 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079629079 seconds)
  done (took 2.669830849 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10554883 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101947983 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100664067 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094670794 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101405788 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084778617 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111521328 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101041986 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085024721 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127556447 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101130975 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084258631 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111588348 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107282319 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101176638 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094080018 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11171485 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112402009 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083997599 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101156853 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.236590673 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084212772 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111801061 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102167536 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08451148 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101777833 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102525876 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090943965 seconds)
  done (took 3.693269971 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082216005 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100316584 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080800591 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098064573 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080041913 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098508833 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080266706 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097858425 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08332075 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097220519 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082694134 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100427789 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083208806 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100757869 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083163856 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100696137 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085281388 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098456733 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08125532 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097641037 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082834149 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100808248 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082863729 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097153142 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080507466 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099986755 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080861357 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097904499 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100636616 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080268344 seconds)
  done (took 3.473468946 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093474404 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107541235 seconds)
  done (took 0.960356048 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080696255 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117324329 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081036137 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103750923 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106387099 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083192033 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110743777 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088357495 seconds)
  done (took 1.528474539 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097916001 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112038578 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084986361 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115145699 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111659645 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.096578878 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163034258 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101885665 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089507772 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098614367 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11481164 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081708007 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107059103 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083850031 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106981908 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090618075 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099009519 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.09055174 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102949786 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100013607 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085711335 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111749925 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086593371 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097976842 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10328618 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093461649 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110339243 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084941396 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104700057 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110965697 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089794561 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095673661 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083869933 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101806234 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081859334 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109865044 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113744728 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086882222 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109888396 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085577961 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113356243 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097144059 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090110372 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107070572 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094177587 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101563175 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103967643 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079516033 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098760693 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086334155 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096448375 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083969307 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095114513 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091683925 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10536233 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114766898 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082936181 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102899656 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086903001 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104360851 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089629446 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103452283 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104180235 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083512377 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109100776 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08898778 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108714181 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079318501 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095078998 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082028718 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110532246 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124247555 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091780469 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102205308 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103612795 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082158042 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104664375 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086028997 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107910959 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10973339 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084205687 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108859891 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091995399 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101733805 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104105044 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093905084 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099251243 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086694196 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099134409 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117072265 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083073518 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099324017 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081784602 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110861899 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087077583 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101540469 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084024902 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109629813 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095505126 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084904042 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103148157 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084583074 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110539381 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.1084267 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091188199 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109421781 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091354067 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101859623 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086847467 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098446536 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104203871 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08589309 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108045821 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077987146 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104380688 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086010284 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103134309 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110316451 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08225688 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102334778 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092276149 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109400703 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082906427 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09718245 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104588896 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084174309 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106039862 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09193383 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100152744 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078805942 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096830226 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106629475 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085047493 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106352378 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090849344 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104695454 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078962073 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099455992 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107409193 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09169574 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102819205 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084359992 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106801384 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085065855 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100721485 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.10856756 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086491495 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102241182 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.0895904 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104144267 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079730736 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106601162 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105134695 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082853523 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10550549 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089368468 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103802724 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085335342 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100933111 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107954838 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085859011 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101171358 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083950102 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100125144 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094157009 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104697082 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097183497 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080786537 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110565221 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082224477 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101987025 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083158951 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103380695 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084835301 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099723322 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101794277 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085726627 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115564552 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089560795 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103458906 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107763614 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094041728 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102364309 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085718341 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101514263 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103795802 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085492383 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110888262 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089563059 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107909737 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086849677 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098599308 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108965265 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091870615 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101074461 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083154084 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101064753 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088027995 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110177265 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.10587908 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085728642 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100532791 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085669867 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106381041 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105681201 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084764955 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101894233 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089509838 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.101478837 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092376845 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103711739 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111939731 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088357104 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097627554 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087849099 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099611191 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108689792 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079761842 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099756757 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082836123 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104537012 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082381099 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104736186 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078753318 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109524268 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110582845 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083725515 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102461819 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086309282 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11115388 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085799296 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105097495 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087457877 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10751652 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11629013 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083696906 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.10579047 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094138373 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102664188 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096404448 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089707972 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101059451 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084157154 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102507326 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083111028 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105475123 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111811856 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089527126 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096216969 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087387964 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100560854 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082765186 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097542087 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090677523 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10654912 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103829675 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093730169 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104467304 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086513039 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106447711 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103363072 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.087068727 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104044693 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088136044 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104053687 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087807816 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.102266246 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105525927 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083319293 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.100935268 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086158022 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.104456151 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085593281 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108557198 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086975473 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102558605 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105458595 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085515829 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103620454 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085399486 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101682317 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088166837 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10355151 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084853972 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104311903 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09827299 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092733311 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102246699 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092856962 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102426497 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082256101 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.109276723 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104832028 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.091480081 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104738623 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085966753 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.10434248 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084757292 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106401805 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112171858 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.083224374 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.1124169 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090082696 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104117305 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106266773 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084497607 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104427377 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084559504 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104091646 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.08642061 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.102640206 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084110905 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10815621 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105910157 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085149085 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10456405 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086492759 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.103117277 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086051988 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097935477 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084049997 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102306371 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085447465 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111503322 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104606211 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087608061 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102303584 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086085105 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10190927 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.08234597 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111550491 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113716182 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085369416 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110723218 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10208606 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086268361 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112565012 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07884416 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100829644 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083065878 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101840651 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092338007 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104635767 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112418176 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084839707 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.102125172 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081769775 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103860161 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083605866 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097417998 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083034806 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107369933 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105482947 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083543513 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104444904 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087660905 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105396436 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091824667 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102243955 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086475751 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103385113 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100690917 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082665931 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101755443 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087679791 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104225782 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082930951 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101030983 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085350142 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.112547649 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085649248 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102766316 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.104396771 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09231887 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103216626 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08792599 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10823209 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079443721 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106502614 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103540014 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084796115 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.102195741 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088565185 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10738723 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087246686 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111531779 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10386006 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086231275 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103867255 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083318421 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103190166 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085337051 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103519017 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084504458 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105696624 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112275375 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083246187 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105012888 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084351381 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.103301432 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090026225 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105997248 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.105205205 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094560254 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106682408 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085884868 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110784973 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10739939 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088340711 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105449067 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086949023 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109697298 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08456597 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112032841 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.103803225 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086429582 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10474979 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083117312 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103652735 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085093514 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102961632 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09035823 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105287853 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102660383 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084503852 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.101775921 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087045592 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108433083 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0927454 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106705051 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106579807 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080983244 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100377052 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085911146 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101348728 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087706108 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105908467 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090874391 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106644946 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104138816 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084643988 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111932242 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092728744 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109091148 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082601856 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10850707 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10430931 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088119514 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104223483 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084939063 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106788255 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090223148 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106471226 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103589433 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093805961 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.108410102 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086724303 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104916596 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085308644 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104610216 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098767663 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087125871 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105395622 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091154871 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106351632 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084919476 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114161615 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103663096 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08517577 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108096848 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084898653 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110426556 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081231836 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.104431772 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10573609 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086812628 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099287551 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084175539 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.10132904 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088700733 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102270551 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.08089981 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113878013 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.110977236 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088049735 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103147359 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085141116 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099485794 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081072489 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10304732 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087538129 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107513001 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113424536 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084566218 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103055191 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080557654 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104571135 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08821661 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107493471 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082558498 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099841317 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102560473 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087995806 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.110885883 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084638532 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104569603 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090139455 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10633426 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083366759 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109113962 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.100206733 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08948584 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115085207 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086361813 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10508354 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109676226 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094445978 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105136253 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081332661 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105850658 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088317016 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105165002 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104826693 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087578517 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119203158 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089421225 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103509917 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084355522 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107387731 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103860531 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093040718 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105645053 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086721727 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108687879 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087346565 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115193601 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106944324 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091014927 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107176014 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088149287 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103820877 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104452305 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083998169 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.102457683 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087568251 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106041789 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090414628 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113845353 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.104398377 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094988826 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112897577 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.09010247 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100847294 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084315849 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104587554 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099650904 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086811305 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101934168 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085019386 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102194133 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085024924 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105152375 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09252768 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106410403 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.106352291 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085697038 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.09867928 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088058874 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.106884749 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087164599 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100961884 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085656024 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106146726 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.111142262 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092353469 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105418751 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088041087 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105738798 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086474145 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100906955 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091655038 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104173013 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.107027116 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086040345 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105852669 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087728743 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108093065 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092582279 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106529973 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107109497 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098325612 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107940856 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.083391836 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102606957 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090936118 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103170581 seconds)
  done (took 58.786258345 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15081162 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082301161 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100171834 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081813195 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11512018 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101032309 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081660052 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101417099 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08344442 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103882129 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080704968 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10035172 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111087601 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128448689 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096632094 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105781704 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099856079 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082945447 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100691423 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082313572 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110853774 seconds)
  done (took 2.911741583 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107602492 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119163428 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116594917 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121990956 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091496286 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117222079 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11654169 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116706093 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102786922 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11249506 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121562563 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117657594 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09384711 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111809562 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112840627 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09602844 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121000658 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11071718 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119697873 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097439367 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115367354 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116469149 seconds)
  done (took 3.265540078 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08649262 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104410918 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08769816 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099094703 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.085589431 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09957667 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.090266007 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102855896 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089567848 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.104451282 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.103633963 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.083512324 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.106073713 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080472399 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10347263 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083441119 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.156092244 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108954564 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084979727 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106801778 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.100592392 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088876936 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100519111 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081766043 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102495851 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090716992 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106398288 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083030774 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104481087 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083430424 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104957262 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.102300685 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.087599042 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105386173 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084406702 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10325562 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086414233 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104556562 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.081148216 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102678993 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085599483 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100574629 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087074299 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106480736 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.102765148 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083700923 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.106155083 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085477323 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.099580023 seconds)
  done (took 5.541161021 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.108319388 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165173733 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088248691 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14554185 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123851934 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114503264 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090394588 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.145468333 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103790454 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085252861 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125275433 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12184387 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105786616 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090756632 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108494573 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105928994 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087956734 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103438381 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090943055 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105422991 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110718726 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091553835 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122970483 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120987888 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109685635 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085334443 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104469958 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110803847 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100203909 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.11138045 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110837442 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092477667 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123860606 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110201155 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085432578 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108642209 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123569947 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105360561 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089671483 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102239942 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088687224 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111473927 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112243001 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105583318 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105716663 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110228226 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086251251 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101903688 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.12062466 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089874558 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116094962 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12347456 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109957728 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087646722 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111542401 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123441097 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086435083 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103701519 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090253467 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119895084 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103890349 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090730973 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.12081546 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108290825 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114804116 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101822378 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111511832 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110303168 seconds)
  done (took 8.25269104 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096099414 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113542959 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123788394 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123861095 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094327638 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112884739 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113882429 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.093183077 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113454358 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118349274 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112651476 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.137281602 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088683688 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117417705 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113692748 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093986808 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113408951 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112740377 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094448248 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11357417 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11375497 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124125105 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093963476 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123264863 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144995419 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106828253 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09452222 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.1138694 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123943238 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112778452 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126702315 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.094482521 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113109771 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123644723 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126638979 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094168989 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105657621 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113668207 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.094120994 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113051808 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.108018055 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103769573 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114448963 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106261837 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093575529 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114120671 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123625879 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127261052 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115878534 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099170651 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114253423 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124135362 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112758 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094914273 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123690498 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.150612524 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123002849 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123642867 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113246844 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103403965 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123539277 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.132021069 seconds)
  done (took 7.824492235 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111528238 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117124988 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.120304936 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101878204 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085482399 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110038778 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084830313 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104475369 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.116573458 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096042284 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119657235 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11064044 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113230702 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10010918 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111352936 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115117409 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091240769 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11183769 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11669042 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.111437666 seconds)
  done (took 2.973622187 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09423308 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126577195 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086775064 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114115449 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110179464 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092631714 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108782041 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108517263 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087768079 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109527946 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097297116 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119036231 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106967555 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093316942 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118806996 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113876336 seconds)
  done (took 2.512500575 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099120528 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11990677 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121468246 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086119737 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105679264 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10290083 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.086497059 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102180548 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084084246 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12329646 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086112957 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.11159855 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105740001 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085196911 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102842138 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08975789 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102740284 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084097798 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107293236 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.123785865 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098339627 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106137118 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107754531 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090210126 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107477591 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091922899 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109479973 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104249717 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085615938 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10696363 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086890477 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115180975 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103235789 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085575136 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104827729 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084786748 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105983447 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08676321 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110960466 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106683671 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085630456 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106054676 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087339323 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108730889 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.102603005 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088287779 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102831614 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093476546 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104569263 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087096351 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107336259 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109033248 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.088358669 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117519851 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110731804 seconds)
  done (took 6.356819855 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101264524 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110061729 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081827398 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104560822 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090582228 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109255287 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109396725 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090086024 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109192402 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084646453 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107868334 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091379222 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109272652 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110730587 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088873699 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110762914 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081985177 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108196372 seconds)
  done (took 2.630147478 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092046409 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10575168 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093555429 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107105311 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086608793 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109988724 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081705352 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106051892 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104507605 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087735728 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106609948 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090256934 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105300187 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089249344 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107307947 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086476276 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110037078 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105573007 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086819754 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101987592 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090045838 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104665869 seconds)
  done (took 2.991706518 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.120439339 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127121224 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.094018665 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228838085 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.105476118 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133354508 seconds)
  done (took 1.642641316 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111164823 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122948073 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107772581 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109259413 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118112527 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108568724 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089522212 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109391867 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120925637 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104239218 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111182193 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121067614 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120309499 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099702791 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117970794 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116720747 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10932396 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089086919 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10767634 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132630939 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090472865 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120253626 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109566906 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089685143 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110174522 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120545894 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120630735 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125091729 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090506846 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119606751 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115783581 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089457148 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120611419 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125817142 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110576277 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101299977 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110374503 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132464308 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117072785 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099801335 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111278155 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117867547 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101090831 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116773688 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120775357 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110304448 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095823432 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110835359 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110151992 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138574758 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097558578 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120958241 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116995299 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120166954 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121933373 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13934657 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104807578 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120777051 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118361672 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126490179 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120316602 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095891915 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120743332 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126012425 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117174549 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120501916 seconds)
  done (took 8.307836183 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106325122 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127983524 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110577512 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124935048 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100405105 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10998181 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109933713 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089733999 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110712271 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108922328 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156188396 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090685477 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121468452 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120558915 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109677166 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091026814 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111151021 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120911573 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09042438 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13936305 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110086972 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120655664 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120225517 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100344532 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126577183 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117467271 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11050372 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091402314 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111162901 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109040936 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097583128 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111229771 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120682449 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089473805 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120040526 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10990336 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090457067 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117374811 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110379745 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117126344 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099785038 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132072281 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111720217 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111110454 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105291815 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110843387 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110427221 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088770616 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110458225 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108646209 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104748933 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126406686 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126768662 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121170493 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110153075 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090902217 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111860574 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109301647 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090596297 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117103029 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119879262 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089625287 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159607643 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090708107 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11094171 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121104742 seconds)
  done (took 8.184392484 seconds)
done (took 157.488199488 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100011315 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138184147 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097712642 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170703073 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108446817 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121665681 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.14005795 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.099685123 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.109179455 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087583345 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108385599 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089462782 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173666898 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108379895 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088018335 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108937728 seconds)
  done (took 2.690548782 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.20425792 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.25792473 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104185418 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107184588 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090561276 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111695856 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.107123932 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.093469879 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.111499571 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.087074589 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110211441 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088624767 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.108616331 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.08701014 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.113301171 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089821408 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108291815 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.109891924 seconds)
  done (took 2.937225938 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115719192 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.154947649 seconds)
  done (took 1.117977868 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123084007 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.185012664 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301223087 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158422563 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121607453 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13031891 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158607635 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133514849 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.203317569 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125639495 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12490077 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099510008 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14361681 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118303093 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096163791 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121762302 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145341475 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.094191669 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.118046678 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.118043091 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119296342 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10866354 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117610007 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095419456 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184207325 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.122666161 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107737789 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088161504 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.119147188 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096995851 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114679025 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128930273 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.100560831 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.183165988 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124992455 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.164009449 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119222859 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093502303 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115568498 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092935014 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121932137 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.121702191 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.106443701 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120234133 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.110068243 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.100311995 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10831768 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086622506 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116049531 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.121401384 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095325462 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11517187 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.16139009 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121158502 seconds)
  done (took 7.673514695 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.807821264 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15993375 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091671055 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.90486338 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139656836 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105352526 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.800321744 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134788883 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.238227508 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.794413322 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110201465 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124930155 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236588078 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.243920796 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.947607207 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316222735 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.686012389 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126412974 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.118784091 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157095392 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120831898 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138472997 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129983936 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.433390688 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096210567 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114035219 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117065521 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100246774 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162759623 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.114287244 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115967029 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.183856049 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250105344 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211741042 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11643054 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090756924 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111575628 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.173074175 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27541593 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222400392 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.184403973 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089621624 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111346681 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10045386 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131331433 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10855428 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.170270745 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.179757776 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.199456685 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094294499 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12291291 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119122741 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099592376 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.191047207 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101546494 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.318785383 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.330877507 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112604938 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098050155 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12923042 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27216728 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124992283 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.210549913 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138598658 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218171891 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089782267 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800619451 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.193785403 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091827394 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118839634 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097613316 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118579383 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120618629 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170357315 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.396183928 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102113512 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11556755 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111229005 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.212908435 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.112334811 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091966749 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16573268 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117954577 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120002305 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1024681 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123627826 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.173220904 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.258523234 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10121891 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121374156 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116998679 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102032382 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11725504 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214279265 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225817016 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.187442857 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.215567201 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121415974 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.170920201 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.17400977 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121968158 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.178302972 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120052505 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126983081 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101970358 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226715338 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148793895 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126273747 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094402275 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119288288 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.152675753 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114618943 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097701462 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.19660267 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.466096534 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.172398086 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110242189 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093762299 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121100113 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.166337026 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119271117 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264987101 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099184562 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.196626362 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095600416 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111035279 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119397098 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.170429367 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124125164 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09914124 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124012564 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119480722 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.242584412 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224756638 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102108456 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.251624419 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.188462768 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119918509 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177677359 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12089575 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172464025 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121304351 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099432473 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118133911 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797752579 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102473431 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121510307 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118003431 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.19215979 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091359219 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126820021 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.11214081 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089184366 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780628169 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.092928984 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.126129125 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.127249504 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097624132 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120760966 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117203679 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095302563 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.189097337 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237671941 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100528275 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120322682 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.091121218 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.18554569 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095999134 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.11338786 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091473457 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.114654126 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120843156 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095185358 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12733962 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.175436729 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165908471 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227040338 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.604564968 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112287799 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.091903674 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238339615 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11226163 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.275555867 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121113213 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232961734 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.169234479 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.124507757 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.329719494 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.171798244 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.192044258 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.115298357 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.177972404 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087503055 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119796907 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168204612 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114675963 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118074069 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.16925368 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126210023 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10214625 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.979082398 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113288667 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229592934 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086985113 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.196760149 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095224856 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123029752 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.301561668 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112302038 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107491098 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.19086433 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095795771 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.114084145 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.713441043 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114145842 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100964833 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120343299 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230090625 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.168726147 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120011188 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119155908 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10193033 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.190513524 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.215094414 seconds)
  done (took 44.432779701 seconds)
done (took 59.697241286 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.296820438 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.220570246 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262005201 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173025224 seconds)
  done (took 1.899762879 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173663812 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.152974022 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121058494 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109447333 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151647925 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086443965 seconds)
  done (took 1.673494774 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.361232701 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279065853 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244456307 seconds)
  done (took 1.775609778 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.244600273 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.264156302 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.325254661 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.414579279 seconds)
  done (took 2.224580689 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.203823777 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133704995 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111810674 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107460637 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.20105265 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.242322953 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.1451318 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.171345878 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.124186244 seconds)
  done (took 2.366191254 seconds)
done (took 10.819798999 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.16080712 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.248058746 seconds)
    (3/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.172122178 seconds)
    (4/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.160988767 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.148555704 seconds)
    (6/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.26636574 seconds)
    (7/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.227330563 seconds)
    (8/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.235537881 seconds)
    (9/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.128444047 seconds)
    (10/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.102822388 seconds)
    (11/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.121128549 seconds)
    (12/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.225959313 seconds)
    (13/286) benchmarking ("sort", BigInt, true)...
    done (took 0.237485772 seconds)
    (14/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.093845071 seconds)
    (15/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.12747388 seconds)
    (16/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.127478745 seconds)
    (17/286) benchmarking ("sort", Float64, false)...
    done (took 0.149791671 seconds)
    (18/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.127665264 seconds)
    (19/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.189106633 seconds)
    (20/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.100600619 seconds)
    (21/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119034666 seconds)
    (22/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.10397792 seconds)
    (23/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.187237249 seconds)
    (24/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.119673927 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.138013 seconds)
    (26/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.098864407 seconds)
    (27/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114987395 seconds)
    (28/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.128048712 seconds)
    (29/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13921151 seconds)
    (30/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.152222237 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.228300733 seconds)
    (32/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.095716311 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.121920632 seconds)
    (34/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126107196 seconds)
    (35/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.10018274 seconds)
    (36/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.1200849 seconds)
    (37/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.178182136 seconds)
    (38/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.157001619 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.10968244 seconds)
    (40/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.196676676 seconds)
    (41/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.236841711 seconds)
    (42/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.178271881 seconds)
    (43/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.242910053 seconds)
    (44/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.143780379 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094987988 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.136298601 seconds)
    (47/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.112205718 seconds)
    (48/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.174728211 seconds)
    (49/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.112176776 seconds)
    (50/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.126211947 seconds)
    (51/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.166282138 seconds)
    (52/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.102012035 seconds)
    (53/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.151735376 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.137611896 seconds)
    (55/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.150292113 seconds)
    (56/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102198412 seconds)
    (57/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.176190344 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.090149283 seconds)
    (59/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.115540166 seconds)
    (60/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.2239889 seconds)
    (61/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.154491114 seconds)
    (62/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.173476428 seconds)
    (63/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.178550832 seconds)
    (64/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067393749 seconds)
    (65/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.093123079 seconds)
    (66/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06786987 seconds)
    (67/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.12563939 seconds)
    (68/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.120015313 seconds)
    (69/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.145254727 seconds)
    (70/286) benchmarking ("sort", Int8, false)...
    done (took 0.201384226 seconds)
    (71/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.183052783 seconds)
    (72/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096140044 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.151671089 seconds)
    (74/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.091276012 seconds)
    (75/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.079746578 seconds)
    (76/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.182967778 seconds)
    (77/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.166753396 seconds)
    (78/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117038492 seconds)
    (79/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.243605519 seconds)
    (80/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.107405132 seconds)
    (81/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.068311497 seconds)
    (82/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.08651083 seconds)
    (83/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.219036175 seconds)
    (84/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.131906552 seconds)
    (85/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.140054106 seconds)
    (86/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.069075641 seconds)
    (87/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.118081165 seconds)
    (88/286) benchmarking ("sort", Int64, false)...
    done (took 0.090045869 seconds)
    (89/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066090966 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.112021264 seconds)
    (91/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116779076 seconds)
    (92/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.178477371 seconds)
    (93/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.154581583 seconds)
    (94/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066999772 seconds)
    (95/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.154487641 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088414148 seconds)
    (97/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.148729106 seconds)
    (98/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.084831564 seconds)
    (99/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.113814286 seconds)
    (100/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.192945558 seconds)
    (101/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.168441494 seconds)
    (102/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.165636804 seconds)
    (103/286) benchmarking ("sort", Float64, true)...
    done (took 0.236588504 seconds)
    (104/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.176086546 seconds)
    (105/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.149210321 seconds)
    (106/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.092924359 seconds)
    (107/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147673161 seconds)
    (108/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.131924895 seconds)
    (109/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.176036851 seconds)
    (110/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096867441 seconds)
    (111/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.120140027 seconds)
    (112/286) benchmarking ("sort", Int8, true)...
    done (took 0.225643167 seconds)
    (113/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.15334812 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.099947741 seconds)
    (115/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.192514916 seconds)
    (116/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06917863 seconds)
    (117/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.187772941 seconds)
    (118/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.123900392 seconds)
    (119/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.096351215 seconds)
    (120/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.135745969 seconds)
    (121/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.089754344 seconds)
    (122/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.123924533 seconds)
    (123/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.159530804 seconds)
    (124/286) benchmarking ("sort", Bool, false)...
    done (took 0.184318449 seconds)
    (125/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098323253 seconds)
    (126/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126031433 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.096342272 seconds)
    (128/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.11801867 seconds)
    (129/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.069363092 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.117315441 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.09575464 seconds)
    (132/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.11459222 seconds)
    (133/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.068544373 seconds)
    (134/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.09529099 seconds)
    (135/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.071605001 seconds)
    (136/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088191327 seconds)
    (137/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.091049942 seconds)
    (138/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090419834 seconds)
    (139/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.117641726 seconds)
    (140/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.097237276 seconds)
    (141/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.09109353 seconds)
    (142/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.079266389 seconds)
    (143/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115342382 seconds)
    (144/286) benchmarking ("sort", Float32, false)...
    done (took 0.152621201 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111416829 seconds)
    (146/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.127025617 seconds)
    (147/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.101304143 seconds)
    (148/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.123387789 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088394879 seconds)
    (150/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.120018421 seconds)
    (151/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092278095 seconds)
    (152/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.121303942 seconds)
    (153/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.170571832 seconds)
    (154/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068949207 seconds)
    (155/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.119016245 seconds)
    (156/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.070398999 seconds)
    (157/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.237422909 seconds)
    (158/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068658798 seconds)
    (159/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.122858474 seconds)
    (160/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095567522 seconds)
    (161/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.18882988 seconds)
    (162/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.092102515 seconds)
    (163/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.101542748 seconds)
    (164/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116860253 seconds)
    (165/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.069247554 seconds)
    (166/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.17376381 seconds)
    (167/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.114481056 seconds)
    (168/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.091784444 seconds)
    (169/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.068089951 seconds)
    (170/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.082417963 seconds)
    (171/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.187011189 seconds)
    (172/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.12492639 seconds)
    (173/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.18821931 seconds)
    (174/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.090643549 seconds)
    (175/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.120587773 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.088347952 seconds)
    (177/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091454633 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089208182 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117434282 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.088676229 seconds)
    (181/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.186689622 seconds)
    (182/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.121704344 seconds)
    (183/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.097316577 seconds)
    (184/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.157661568 seconds)
    (185/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.089094346 seconds)
    (186/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.188460229 seconds)
    (187/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.112771442 seconds)
    (188/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.068189574 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 0.226524107 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.088513893 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.11147261 seconds)
    (192/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.069077116 seconds)
    (193/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.09104292 seconds)
    (194/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.153707177 seconds)
    (195/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.118616569 seconds)
    (196/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092377347 seconds)
    (197/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.09128298 seconds)
    (198/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.088973144 seconds)
    (199/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.114527984 seconds)
    (200/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070121131 seconds)
    (201/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.110462591 seconds)
    (202/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.067978674 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120298937 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.097092927 seconds)
    (205/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.185676887 seconds)
    (206/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.167596419 seconds)
    (207/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.069337505 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111048155 seconds)
    (209/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069057948 seconds)
    (210/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091821631 seconds)
    (211/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.100310324 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096374988 seconds)
    (213/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.34185173 seconds)
    (214/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.068426193 seconds)
    (215/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067645749 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110804215 seconds)
    (217/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.109652377 seconds)
    (218/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.118576078 seconds)
    (219/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.169330434 seconds)
    (220/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.183971251 seconds)
    (221/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096814219 seconds)
    (222/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.091144494 seconds)
    (223/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.079766041 seconds)
    (224/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068237154 seconds)
    (225/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.120985351 seconds)
    (226/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.068330726 seconds)
    (227/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.139013412 seconds)
    (228/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094715684 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.111634267 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087642199 seconds)
    (231/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.100468187 seconds)
    (232/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097617121 seconds)
    (233/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.112730038 seconds)
    (234/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.137045775 seconds)
    (235/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.070063283 seconds)
    (236/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130452511 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088363987 seconds)
    (238/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.13793527 seconds)
    (239/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.068546088 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117264214 seconds)
    (241/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.0693255 seconds)
    (242/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068092139 seconds)
    (243/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.112046113 seconds)
    (244/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068712219 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120147476 seconds)
    (246/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.088250532 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.111094989 seconds)
    (248/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.069207718 seconds)
    (249/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.113146464 seconds)
    (250/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.069426721 seconds)
    (251/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.136791545 seconds)
    (252/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.070236262 seconds)
    (253/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067400481 seconds)
    (254/286) benchmarking ("sort", BigInt, false)...
    done (took 0.247329783 seconds)
    (255/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.114878338 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.120090874 seconds)
    (257/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098000243 seconds)
    (258/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.090957015 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087150808 seconds)
    (260/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117987746 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.087717756 seconds)
    (262/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.112271965 seconds)
    (263/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.088315968 seconds)
    (264/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099551482 seconds)
    (265/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.06827965 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096164668 seconds)
    (267/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.111787393 seconds)
    (268/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136897368 seconds)
    (269/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.090325352 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.119017403 seconds)
    (271/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068906399 seconds)
    (272/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137914667 seconds)
    (273/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070061466 seconds)
    (274/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.111179567 seconds)
    (275/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.097102285 seconds)
    (276/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.090314447 seconds)
    (277/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.068319604 seconds)
    (278/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069266922 seconds)
    (279/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.112458477 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.094417167 seconds)
    (281/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115565573 seconds)
    (282/286) benchmarking ("sort", Float32, true)...
    done (took 0.235614419 seconds)
    (283/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09527175 seconds)
    (284/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.113231046 seconds)
    (285/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091057798 seconds)
    (286/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.12806714 seconds)
  done (took 36.619989346 seconds)
done (took 37.507100864 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102567239 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149839018 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098642282 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138345232 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125462332 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09347336 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119989344 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.100415333 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.126939827 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126623721 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100359241 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094322106 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099547177 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122759062 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098427685 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142154366 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125097506 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095487011 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120592385 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08731696 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121517386 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110573153 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.091325298 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070350847 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123767354 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.095100775 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118192703 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121850347 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.089391889 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111435682 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.0941978 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118614153 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088670082 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125626605 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095212771 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120823881 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.12297023 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099278662 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113154612 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088990968 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118781292 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.089364229 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118225681 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.09692194 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117854239 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095029935 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.121256965 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125465729 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118294876 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116340722 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.098457355 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121461498 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.099025836 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120741162 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.115649451 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.098590233 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.117026349 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119568421 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121568931 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117152268 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.097146509 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.119337253 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.09450623 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.119875684 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.09755436 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.12246397 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123315584 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095232377 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.121697303 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.094930242 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.111807634 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097831401 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.114836551 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.088825724 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.121260227 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.099586792 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.111184328 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.094941524 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.119586525 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.116931458 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.089815164 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114155609 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.09105837 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118143303 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09225879 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070241872 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.116925197 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117943295 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.089362199 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.119901688 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096098695 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.117776279 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091053632 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.124726311 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.089356977 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.117956664 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.089437849 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.112057926 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090456352 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.116636198 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.088339057 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115778535 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.097828859 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.114466452 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094824739 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124646803 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.111653526 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.096138531 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.110597473 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.0886456 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.127892712 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.10025016 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.113325775 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094183897 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.11114461 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.096067485 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.113241222 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.088267608 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112594817 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11116167 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.094878844 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111754405 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091286296 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.119223594 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104411543 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.111261712 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.093758918 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114251761 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089062881 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.117775029 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089896998 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.112467374 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.091253738 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.10249008 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092425847 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.112306098 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.096296804 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115479994 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098245363 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114752101 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.122322036 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.094579363 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118827234 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095653008 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111537349 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075965591 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093867336 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115430776 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.090983341 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.113652311 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113155224 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08960461 seconds)
done (took 17.219501165 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090095932 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185971037 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.154101604 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143212428 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109241891 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113163596 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122855819 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120482971 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114877941 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145255083 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.113310761 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134027136 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149163427 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08974158 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114185366 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.093449153 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114389913 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.128287928 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124193417 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.135117034 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166310852 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087957037 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149613051 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138508011 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122113515 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.116681275 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113467264 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.093403108 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11636119 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.12857766 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110491426 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116134692 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.090056378 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135801097 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105683096 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121539577 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.112848092 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.096926786 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.11256851 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.090365725 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142667485 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13598435 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.095137551 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118909663 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.093830163 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115989461 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091323849 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122812576 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123843221 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.09425457 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127303735 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.160036033 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092879126 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123797867 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.113495418 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.100749791 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122909542 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09192516 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113926272 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092398232 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113765317 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.093057273 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128942389 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145546672 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.118524891 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.099968511 seconds)
  done (took 8.725604768 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107695018 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140693701 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.108135691 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.133172084 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11282698 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090619884 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11416024 seconds)
  done (took 1.756686327 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090698157 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136253779 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113455687 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137847897 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13468977 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.114466054 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124823753 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090415647 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136045197 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.091120941 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136081572 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151822044 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.092395024 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.123041954 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139308109 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091377489 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138884192 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090464653 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118104332 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.139065421 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094212799 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137482861 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091967178 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.116425967 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105267332 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115355583 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165580197 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096066579 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116645178 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09393822 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113958602 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.155113402 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106084765 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126645566 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091097672 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132195608 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129364493 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08938541 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.127427357 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095902153 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130447816 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.092077491 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117453279 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088750146 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120686988 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.12642948 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.095161926 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.133465189 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.094032578 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135014033 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091848025 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130160288 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090654529 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120370542 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115850954 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09725349 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124589205 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.094716061 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135784481 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093014443 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133702623 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132465799 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106171166 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132668083 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094099224 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129512143 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104975675 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119420058 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116404101 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094969791 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133199871 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089431928 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117348023 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.102716569 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118840589 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114858372 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.140101406 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117535782 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101831563 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115630041 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.091565223 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.116066208 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.114428425 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120144264 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115692843 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.095627263 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118282875 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090003398 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.114741702 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095078828 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.11324046 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.093557281 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118151212 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.092164366 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118826929 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.108029372 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11759904 seconds)
  done (took 12.016741539 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092651614 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116730176 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095995681 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11718323 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092190873 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116151035 seconds)
  done (took 1.590148723 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.120177578 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119035512 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10647024 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122332285 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158633821 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.130663569 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.108490226 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125831998 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.110157098 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130496339 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.131337504 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107718428 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138241053 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122985955 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.106528433 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122018929 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.131220309 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102976684 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129299274 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098591699 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140107078 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123476683 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098853579 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134731449 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121106121 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098549594 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.130313803 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104482124 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130262185 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124594913 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097976322 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119966401 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.122632033 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.101793357 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132864311 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.099046529 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121946732 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121131265 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103023937 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120824021 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.131552827 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098319801 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128591746 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096718018 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125845002 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122794654 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096275699 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127233431 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.132428479 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096358231 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121739623 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097837602 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120407965 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120622375 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.099557739 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128315915 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096548419 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.135112603 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.125084373 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.099136412 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120495776 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120888239 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10121905 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120108571 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106441701 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120808746 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123061133 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.099034745 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124970838 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097471061 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12221668 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120730491 seconds)
  done (took 9.410821272 seconds)
done (took 34.442129821 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.68503193 seconds)
  done (took 1.64359914 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.835656053 seconds)
  done (took 1.796208398 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.181571019 seconds)
  done (took 18.171313397 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.499863192 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.601646545 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.997499493 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.172516447 seconds)
  done (took 3.231458423 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.943109301 seconds)
  done (took 1.923992537 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.28513149 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.237814806 seconds)
  done (took 1.487975804 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.777995967 seconds)
  done (took 1.755519633 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.437660231 seconds)
  done (took 2.402703624 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326750476 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183690827 seconds)
  done (took 1.484942389 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.557031767 seconds)
  done (took 1.52750231 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.044392562 seconds)
  done (took 11.019810177 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.271061961 seconds)
  done (took 1.25552417 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305540943 seconds)
  done (took 1.280464212 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.527212433 seconds)
  done (took 4.50504718 seconds)
done (took 54.4519922 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101213253 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128264892 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104112219 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125740869 seconds)
  done (took 1.430464754 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102817146 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12266336 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103062494 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12226276 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.128837647 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.099111234 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125089977 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102997267 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.123389514 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09921233 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123078056 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.12166002 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.101546324 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125656854 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095280467 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126256089 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126598417 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.098585482 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.126128429 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09877073 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121024217 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099936472 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127184272 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120877064 seconds)
  done (took 3.721902417 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102543296 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120922745 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09800743 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119647877 seconds)
  done (took 1.420348308 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101418951 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132667384 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.10815929 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127490661 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133322127 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.10784068 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119131799 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094398836 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120763562 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.101333731 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117858621 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.14229238 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.108270385 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.127711593 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103556359 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.117189583 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.093298756 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.133735844 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126558169 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102876532 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120588712 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.102691211 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.117315895 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110337527 seconds)
  done (took 3.753121738 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.175307271 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.13024762 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.14039279 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.097563606 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163008226 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143317425 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.090422389 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142092565 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.090441289 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133176602 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.12000356 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.137454864 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.13016466 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089524454 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115585865 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08973992 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129679933 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129339715 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092633807 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129748452 seconds)
  done (took 3.459082684 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100065096 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118982266 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090654719 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118375666 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.101374326 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122660456 seconds)
  done (took 1.639802659 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092747177 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116316451 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091915531 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.116040105 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09678396 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116636341 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090337988 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116639285 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092154235 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115964996 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091683224 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115429398 seconds)
  done (took 2.240536404 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.508910921 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123855195 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121740394 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090694857 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.124015769 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091345389 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.131762232 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09358265 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.143740888 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090527899 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117559596 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.118769321 seconds)
  done (took 2.746015711 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224706277 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127068699 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252684654 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.372654106 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157763422 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167819159 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.288022531 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159642274 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.222360774 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154921642 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19983314 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179905032 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153989938 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195303524 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141096816 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.148676047 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194792251 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257093423 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154755174 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215467327 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198166979 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142666227 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208064595 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126822289 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139870202 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164617538 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.124372311 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132279084 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192477181 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178087998 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189680866 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164042008 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148398965 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232089663 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234482304 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195650947 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284109372 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137080451 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.142596497 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.17044206 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260042735 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141721891 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206737379 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158654139 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133080812 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202205916 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161259433 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178282408 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149044767 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142477122 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226083542 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200358477 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191794771 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14110811 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30457766 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15081257 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.163072399 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192425165 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2388517 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202045616 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223080807 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097218328 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217460692 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194889025 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187322535 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.156443803 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180520767 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150417712 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17674127 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220059829 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171312603 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175323351 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184795523 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139235186 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171472377 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175070425 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172701744 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26443678 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215098037 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.098499352 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171758139 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152658126 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134646116 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.198423104 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101135519 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245880481 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119282372 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165386719 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240820088 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161586821 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161097359 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19195491 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179474036 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150858351 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085538596 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157184024 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158700951 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175183 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144893447 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161304454 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154597464 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.105867342 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172340806 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.126994103 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187652334 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.120355324 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170581048 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188966937 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129253383 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16432521 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126422148 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.154374689 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180090192 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229850847 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143527737 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109130436 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24034565 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185114171 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.144082287 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180419596 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202915699 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147552315 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151907804 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203526963 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250404835 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141129311 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206477644 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151339661 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137110373 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.107904875 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211080061 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131872705 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165749509 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13601686 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185971254 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232087702 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100800047 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141176084 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200311575 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135958947 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135221516 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149259216 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148973864 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112950517 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146058509 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148298301 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179244643 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182548619 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157793734 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167300407 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150012609 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236678155 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141366504 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.1280047 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151287448 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123072991 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191288332 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201690755 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133248836 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208119696 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.198983552 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202660761 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172774037 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137322372 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180489917 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105130864 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122952659 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196872554 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167616166 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163154743 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.226528822 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199557551 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.177403335 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.214440399 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168607461 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176293782 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168849286 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156755381 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113197224 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164306266 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16144463 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.126587266 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142760607 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.11010479 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153143982 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145845879 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135498647 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196771402 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174388167 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220803467 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163174683 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151434394 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186066052 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105665715 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202587849 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179930564 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148396732 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20063706 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196519879 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218773477 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118860236 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233067661 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.095495602 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127346397 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.145282391 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170659268 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108457057 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138178494 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166078 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186556568 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205580413 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174962482 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210832073 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174501729 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221779991 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097819231 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171645686 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180790754 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180408147 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182892014 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143969682 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.125123679 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180238421 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152339269 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241226398 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169618801 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178500592 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23057416 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.127596112 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134394182 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152407332 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176102193 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156676022 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174564751 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149038514 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139292872 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128544153 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132492837 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164044376 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180125186 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164009425 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210191662 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151654371 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190609932 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12888463 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164643112 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162618331 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164975275 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08322197 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171659408 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196537703 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145556421 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163208604 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185746847 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134245205 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309788359 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231037185 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191748683 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140219423 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158169272 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16322257 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137451225 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167058062 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18071857 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188420855 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191316592 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16078887 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111440414 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141368939 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151176569 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154908107 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.107252455 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149495202 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179045584 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140391101 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184480195 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150373787 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162074991 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174965431 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.153442181 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146684865 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124045252 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248884987 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186655602 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220438613 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126047941 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.176885702 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239278576 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126992515 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107444651 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135804608 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181881073 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138209447 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196884753 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.19138104 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22924687 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184981302 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174527255 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143539852 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.094159029 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161178846 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1707497 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234107371 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148524218 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.152162907 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202058944 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.138804745 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105650689 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168639398 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314056794 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122600802 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217478627 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081915976 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.286574058 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1282843 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107359085 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164204626 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21341038 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.110546575 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181590274 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173630514 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153898762 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165661952 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152108222 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195735631 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212389161 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232397394 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183839565 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.136140576 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160015404 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171894371 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189202616 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160377878 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141523763 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190577614 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198740988 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195790429 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.145586852 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171945148 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170947205 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162109131 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221102124 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109294421 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240478554 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136822515 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197610296 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156905479 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142019835 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177293856 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192043784 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143581525 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183412274 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212531927 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110358891 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136608922 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164613749 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181518986 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15234962 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129823437 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18084735 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.099014017 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22817178 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268208596 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108216201 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159062665 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148638924 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13804112 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157738616 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161153363 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112791321 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167734571 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197218993 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13784266 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18772542 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23575473 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174103487 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168730027 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14745628 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692153268 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.10594468 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226123354 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122826814 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212134692 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124101625 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174550165 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162048116 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169863517 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229011148 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159832562 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.234542227 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196781642 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.18353173 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134959452 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162275109 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150734166 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147084546 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156460462 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170544224 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161526329 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.121073913 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.209645326 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158332613 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107469037 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142831594 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203109652 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151424269 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182543803 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182185537 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143008037 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17604379 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219071261 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107348164 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177801416 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215691563 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116279591 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151862936 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136900052 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154131328 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270402274 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098549717 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214455393 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191176219 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16284822 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171602912 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14985978 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19735484 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161525486 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216950281 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119318045 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159378038 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160525095 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141458009 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132937071 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158023011 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166981379 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.124678781 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163157484 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168699185 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197543604 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12619476 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146683185 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289701572 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177603795 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248171669 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.110402617 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138639012 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162437508 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149169075 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.180443316 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184984064 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137587444 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110750837 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138866835 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.132249109 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.13872746 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160827809 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196815023 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162593027 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239967445 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.112261114 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283543666 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142846039 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157707703 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090515393 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.135304121 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153279998 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119898728 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153706874 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.224741279 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269666332 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.12103631 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.137702834 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153147273 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.100420164 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138465586 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167150663 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165423569 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183827203 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145996304 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081459436 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160131071 seconds)
  done (took 82.680308479 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175675961 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.135001939 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148955626 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203259899 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.181236363 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.273139222 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211963927 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25735535 seconds)
  done (took 2.664007683 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096169109 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147044808 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159109318 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13723544 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093355885 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121037061 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.340635977 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.135603807 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.093049019 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.149465613 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173624578 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095409238 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.55940163 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.092493464 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121487658 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108469643 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093617244 seconds)
  done (took 3.786518325 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.203513193 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.483722784 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.966485806 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.19772549 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.180233893 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.121498433 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.689752337 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.119967156 seconds)
  done (took 12.04165451 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.117794899 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.138605778 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.126721758 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.154425704 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.143797889 seconds)
  done (took 1.764876458 seconds)
done (took 124.322499055 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.09988062 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129905078 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100791937 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132421249 seconds)
  done (took 1.530928372 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095807167 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072170363 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102195624 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076464308 seconds)
  done (took 1.42375946 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.19216428 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.170351871 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.393926176 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073226654 seconds)
  done (took 1.578970794 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.116861362 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134472335 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.106270074 seconds)
  done (took 1.446235656 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.109033566 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131671975 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105321326 seconds)
  done (took 1.430898976 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108688609 seconds)
  done (took 1.193304828 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.110272184 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.139973763 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111438855 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.139203711 seconds)
  done (took 1.586913106 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.09991823 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12922701 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111183624 seconds)
  done (took 1.425007758 seconds)
done (took 13.057711793 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10581803 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.421114532 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.414193466 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112314782 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722933139 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382115481 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.037469905 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148555893 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166157751 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095446898 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140879869 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674298673 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.029004055 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.375331146 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.987015286 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.374153892 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677032539 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12252572 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09358727 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123320761 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.020192296 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094566936 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123094557 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094035992 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704930261 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427704564 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097208024 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.372365322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095235564 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125433552 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38258583 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1240265 seconds)
  done (took 16.938459906 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096865157 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175910349 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099868995 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124773062 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124198753 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095643867 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125828489 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09511436 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180135081 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124756779 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112783664 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123554712 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126784817 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09765933 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143361439 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095266563 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128141971 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095444424 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123132925 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095466863 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141483884 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121518618 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096307895 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123669994 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09549459 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13712916 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09634624 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122808131 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122353615 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099240722 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12689912 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097895279 seconds)
  done (took 4.85550116 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143651335 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18537099 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129153821 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128450874 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170639534 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12551719 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201875766 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14758026 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154882549 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124360875 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141486755 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095333538 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15939186 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123346395 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116729954 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122845486 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096611771 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123004073 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094778431 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124405573 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141226462 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095849289 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124464989 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09597199 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125091474 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110108083 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12507675 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122721447 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094592208 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126227397 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099449654 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125062633 seconds)
  done (took 5.192130065 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099835433 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127185437 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111228633 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140476466 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097080503 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126768504 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.099114454 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125464643 seconds)
  done (took 2.020931459 seconds)
done (took 30.096137114 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112788186 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127999043 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108546018 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136343086 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.105036739 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132771144 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.093781768 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134769661 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135459105 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104166053 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138864753 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093730585 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125072359 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093384067 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136153086 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.100089792 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.135223635 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.104772221 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.136104525 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.134216281 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096307925 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135538518 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104401888 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134699078 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106592446 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134414487 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139428588 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102088594 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124897416 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097003319 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.12647491 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104895418 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126111798 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.107090452 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128630236 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.099741801 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125312015 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096717266 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134399609 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134953694 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101956761 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.135909385 seconds)
  done (took 6.073475012 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109629544 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141252722 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106525338 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.083208177 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118670871 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08181096 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.13989498 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079957397 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.11161404 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108748935 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075285109 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107386843 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079522478 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102444748 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078868497 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076274762 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109487125 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076560127 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077733534 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10746768 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081214338 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073974723 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109643152 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079238992 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104970603 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083144157 seconds)
  done (took 3.605671201 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102217122 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136093271 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115399578 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186061012 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.16456153 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.101662204 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.134208214 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.142946773 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110400657 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122214826 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.098019031 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.152891263 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112052187 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131855314 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.122395745 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.109902152 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137609497 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.096340894 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130654856 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114310443 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140724355 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.105366082 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143657263 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134463922 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093566336 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124961588 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098677569 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137310454 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098751788 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133798301 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.1273817 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.09840552 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124669457 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.107473837 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128826184 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.096526612 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.144617363 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133174676 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.104565968 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123486613 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.102321262 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.124579562 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116475075 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.164333442 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.122418969 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.102838022 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126027781 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105855257 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.123562075 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113970781 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134832246 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.094276327 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.127108395 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.093751591 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123702376 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136958656 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097241345 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.125907887 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.104120922 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.130057621 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106421738 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.128535053 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110857143 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.124361649 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130955733 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.09334095 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.123880413 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093640809 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.146367322 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094950849 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.1645633 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.124807979 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.096399041 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.13422338 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102722632 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1318497 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.09471703 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140548804 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132219499 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099256066 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.133398506 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.098415234 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.126553598 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.113124583 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.127383692 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096797072 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126422608 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101628749 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.127551353 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096298217 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138551872 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.123722595 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098807338 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.141685519 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093244663 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.125575016 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.101622643 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129227452 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.123022502 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109814989 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.129262423 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.094987991 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.135435688 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094377529 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.126622165 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104658911 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.129984469 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.123379183 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.100336983 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.131033922 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.096403247 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.12557293 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098206295 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125663797 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.105348908 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.132199367 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099876405 seconds)
  done (took 15.063746144 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.231179219 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.221470949 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191103203 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.29871771 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136791494 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.117076948 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214113237 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.158433689 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124600782 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.134100958 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.203904767 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.154651148 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.171762323 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181534218 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171875693 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.124983621 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143513142 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.136610195 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.218293975 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.295218927 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.146043037 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102846806 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164706267 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.163558035 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137942837 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.104836996 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.14226315 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.139431654 seconds)
  done (took 5.849086923 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111948602 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157781579 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.101153115 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147118389 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.152146435 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.095811491 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130409167 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.096605939 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13756095 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138502561 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094603033 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131493905 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.10198036 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134517583 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.126388075 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104796428 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134526823 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096802506 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128172657 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09891876 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13537705 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.133112343 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099843517 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124087646 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104909049 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123614288 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088724443 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.146159662 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124272769 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117551289 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122763577 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103795823 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.139257992 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095267549 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.125773437 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.097311303 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.127699573 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096376103 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126866862 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.093125256 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123855767 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078883742 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.124273001 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.139024975 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101441162 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.111957681 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.102171637 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.130273714 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096481041 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122377165 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098252182 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127748599 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097938974 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132918345 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097047379 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126078231 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09824874 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117368012 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101122024 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.128520456 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085300287 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.123426576 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.10089139 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.120820395 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104093368 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130887378 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094047831 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12752568 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.100196056 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.1314815 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.126126893 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.103154182 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.124115069 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.098054875 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.127448233 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.100903196 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.129145546 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094331425 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.125638964 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095058625 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.106586936 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.095508277 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075447723 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127966367 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.122774705 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.095133851 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.127206532 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.101924928 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.140710343 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096666646 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133590145 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.125420662 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.094837343 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.128328311 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.085214966 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.127179407 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.112266729 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.144356997 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095668225 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.124257162 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.138958557 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.098402087 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124180209 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078241584 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.104070937 seconds)
  done (took 13.170784227 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.133176537 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.156161471 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126066039 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.114639276 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158699797 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.160722463 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103788645 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13336837 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097300243 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144997414 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.09573412 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.134772376 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.0956789 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140066422 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.160400339 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.106649805 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.128372744 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.110429479 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130953145 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172109395 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.114535895 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.145631678 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142497681 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096976154 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.131290945 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.113111147 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163113972 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.140575937 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109675921 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145095737 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110654389 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162954422 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.146586292 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100919962 seconds)
  done (took 5.559033027 seconds)
done (took 50.41723944 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.233395495 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.419454023 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.192195859 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.086564666 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.232211834 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.209858452 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.201750918 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.200259906 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.848026267 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.189541077 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.439789628 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.853563392 seconds)
done (took 60.223796291 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.221395117 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.341972485 seconds)
    (2/2) benchmarking "String"...
    done (took 1.480631488 seconds)
  done (took 3.936344873 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.727323697 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.14494141 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.451498746 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.188630089 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.191962264 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.485548949 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.883310943 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.577240023 seconds)
  done (took 28.038392831 seconds)
done (took 42.042596116 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.168432182 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.231271476 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.23277373 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.173271808 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.300699954 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.213300441 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.557575288 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.231526327 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.205252718 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.173237463 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.210177711 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.194995708 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.193868213 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.613327838 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.195728798 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.192521148 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.24680718 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.704394618 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.601735976 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.201681416 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.225665408 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.247462591 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.209799384 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.210633753 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.22955245 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.194496074 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.194572731 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.198288119 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.762732956 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.194795035 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.206690775 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.77250011 seconds)
  done (took 190.604065336 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.191452188 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.23972696 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.336288062 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.241660743 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.632936735 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.387316558 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.346712485 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.875583778 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.208630992 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.200728349 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.496884974 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.19144348 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.586603232 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.251651952 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.220702123 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.25765978 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.522257436 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.563769412 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.226741911 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.353077497 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.195963345 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.621059362 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.54848426 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.405641281 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.212379411 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.226909958 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.22196684 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.225210118 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.400442584 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.452238148 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.246375355 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.204472177 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.810240387 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.047675763 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.212340146 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.209577479 seconds)
  done (took 150.688328429 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.590548549 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.193020933 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.192583462 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.192231155 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.225696645 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.193362386 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.771482041 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.770346723 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.706337938 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.58333853 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.592419493 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.196647329 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.483602905 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.196642594 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287120377 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.207857256 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.194978097 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.208285131 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.236111156 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198162802 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194499458 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.770398368 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.208005567 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.396901481 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.371996593 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.209782702 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226347187 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.5843981 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.19460369 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226744365 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.329704478 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.528877507 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.243931888 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194496116 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.581066257 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.197878321 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307803523 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.196303995 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227516283 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.195394225 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.474585051 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194631221 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.194744186 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.197623999 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.884096596 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.198211004 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.77371352 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.198585803 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.172748456 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.199047396 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196043381 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.643961052 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.892098583 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.215224823 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.195685451 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.197805848 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.195646912 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195822084 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.228581654 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.647295866 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.292982477 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.215481898 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.198935081 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228611065 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.195818546 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.196374624 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.239123963 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.216434124 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.766424118 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.266716471 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.306107287 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.775338827 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200052474 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295955717 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317876554 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.198593552 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.196967362 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.197642806 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.196953266 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.308810136 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.197937733 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.607432522 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.373418753 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.214947012 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.601244443 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.298956 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.198584784 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.613555128 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.20132545 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.197208131 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.981513443 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296275428 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.19824433 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.197742791 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197322209 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.608770322 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.776124389 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.470140064 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.201769701 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.449335887 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.201316733 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.62572054 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.752045911 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.875398941 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.202213269 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311489098 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.375038533 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.215415011 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.199005663 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.59838904 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.203045256 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.255849773 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.202413063 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.200157607 seconds)
  done (took 365.739819054 seconds)
done (took 708.150602671 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.800660256 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.789520349 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.896075411 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.780847489 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.749296551 seconds)
  done (took 10.14161991 seconds)
done (took 11.26720178 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.390397173 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.39189946 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263624591 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.393233876 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234483236 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.408184811 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.37041896 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.222461804 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.30091234 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.285643889 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.301834864 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.256988575 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235365752 seconds)
  done (took 18.18005855 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.537056312 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.518353678 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263038402 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.521250297 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241406852 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.517279016 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403068545 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.41815833 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425165537 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233643172 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213879101 seconds)
  done (took 16.418268001 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.531895588 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.524191293 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269478211 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.525850847 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243297032 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.523070071 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40642196 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.429001197 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.419112306 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.234897407 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213403415 seconds)
  done (took 16.446205397 seconds)
done (took 52.171681305 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.210100611 seconds)
  done (took 2.335309466 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.24682391 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.408579339 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.229589757 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.216828048 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.211057175 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.214193104 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.216722505 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.211490038 seconds)
  done (took 11.081239893 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.208902392 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.210389675 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.210245115 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.207390799 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.208243117 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.207222128 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.209993297 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.20898843 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.20876786 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.208092131 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.208629936 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.211513611 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.212023168 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.211030413 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.211001322 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.211664192 seconds)
  done (took 20.480232018 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.211667093 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.207851963 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.208298796 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.209152043 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.208550324 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.209394757 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.209680399 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.208565885 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.209512246 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.208779888 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.209897871 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.208968098 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.210975298 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.20839998 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.208470113 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.210220674 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.211412911 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.209501986 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.214645162 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.208818109 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.210953213 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.20982926 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.210047794 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.211076703 seconds)
  done (took 30.16412844 seconds)
done (took 65.188929821 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.839064708 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.863318357 seconds)
  done (took 6.830822965 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.212542388 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.212367544 seconds)
  done (took 3.554626829 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.212766565 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.212854284 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.211740738 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.211709953 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.211990281 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.212960726 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.21248153 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.215657318 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.212432391 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.211443968 seconds)
  done (took 13.255310244 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.212119597 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.212316365 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.210561785 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.212804113 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.212789318 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.211231695 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.211507291 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.212057169 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.211059196 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.208778522 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.212439735 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.209737461 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.213114713 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.209919824 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.210154554 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.207173073 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.208497544 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.207307363 seconds)
  done (took 22.922909392 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.210543189 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.209957826 seconds)
  done (took 3.547910528 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.208231406 seconds)
    (2/7) benchmarking "second"...
    done (took 1.207376284 seconds)
    (3/7) benchmarking "month"...
    done (took 1.207473526 seconds)
    (4/7) benchmarking "year"...
    done (took 1.207629856 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.208128441 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.208938804 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.207383594 seconds)
  done (took 9.58376297 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.211696363 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.387500361 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.487994269 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.810370193 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.211600209 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.214014678 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.085828845 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.214439506 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.215492901 seconds)
  done (took 13.966225078 seconds)
done (took 74.793249044 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.221486499 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.220730045 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.444212275 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.215498343 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.222209166 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.545986779 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.20792474 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.334512863 seconds)
done (took 37.542455643 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.226353594 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.184555181 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.947911587 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.185760371 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.284605371 seconds)
  done (took 18.727773733 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.224917907 seconds)
    (2/2) benchmarking "read"...
    done (took 1.540818941 seconds)
  done (took 4.893482807 seconds)
done (took 30.975263751 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210458203 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.206668991 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.210062583 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.206803858 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.209580103 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.208170791 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.206667197 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.210921898 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.211245476 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.210994325 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.210458052 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.210669156 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.20942667 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210296437 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.208442621 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207298629 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209165607 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210785647 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.208982234 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208644127 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208188125 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210975786 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.208698839 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.208302719 seconds)
  done (took 30.149195086 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.212090294 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.210913155 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.212221966 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.210782491 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.209754184 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.21203216 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.211688924 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.209492956 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.212220845 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.213327119 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209704702 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.210124206 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.211840804 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.209300136 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211624329 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.209650779 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.212690699 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209788468 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212694362 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.210082765 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.212687788 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210117625 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.210372235 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213630503 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.209950949 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210081157 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.212846933 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.21103556 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.212293432 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.209903495 seconds)
  done (took 37.463430279 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.217836852 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.220707377 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.213266114 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.212708685 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.212708403 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.213019526 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.213571073 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.212954585 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.213410473 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.21360573 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.214584759 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.213267961 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.213427311 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.213003956 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.213750846 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.213346871 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.213884513 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.213120063 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.21358835 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.213606162 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.2140523 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.214025435 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.213821726 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.214812767 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.214284298 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.214522411 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.214033563 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.213074649 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.214282631 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.214681593 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.214760049 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.214840486 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.21439995 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.215082008 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.215703986 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.214646151 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.219891058 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.221563374 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.216379912 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.215034778 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.215033164 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.21515565 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.216069211 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.214574372 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.215645658 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.21576482 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.216201826 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.216159251 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.215557834 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.216014984 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.215326373 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.215475751 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.216232753 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.216238577 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.21615002 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.215611339 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.216256041 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.216876461 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.216605651 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.216663909 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.216688925 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.218307096 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.216780924 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.216609518 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.21775154 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.21653014 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.218408643 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.217340016 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.216904064 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.217430061 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.218877492 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.218960134 seconds)
  done (took 88.643674166 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.218551892 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.216014257 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.214565368 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215235776 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215355367 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.217090397 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.21522776 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217007562 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215750805 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.21693547 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217782322 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.215180215 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214950755 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.217378093 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218409328 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.214725881 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.218672869 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214656117 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.217762878 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.217494479 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218345559 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.216222087 seconds)
  done (took 27.897501911 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217818091 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.219780153 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.21661538 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218125131 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215748097 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218273407 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.218851879 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.221325728 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21902598 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215831477 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217558061 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218879539 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216181535 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216243522 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215720871 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217488323 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218545141 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.217872055 seconds)
  done (took 23.054686844 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.215856475 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.214524474 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.218325646 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216769006 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.216395639 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.218636482 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216739164 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.220287773 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.218497569 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.216700828 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.219279472 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218557633 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.219550339 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215960438 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218654999 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.218646931 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.21816138 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216825985 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218666527 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216566723 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.217076137 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220088072 seconds)
  done (took 27.927569172 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219232078 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219782935 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.216015087 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.216895232 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.216495522 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.219120025 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.219811552 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.21727558 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.220870792 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.219826443 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21652205 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.219450613 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.218144113 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.217686842 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.216808103 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216453731 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.219265639 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.217217819 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218562876 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.216769822 seconds)
  done (took 25.497868535 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.22089323 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221338598 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.220539295 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221289464 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221948535 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.221054293 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.220926706 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.220397974 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221116278 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.221176959 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.221965031 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.221630076 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22225393 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.222216654 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221781625 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221133534 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221526554 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221996147 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.221084969 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.221725429 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.222694889 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222350769 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221574486 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.221446689 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.221518163 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22215441 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221358916 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.223643914 seconds)
  done (took 35.340617228 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222156196 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220498131 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.21783997 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.218299404 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.218591727 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.218449025 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.219116748 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.218611508 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221805927 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.2182949 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.222099115 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.222221738 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.222076562 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.22144392 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222413941 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.22112223 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222376632 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.220117649 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219586382 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219745026 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.221392435 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222092337 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.221858857 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.219519049 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219430591 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.223165364 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220988186 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220104055 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222961471 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.221094504 seconds)
  done (took 37.757311716 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.242397663 seconds)
    (2/2) benchmarking "in"...
    done (took 1.242248199 seconds)
  done (took 3.622624265 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.221944736 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223496834 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.223322106 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220939457 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220583846 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.222889136 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223689261 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221294707 seconds)
  done (took 10.917383616 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.223012424 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.223494624 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.223282746 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.223705382 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.223258592 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.223809886 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230981735 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.242394806 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.224544694 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.2239539 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.230601916 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.230760758 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.226420773 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.223302659 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.223433319 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.224503934 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.223423495 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.224332067 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.224061364 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.224126165 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.22475107 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.225573821 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.224998432 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.221158574 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.225477969 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.235409217 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.246777951 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.223487667 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.22260522 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.22698114 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.223695094 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.220772743 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.224303619 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.224745691 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.224081447 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.225197955 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.233120999 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241522947 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.230316066 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24422092 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.223632854 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.221137823 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.224365998 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.225042033 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.224894448 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.224367795 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.224578002 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.222270807 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.222789298 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.226073697 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.228208219 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.223001296 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.220441052 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225858525 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.224835029 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.229877994 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.240944603 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.227022469 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.23343555 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.236281964 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.255825418 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.246934746 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.225756712 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.225317903 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234085758 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.247905131 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229715097 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.238620527 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.222426999 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.224178236 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.232345685 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255433836 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.24839421 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.225393085 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225750247 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.223878241 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225583642 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.225824086 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232055928 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.244976988 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.226158944 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.229226268 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.236297531 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247494048 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.22549802 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.22610376 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.225102127 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.22511905 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.22689587 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236192574 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.244556241 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.22592624 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.225206941 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.225744742 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.226093718 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.227043349 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.225372662 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226498632 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.222776762 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.225449926 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2263241 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.229743749 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.234442391 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.22628226 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.226745176 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.234123234 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.244187092 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226624918 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.233764824 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.225844741 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.226463983 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.228349432 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.232574355 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.223901519 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229809019 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.234971419 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.227222595 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.228011798 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.227270739 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.227099992 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.237116579 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.252784646 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.227118505 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.227389072 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.231662306 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.238632016 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227262926 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.229447629 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.227484064 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.225343983 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.224866657 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.228713698 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.227018589 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.228335328 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.228270074 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228900475 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.226098132 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.228305222 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.227980989 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.228414448 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.227917726 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.228678914 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.230106229 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.229638368 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.228415718 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.229356775 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.235157653 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.246307414 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.229998816 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.229388087 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.226633138 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229053093 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.230430328 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.229289663 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.229154047 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230519627 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.229525887 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.228732661 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.230453599 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.229785723 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.229528504 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.229517791 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23423763 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.229994146 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.232729085 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.229561245 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.227369397 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.229464517 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.230237173 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.229339289 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.229283779 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.229171118 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.232661803 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.238018479 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.230485594 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.230050925 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.232343228 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229851407 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.230142242 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229744338 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.232801154 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.238061931 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.229872889 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.238293088 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.248723097 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.232148299 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.229834154 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.229914813 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.229483713 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229736705 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.233347445 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.237772056 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241263386 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25467486 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.229435722 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.232807513 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.229809992 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.234860231 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.233752687 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.229716205 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.230076393 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.231814439 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229373208 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.229163052 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.230653572 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.230274424 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.229468497 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.230644075 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.229669944 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.230743865 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.233006852 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.230456026 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23024954 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.226928485 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.229511576 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.230540264 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.230626872 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.227534864 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.229751283 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.2293113 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.230513535 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.230578287 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.237346995 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.227168386 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.231685987 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231847155 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.230396817 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.22882707 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.230247942 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.232956721 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.230117022 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237932812 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.248551453 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.231568296 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.237183678 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.247327374 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.22901863 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.233286137 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.230534061 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.228008019 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.232841782 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.239213258 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.23101603 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.230876231 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.230400052 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.229917147 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230574067 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.23722775 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.24548793 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.231032752 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.232406202 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.232146763 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.227343131 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.231330445 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.230919552 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.23076096 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232629654 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230673498 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.23123094 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.231105018 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.230294254 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.231315129 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.230293046 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.232327179 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.237543733 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.236748601 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.231295927 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.232064979 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.230320239 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.234725598 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.230348161 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.231135131 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.23117147 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.241574793 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.253539334 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.237315839 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.24946104 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.231435125 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.235971569 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.248705245 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.234296949 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231853431 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231634722 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.231984057 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.232070507 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.22794795 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.231124008 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.231123662 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.232571708 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.231705073 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.235744698 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.232509626 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.230726265 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.231894192 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.231836613 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.231706687 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.230598874 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.231301129 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.233565664 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23319086 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.230769148 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.231886301 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237889619 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249185979 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.2318057 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.231663085 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.231854974 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.231754722 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.232457611 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.232399944 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.234023952 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.23892546 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.234249613 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.240467602 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.233625925 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242523222 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.232347808 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.234862068 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.239783129 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.229067105 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.232603218 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.231677996 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.233096325 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240063706 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.249809277 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.233216735 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.236493396 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233765242 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.234095363 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.233047774 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.233587799 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233418438 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.232773903 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241299044 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.250371661 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.237446677 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234700539 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.229857426 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.23432062 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.233792277 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.231685775 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.235787688 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.232807812 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.233858052 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.233208356 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.233700854 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.23402882 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.234137241 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.234166258 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.231188326 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.233854131 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240463857 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.25255413 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238610457 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.234004221 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.241747393 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.251557674 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241165821 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.252742033 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.23405991 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.235474665 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.233424848 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.235335687 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.23338856 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.235939183 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.235023847 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.235043902 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.237884778 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.235718194 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.235706024 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.23556873 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.236085236 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.233995378 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.244519786 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256898068 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.236422736 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238958414 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.232648279 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.236011187 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.238821592 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.236185114 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.233973499 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.238416397 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244347052 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242827637 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.236802293 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.237587237 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.236793526 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.236855269 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.236446906 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.237712376 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.236534593 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.236339304 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.236744711 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.238054943 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.239840003 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.237771562 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.237661993 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237970914 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.238047899 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.247405063 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.257031474 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.238695153 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.237979916 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.238923405 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.240259555 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.237837728 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.238036478 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238362393 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237742482 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.239295781 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243228899 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.243037574 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.239966116 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.237899534 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.238210338 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.237080307 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.237823789 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.239437286 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.238776026 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.239337086 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.237782599 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.238655584 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.238374384 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.236810723 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.238952672 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.238393808 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238197779 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241237413 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.244355384 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238906318 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.236072467 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.238555651 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238732573 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.237960736 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.239372178 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.248475822 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259535263 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.247442691 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.245327689 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.243217108 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.238906671 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.242065552 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.2461448 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.238192054 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.241784468 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.241368129 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.24097255 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.240196295 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.242877564 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.240959419 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.248180067 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.258726035 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.240182482 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248872638 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.257384671 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241309389 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.241439261 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.244680843 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.239739641 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.239187526 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.241750582 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.241306977 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24834518 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.259481417 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241714957 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.242533407 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.240582772 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.241608372 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24514363 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241356824 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.242157566 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.238764613 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.24194451 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241097508 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241125412 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.238165862 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.240698202 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.240738053 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.244242232 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.246597859 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.23936273 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244720719 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.241529478 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.243275158 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243887788 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241727479 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.240623528 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.239080519 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.243090541 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243276758 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.244223954 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.244725501 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.241994902 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.244033205 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.242690884 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243612244 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246059051 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.250614706 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.249084786 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.240112163 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.242734871 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.243221307 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.245289494 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.243823933 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.243342747 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.242388498 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.24443205 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.24254123 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243569227 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.24343144 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.245504477 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257801175 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.260739518 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243349416 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.244135422 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246513083 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.243938332 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.241092626 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.24467818 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.245267516 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.246563654 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.251900391 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.245461843 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250829721 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261840632 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.245506782 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.249607542 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.246464655 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.25073466 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.248236999 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245080486 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.245505689 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.248837633 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.259602142 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24602224 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253466725 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.271587171 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.264605139 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.245975267 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.246576273 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.245390679 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.246354264 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.246154321 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.245913884 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.246308729 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247231933 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.246646225 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.246222847 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252136657 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.247947792 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.246902975 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.246299703 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.245514707 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.248346703 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.245053716 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.247346458 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.246338982 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.247626985 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.247526115 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.248059957 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.247601697 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258146185 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.270139298 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.246505133 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.248374122 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.244252756 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.248900945 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.249533095 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256027454 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.254285463 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.247622152 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.247640219 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.24857522 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247442646 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.246558607 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.248032355 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.248071338 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247932033 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.245185554 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.261087555 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272091558 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.254208947 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.24664331 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249090754 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.248412983 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249351072 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249417788 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249124001 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.24920122 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.250722457 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252127928 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.248363379 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.249604602 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.252162808 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.2553066 seconds)
  done (took 738.237770376 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.247848057 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246284272 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.246602986 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.247213282 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245670902 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246340988 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247640869 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.246903183 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.247475531 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.247540441 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.247780776 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247620811 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.246993924 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.24772898 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246469336 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.247100726 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246720485 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.247514975 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.248395738 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247709245 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.247692942 seconds)
  done (took 27.352369875 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.250990033 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.248319643 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.248552648 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.251114201 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24856647 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.25075752 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.247434622 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250585984 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.250862457 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248446553 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.250082184 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251203924 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.24851284 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.249069615 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248075913 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251037204 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.252918355 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.249691555 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.251719011 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.248934361 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.251748359 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.249379618 seconds)
  done (took 28.661191363 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.252436597 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.251939935 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.250305821 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.248795493 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.252193811 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.24988285 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.252289373 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.250921748 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.253093826 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.252445097 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.250630177 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.253611415 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.257426144 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.256559527 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.253156442 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.252287006 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.396017046 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.253714234 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.253215607 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.253011215 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.249750676 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.258507751 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.268524237 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.250260016 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.252367056 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.253938505 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.252988948 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.254249866 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.253307981 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.253762844 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.256737746 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.254005833 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.254561633 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.255245981 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.254011486 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.255206175 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.257473917 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.253836527 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.251492372 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.254503455 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.262540195 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.272389375 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.255447685 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.260248856 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.273031877 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.254793176 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.256571434 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.261502868 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.252417655 seconds)
  done (took 62.802322002 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.255334604 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.254942818 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.25178439 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.254929305 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.254628331 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.255560398 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.255389233 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.25557233 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.252826632 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.25411723 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.255459494 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.253538042 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.251994621 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.255671844 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.255368629 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.253339437 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.254211085 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.25401031 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.253791204 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.253930045 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.25372679 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.256388917 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.256290684 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.253611718 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.256590132 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.254461146 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.25364476 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.257263433 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.25459273 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.254167618 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.256659012 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.256802256 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.257395281 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.255075151 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.254828349 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.257364365 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.257314365 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.255842611 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.257889523 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.254786256 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.259295994 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.25893032 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.257951531 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.257711819 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.254614553 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.255419066 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.254658138 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.255301827 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.255577378 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.258779227 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.25791336 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.25577939 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.258214842 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.254808885 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.257989044 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.257960267 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.254798967 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.256323549 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.25827461 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.25631007 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.256261876 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.258315863 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.256003353 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.258309519 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.258678567 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.256821219 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.255872634 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.258535293 seconds)
  done (took 86.565493683 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258964192 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.258438725 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258890407 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260102418 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.258570307 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.259142722 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.260405444 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.259032789 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.259654613 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.259390668 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.259697552 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.258590003 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.259862212 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.259694571 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.260374654 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260846787 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.260003556 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259612023 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.258707088 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259167675 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.260850171 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.259824665 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.260645757 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.259018091 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.261221725 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.259619579 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.260206378 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.260709137 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260296923 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.260446232 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.26043321 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.261062314 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.260809004 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.260832695 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.260280077 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.259900668 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.261196596 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260944124 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.26133941 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.261106226 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.262159628 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.261581725 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.261606218 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.260906655 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262121897 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.261650443 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.261314111 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.2629472 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.260931144 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.262341823 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.262299335 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.260939679 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261864731 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.26191848 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.26205651 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.263406795 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262868673 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.262718839 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261833386 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.262722554 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.262138401 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.262276608 seconds)
  done (took 79.336591122 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262525703 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.262269067 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.260403486 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.260300609 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.262310646 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.259786853 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.262852222 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.263128393 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.263556382 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.263200835 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264024299 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.260917905 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260897681 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26353807 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.261156494 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261081893 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.26089253 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.261411509 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262825279 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.260730084 seconds)
  done (took 26.412315983 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.261805309 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.265524171 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.261252031 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.261556382 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.264887073 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.261444424 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.26454628 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264356527 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262109125 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264324534 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.263844868 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.26436439 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262943042 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.263127348 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.265295946 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.261668941 seconds)
  done (took 21.388807343 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.262300249 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.265272606 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.26584708 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.264978167 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.261904511 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.262154856 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.265728653 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.262526178 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.263416678 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.266087434 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.265939304 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.265340302 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.265585175 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.265898491 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.263843781 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.265476428 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.263289049 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.262896653 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.265719763 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.265991084 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.264651429 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.263904572 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.266590298 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.266348255 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.263744659 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.264981718 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.263496312 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.263626106 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.263272009 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.267249439 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.264429674 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.264717467 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.264427516 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.265422259 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.267444571 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.265074804 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.267260378 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.268106137 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.268337722 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.267261665 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.268363865 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.264628629 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.26737999 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.268001091 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.265848516 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.267312391 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.265274783 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.266551617 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.265661992 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.264927737 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.267096239 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.268996426 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.268059169 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.269125916 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.268078628 seconds)
  done (took 70.783126168 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.267886092 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.26844881 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.265994276 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.270790829 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.268910329 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.265896492 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.268400052 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.267960593 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266167222 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.268448851 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266312587 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.269949586 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265597841 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.269572089 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.268379905 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269754681 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.26691554 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.267543377 seconds)
  done (took 24.002065344 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.266431352 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.267761194 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.26902274 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.267178929 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.266919773 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.269866021 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266890033 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.270956658 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26988774 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.267311333 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267497099 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.269175512 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269856837 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.270561468 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.26832839 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26771878 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.270381038 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27027464 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.268322205 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267971959 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.272348038 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270198009 seconds)
  done (took 29.095105768 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.269468776 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.270275028 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.269855168 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.284665676 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.287223921 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.290703579 seconds)
  done (took 8.85333818 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276489632 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271041902 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.268566742 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272481543 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271589729 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268610594 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268812968 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269394389 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271478574 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269637435 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268191167 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271013484 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271709135 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269210286 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271636638 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271322322 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268364987 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269099702 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270371853 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271539177 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269560884 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271224255 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269397222 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269547861 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269760155 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27072904 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272343817 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269716266 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269151434 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272826947 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272482758 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269936631 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273158727 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270891473 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274420514 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272628221 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270914669 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27356642 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27294318 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270347365 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.273670106 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273411629 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27329976 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270954408 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274256184 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270788595 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271514022 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270608769 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271056919 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274381002 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273243957 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271397251 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273910242 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273772758 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274242498 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2747756 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273082144 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271823936 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274912379 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272227149 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271835506 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27419426 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272072 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272660126 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274983936 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272155734 seconds)
  done (took 85.135145569 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272143778 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.272487998 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271587595 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273119963 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273224984 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272213825 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273315911 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273395877 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272374077 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274457794 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275969083 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273157945 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27286238 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273141629 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272082147 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273096111 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273323197 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273627995 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274060072 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276365649 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273887508 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274559917 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273590392 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274798078 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273618175 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276939365 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273803532 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275389421 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275065329 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273188051 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274253841 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274779156 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274488504 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274426054 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274330101 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275194898 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273990313 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275322052 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275257621 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277319113 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274969371 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277387113 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27620654 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274596163 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275141985 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274272669 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275059763 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27557987 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275005079 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274979281 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275074541 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275609936 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276490032 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276033616 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275942444 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274917427 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276621633 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275926244 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276292786 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278899207 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276222603 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276405153 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279954651 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275025216 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276803573 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276205821 seconds)
  done (took 85.322025465 seconds)
done (took 1723.348837198 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.441237219 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.394792283 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.278583757 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.275738179 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.277660028 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.27752098 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.299538952 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.278423728 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.27833901 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.278181008 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.277777504 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.463471561 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.278714369 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.27857638 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.27813796 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.372324699 seconds)
  done (took 42.220018672 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.305571541 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.28414274 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.386028094 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.30541241 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.305060042 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.454435761 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.338506636 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.286802414 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.438500942 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.32512572 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.736275712 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.30998968 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.283204002 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.320969049 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.304049906 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.454244482 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.515063648 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.746808932 seconds)
  done (took 29.290287327 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.688258905 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.305461447 seconds)
  done (took 9.18673495 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.300991317 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.285262424 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.284417732 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.282345937 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.275719118 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.281105171 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.281536123 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.28016667 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.61878124 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.401769238 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.290509577 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.293945705 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.301299181 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.283815738 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.281903533 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.320137199 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.4340164 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.283122068 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.280926995 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.289913106 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.284178834 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.387328259 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.325596513 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.286979813 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.39823723 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.614854401 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.293023053 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.292128048 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.417026561 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.284526209 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.284596575 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.284687238 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.286169368 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.15499775 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.758900225 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.296875008 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.323301872 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.293329012 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.282681261 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.442810392 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.28778591 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.29412002 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.27734996 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.753568705 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.422299675 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.401628369 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.439717731 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.308108148 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.287885802 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.344545634 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.286945661 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.291250131 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.329275071 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.043604403 seconds)
  done (took 108.314648861 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.279960748 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.673054183 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.445836647 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.30013394 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.885368543 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.845672296 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.298275618 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.540782064 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.318347995 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.279625264 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.561092456 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.757994976 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30358801 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.288853912 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.285505764 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.364213451 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.278697017 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.022303984 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.297407276 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.283992063 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.757078546 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.28417461 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.284455341 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.442204366 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.316205287 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.708437888 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.527005458 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.718842039 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.304718801 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.28174289 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.720765972 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.309272544 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.353268804 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.281691184 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.529466376 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.619849056 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.613868256 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.305321824 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.328845973 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.284009129 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.306591637 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.704487175 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.609669654 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.302715378 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.2855037 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.708780965 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.296246902 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.287045034 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.284831655 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.480376864 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.146692679 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.283187851 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.540917773 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.284835601 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.575273152 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.362176218 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.368400137 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.738118625 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.296873237 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.357674621 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.342097527 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.282812679 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.288372855 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.285409703 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.285927652 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.606424541 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.670453484 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.2854512 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.604546181 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.734382504 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.302698575 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.806411814 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.150133513 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.299364016 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.341319621 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.287386976 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.824935962 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.750348377 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.311362685 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.283890517 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.589826939 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.298000732 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.551237935 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.298586966 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.30070826 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.785322707 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.293365563 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.30126292 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.283768651 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.29495874 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.900804707 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.287622253 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.538552303 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.301981099 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.283340953 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.284430459 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.330133629 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.291390228 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.285433441 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.29005626 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.793474029 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.299508467 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.381935551 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.30301624 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.260911151 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.289195575 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.288677131 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.285261102 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.489070664 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.735024021 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.294296261 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.266296746 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.259042017 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.264708179 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.398582835 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.255736387 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.537595661 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.272977001 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.255374117 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.260083539 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.843782316 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.320956994 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.257702613 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.261694972 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.125649626 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.463800431 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.272689363 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.260417595 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.254639409 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.270231704 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.402967352 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.276720226 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.295715811 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.259165845 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.933389262 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.303287897 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.260577279 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.786513333 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.259936777 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.086541283 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.276322075 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.255404003 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.548543993 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.508488109 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.540906682 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.258785584 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.275939167 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.926309842 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.29557151 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.391382715 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.273424906 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.322448226 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.452056485 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.374598269 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.257542184 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.856481191 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.253307773 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.464710844 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.251923559 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.554227256 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.716159169 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.271136934 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.254857471 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.929755154 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.964772992 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.937024431 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.258417048 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.519853056 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.22492542 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.741478326 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.255443001 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.255387602 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.682554755 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.259460989 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.258172761 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.254765441 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.255745685 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.398332358 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.427732945 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.857768247 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.257696973 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.681715745 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.294477448 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.256736525 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.258009648 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.254463046 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.598236297 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.339277168 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.256310007 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.266910812 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.253319775 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.256104712 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.704727293 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.104073832 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.259513257 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.401010105 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.858891544 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.270656506 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.251124852 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.848907835 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.525188502 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.73728914 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.29890137 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.535553963 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.2750434 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.283570522 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.795777665 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.328002309 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.696339726 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.264402209 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.246648135 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.813834838 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.262225153 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.336270604 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.245537933 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.244650762 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.756106517 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.262876811 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.250547286 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.37531325 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.261115864 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.507091264 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.246116933 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.296056762 seconds)
  done (took 1094.20821777 seconds)
done (took 1284.411127777 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.242565405 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.243890809 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.226675953 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.245015031 seconds)
  done (took 26.119491717 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.253068833 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.248492768 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.250579637 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.248925358 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.251925382 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.248998766 seconds)
  done (took 8.665782385 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.313448157 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.246270194 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.248098964 seconds)
  done (took 18.970663153 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.438201869 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.446930787 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.554436772 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.26123512 seconds)
  done (took 9.865182014 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.250169777 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.251117831 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.25200171 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.252458287 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.254642423 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.254864226 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.252246761 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.25252636 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.254987321 seconds)
  done (took 12.43817509 seconds)
done (took 77.222099755 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.296103335 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.591094391 seconds)
    (3/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.278613148 seconds)
    (4/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.549389706 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.126432827 seconds)
    (6/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.95757999 seconds)
    (7/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.231999508 seconds)
    (8/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.241936095 seconds)
    (9/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.339472645 seconds)
    (10/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.397570419 seconds)
    (11/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.364626396 seconds)
    (12/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.808513874 seconds)
    (13/286) benchmarking ("sort", BigInt, true)...
    done (took 6.250726836 seconds)
    (14/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.486945254 seconds)
    (15/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.404440151 seconds)
    (16/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.699407352 seconds)
    (17/286) benchmarking ("sort", Float64, false)...
    done (took 5.532610522 seconds)
    (18/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.291439325 seconds)
    (19/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.228443285 seconds)
    (20/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.332385859 seconds)
    (21/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.272552735 seconds)
    (22/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.445342458 seconds)
    (23/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.036925597 seconds)
    (24/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.277015612 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.067492337 seconds)
    (26/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.337553229 seconds)
    (27/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.331999111 seconds)
    (28/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.581799411 seconds)
    (29/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.297231423 seconds)
    (30/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.078639921 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 6.263296839 seconds)
    (32/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.276387543 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.376201853 seconds)
    (34/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.936929463 seconds)
    (35/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.396362668 seconds)
    (36/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.280549479 seconds)
    (37/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.585685447 seconds)
    (38/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.445150206 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.114682409 seconds)
    (40/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.229487871 seconds)
    (41/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.233642694 seconds)
    (42/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.267734878 seconds)
    (43/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.668637208 seconds)
    (44/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.277831925 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.363748016 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.523628328 seconds)
    (47/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.442582738 seconds)
    (48/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.270411052 seconds)
    (49/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.249604872 seconds)
    (50/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.278158514 seconds)
    (51/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.971445959 seconds)
    (52/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.237112464 seconds)
    (53/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.233654006 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.875168408 seconds)
    (55/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.596018582 seconds)
    (56/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.254462825 seconds)
    (57/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.236750225 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.311078288 seconds)
    (59/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.313610002 seconds)
    (60/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.067146416 seconds)
    (61/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.489356583 seconds)
    (62/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.649465691 seconds)
    (63/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.232401512 seconds)
    (64/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.231572656 seconds)
    (65/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.333292906 seconds)
    (66/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.233082142 seconds)
    (67/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.337706877 seconds)
    (68/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.049339066 seconds)
    (69/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.015813533 seconds)
    (70/286) benchmarking ("sort", Int8, false)...
    done (took 4.26467144 seconds)
    (71/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.458707503 seconds)
    (72/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.277494501 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.827303615 seconds)
    (74/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.231306515 seconds)
    (75/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.429843083 seconds)
    (76/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.173117232 seconds)
    (77/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.237180793 seconds)
    (78/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.337538172 seconds)
    (79/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.74883422 seconds)
    (80/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.715536591 seconds)
    (81/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.431646323 seconds)
    (82/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.373854604 seconds)
    (83/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.227491373 seconds)
    (84/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.991220131 seconds)
    (85/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.240588488 seconds)
    (86/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.438802167 seconds)
    (87/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.359763152 seconds)
    (88/286) benchmarking ("sort", Int64, false)...
    done (took 5.423017711 seconds)
    (89/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.434756387 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.079951209 seconds)
    (91/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.266179817 seconds)
    (92/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.332451357 seconds)
    (93/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.963590058 seconds)
    (94/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.21919497 seconds)
    (95/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.613455007 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.118860245 seconds)
    (97/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.299295797 seconds)
    (98/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.912693348 seconds)
    (99/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.367571015 seconds)
    (100/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.213349687 seconds)
    (101/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.340830157 seconds)
    (102/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.239604358 seconds)
    (103/286) benchmarking ("sort", Float64, true)...
    done (took 6.244625133 seconds)
    (104/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.220205177 seconds)
    (105/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.457031299 seconds)
    (106/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.718269563 seconds)
    (107/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.01357491 seconds)
    (108/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.484905321 seconds)
    (109/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.483921439 seconds)
    (110/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.477644254 seconds)
    (111/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.266377983 seconds)
    (112/286) benchmarking ("sort", Int8, true)...
    done (took 6.23856424 seconds)
    (113/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.437013871 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.600285874 seconds)
    (115/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.742431284 seconds)
    (116/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.709254217 seconds)
    (117/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.226942553 seconds)
    (118/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.28109047 seconds)
    (119/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.993206472 seconds)
    (120/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.348777367 seconds)
    (121/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.267998662 seconds)
    (122/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.329660597 seconds)
    (123/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.338574905 seconds)
    (124/286) benchmarking ("sort", Bool, false)...
    done (took 1.75091625 seconds)
    (125/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.279895045 seconds)
    (126/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.931549098 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.514244047 seconds)
    (128/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.043902004 seconds)
    (129/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.225153145 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.954609883 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.517620393 seconds)
    (132/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.345711044 seconds)
    (133/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.230476519 seconds)
    (134/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.226918337 seconds)
    (135/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.224809462 seconds)
    (136/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.257419765 seconds)
    (137/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.008607325 seconds)
    (138/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.301872951 seconds)
    (139/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.555143338 seconds)
    (140/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.350055239 seconds)
    (141/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.587595847 seconds)
    (142/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.538654781 seconds)
    (143/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.968733981 seconds)
    (144/286) benchmarking ("sort", Float32, false)...
    done (took 5.221490241 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.659939954 seconds)
    (146/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.551838277 seconds)
    (147/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.257271804 seconds)
    (148/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.25794655 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.976049253 seconds)
    (150/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.269133569 seconds)
    (151/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.2575267 seconds)
    (152/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.300191201 seconds)
    (153/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.018798264 seconds)
    (154/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.219856887 seconds)
    (155/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.342346617 seconds)
    (156/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.249943155 seconds)
    (157/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.240563273 seconds)
    (158/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.031260524 seconds)
    (159/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.27004124 seconds)
    (160/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.256809613 seconds)
    (161/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.223738491 seconds)
    (162/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.22338922 seconds)
    (163/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.25429671 seconds)
    (164/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.270229282 seconds)
    (165/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.810030559 seconds)
    (166/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.421936419 seconds)
    (167/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.265795569 seconds)
    (168/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.221728627 seconds)
    (169/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.428196649 seconds)
    (170/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.708313379 seconds)
    (171/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.249526511 seconds)
    (172/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.257527367 seconds)
    (173/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.230670425 seconds)
    (174/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.245438891 seconds)
    (175/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.258789013 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.65057908 seconds)
    (177/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.754502924 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.829727823 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.270838128 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.856243289 seconds)
    (181/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.351466616 seconds)
    (182/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.286134195 seconds)
    (183/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.266519064 seconds)
    (184/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.282560611 seconds)
    (185/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.06344687 seconds)
    (186/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.224270167 seconds)
    (187/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.361545397 seconds)
    (188/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.223655093 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 5.323197754 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.775345692 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.302761451 seconds)
    (192/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.812317635 seconds)
    (193/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.193973655 seconds)
    (194/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.23022809 seconds)
    (195/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.335722122 seconds)
    (196/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.308034342 seconds)
    (197/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.22599108 seconds)
    (198/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.272407616 seconds)
    (199/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.376071344 seconds)
    (200/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.226450599 seconds)
    (201/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.964207209 seconds)
    (202/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.064510164 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.886944479 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.456000503 seconds)
    (205/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.348226292 seconds)
    (206/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.265605265 seconds)
    (207/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.226496825 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.807371261 seconds)
    (209/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.753831241 seconds)
    (210/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.316400815 seconds)
    (211/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.590008092 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.273206918 seconds)
    (213/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.252673686 seconds)
    (214/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.599018482 seconds)
    (215/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.234656805 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.288561159 seconds)
    (217/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.327301491 seconds)
    (218/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.147364055 seconds)
    (219/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.289840616 seconds)
    (220/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.227633234 seconds)
    (221/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.272875279 seconds)
    (222/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.603040066 seconds)
    (223/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.239848761 seconds)
    (224/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.230435062 seconds)
    (225/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.277542332 seconds)
    (226/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.449579354 seconds)
    (227/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.261435641 seconds)
    (228/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.280291446 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.643435854 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.147813379 seconds)
    (231/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.601841484 seconds)
    (232/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.274803696 seconds)
    (233/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.246121907 seconds)
    (234/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.080583352 seconds)
    (235/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.263012057 seconds)
    (236/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.548717937 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.455588947 seconds)
    (238/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.519781233 seconds)
    (239/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.847721673 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.278155671 seconds)
    (241/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.816904731 seconds)
    (242/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.235890355 seconds)
    (243/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.251457992 seconds)
    (244/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.235271041 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.650944952 seconds)
    (246/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.675315394 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.648619327 seconds)
    (248/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.4993322 seconds)
    (249/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.372482668 seconds)
    (250/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.71970475 seconds)
    (251/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.62548237 seconds)
    (252/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.242552699 seconds)
    (253/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.579533568 seconds)
    (254/286) benchmarking ("sort", BigInt, false)...
    done (took 6.261472832 seconds)
    (255/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.509082034 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.335888388 seconds)
    (257/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.273815097 seconds)
    (258/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.912698141 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.353861042 seconds)
    (260/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.276512851 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.358537845 seconds)
    (262/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.333309964 seconds)
    (263/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.501784134 seconds)
    (264/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.628719093 seconds)
    (265/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.24852854 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.081473071 seconds)
    (267/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.573756962 seconds)
    (268/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.278485272 seconds)
    (269/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.248778672 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.328873743 seconds)
    (271/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.231561216 seconds)
    (272/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.71758672 seconds)
    (273/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.24692784 seconds)
    (274/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.95255227 seconds)
    (275/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.372476086 seconds)
    (276/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.231048309 seconds)
    (277/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.244823438 seconds)
    (278/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.888777954 seconds)
    (279/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.26830199 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.278821544 seconds)
    (281/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.314249597 seconds)
    (282/286) benchmarking ("sort", Float32, true)...
    done (took 6.249332561 seconds)
    (283/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.276011625 seconds)
    (284/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.250718799 seconds)
    (285/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.362909787 seconds)
    (286/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.380438086 seconds)
  done (took 908.176611349 seconds)
done (took 909.341671608 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.282960771 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.279961722 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.262140148 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.283357197 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.371550749 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.286985799 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.27235916 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.264775183 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.310088045 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.311581553 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.260503722 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.28606657 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.262862062 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.261938647 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.26221183 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.277794859 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.2480208 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.261702875 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.279858474 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.272061511 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.27944169 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.261488564 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.311701197 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.286594282 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.266051699 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.266815954 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.266306663 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.282031898 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.374426907 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.266301037 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.266653273 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.273502904 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.258334697 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.263777824 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.258859693 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.282427699 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.274811025 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.273723586 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.267745444 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.29499736 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.643607058 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.282591458 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.265530374 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.266151803 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.264694514 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.268685742 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.265926454 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.272113392 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.278445939 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.280506292 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.648890943 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.29689078 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.267206963 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.265344601 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.27609015 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.265233152 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.269979165 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.283118924 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.2839596 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.283083762 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.238980996 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.269994955 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.268322695 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.282083125 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.272102622 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.693026136 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.28158661 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.270671428 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.646448765 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.290711266 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.694639253 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.293592207 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.26720854 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.279944674 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.298983402 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.257850969 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.26126735 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.264899869 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.274493564 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.265106502 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.277430279 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.279835606 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.273312286 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.267808122 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.281701285 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.291182215 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.277324338 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.267875876 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.276477596 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.286451143 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.274667762 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.278327505 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.270286558 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.262769509 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.277779083 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.271091714 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.270742699 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.271174935 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.271561956 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.278131226 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.645392912 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.305583823 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.264488406 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.265522598 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.268117974 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.281968277 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.647155728 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.289430308 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.291414527 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.314628571 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.271030229 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.242923195 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.272039188 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.2871479 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.278561195 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.273216823 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.264146259 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.24436659 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.656983877 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.306172419 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.271314189 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.26786244 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.288447594 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.271915379 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.266571338 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.270797814 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.276715408 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.285205318 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.390498721 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.281534328 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.301315005 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.269520242 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.274099617 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.295234255 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.287530361 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.301866255 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.273523656 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.288045611 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.285658445 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.267681382 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.281262472 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.281971887 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.272052796 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.27633444 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.26529428 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.29571696 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.283735138 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.284860389 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.293593625 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.392367943 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.270777538 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.261634043 seconds)
done (took 214.600998212 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.328849765 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.267728681 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.352760631 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.268226477 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.365636538 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.365817607 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.265783863 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.265717228 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.265462225 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.645300053 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.266058555 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.266489369 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.264024219 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.266040581 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.351262299 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.268708902 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.266180115 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.608304623 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.269501005 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.337198896 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.261621419 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.266303912 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.268675623 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.648653963 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.269000612 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.26614561 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.341362831 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.269282881 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.612773727 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.26280314 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.26829524 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.614697957 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.358424193 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.288106293 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.279569838 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.277795165 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.367996868 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.286972396 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.349826379 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.349758363 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.354559823 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.30917127 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.264171795 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.262724284 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.271439081 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.270565649 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.267615664 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.297466258 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.265551136 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.269430521 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.609847256 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.280752899 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.268792709 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.268782544 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.269965251 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.299257558 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.270271706 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.270687821 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.35984161 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.272910729 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.332268588 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.65079738 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.651025626 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.2717601 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.272313586 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.271274332 seconds)
  done (took 144.095679765 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.338152022 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.344229699 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.380285858 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.286476338 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.322104602 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.384446126 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.28825765 seconds)
  done (took 10.525081391 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.278408881 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.274541403 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.330622623 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.331155616 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.2736782 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.482525329 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.273962906 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.285783205 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.270675263 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.336428354 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.275231461 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.274636912 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.279631091 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.27345457 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.330366783 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.285871197 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.386683883 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.274843697 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.274987746 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.42506336 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.271812208 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.279988489 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.324222433 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.283676042 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.275783988 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.278561848 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.121896637 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.274920373 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.270741657 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.273929619 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.271961936 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.348817667 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.275004783 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.271640115 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.272131528 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.412619003 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.274420454 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.272775691 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.275452326 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.274182788 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.275558743 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.275040453 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.274625706 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.271490596 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.276233975 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.297039531 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.275255932 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.274829208 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.275876898 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.2762062 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.332661177 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.275881364 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.273165147 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.273108552 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.341151511 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.282233808 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.275802355 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.272898634 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.277272029 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.27336272 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.427237197 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.33401452 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.275971753 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.333040047 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.27617972 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.277667743 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.277651702 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.276435901 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.337023198 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.277264335 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.333694307 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.275062965 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.498688352 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.300160785 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.2790251 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.279008864 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.280257166 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.277764992 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.274897202 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.282059584 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.275391905 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.279024459 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.28305506 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.275914731 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.275146294 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.467480528 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.389404736 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.275303215 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.290136225 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.283639196 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.275049181 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.338984725 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.277892831 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.275624492 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345660449 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.392675261 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.330928124 seconds)
  done (took 148.16222028 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.282026997 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.286827108 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.279743376 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.29889514 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.296844048 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.27817699 seconds)
  done (took 8.90929742 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.280581674 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.279397631 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.278910315 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.279343207 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.279294199 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.280907322 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.279337062 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.279301744 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.281807852 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.278683911 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.280269262 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.28171464 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.280850541 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.27978189 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.279949876 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.280968961 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.280275243 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.278002368 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.280623557 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.279481633 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.383209576 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.280170016 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.280507688 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.280875 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.284011902 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.27972277 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.288124426 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.27994544 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.280294405 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.286281264 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.298685606 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.282438628 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.281617804 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.286860051 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.284426857 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.282308879 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.285658128 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.282783949 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.278974909 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.281990566 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.283771486 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.281906221 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.281926847 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.283510938 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.28294102 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.286064829 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.287265006 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.28961067 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.282671297 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.285390698 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.284306833 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.282242202 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.282370593 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.284537966 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.284752452 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.302243361 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.288682809 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.28254786 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.282692045 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.282726021 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.284984872 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.284125195 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.284226012 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.288055452 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.280688043 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.285448393 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.283339266 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.287878463 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.283591675 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.284766687 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.286289793 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.281268419 seconds)
  done (took 94.674713604 seconds)
done (took 407.547144594 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.572024922 seconds)
  done (took 7.763908746 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.370890293 seconds)
  done (took 7.566057828 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.221054919 seconds)
  done (took 21.418388108 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.342865696 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.396130456 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.308638063 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.279847355 seconds)
  done (took 26.521663369 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.480945432 seconds)
  done (took 7.674664346 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.282921093 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.278685169 seconds)
  done (took 13.756136892 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.695866802 seconds)
  done (took 7.890023733 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.557802168 seconds)
  done (took 7.757308057 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.304557438 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.292281386 seconds)
  done (took 14.04384151 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.272069136 seconds)
  done (took 7.466870935 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.160873754 seconds)
  done (took 11.354995311 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.291790677 seconds)
  done (took 7.489600471 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.331340712 seconds)
  done (took 7.525671398 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.057296551 seconds)
  done (took 9.252802985 seconds)
done (took 158.67488262 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.278632588 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.281218765 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.280484974 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.281310467 seconds)
  done (took 26.316535765 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.320792497 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.320241299 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.322608478 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.331304129 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.323947052 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.320277717 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.312809208 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.313696787 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.332198816 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.323788539 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.322905138 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.323165951 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.321143284 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.313185526 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.323257517 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.322810373 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.331576362 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.323934948 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.314933916 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.325070976 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.288466829 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.33104451 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.324787925 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.288685047 seconds)
  done (took 32.872881415 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.807533035 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.35798856 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.441608648 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.33912493 seconds)
  done (took 7.143466165 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.339182943 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.341990779 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.35337868 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.391760133 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.42482104 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.350584909 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.312791926 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.309484012 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.296910333 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.342800317 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.41783691 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.357317254 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.437068754 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.290126408 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.488270656 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.289153921 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.290339679 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.340956027 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.392860304 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.406235334 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.290855602 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.340697568 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.34450787 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.360057864 seconds)
  done (took 33.707792043 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.289012052 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.309271883 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.28897126 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.289567538 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.296779398 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.28934301 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.290492813 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.290631325 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.289134954 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.296651112 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.288742888 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.30192178 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.290299056 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.289502881 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.295967701 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.292543902 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.296441483 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.289256199 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.290233364 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.296397187 seconds)
  done (took 27.060796001 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.283784262 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.137203209 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.635499044 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.540795841 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.285094569 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.28701623 seconds)
  done (took 27.368691544 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.357889248 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.505451674 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.295937116 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.629565534 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.719842104 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.306782257 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.291832501 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.524691994 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.82655807 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.814297289 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.34993274 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.35730386 seconds)
  done (took 19.180102217 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.293045943 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.289382719 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.29908973 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.30707557 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.344146969 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.311997746 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.29927863 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.285983013 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.35080511 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.366142138 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.312884956 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.345739856 seconds)
  done (took 37.00643633 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373598141 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332273043 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.190286848 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36815458 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.027383426 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.498898435 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.29267441 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.012767456 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.316432028 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.561293948 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287532636 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.3922157 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.542550613 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287044383 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.310560003 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.222014809 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534646955 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750003524 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289680233 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.156995135 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311847499 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.292050188 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.2418614 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.509627559 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.520696846 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.266120627 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.549293714 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.063961555 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562675495 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.30876055 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299299016 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.289593998 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563272312 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926035777 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405731223 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491826304 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309746007 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.836093583 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.276975891 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.18401168 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30190427 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.292255593 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300140905 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290412681 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.224992889 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.296978909 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990325843 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.313660582 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.001634985 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.289959006 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.540888053 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387009257 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.294471192 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.861020514 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.304469059 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.299449355 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.294561409 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380236867 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876758892 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.399847192 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305750075 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.231573946 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.309158904 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.16601148 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887475619 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.313797294 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.29521008 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.295255682 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224888074 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.165360483 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3110143 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437621531 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.316404098 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.940220606 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962501464 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.310983024 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.222013738 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81749781 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.293458818 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.246301483 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.518397767 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.067454084 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228742736 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.240612072 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.226117628 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955222479 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30408545 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.651051446 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.316181043 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.003326139 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.515017618 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332859489 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316460046 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.516265803 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.173441624 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292961501 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.292749657 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420002937 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314108031 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.989864607 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247165188 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.296988865 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548015896 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.504438826 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.297594262 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.235147277 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782014191 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318292966 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.315067038 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.300735389 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.503643967 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.8705264 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.327933076 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.410346839 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318050199 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.0704425 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992848518 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299592335 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.304817787 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.294117633 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576440054 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.009677166 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.177908182 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36263556 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299882153 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.295309268 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.192118507 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.145205675 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.196519926 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.484207425 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327260765 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.309141586 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.295944422 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24073459 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.292879354 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310010967 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.072120687 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.518682145 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.30481172 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576794556 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.234566803 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443766794 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.305530038 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.518995579 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.461721353 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.323602383 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554748646 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300696493 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.302813894 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.310824517 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316017847 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397082806 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31859118 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.307580364 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.558268624 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.300165231 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.301159168 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.191506927 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.076956895 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297942022 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.30269326 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313473134 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859235539 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290941416 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.30093371 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.186719542 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.312452883 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365592138 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.303529862 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50351228 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.493003215 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317888434 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.304221026 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.30498571 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524903789 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.308122123 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.185991689 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378500461 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.760786542 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.879928463 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.327946565 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.232082571 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.011044408 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.991830969 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298642368 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.487401481 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.299157937 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505056146 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.330101119 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.29884393 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.880522561 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316480765 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.18807109 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.304121772 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.311299293 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.304899666 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299483819 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.442150528 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.446726837 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308746253 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.316850857 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443379141 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.313954835 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.233809042 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.81768638 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.305397556 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.301224131 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.077268616 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334871494 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.203784668 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082308726 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578500372 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.303997228 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569285244 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.282064878 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.332538791 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.298756184 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.306630305 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314176271 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.308864378 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308962694 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.311984412 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.193998113 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.738910137 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868231932 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993049312 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827439657 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.556441595 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.330481937 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.187249541 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.997127856 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254060405 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.959688252 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.532788378 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.012654095 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263920282 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.763882574 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.489577367 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056296766 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559151354 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.530474155 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.53988092 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.323565588 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557262987 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.517708149 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337944049 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.303175179 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.234559551 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.821538523 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842285564 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329043635 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381716914 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0039121 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333109742 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.079246142 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.344619012 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.961334791 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.691084406 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.86967041 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.690339104 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.304554854 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.309271606 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090846509 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.32642353 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.829736334 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909590081 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.322738042 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.766593504 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258796532 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.510559961 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.337032083 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.302895583 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.797689674 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.33059459 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.561657936 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554586531 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24405039 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.318876 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822966685 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.181138614 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.310597686 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305438976 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008784766 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317684665 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584860527 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.312794757 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.473094776 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327952853 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.24040964 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239987875 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.998960181 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.307273493 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282039013 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768880975 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.309616307 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33352116 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313838202 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159464457 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.560116455 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.320813419 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.870414798 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548031904 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.306355354 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330916752 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.311003775 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307516435 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.70300355 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.189240819 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.541853166 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345125206 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.536612537 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.228283626 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.21077483 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.339358238 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.522499785 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.204540039 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.315059824 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542631796 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.036089437 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.324045577 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996255413 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348706329 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.314983327 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.31992692 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.309061489 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344950272 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396493673 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.516400189 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.337064903 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.31893743 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700073858 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336436149 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311248111 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.323254551 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401419292 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.472578922 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.476931425 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.100443107 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876562223 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034024967 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.901345468 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580320582 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.311791303 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310973855 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.244174979 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458504392 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.83493981 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583181087 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440989558 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.319249499 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33305668 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311585886 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.312953598 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541254185 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585967449 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.180705551 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310593309 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.97350553 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.468373556 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.321046812 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.522569818 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781534211 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841710497 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429478395 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.313520967 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.012950201 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603907056 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.40402189 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311165964 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.900678347 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.315180318 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.993548067 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.318887831 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316097911 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459497466 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.563981691 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961592633 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.339492909 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.472825376 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.086394695 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.232686277 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.568474332 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.755747451 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.521864168 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903290387 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.007839688 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577474286 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383356254 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.520697282 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.434058725 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459241085 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.310711042 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.213665034 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313785243 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156327652 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.023060383 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.322370716 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883286258 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596690948 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.317755491 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.311228378 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336270871 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.321316103 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.536658955 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990269964 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.538758363 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.323203404 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.323592788 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.88328935 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885797612 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58895853 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25685915 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.317184928 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549598733 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.570983919 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339340244 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.767546936 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.026514785 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848740106 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.287492542 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3356977 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.32736854 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.002073295 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892341474 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.514267916 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807120807 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.97338209 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.327906981 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593953718 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.320360248 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328018614 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595481428 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.319419404 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.316285458 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531171067 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.904469199 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.087952137 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.331867718 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.28921928 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.256716632 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.542098739 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387668202 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258470827 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317346391 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.718372933 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.341086511 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447696823 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.32835839 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.320121287 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320207737 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.056139952 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.601024577 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.322432754 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.316220566 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.303980723 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.331131301 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411766906 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86540295 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340626964 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.992459643 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.668113426 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.572752387 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.328395279 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.305883454 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.32124294 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318691023 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.03473247 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.285627783 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328917383 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863109278 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.330954831 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.335760394 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.324121545 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.53449095 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.52954833 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.32531694 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.531583666 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350209587 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339012354 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.218812684 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.086059477 seconds)
  done (took 1638.095214005 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.330277304 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.349248247 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.334295942 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.413325552 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.380394134 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.420066317 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.357875014 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.395504047 seconds)
  done (took 52.211477189 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.326206905 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.478290815 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.350954527 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.320476977 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.329189152 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.330037855 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.773520065 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.338888814 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.329406292 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.330027706 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.322054178 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.332592125 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.963810966 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.333214188 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.33233556 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.305482066 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.334326371 seconds)
  done (took 65.064337023 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.301602617 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.638837677 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.945260333 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.366576074 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.361430432 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.334675269 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.777153676 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.34247439 seconds)
  done (took 58.3005891 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.336928199 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.33652943 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.33743526 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.338425072 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.338051037 seconds)
  done (took 7.921048952 seconds)
done (took 2033.448212301 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.324987036 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.327447406 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.325547556 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.32864454 seconds)
  done (took 6.539563798 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.303096124 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.036684601 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.301916664 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.320570792 seconds)
  done (took 18.195311146 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.335394044 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.353471124 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.986360058 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.92286191 seconds)
  done (took 5.144419077 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.072792901 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.087151057 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.070229802 seconds)
  done (took 7.464965244 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.321469436 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.331251826 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.331767316 seconds)
  done (took 20.21910996 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.619682822 seconds)
  done (took 2.850820881 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.470643578 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.519763289 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.641141403 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.646666271 seconds)
  done (took 7.512869509 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.715676818 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.693745809 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.513566151 seconds)
  done (took 6.158036632 seconds)
done (took 88.006548813 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.033681761 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.568627332 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.527218022 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.003030723 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.546228073 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.526479759 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.535484288 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.970099409 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.511165828 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.505080726 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.003795562 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.550910724 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.48709427 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.328556758 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.485100995 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.325011668 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.552425668 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.072980026 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.685044758 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.881609721 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.537084796 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.64142488 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.830172391 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.662353283 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.548571661 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.477174259 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.237351426 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.573774392 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.865061053 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.256052815 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.476931567 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.061938357 seconds)
  done (took 189.504251876 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.338929015 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.324380786 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.341706035 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.324874379 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.32742312 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.324096981 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.325651534 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.341298853 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.327134566 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.329986794 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.325783056 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.335414993 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.326755651 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.340690029 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.344098354 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.332987226 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.325538107 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.330915437 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.326066874 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.325699445 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.344653816 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.34179929 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.354540218 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.338485796 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.334841122 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.32677268 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.326917335 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.343342447 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.333635591 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.325398251 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.32681462 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.327180304 seconds)
  done (took 203.881602369 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.326229722 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.327417963 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.326435355 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.337418829 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.325623822 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.328214964 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.328816106 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.327025008 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.32749741 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.350961182 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.338380722 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.326920909 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.32591031 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.338628121 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.330360068 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.33111567 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.32678188 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.327929374 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.342638911 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.339827464 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.331304639 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.327848244 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.337912389 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.338158529 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.328343627 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.344127417 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.330175966 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.328314069 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.343059852 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.338401313 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.330792041 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.335846716 seconds)
  done (took 203.888716065 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.523748625 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.334799851 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.337113185 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.27195826 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.336686046 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.335879113 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.329595341 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.576093122 seconds)
  done (took 14.287255381 seconds)
done (took 612.797198573 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.606480985 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.321519069 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.538555968 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.363611811 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.117164289 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.382391756 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.35610504 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.52219228 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.250897071 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.526726362 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.598511891 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.3747105 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.737767144 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.359191892 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.604813823 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.459392731 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.250028182 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.373937785 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.669171837 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.87845966 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.619070589 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.81898756 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.544334431 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.261752191 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.757217391 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.821800154 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.047465708 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.239207336 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.376265587 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.671481803 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.944321925 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.288457171 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.417916338 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.417601964 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.47770976 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.456624429 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.258349098 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.413185134 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.555168551 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.585387566 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.885815276 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.075471737 seconds)
  done (took 91.468317229 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.322242615 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.320913189 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.321290479 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.322205275 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.323858031 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.322236369 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.321149613 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.321809767 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.322441091 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.32214192 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.322150132 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.325139155 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.322140523 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.323234241 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.321297006 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.322330472 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.322237006 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.324851516 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.322074577 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.322499187 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.32229308 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.322801346 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.322822989 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.322129136 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.322657044 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.322159059 seconds)
  done (took 35.627864075 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.340999652 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.582806055 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.749029475 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.354779147 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.340445571 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.344389938 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.416139753 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.348953688 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.344109566 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.344663919 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.495175669 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.3519988 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.376237574 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.773072168 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.348909391 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.342767786 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.342914507 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.340951678 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.594022668 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.355664249 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.438696709 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.351138812 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.418029565 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.356695318 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.36502794 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.342664558 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.347805354 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.907952882 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.361450109 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.494886458 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.105240021 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.418091285 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.883528479 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.77765257 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.10270466 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.352078109 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.343391643 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.499419239 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.351556924 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.342764039 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.418974511 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.344654675 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.755853562 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.014774133 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.36370161 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.344125494 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.928610165 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.516731458 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.580596398 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.353337249 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.779696469 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.351005841 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.346652059 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.346807299 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.578629536 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.355845231 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.34402251 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.944734906 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.371500679 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.420329681 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.346225562 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.345128127 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.599714414 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.348896869 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.588057818 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.349177834 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.35339462 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.363824173 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.761058538 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.352490899 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.034852052 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.366161747 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.345510126 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.496409832 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.588096063 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.962910841 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.367265717 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.604620288 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.89719456 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.436653116 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.350805901 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.899164158 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.439863649 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.352461025 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.349230288 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.349047351 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.346803646 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.395657425 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.417579691 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.971245317 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.052135851 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.974347427 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.444719627 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.362974102 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.346981514 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.945911102 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.368501737 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.346472641 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.753266254 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.044081043 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.367444005 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.354585807 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.038581686 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.370733538 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.42373595 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.35980641 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.76669088 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.353265554 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.397116194 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.348007479 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.354506184 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.369358718 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.422680202 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.35735547 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.348879712 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.00721557 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.52739445 seconds)
  done (took 177.944895358 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.342742671 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.341750208 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.344186314 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.342265688 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.342498864 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.349515082 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.340905401 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.343386807 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.34786572 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.342174108 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.343609684 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.344822843 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.343724491 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.3593061 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.354754121 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.349858867 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.952723865 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.343370717 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.352021357 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.343808972 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.129883695 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.347788754 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.350651313 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.342049959 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.342612563 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.343755057 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.348655029 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.345231779 seconds)
  done (took 152.326633676 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.350448598 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.897025338 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.372172923 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.474200046 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.374476062 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.347733984 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.474067061 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.408025067 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.36896944 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.34844612 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.348184571 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.641573177 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.355778464 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.849244389 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.537722233 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.499235119 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.847954787 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.370121626 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.349615175 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.348297959 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.478542856 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.354553687 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.643049445 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.900315296 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.373402589 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.897413793 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.339909662 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.352066207 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.350636233 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.898857009 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.370679039 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.643829718 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.425779773 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.411960256 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.910396992 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.865988417 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.867161718 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.494199869 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.353139979 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.349892243 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.35120857 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.33639744 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.896428913 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.370960814 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.352778021 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.885323355 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.370203868 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.352701289 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.357213706 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.350262726 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.409692081 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.425489725 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.662324508 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.901133195 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.443250337 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.371848273 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.478662605 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.7165736 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.355666904 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.853073389 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.340281558 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.903155838 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.369817911 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.337435723 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.352773814 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.35794898 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.495589278 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.483663752 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.851858128 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.373726287 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.854416296 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.516194696 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.357398628 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.352791594 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.354829481 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.902508277 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.870980024 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.516789558 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.487956483 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.54228489 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.343626308 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.352318818 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.338212546 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.429758898 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.357155257 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.904711916 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.874201431 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.376433054 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.355751885 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.35559522 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.357977236 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.523654979 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.926590061 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.447881539 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.845695667 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.672089833 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.656515028 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.361018698 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.412204349 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.370375 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.651315166 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.359022599 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.410026559 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.780609488 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.650702307 seconds)
  done (took 161.080903361 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.597017671 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.533906895 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.447688213 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.501560491 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.941317876 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.919594104 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.59903109 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.496800568 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.462989224 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.610147362 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.467604057 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.44924854 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.560923843 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.432124134 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.077299211 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.446395992 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.462125473 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.504443406 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.509041295 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.349936581 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.022402324 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.631056295 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.535664185 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.154382695 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.479647826 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.099040088 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.906282033 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.920798171 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.530067121 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.605663973 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.893436906 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.44753509 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.288359072 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.02911292 seconds)
  done (took 65.178403768 seconds)
done (took 684.867919901 seconds)
SAVING RESULT...
DONE!
