cset: moving following pidspec: 30576
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.405903515 seconds)
loading group "string"... done (took 0.595837346 seconds)
loading group "linalg"... done (took 7.358225879 seconds)
loading group "parallel"... done (took 0.161181214 seconds)
loading group "find"... done (took 1.173948178 seconds)
loading group "tuple"... done (took 1.807408904 seconds)
loading group "dates"... done (took 1.322624565 seconds)
loading group "micro"... done (took 0.22644407 seconds)
loading group "io"... done (took 1.029507606 seconds)
loading group "scalar"... done (took 39.227426075 seconds)
loading group "sparse"... done (took 12.33215049 seconds)
loading group "broadcast"... done (took 1.003120695 seconds)
loading group "union"... done (took 12.974309439 seconds)
loading group "simd"... done (took 4.729400011 seconds)
loading group "random"... done (took 9.659153226 seconds)
loading group "problem"... done (took 1.734134252 seconds)
loading group "array"... done (took 21.159422447 seconds)
loading group "misc"... done (took 1.798939967 seconds)
loading group "sort"... done (took 3.398188191 seconds)
loading group "collection"... done (took 18.194344197 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.526089825 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127696958 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120537202 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.122100903 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150102296 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115653026 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128232701 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088215202 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.880814285 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150850721 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.120055931 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.43536421 seconds)
done (took 5.311551262 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17737065 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084889155 seconds)
    (2/2) benchmarking "String"...
    done (took 0.085005073 seconds)
  done (took 1.337336123 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067308623 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124326844 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069052354 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069533468 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068913769 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067814412 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067627878 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067921973 seconds)
  done (took 1.702650991 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074486823 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070938479 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067298462 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070079077 seconds)
  done (took 1.451514148 seconds)
done (took 5.91308207 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.796928875 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.209410782 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190624599 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.419013586 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137796246 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.166468567 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.637973113 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.344072138 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.200199405 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08467128 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.111281302 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.334140942 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110991245 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.642022657 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076395142 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.093394581 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140598402 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.42219521 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069303881 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084552222 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090635545 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129960963 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087407241 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075895159 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.148759411 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069388659 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.139209481 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082779298 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068248491 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.216129652 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173861533 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657125339 seconds)
  done (took 10.419511609 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098660416 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098794752 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071163883 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124447562 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098654111 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071404664 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073341411 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069529613 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088751121 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129931838 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09116285 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.103674557 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067724355 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070490878 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087019281 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.206435942 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.085199837 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084220929 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072413487 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077316589 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107260853 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080415853 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079458568 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07921668 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131028488 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.181125363 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098610177 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099050467 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.07062782 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084448981 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118646871 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129820528 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067424634 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068227833 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125728227 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095413443 seconds)
  done (took 4.691784697 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.012785864 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.146015703 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092829427 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086208871 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.137235193 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067041899 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111923756 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067192999 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082651568 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.215964244 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.388380182 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.612586715 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112969065 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107468179 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071580352 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07035935 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068981154 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095767789 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.523429291 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110227438 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.098072419 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084181748 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072136868 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071406512 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070703783 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066211238 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072390395 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.11575025 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.072165347 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.304826169 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131254633 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070698291 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.96222654 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12860631 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068461431 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102471189 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.293964274 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094757723 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.146863459 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071472716 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066623674 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155984893 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072478611 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067735527 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085912019 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105196067 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114365068 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067623513 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071799862 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164260911 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06741486 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081578559 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.650261294 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155660953 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081741305 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068364867 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.263693999 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093743358 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073757857 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068696214 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.188859224 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133341787 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066445402 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069563216 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06888378 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069930885 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071144656 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.36612565 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068206798 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.169083854 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070126548 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077599134 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071366291 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071436818 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075075656 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074650747 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.089412075 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067836568 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076770901 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067590392 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067619603 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068680844 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085967828 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.382737285 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069072313 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070069541 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066581248 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090792474 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097742 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068360995 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067475567 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101226262 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069798612 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067608679 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10877326 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067713112 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.18641437 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071845318 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114972022 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068628187 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.113057314 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069606756 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100450739 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073797965 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100484496 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082881048 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070558455 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.425514508 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067182209 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066753422 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069797041 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066842924 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069709368 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068528803 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080915087 seconds)
  done (took 21.72220112 seconds)
done (took 39.013852321 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.238672543 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085088227 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079245261 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078606034 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076592065 seconds)
  done (took 1.818908708 seconds)
done (took 3.059395492 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125600491 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102204323 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066482937 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099444497 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066370031 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104126729 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104153881 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083430832 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102861069 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066759474 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099678079 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065783544 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065663902 seconds)
  done (took 2.410880401 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085247527 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085909427 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07194092 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08591689 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065408799 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085234283 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083114884 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091265966 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082950089 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074319522 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065347659 seconds)
  done (took 2.108811443 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084670744 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086115841 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071493275 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083989445 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064734077 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084105563 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083474372 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088525121 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084089552 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076430012 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065493868 seconds)
  done (took 2.101264526 seconds)
done (took 7.847061444 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079435377 seconds)
  done (took 1.300311037 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.599504366 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.143122431 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083482908 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113237597 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192545147 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121024849 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276573716 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088889629 seconds)
  done (took 9.024219593 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.104117148 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074172433 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073385293 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074991143 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072335814 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069666486 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07063954 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070970838 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07100348 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070617 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070341842 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071221789 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070120777 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072906544 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073420937 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.0731419 seconds)
  done (took 2.475586381 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093833436 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093060882 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07493941 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076175171 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073779206 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073475213 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075937602 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075335792 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072745726 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073664982 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07604641 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075725197 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073207996 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066045566 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075207765 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077270764 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072620873 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075852237 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076181854 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076833661 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076180823 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06587285 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073340905 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075802217 seconds)
  done (took 3.149336758 seconds)
done (took 17.178243561 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116753443 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073553897 seconds)
  done (took 1.418833108 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083478008 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084488371 seconds)
  done (took 1.403434637 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085767065 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067648512 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09314689 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079779487 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067670949 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067306245 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090140101 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067687738 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067109603 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067728281 seconds)
  done (took 1.989939413 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069880599 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079446574 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071899662 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082818177 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076367123 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065599663 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073497893 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069529416 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079235355 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064224415 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073341671 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084083348 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073264176 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086327226 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073536512 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070038698 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073665122 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069083109 seconds)
  done (took 2.575693923 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06646364 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068372209 seconds)
  done (took 1.375746576 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068674782 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064719755 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068937786 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068929317 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066258663 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065870307 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067189166 seconds)
  done (took 1.708137093 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.383447878 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.115192267 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.315804559 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072624858 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083610759 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261060334 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067370747 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072283898 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072170919 seconds)
  done (took 2.725272358 seconds)
done (took 14.438862559 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082984873 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088348672 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097285462 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.379101501 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093807762 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067592901 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115028405 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190754614 seconds)
done (took 2.368742513 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215288939 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.638991802 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.408187692 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214801821 seconds)
  done (took 2.511326549 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347192055 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091652591 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062049934 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070740162 seconds)
  done (took 1.828794044 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068202763 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070789143 seconds)
  done (took 1.393174488 seconds)
done (took 7.199554097 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068306418 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067515862 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.065356558 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067709855 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065199885 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065298106 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067120941 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068285308 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.068813199 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.068879112 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071576017 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087296411 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065873033 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066905123 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069160833 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067195128 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067212256 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06936918 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067067158 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.068155186 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067106895 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069449546 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066936076 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066276553 seconds)
  done (took 2.932718466 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086263346 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068120385 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073262994 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073428116 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070698389 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072471175 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072689504 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067258265 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072729885 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06967038 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070397334 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071184327 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070545833 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072829569 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072057454 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073514043 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075401998 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069627301 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071902689 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072867393 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074725926 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069114499 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070888917 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072293562 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070380404 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071366687 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070120638 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067326645 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072150149 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071189493 seconds)
  done (took 3.419903025 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071200152 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065270567 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065350245 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071570933 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06626166 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067952821 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067177872 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067538258 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06785476 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067351213 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068742221 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066959934 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067183604 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068321972 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067587616 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.070999394 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083614882 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067560541 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.067372149 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067441152 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.07039085 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066362937 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064563365 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064793658 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064395839 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064311128 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065446164 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064493087 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065436498 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064263047 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067950264 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068838 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064716633 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071893286 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068850355 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.17734858 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068736163 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064506628 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065239293 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064520133 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065888598 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066509641 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066941291 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073833121 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06749122 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068306872 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067020507 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068001621 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068054891 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06986249 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066483454 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067142469 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069138162 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068149916 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071384362 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066342381 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067248873 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065583883 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065924367 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064751452 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064473423 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064741096 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06740927 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065509011 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079944393 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072072113 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065503488 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066477648 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066387165 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068077874 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066922248 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078924518 seconds)
  done (took 6.255828754 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091668232 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088851462 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067478842 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066412438 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063854835 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065656725 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071383012 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066147687 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067167152 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085023959 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067973248 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069025825 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068542358 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071547506 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067757354 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068556458 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075955742 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065074746 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068113637 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071357916 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067834645 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073685616 seconds)
  done (took 2.844104486 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157521215 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071760217 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10728754 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076950142 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071412229 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077270526 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071498541 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071375587 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071562198 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069656497 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069111547 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073905699 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07445224 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071335645 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070046283 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06962945 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07107438 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068932907 seconds)
  done (took 2.684460076 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078310403 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06813081 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088623638 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067145254 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067191823 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070115949 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071566018 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075989815 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.0694678 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067497549 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075781924 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069489544 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.07016077 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069056886 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071914689 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069630174 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072238217 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069571827 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07848646 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073861322 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074572328 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076565978 seconds)
  done (took 2.866177585 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081661143 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070521734 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083101413 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069530492 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062733262 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065544597 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071933109 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066834958 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071368263 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068887136 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067768867 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065679181 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070496439 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069319144 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072740808 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070170389 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071785637 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069891275 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071619095 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066117365 seconds)
  done (took 2.680881233 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08768152 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068813238 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068870423 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077279163 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069031395 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069918082 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077205575 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069423187 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069148344 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090882724 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070689908 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071287296 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079959667 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076668076 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071238608 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079350457 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079621951 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079160054 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071285166 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070735747 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090194387 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069779106 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076494833 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069391528 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069360094 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069527009 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069195779 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074162283 seconds)
  done (took 3.361407574 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06805277 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068891565 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065221573 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065867693 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065424112 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064984993 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064991606 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065142848 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067978079 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065337821 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067479945 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067497767 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06789668 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067698901 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067434997 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067624175 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067847916 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065082498 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065031769 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065717917 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067937815 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06794537 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067860591 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065141801 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06564191 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067482845 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064722532 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065186569 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067832025 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065407168 seconds)
  done (took 3.273553186 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077782192 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075374081 seconds)
  done (took 1.4323532 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064310234 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081697151 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06540995 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072017003 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071393869 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068483978 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075402082 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071054429 seconds)
  done (took 1.845031113 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084563032 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079699789 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069531241 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08167378 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078924405 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084996106 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137377234 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069095934 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075051884 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066139954 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082398381 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067053578 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075106261 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068489573 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074272868 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074924995 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065332465 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07469313 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069917831 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066525959 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070079004 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076877788 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071214078 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063331927 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069589268 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090583465 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079668765 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06847422 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07207114 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075769078 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073739345 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061873799 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069470932 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.07075345 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068175234 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080389653 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085663283 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073595984 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079699258 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071030372 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080697871 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065624413 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075351675 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077565904 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081259904 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06962617 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069299505 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062714199 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066651126 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070938794 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062876784 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070917693 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.0625762 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075441225 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072041057 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079006671 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067362093 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069717084 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071125799 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071657651 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075402125 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071101663 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071633232 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069670637 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080589344 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075567055 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079958044 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064969403 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064097901 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068718876 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081100507 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094386376 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077363223 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070920309 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071218146 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067706723 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074258423 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071561232 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07610449 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07725278 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070949101 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076094795 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077684823 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070582695 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072556313 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.078909598 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068463417 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073037505 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068002733 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08727962 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069769931 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068082966 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068051436 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081514149 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074079667 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069988251 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06822484 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077127026 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063877722 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070347378 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071108743 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071040205 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.081013961 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075065813 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075438866 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079226532 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077417582 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069633139 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.0723321 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066423889 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070096075 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068202004 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076966838 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063617386 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07253604 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.196347353 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069802868 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077522502 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067711633 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069127816 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075993731 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074516845 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066758583 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065727994 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071200017 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06853938 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071427493 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077054682 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066341089 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063346326 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063220223 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071593084 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067905137 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072109998 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073019422 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071822151 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06245532 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065884118 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074014343 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077715724 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069098851 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06987633 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074941662 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070242892 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068447002 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074974436 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071278989 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068602888 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074183787 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06930996 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062969239 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071806875 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071508474 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067328579 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072066569 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071789648 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070865851 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069543048 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067467329 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075535531 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069546211 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06735373 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069282853 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066898301 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081068489 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072220731 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06527776 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067497236 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.079579833 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068936447 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069643595 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069272763 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073296096 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070900904 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068612863 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070358932 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073103924 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081136141 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074396489 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070797602 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074847215 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079919253 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068817459 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07176286 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068555391 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069589701 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068839372 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077355009 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073571785 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073550918 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070958198 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064507069 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073698648 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075660659 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067439026 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065676067 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067123958 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071749274 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073969881 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072351044 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068824875 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066270664 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068635999 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071116189 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070776537 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067513135 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067887298 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074266649 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066005588 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074914722 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069073246 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078775317 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071332681 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063313486 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070714583 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066515656 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074727352 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062945717 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065794795 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067257643 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068844629 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067555898 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07059351 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061888526 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074810247 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074777545 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067753702 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06700177 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06697848 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073858521 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06851043 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070606753 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070694981 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073040748 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.207281873 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.069112358 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072692574 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07926015 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068837263 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062186658 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073937552 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067591713 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067285841 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068200009 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067565365 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071747048 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076806022 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076025424 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062280877 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071521137 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066672248 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067928963 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064519843 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073598446 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071898885 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069948094 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075378558 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068877024 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069033698 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072537089 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067788465 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069974254 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070191242 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072957227 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069274049 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070030529 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067842549 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072012838 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067526814 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066050455 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070667871 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069443448 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069115401 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073391968 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068193394 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068523119 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070744762 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068460998 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068693591 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068889716 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068722962 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071849322 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069838596 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068940172 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070645838 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06391947 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076199949 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067135574 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07644561 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069013735 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065621049 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075164401 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070857573 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073168047 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069177391 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.0692424 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069733154 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067107341 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070927473 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075539757 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066258962 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080360585 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076041334 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069144971 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071037546 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068267683 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069910489 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067129037 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069377361 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069824486 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068757696 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068114518 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072688033 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071118919 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068581546 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0699283 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068927861 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068879515 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069552356 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062283829 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06802773 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067878682 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067956349 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077985916 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068931622 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067942144 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067407678 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069378647 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067149313 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065220571 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076209748 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077496293 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068650412 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075249518 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06798028 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070242009 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079331101 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061796973 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066259216 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065412548 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065728911 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07485011 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068326254 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077941373 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068227766 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067125452 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065137581 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068588986 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065715115 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061643319 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064544026 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071106919 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066423298 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066581293 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066922233 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069556692 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.201759948 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078519647 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069153962 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069787718 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070009464 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065716447 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067009878 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067103929 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07197322 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069700905 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066931471 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065364025 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06820267 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069780025 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069822729 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070833659 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070527207 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075200469 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068156304 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071251637 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071192949 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063046828 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072019393 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068342365 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068224353 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067283014 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071889748 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071613561 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068950978 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077224258 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068015376 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06968761 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068586517 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065921845 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068149036 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06785823 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068791955 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067882557 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070142044 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077012456 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065669285 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071197848 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068618475 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06905242 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074133999 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069454542 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070912945 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074522034 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068965666 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070353587 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07673497 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072510134 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071366874 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069502921 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070055287 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074625379 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067187371 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075656794 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068500958 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068524958 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070329015 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066117764 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068923541 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.0684391 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067747973 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07502294 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068191219 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067028196 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067393872 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066457717 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069127978 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071553387 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076035445 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070573781 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070948916 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062880968 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064733306 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069069564 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065902099 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069531606 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070636038 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074014614 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070225008 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068290801 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067160896 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076942926 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074052688 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072096412 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065937247 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071786233 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069224421 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070938578 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068902881 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068586282 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069220089 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072021126 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070062625 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06761831 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075755063 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071981994 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069000738 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070112704 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069498302 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068344508 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062561641 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068333263 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070191096 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072576697 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070139429 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069028038 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078270406 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065839918 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068032651 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070993942 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067237744 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072103584 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062139838 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068435718 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068031636 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067036643 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061950718 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066251947 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.198066169 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072113222 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067960692 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063294583 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07988641 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077316059 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07126354 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068216604 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066542935 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063294727 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062856922 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068144563 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069778195 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069897197 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078680435 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067892748 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066882643 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063017958 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069191208 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071515515 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071422601 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064543688 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063646877 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066829717 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072149786 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074468446 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067410278 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068023689 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072113655 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070509925 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.0659982 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071315276 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065225371 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072014405 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081800415 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069130864 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068774388 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074805584 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075951187 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069378991 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063765314 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068223478 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071198912 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069500106 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068822686 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069516359 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083709815 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071959833 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067521587 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066695756 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071389936 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067213497 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076872934 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069706997 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068690148 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073179038 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06974897 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07639453 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070810765 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075011877 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071954674 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071298953 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06730199 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068223967 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066920612 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067040814 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069096126 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068962715 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072377584 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076076861 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066877358 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078098776 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077056103 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069677341 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064689343 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067134455 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067556156 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063089002 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06864084 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065783026 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06628266 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066636084 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067092153 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069296564 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073140324 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069146455 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06808254 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067690655 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062379492 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070401104 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070191972 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068565517 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064578722 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068284149 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068639671 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072330629 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071979959 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065955248 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071725208 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072395787 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071104149 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065563273 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077171103 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067586264 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069699614 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067232142 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068078615 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069548907 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072176789 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073746174 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070131637 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072391545 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071993824 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069529478 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064778241 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064571676 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072813343 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064717049 seconds)
  done (took 43.91680875 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103140499 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064375977 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063084079 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064111832 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075071289 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063952862 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062891669 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0639849 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064220371 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065917845 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063051936 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062721107 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071431222 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078526311 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07472847 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067431105 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064548192 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065928676 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064894506 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066409233 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074475482 seconds)
  done (took 2.819088262 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074772289 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078983759 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076723138 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083508738 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073053667 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072080888 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076823368 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071520799 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079982598 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07384118 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079472666 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071583137 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073913359 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075024357 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074619087 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072377279 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079654851 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072365044 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071533422 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076668458 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071940975 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076476567 seconds)
  done (took 3.003392767 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068182693 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067537105 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069105155 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063224679 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06709518 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062629177 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070504919 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065466898 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070803108 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066541831 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066735206 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066885655 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06909244 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062555387 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067659781 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064695417 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109876092 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07045521 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067181468 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068019666 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062525314 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069212394 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062341461 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.0629693 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066473395 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07056237 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068096243 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065520126 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067275397 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066777184 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067541158 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065472688 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069242968 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068324795 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066484972 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066422437 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066942249 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067199053 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062321251 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065611432 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067899188 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062950642 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067960868 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068196443 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065651065 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065304706 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069408515 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067639592 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062646581 seconds)
  done (took 4.657573566 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080210372 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111256019 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068758083 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090756337 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083480825 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073863444 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071247397 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090912081 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065093642 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065463753 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083564643 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080290277 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066703433 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071918698 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073882307 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06671592 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068021917 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066278165 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070800071 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067233953 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070739154 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073470229 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080949387 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079527652 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07102968 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065614569 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066171583 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071448747 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07948846 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07118469 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071481097 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072517107 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081815557 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071869625 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066196614 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069308797 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083417059 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067315908 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070215214 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065081164 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069717199 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071391422 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073896212 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083020646 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067210884 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072444364 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06688809 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065935651 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.0818629 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071803019 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076313972 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081863352 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072447491 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.0669971 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072768084 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083504112 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067491865 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065151194 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070168394 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080008425 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066946634 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073271504 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083059132 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070765944 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076402105 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082654146 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07406827 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072919188 seconds)
  done (took 6.516798367 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077841846 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097388216 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085325975 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084445153 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076692563 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077206238 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077544579 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076896489 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077266833 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082005203 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076717906 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116930964 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072524175 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07972555 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077548136 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077430266 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077112588 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077091607 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07674926 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076673417 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077184068 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084437597 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077429415 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084620268 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080996409 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.073075511 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076907229 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076789917 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085070914 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076823159 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089008598 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077063236 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076867603 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084757761 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081659009 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.077202077 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066822326 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076636819 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077577267 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076881398 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072147444 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084425725 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076816056 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072116628 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076855081 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077075388 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084595478 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080812164 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079414837 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081725896 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076906873 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084969548 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076990303 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076997782 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084798442 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088601393 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086885889 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086862265 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077990487 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084668402 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084705156 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086965322 seconds)
  done (took 6.355289991 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085251941 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075560503 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.084012057 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062918983 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066022347 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073540113 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065658894 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065555749 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075516513 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075610115 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078057815 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07285201 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076192821 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077743815 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073373061 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076275558 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073307031 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072942966 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075515748 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074093326 seconds)
  done (took 2.851701762 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075885843 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084312514 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068540832 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073608188 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070683027 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.0729568 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069827478 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070733435 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068150937 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070762574 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077407052 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077719861 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068303898 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073046689 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077259529 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072548624 seconds)
  done (took 2.535038066 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085630196 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074182763 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082116412 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068907244 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068324684 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063815278 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067507617 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063930621 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065844115 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080273301 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067424127 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.0779211 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067293518 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066459688 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064170043 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073096447 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06341275 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065526015 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067089511 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079752125 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071259524 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065902046 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07031456 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06726414 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070073448 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071824369 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066347617 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067405969 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06447453 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067584922 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070248878 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070414635 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064669585 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06630248 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067150865 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065827445 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069004135 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069570617 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074816387 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069317236 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067428799 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071646453 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069242963 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070561008 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065831725 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069581769 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06652551 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072512726 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068105795 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072076366 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069156995 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.071947058 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069913458 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076949684 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072863635 seconds)
  done (took 5.202437956 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081181382 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070962185 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063175586 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065580538 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07008036 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068572984 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072787603 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069667902 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069435564 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066743778 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071720712 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072430257 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069753352 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071291055 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068985623 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070726055 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062804277 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070082691 seconds)
  done (took 2.633827731 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072684823 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067976691 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074172195 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067363663 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067413395 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069596048 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063429034 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066434152 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065893372 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067374935 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06775363 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069394538 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065708627 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069727747 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0675781 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067221299 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069955594 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066046467 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067375547 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063990648 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070515865 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065543409 seconds)
  done (took 2.86468186 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095090944 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08442951 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142208576 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080325939 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086005271 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073271833 seconds)
  done (took 1.932993718 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092688728 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101546474 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067484491 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07080543 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078187248 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071579969 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071401939 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071316076 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079540674 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079039214 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071154971 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080131781 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079887996 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079280444 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076941693 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07714191 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07196992 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071599058 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067621765 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085377889 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07215008 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08016259 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071651261 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071569645 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071396066 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079387293 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080109496 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077186601 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07154447 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080351737 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077383717 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071779925 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081705785 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07776904 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070439459 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08030151 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071619724 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085716055 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077466524 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079032385 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071086116 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077522852 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07996165 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077044385 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079882307 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072144563 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076122969 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07428403 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073992499 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089832078 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080111611 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082287042 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082616195 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08312639 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082440374 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089796192 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079859604 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081786815 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080092917 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080205535 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081969724 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078997961 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08116257 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079337998 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079792489 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079146663 seconds)
  done (took 6.523552865 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10576001 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068151939 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071672519 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077638228 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079390841 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0715633 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072021083 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071943338 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071701095 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06857905 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110241142 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071693921 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079214223 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079461176 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071856846 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071263531 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072104607 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079097816 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068047377 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087271607 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071416114 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078983964 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079209504 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078997286 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077487201 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077035618 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071877033 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07157395 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071789277 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071137845 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07622675 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071992212 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079099006 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06799958 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07930161 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071612356 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071300593 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075819951 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071748361 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07802886 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079580024 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085616 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071753879 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071324471 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0771903 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071356367 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071789979 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068478604 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071440577 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068241154 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077548812 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077275231 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077053346 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078904578 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071786041 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072395485 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071402163 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072193631 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072350586 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077804556 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07940944 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071740638 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087216778 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071904914 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071504151 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079411707 seconds)
  done (took 6.376267922 seconds)
done (took 133.038723536 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18896397 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166927848 seconds)
  done (took 1.723385431 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07094811 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100536873 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079624678 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131367016 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06847149 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101545786 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100915038 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079831539 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067330457 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067769221 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068158444 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070424158 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133698214 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067766147 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067969026 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070345443 seconds)
  done (took 2.726374628 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100901151 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.16322364 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103598833 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066537826 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102159109 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074481265 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066259004 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077082254 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072921099 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067089325 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074683452 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072110431 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066226745 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07187561 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.0724265 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074208767 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066523895 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074530199 seconds)
  done (took 2.848382768 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101514587 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092744721 seconds)
  done (took 1.576292424 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159112741 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134495452 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.208405975 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.354533432 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165964737 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.150815558 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.149987408 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.148258993 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117696627 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.14137304 seconds)
  done (took 3.103153184 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101465956 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.156429539 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.271029554 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119503569 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074020224 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095830428 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121206014 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079954425 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082081448 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081846654 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082097597 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078006347 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.1013686 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074720074 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075378365 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077956569 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105529592 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074302842 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07624788 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07767573 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.102048286 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067276388 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075013721 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074592464 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078926578 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079311149 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067585041 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066797748 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077275752 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076466345 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078362535 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096665813 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078945771 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108258489 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072648718 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109462024 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078712991 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074999082 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077207762 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075305943 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079708407 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080250959 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074577808 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078223094 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067776876 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078654132 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067924917 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067682003 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079469427 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068575224 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079768643 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077811448 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108608873 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06833051 seconds)
  done (took 6.097995778 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105542365 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107515965 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072649892 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114112596 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104824351 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073760337 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10446334 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097408022 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106437405 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071522106 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069724384 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071946095 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083598519 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084915528 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117047665 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108607532 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075290298 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072514521 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107911187 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106927478 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070697891 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098780492 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093158594 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104925322 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069201606 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072213098 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069591285 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071801262 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078251422 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080461797 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071588689 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081868792 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086532674 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079702159 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068589721 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069165225 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070296745 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081512138 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081425156 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08078167 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079108563 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069857519 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070019166 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071187137 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071542816 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069407163 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080189104 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082272287 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080439091 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071027626 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072142721 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069934231 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071081815 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081763399 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079093623 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08251368 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081916052 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070034659 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069996961 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074278342 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082116716 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08090828 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081198888 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071337952 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080439675 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069911749 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082030598 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086385243 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07023596 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071898056 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070152121 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071360232 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071619322 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079509157 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079558805 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071276095 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071133312 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0703378 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081945406 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080542961 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069799079 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079047282 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068798339 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070499378 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071873246 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071323093 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079911494 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081775482 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071475604 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069777239 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071316869 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072099934 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070596579 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079345712 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081348511 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080140211 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079568487 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070138898 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079436181 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079307966 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070384374 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079678306 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069770297 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07084825 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.202047003 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081698408 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080309612 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082278161 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072991237 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070573027 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080852169 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082339488 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070908416 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080866675 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082156108 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080946755 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.07048519 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082308546 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071429143 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081848032 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071110573 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082684266 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07081031 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081310138 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070637341 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.07021916 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070794509 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080939572 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074633172 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070699631 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071316323 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071402604 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080528864 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084647719 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071806858 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079760042 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080300057 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072567175 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080274655 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070436421 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080914042 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071430082 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072398261 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069192015 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083775981 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070838864 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070752409 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071405481 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081912954 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06998319 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081332813 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080369572 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070004304 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083053913 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081216637 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079627201 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081643691 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072393949 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070712478 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07020593 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070752383 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080295688 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081538412 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072558676 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070378851 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080254059 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.081182749 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068930272 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080080322 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080018206 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079920321 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07058107 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071391056 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082408404 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082089431 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080161602 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080054001 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079983362 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070150315 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07934886 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079965046 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070235244 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087121075 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07053994 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086629431 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08263449 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078739766 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081082617 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082686107 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081884678 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082331278 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084971171 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070443878 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070056252 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081581103 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069938189 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070985577 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079524089 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071148891 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071035862 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084687598 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069660378 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080438594 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06847508 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078934772 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067663386 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070579896 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083869543 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069480035 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.202665495 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082052699 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072516864 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081104886 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082608841 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079958029 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070030055 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072655831 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082238635 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.08118326 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070845887 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071494433 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073098943 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.0810078 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079190453 seconds)
  done (took 19.09466849 seconds)
done (took 38.561046069 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21599084 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155711891 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.176101049 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120579016 seconds)
  done (took 2.145659977 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118507573 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103326104 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094770962 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066814642 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101297601 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066679636 seconds)
  done (took 1.964136292 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315900525 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21466675 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.191859422 seconds)
  done (took 2.13001884 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.204285996 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191913546 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.422302674 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.266058558 seconds)
  done (took 2.604538095 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.147645227 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090418277 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068758159 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085589855 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136546594 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163096799 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102460722 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127885645 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079979319 seconds)
  done (took 2.466164546 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.152127447 seconds)
done (took 12.873758145 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.270223646 seconds)
    (2/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.234300372 seconds)
    (3/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.115127334 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.133579678 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.096537014 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096677133 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.103098507 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.07416205 seconds)
    (9/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.210238163 seconds)
    (10/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078349276 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.106495691 seconds)
    (12/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.080617783 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.114517755 seconds)
    (14/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.206365334 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.08205253 seconds)
    (16/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.076230428 seconds)
    (17/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.209657326 seconds)
    (18/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.084177584 seconds)
    (19/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.085027142 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076208581 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.133205305 seconds)
    (22/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.189258933 seconds)
    (23/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.083813842 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.118594276 seconds)
    (25/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.17258041 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.098513726 seconds)
    (27/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.238631054 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071834078 seconds)
    (29/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.11106648 seconds)
    (30/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.183894864 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.198846233 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07440796 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074386044 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.08071949 seconds)
    (35/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.202438831 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.099272395 seconds)
    (37/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.196810946 seconds)
    (38/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.098054525 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.077371938 seconds)
    (40/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077131847 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095829645 seconds)
    (42/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.113807689 seconds)
    (43/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.078724818 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054120479 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066561483 seconds)
    (46/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.22469264 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.156298752 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077125553 seconds)
    (49/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080336047 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.108789084 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.199269878 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077723196 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.077199486 seconds)
    (54/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.146086121 seconds)
    (55/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06929278 seconds)
    (56/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.193970049 seconds)
    (57/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076454554 seconds)
    (58/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.20249844 seconds)
    (59/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093842496 seconds)
    (60/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074324677 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06863551 seconds)
    (62/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.103705637 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06689719 seconds)
    (64/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070862766 seconds)
    (65/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077888039 seconds)
    (66/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074708026 seconds)
    (67/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.14854049 seconds)
    (68/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.167055556 seconds)
    (69/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.069022569 seconds)
    (70/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.105736486 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079438796 seconds)
    (72/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.134544411 seconds)
    (73/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.159361366 seconds)
    (74/309) benchmarking ("sort", Int8, false)...
    done (took 0.148244093 seconds)
    (75/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072164374 seconds)
    (76/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.071170267 seconds)
    (77/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071527011 seconds)
    (78/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100448478 seconds)
    (79/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.185981586 seconds)
    (80/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067130549 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.185402291 seconds)
    (82/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.117758309 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.070373459 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.242756349 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118208984 seconds)
    (86/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.110788094 seconds)
    (87/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.082304656 seconds)
    (88/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079294596 seconds)
    (89/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07427197 seconds)
    (90/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055772692 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.101423189 seconds)
    (92/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.207025414 seconds)
    (93/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.085636975 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120114389 seconds)
    (95/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.102327383 seconds)
    (96/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.085664622 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.136892662 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13702943 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.095770516 seconds)
    (100/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.07475829 seconds)
    (101/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.204965072 seconds)
    (102/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054851292 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070037357 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.162386187 seconds)
    (105/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056701458 seconds)
    (106/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076542466 seconds)
    (107/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.334163338 seconds)
    (108/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.199458264 seconds)
    (109/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.05537274 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077404511 seconds)
    (111/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077635282 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.201093277 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149264471 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.151474496 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.077561882 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.095040643 seconds)
    (117/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096965791 seconds)
    (118/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066660646 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070706113 seconds)
    (120/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.11666663 seconds)
    (121/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.167526875 seconds)
    (122/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078996692 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.142813344 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078280578 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.100419776 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077644433 seconds)
    (127/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054590448 seconds)
    (128/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.163070699 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069754369 seconds)
    (130/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.19199708 seconds)
    (131/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.06692099 seconds)
    (132/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.11595528 seconds)
    (133/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.080583523 seconds)
    (134/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.167408545 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075416823 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.177516087 seconds)
    (137/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054986454 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075918968 seconds)
    (139/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054711126 seconds)
    (140/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054018312 seconds)
    (141/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.162957178 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069350814 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076623166 seconds)
    (144/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079721933 seconds)
    (145/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055596965 seconds)
    (146/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082834955 seconds)
    (147/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092702835 seconds)
    (148/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.055239886 seconds)
    (149/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054368976 seconds)
    (150/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077000304 seconds)
    (151/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.164859034 seconds)
    (152/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.055323141 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069352128 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077402949 seconds)
    (155/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074617347 seconds)
    (156/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07972104 seconds)
    (157/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.068675345 seconds)
    (158/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054577793 seconds)
    (159/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.202920758 seconds)
    (160/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054126815 seconds)
    (161/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.163655878 seconds)
    (162/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.06897125 seconds)
    (163/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073672665 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077956863 seconds)
    (165/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07683562 seconds)
    (166/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.08060338 seconds)
    (167/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.056178269 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.071390293 seconds)
    (169/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.056321725 seconds)
    (170/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07998526 seconds)
    (171/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069182753 seconds)
    (172/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069821297 seconds)
    (173/309) benchmarking ("sort", Float32, false)...
    done (took 0.137344953 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070832963 seconds)
    (175/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077427479 seconds)
    (176/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076249856 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.097335802 seconds)
    (178/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.1037818 seconds)
    (179/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077007557 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069015943 seconds)
    (181/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124494396 seconds)
    (182/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070672527 seconds)
    (183/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054366223 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.069326986 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152842099 seconds)
    (186/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.074019764 seconds)
    (187/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075761087 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.07033649 seconds)
    (189/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055392912 seconds)
    (190/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076270683 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076400241 seconds)
    (192/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.168492134 seconds)
    (193/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054202114 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115343622 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067505329 seconds)
    (196/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.209610809 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077983156 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.186924564 seconds)
    (199/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.065521244 seconds)
    (200/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.055307317 seconds)
    (201/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.067994814 seconds)
    (202/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.105221494 seconds)
    (203/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080647599 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097437144 seconds)
    (205/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076951002 seconds)
    (206/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079140498 seconds)
    (207/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.065533531 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.096628903 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.14506371 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068411295 seconds)
    (211/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070182778 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.073559341 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097750199 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.189732074 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.147416708 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.193591564 seconds)
    (217/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067523594 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.094406807 seconds)
    (219/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09696435 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079382892 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077924884 seconds)
    (222/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.055360031 seconds)
    (223/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.070352159 seconds)
    (224/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06596302 seconds)
    (225/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056720724 seconds)
    (226/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070896573 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120074292 seconds)
    (228/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086251164 seconds)
    (229/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071849485 seconds)
    (230/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.054407058 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069926513 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094485924 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069948508 seconds)
    (234/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05499743 seconds)
    (235/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055949243 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075575136 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.190121567 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.093927962 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067595717 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150147433 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.057693036 seconds)
    (242/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07590719 seconds)
    (243/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074060721 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068920073 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137395998 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145151826 seconds)
    (247/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054587651 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.09805263 seconds)
    (249/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.064705973 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097573463 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069904119 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.055203717 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069813896 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.057406394 seconds)
    (255/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055354625 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.115634796 seconds)
    (257/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.0556501 seconds)
    (258/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072972632 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069343018 seconds)
    (260/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06968695 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054932431 seconds)
    (262/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055100477 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068916618 seconds)
    (264/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068032695 seconds)
    (265/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.116741161 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076374745 seconds)
    (267/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07233137 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068840547 seconds)
    (269/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054725027 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078217814 seconds)
    (271/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05573479 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091936585 seconds)
    (273/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.078177145 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056938604 seconds)
    (275/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083528084 seconds)
    (276/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073100859 seconds)
    (277/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.055913707 seconds)
    (278/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054655948 seconds)
    (279/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05538234 seconds)
    (280/309) benchmarking ("sort", Float64, false)...
    done (took 0.13521678 seconds)
    (281/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.056599718 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091553765 seconds)
    (283/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.070580937 seconds)
    (284/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.080261694 seconds)
    (285/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054793324 seconds)
    (286/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.05669324 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077585234 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067731217 seconds)
    (289/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054654471 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093614917 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067911417 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077679418 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.143831766 seconds)
    (294/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078344595 seconds)
    (295/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054979227 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075555935 seconds)
    (297/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071131601 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069765062 seconds)
    (299/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05555911 seconds)
    (300/309) benchmarking ("sort", BigInt, false)...
    done (took 0.19437887 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095997829 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074796793 seconds)
    (303/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055880079 seconds)
    (304/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086975468 seconds)
    (305/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070970105 seconds)
    (306/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.055636472 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069253953 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083126786 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.182981806 seconds)
  done (took 32.376099404 seconds)
done (took 33.797365595 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087518493 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094812778 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076910592 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096572907 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.086234176 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.081557685 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076861082 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08336841 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085119512 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.087282859 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084160383 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058100246 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078860389 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078728192 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079181461 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097079927 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083131807 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077863891 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077891905 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069075397 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077364782 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069485323 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071493709 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057838365 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.08298188 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076087952 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076481581 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079131468 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069019643 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069357411 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072969754 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077577082 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069338133 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082689822 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076256109 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07744841 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079651883 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080985914 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071406474 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069381069 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079049405 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068999386 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07697467 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077955163 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075644681 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075327777 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076962859 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081740629 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096605871 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072257177 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07914099 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080580955 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080505286 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077719647 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074252978 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077693634 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074898834 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097154503 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07796974 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072109034 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078267904 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078772777 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075341726 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07743322 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077552175 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079294716 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07940544 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.0754539 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079167603 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075853456 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068993513 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077274096 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072732781 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069444565 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080457891 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081721435 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067938911 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075506416 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077095535 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075399946 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068745062 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071860428 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.071171231 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076039934 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071615519 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.058435963 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073451877 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076107041 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068383379 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077419568 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076013938 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.077159551 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070556253 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079833392 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06837765 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074308903 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069771453 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069489246 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071397997 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073753141 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069034468 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071844783 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078812847 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071349936 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076011747 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083999461 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069364581 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076083132 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06914265 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068557932 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084121424 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079150232 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069213851 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071986521 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067653631 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07671252 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068469294 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068951357 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068869069 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069100024 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075125392 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068932514 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072295628 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075905568 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082018109 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068511607 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073027939 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07075984 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068043859 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074862779 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068800603 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.203240927 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070497442 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064131772 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070658221 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06692352 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075269764 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070960408 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076606153 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07087601 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076636906 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07552825 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075629865 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075014044 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068289757 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063142839 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073004564 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071900959 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.07211765 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.07015579 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071463278 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070208679 seconds)
done (took 13.100089775 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067939594 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142302509 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099594431 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100445327 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.09088705 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.07099442 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080962532 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10584228 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071849366 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.106388361 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092490188 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091191766 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.120699859 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06887987 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069639042 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073929437 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071792895 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.086090939 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.105092297 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092429202 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.121139187 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068905996 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.097940137 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.094469329 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093430727 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.098023633 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070776197 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071575913 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070738896 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104337071 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089905889 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071345892 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068150348 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100741735 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097335873 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08876409 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070433137 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.088619835 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070840331 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070194298 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071622711 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104675225 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.085598629 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.086623688 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074046047 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080085615 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071015431 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.088766064 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095258643 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083808334 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.091108168 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10697115 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073224418 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.089004392 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067988765 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.091243755 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.082032237 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.073015428 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070232128 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078227947 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070433813 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073192021 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085640203 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08501694 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075162894 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.090415165 seconds)
  done (took 7.144111628 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085489121 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092815276 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085411518 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086381693 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069809536 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070068797 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070787483 seconds)
  done (took 2.075459251 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067891202 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089509127 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091619585 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.095149114 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086393561 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092466218 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080140044 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070672658 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092694829 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072013605 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092403602 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.106724209 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074374573 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078491696 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09670546 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070338979 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095955469 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070380862 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073973485 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.096684039 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073167767 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100664145 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074085434 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.071218519 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085922169 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070776555 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120285931 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075401538 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071871293 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073612657 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068762885 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.113196214 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084969024 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079198642 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070419173 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085915684 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086104464 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068949305 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.088033813 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.080145673 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085646523 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070992198 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071791429 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068658568 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075520146 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081316352 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071868543 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071433417 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073125003 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091904763 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071523115 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085240744 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073855494 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077193226 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072035364 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07781647 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08100064 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071173963 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091620694 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071831927 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089782491 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08878748 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085380483 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087778295 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073118767 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084968319 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085238608 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073728358 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072708303 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074858229 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088379388 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06840006 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072447872 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081922105 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072757447 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095296252 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.095323452 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072548242 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085285238 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071722178 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070800856 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071065393 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094814567 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076315126 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070800787 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075441825 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074453112 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068864373 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069716444 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074934434 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06879767 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072068894 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073706346 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073591726 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074000047 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.088305452 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073077378 seconds)
  done (took 9.268502639 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070621139 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06982048 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072969355 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071906634 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07297517 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072347261 seconds)
  done (took 1.967152429 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095603874 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.0710181 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082118277 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07580688 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109795291 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.0914856 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091930781 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.083117588 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.089046557 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.08354785 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.092560474 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.093418345 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.097400625 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076327475 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091892117 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075562988 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.092951158 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080044115 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082832489 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077008571 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.09138394 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076475268 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077547798 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086842529 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080460489 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07623719 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082680939 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083413531 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083413628 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084716166 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077332245 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080546417 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075490334 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083321128 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.092420537 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075487498 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076368329 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081445207 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076560655 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080287536 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092307737 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07704103 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07880443 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081576263 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.083629749 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075568396 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081385858 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.084056845 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091819877 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081164008 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081104943 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075685 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079532132 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081150149 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075185918 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.083324674 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081327966 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.092265889 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076330852 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075478507 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073202978 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080220785 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.083847739 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080481 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08316087 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.08117031 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075273207 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076771409 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077766667 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075992386 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081196619 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073260072 seconds)
  done (took 7.442544599 seconds)
done (took 29.402090713 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.538271568 seconds)
  done (took 2.040910039 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.620378881 seconds)
  done (took 2.14659374 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.50068185 seconds)
  done (took 8.02273103 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.419214943 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.543606143 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.741006507 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135042693 seconds)
  done (took 3.407819156 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.716558716 seconds)
  done (took 2.251384508 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.219269586 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.206296656 seconds)
  done (took 1.971994852 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.3800578 seconds)
  done (took 1.904542937 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.143000522 seconds)
  done (took 2.667809267 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262563284 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.17826835 seconds)
  done (took 1.96815664 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.483895979 seconds)
  done (took 2.011929719 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.891946093 seconds)
  done (took 6.422564894 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215650496 seconds)
  done (took 1.793638591 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237198046 seconds)
  done (took 1.766570019 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.741465361 seconds)
  done (took 3.273019708 seconds)
done (took 43.18326083 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08187577 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083199329 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083513999 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081051484 seconds)
  done (took 1.849490265 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078733951 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075518545 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077975991 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074335254 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078525139 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075229886 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076253963 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077443082 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074034003 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076247458 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076658199 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076865305 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079374153 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079071199 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075528168 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07992597 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081287224 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077185762 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080230776 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077871743 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075142632 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079801696 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079553115 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076092258 seconds)
  done (took 3.394349332 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079007566 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074692122 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076586636 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074097437 seconds)
  done (took 1.842345213 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079364279 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094993944 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094031738 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080143021 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094704378 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088147737 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071311796 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070887211 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072974917 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079320766 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069898775 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.0982452 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090893187 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079656464 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081529752 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068109329 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070374173 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091228074 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082729769 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082659232 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074789547 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082377567 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072681511 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.094109573 seconds)
  done (took 3.497601573 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088317722 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107362924 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086486273 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094383783 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096169538 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070039776 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.09276812 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096435284 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.133022138 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070331137 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07506717 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.0705009 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.078306899 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06963362 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086660511 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11283614 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117174066 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072991995 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10324164 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070016698 seconds)
  done (took 3.334402117 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074618791 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071529022 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069890051 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072805297 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081151375 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077261636 seconds)
  done (took 1.995841192 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069756097 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.07029129 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071234758 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071927366 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07675144 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071235058 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070290127 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071873566 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072966925 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072473329 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071716597 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070540445 seconds)
  done (took 2.405139759 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.205280596 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069624764 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070598919 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067459627 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072427467 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069363356 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086630242 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072639722 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.098541955 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071418447 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071445372 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073003275 seconds)
  done (took 2.574381544 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211981635 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07914044 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250804258 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158008878 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113835094 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118606935 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115055988 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115852311 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.145463244 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103756589 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171448394 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171090554 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111038358 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140626607 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094006133 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106106233 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159187892 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166904038 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108307529 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17002118 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14932624 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129044102 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154543377 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104137913 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108979683 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125229575 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073890742 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082935583 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175679328 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13631741 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14748643 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114578633 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094848919 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17909726 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174406489 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143928367 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149792722 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08654603 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.108395546 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.136352263 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202163911 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090651474 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164210766 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251381435 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086775425 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141183718 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12464058 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.123909326 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.111323457 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095830878 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152693534 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192401869 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.144399348 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093086366 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130746536 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120645078 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.121144764 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120900769 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191795651 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169329141 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135521941 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076238786 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114627462 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160031998 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135225646 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110077602 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127245515 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094117624 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138501908 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157499751 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123143961 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148307407 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.121342636 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094184489 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124740675 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146576169 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133093383 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165325446 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128830814 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077322956 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127783982 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103714889 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082544491 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148268148 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077188423 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178129901 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100911815 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110972674 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127403922 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11016946 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111484187 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163146943 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147691838 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103874942 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.210372629 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10825205 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123928143 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149842526 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089883257 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111428029 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121594041 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078894017 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139389854 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077260612 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127883355 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080504804 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127147965 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135344557 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078904137 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125740623 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105895287 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101718685 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135360978 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162299157 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089478396 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084076403 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172284534 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124568493 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105679927 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146812848 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158993884 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10267041 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104071755 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151696834 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182515791 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091741775 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165663791 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108441001 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0851631 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.089349338 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12557975 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113362802 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125206281 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083384867 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120080872 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171439803 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076175262 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097261911 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136882852 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080772258 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081989375 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106545811 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106438779 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097056082 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101591699 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105206207 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138109221 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126878455 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109542341 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124629084 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245622576 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176626715 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091010676 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.104165231 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106846539 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072499822 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138805493 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159779149 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081258708 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165807786 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124988828 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119096872 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119968479 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085191178 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144080834 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081626944 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072343528 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147166399 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110278299 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112861694 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.15277869 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118243318 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128183484 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121246166 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136974051 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134185495 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132324745 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107825272 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091601484 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11412226 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129236524 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076980402 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094417201 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083910128 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1098437 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102162847 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087833491 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14636636 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129414288 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115808571 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117121675 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101930541 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154495291 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080906504 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138326976 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.124852668 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101350029 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.159563941 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157526865 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132963872 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100746442 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139889658 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071486734 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075761452 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089533597 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122225273 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228819525 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086073725 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118470938 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15007829 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131490282 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138029204 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125612371 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122512599 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158340171 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07178398 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119883304 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148909366 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124034131 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.106845193 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091899296 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100944776 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145512723 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109757689 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18826352 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120201621 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128892367 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158556903 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105642921 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081056889 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104025141 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138719654 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105898321 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14677163 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100051408 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08945155 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110140264 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075649104 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101225395 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12852079 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120725333 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136972912 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117536605 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137546854 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081622716 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120677124 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127246429 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127017321 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066192941 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123214888 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164315818 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095790333 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118512806 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155509791 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080460282 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.137917535 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181824191 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2909752 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087660647 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110677893 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122503414 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131228926 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121158524 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142169287 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109460546 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137685276 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110764175 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086814833 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090301539 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099375444 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110708045 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.100536532 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110871417 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.121109628 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.101272239 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137537755 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110808993 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115264724 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123171865 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10350669 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096146022 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100095373 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179093114 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120706096 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174696012 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100791682 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147349539 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16623769 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075937318 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080354065 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079289767 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142196576 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085573312 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133246346 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.110581298 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119596712 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128045338 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150221998 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100788942 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072478807 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114085776 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137520248 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126934055 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100613941 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10610119 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167031656 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104307312 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080113211 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115126667 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11775033 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104427669 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174949711 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062595697 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106241578 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07698037 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.226979423 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130674448 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157075678 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082697465 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104566893 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12059689 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115381514 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130603211 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102788865 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114062587 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129627371 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15314136 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13080161 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091254348 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114681035 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129422125 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159806766 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107219017 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09913867 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179619276 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157309553 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16275772 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089278203 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115164234 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115116974 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109873086 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140458035 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084972133 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165698329 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083797614 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138135304 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104886763 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091071233 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131193856 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.11049018 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089368053 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150575668 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121907198 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086776671 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081773501 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123184275 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125366413 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112285492 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.0801696 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144419622 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077492284 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138272113 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164100233 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082350212 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107300611 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099754289 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082827696 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260067005 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104239397 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090277247 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.104561326 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180626698 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.092114744 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154825856 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139114402 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118223193 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141811952 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108208735 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644837522 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082820744 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159424121 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122928692 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180986049 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102645127 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121658696 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115021022 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129584394 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15240682 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109480125 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.183925313 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134578661 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117888485 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080926675 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103581374 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106111801 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088778637 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108848119 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114004637 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117823868 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094398054 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117310582 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127190217 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083490756 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097265918 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158580913 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118656632 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147480523 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143979684 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087364757 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119387825 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145046656 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084995333 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.127301951 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156500043 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107621747 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101608476 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084863684 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.106894607 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31224692 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074631506 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163799432 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123786201 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112530079 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114065189 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115943299 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134295809 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109238806 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125821022 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096284587 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.11122746 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115186728 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082781885 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078957618 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107265959 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113688915 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098686795 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099458949 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100554938 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156442238 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073618474 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101232285 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119892593 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150804162 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181842257 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093406332 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087868982 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125485889 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120025077 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.118005604 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127270224 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083961328 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086917833 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08497806 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082331051 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.115217126 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118534537 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121135855 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115817886 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170573128 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084844326 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232146412 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097316885 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107063007 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070835361 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080204796 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097967084 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100149553 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109460987 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112428623 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166889497 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.101461918 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.095584075 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096186696 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07742384 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087250438 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13342777 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1144433 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12308366 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249623503 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064411613 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110395913 seconds)
  done (took 60.67511372 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109427267 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084421963 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095489036 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146814872 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124150918 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204483536 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155588437 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190752688 seconds)
  done (took 2.752604215 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06961313 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097013673 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106119142 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085815602 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069140395 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06996281 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234865194 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.087517319 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068182896 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100760144 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082958721 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070509558 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.430783613 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069869302 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071974199 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063616116 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068410689 seconds)
  done (took 3.481425884 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390876132 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.615577535 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.353648214 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073917486 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.441080668 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089381448 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.113585884 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.133465878 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074399874 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.524978719 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.405699488 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125172102 seconds)
  done (took 17.984392201 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076072137 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071185911 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085842569 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08760918 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.076532289 seconds)
  done (took 2.034231123 seconds)
done (took 109.392011611 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083285271 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.614600902 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05450936 seconds)
  done (took 2.335540328 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084701702 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087429127 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087159728 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08656998 seconds)
  done (took 1.991413207 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075326744 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077671193 seconds)
  done (took 1.792777144 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.235153973 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164248563 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097637959 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084363989 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080117324 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081420673 seconds)
  done (took 1.890314397 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073732271 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076201577 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074062938 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078272977 seconds)
  done (took 1.940616878 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07784763 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055925559 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058023213 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.061759767 seconds)
  done (took 1.892971797 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088120827 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08118191 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080255716 seconds)
  done (took 1.892724438 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104399679 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087959814 seconds)
  done (took 1.834764755 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083526605 seconds)
  done (took 1.726705527 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097018632 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103147696 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134987812 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113049713 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.1450794 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115797151 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.090267186 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.09126673 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080901851 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.092012578 seconds)
  done (took 2.706308615 seconds)
done (took 22.222482693 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080028855 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.463397625 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364385688 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092568609 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672641079 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361082025 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.993881046 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098952073 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121380675 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071961003 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090371194 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653138344 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983410666 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.417499436 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.966186523 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.420950437 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652125118 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072727115 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071930989 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072337278 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973659837 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072117627 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07237967 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072764507 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653895111 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375705266 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070074158 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.420919597 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069885805 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071562195 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356848261 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070117838 seconds)
  done (took 16.630511977 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071968809 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121157011 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077612953 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089835553 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075061085 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074039863 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07642165 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.074163999 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12679486 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072271569 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091095058 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07210374 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076673612 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.090024166 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093481214 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072141939 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073610797 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073126911 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072991474 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073026603 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093527422 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071851777 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073409775 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073475746 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072950065 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084450789 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070150672 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070864148 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070806241 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073586983 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074218409 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071471259 seconds)
  done (took 4.203948528 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115415382 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12633263 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077954624 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110344143 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118907796 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07467969 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150314691 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100002324 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132916966 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072571086 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091521742 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072105876 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108025559 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073811866 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094353156 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.0728645 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073458837 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073343339 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072815492 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072026703 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089762337 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071081379 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069526438 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070233139 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069901019 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084019566 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069965617 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070017671 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071063386 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071815269 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073137077 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070131133 seconds)
  done (took 4.420645177 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073751077 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077215775 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085165206 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088722304 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074059667 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076010851 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077367216 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.073769591 seconds)
  done (took 2.284044825 seconds)
done (took 29.188732935 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080324719 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070123763 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.077476161 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08749988 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077461492 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.084067781 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071891218 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.079810052 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076809854 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077956184 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.08004164 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.072316843 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075362046 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.07168296 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078577361 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071570769 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084600146 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075735828 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084301449 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083985015 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074167162 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077177465 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079320549 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083317319 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084075964 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08399134 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08187937 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077078068 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073365614 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074702672 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081753659 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089724953 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072302527 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084293266 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071570304 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072220567 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075795319 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072253119 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084385526 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080806002 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07343869 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080625655 seconds)
  done (took 4.928108946 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089664634 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.098632331 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089842375 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066002635 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.072547656 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.070002392 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094465319 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064854563 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063801116 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.094194983 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059870762 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06411973 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.067715221 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057870943 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.064793619 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061118437 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.067154243 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059635994 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.064620567 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.064258391 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.096619631 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057385488 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081695361 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.068064462 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059998619 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.066379146 seconds)
  done (took 3.533826644 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076109052 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087604948 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092581951 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132535726 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107578493 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081598552 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080240981 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09687938 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09096672 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068180576 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072688387 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096544898 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093243951 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075604995 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069025091 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087584557 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085341047 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070086306 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077254599 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097913291 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087366446 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087901158 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100484416 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088599836 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071407757 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074131643 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075567951 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086742588 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.077086701 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081478081 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.076333189 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076065599 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074005779 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084430374 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075474083 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073708148 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09715607 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082034563 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083415331 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072713013 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080159154 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073527645 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096575376 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130425179 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071758594 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078660805 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.085829221 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08130279 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071940343 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.0920931 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082466934 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070706983 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073105844 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070207799 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069845221 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084892953 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07387352 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073511956 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080885039 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077463631 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.095925441 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075254197 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087347256 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070683855 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077352455 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068463489 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070013708 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067940927 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099067449 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072806068 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117106654 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072761932 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072874071 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082230118 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07991772 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078825323 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072719867 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088696482 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082955803 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075648788 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081571918 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075492794 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074276707 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096839044 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074738573 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074987834 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072401388 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077905245 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074545063 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072662776 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085780553 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.07093943 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074652137 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088211384 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070815224 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071374024 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075376182 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073405392 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06858178 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080277924 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074192439 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070024685 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081723335 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071747727 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074966464 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.085394797 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078543151 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071122285 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07618529 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077798728 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.07251157 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073111314 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074512662 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073155131 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.08063967 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078890875 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076359453 seconds)
  done (took 11.088378117 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167144349 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159114577 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071438664 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150719148 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078774122 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083956892 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.158634125 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.101422086 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072519818 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072599708 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073280193 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.117659813 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.112744198 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12554274 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083874077 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072320351 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089795472 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.122204099 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.160221369 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148963502 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087056118 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079177112 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071726975 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070657141 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072763616 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080526937 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087097229 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078683047 seconds)
  done (took 4.54795563 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082966442 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.108064748 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.078985238 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.096622848 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.0966263 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07250132 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075018288 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074086452 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086021255 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08345414 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071795706 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078485643 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079283838 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076127129 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072822167 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079984941 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07975292 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074216929 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076340952 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078516343 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083654212 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096699881 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076820555 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071524222 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078054745 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071872422 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068307623 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089653752 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073103402 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.101597116 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070613569 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078041643 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087568721 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073828789 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072578295 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072459988 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071913733 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072181811 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074287655 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070400208 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070651527 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061353964 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071758083 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084604815 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.080212224 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060540226 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077777544 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077712973 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07740797 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069815397 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075120214 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074817331 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.0755603 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079958008 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076859368 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07752358 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073591076 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.079301891 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081473936 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071944575 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069400202 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070474474 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076900164 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070339195 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080982195 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077637977 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.07045609 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071939196 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073990272 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079369538 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072632389 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076446977 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069394691 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074220792 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076976582 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073662839 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072937619 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070762933 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071712226 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072572847 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059028685 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072392894 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057087516 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075625872 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070342641 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070435881 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072222779 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077284222 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084512338 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.073296969 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078320284 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.07344207 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.07163293 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075413229 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.062086048 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072138941 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085049625 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084043137 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069100873 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067058506 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082833751 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07403384 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068186752 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057131632 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.0741811 seconds)
  done (took 9.642289098 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091732838 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071607696 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086377793 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093310309 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091587773 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076453417 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079234279 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070838696 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084702289 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075451014 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07812369 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069096703 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079823367 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079398244 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071217753 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079648566 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073668813 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086292594 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084509673 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069854321 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080598706 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084987148 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092298171 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083576602 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082615052 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083830677 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091614126 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079580387 seconds)
  done (took 3.971068634 seconds)
done (took 39.36559799 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.739197604 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.995874702 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.737407855 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.141498778 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.833107747 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.943198282 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.821239724 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.727249273 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.938942918 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.768124062 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.929364125 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.866199915 seconds)
done (took 65.109978582 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.74940879 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.866354168 seconds)
    (2/2) benchmarking "String"...
    done (took 1.954718078 seconds)
  done (took 5.486873201 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.934650702 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.288290212 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.978234409 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.724380615 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.73168617 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.069141852 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.55787338 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.238475571 seconds)
  done (took 30.253765037 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.897545812 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.950672579 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.443811065 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.474954783 seconds)
  done (took 15.48687112 seconds)
done (took 62.662232242 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.746025355 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.753960902 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.739998218 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.708865203 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.784833783 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.737560121 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.909797372 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.732149202 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.7258682 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.714225293 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.72409066 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.146027447 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.735067272 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.853117466 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.733679618 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.732202711 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.751499501 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.215522049 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.879563591 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.738770663 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.74021123 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.737290968 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.727130637 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.735351522 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.779304454 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.720307082 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.104810743 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.737766269 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.330411252 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.726684756 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.748864155 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.049981388 seconds)
  done (took 201.866593096 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.721097965 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.647145269 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.715650616 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.757192327 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.104584318 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.907601634 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.831268485 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.141864056 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.724548671 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.722752616 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.867583988 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.724684811 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.895102898 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.673521621 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.750504039 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.723460282 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.898766233 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.913812215 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.754585692 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.900460836 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.748714518 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.825209464 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.756149161 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.85576334 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.759244864 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.805533486 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.886274906 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.752049608 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.915951178 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.8590122 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.767846925 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.774569354 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.951579591 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.603392735 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.747750718 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.73871612 seconds)
  done (took 167.785390219 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.122112094 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.727889718 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.726537955 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.727409505 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.725952757 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.740136009 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.726869498 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.851308354 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.854450078 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.324721408 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.175688506 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.782258122 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.531623136 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.726433568 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.793280483 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.739477492 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.730587303 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.727490533 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.741914512 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.727924996 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.752073344 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.730218366 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.853032803 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.740034402 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.734670659 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.727329308 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.733377073 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.098783077 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.728604438 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.885501907 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.728231213 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.733857398 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.983916701 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.729806081 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.730222683 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.569814923 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.264088884 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.810653462 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.730686525 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.735236999 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.728708502 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.946175768 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.728707452 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.730464974 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.73247645 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.856987056 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.72799173 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.850290401 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.733456612 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.209132738 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.729396307 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.729442227 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.461333132 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.304105004 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.729173121 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.72874296 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.731101151 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.729738939 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.729668874 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.735947339 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.440133938 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.80368779 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.729580816 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.731580934 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.733492155 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.735888008 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.729754281 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.846074499 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.730636675 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.168706059 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.786755274 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.846804672 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.851018012 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.733109643 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.796453567 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.823772068 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.730276268 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.728851613 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.72999757 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.730487758 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.811072227 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.73083714 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.862231925 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.738467178 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.732220655 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.783288379 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.799813411 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.730860889 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.574534127 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.734789997 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.730620695 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.991803299 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.797657248 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.734391144 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.731329667 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.73214952 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.866443607 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.855361139 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.44502781 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.733719582 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.488432067 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.734707371 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.882035866 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.732226769 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.862228394 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.732268617 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.81244159 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.737117779 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.734337012 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.731347882 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.764051747 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.73220602 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.788424694 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.735210852 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.106974459 seconds)
  done (took 396.71450702 seconds)
done (took 770.209739544 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.399092886 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.354932557 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.466283421 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.378882845 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.353474231 seconds)
  done (took 13.624272 seconds)
done (took 15.29423791 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.820426293 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.82767388 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.758166069 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.823881231 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.754056889 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.824171896 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.808296985 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.758437592 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.791170449 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.759420799 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.79326553 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.760975608 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.744481188 seconds)
  done (took 24.898522674 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.970266394 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.971669888 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.807062856 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.973930884 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.782408456 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.974760453 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.907857722 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.888685998 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.890345474 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.749792446 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.746992011 seconds)
  done (took 22.337890087 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.971101991 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.977061941 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.812290021 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.973803915 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.784456866 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.97488175 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.900410618 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.889938145 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.89147352 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.750362506 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.746680981 seconds)
  done (took 22.345077985 seconds)
done (took 71.253086981 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.742899758 seconds)
  done (took 3.417716456 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.767546237 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.921828785 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.751038274 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.74630196 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.742503136 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.744178289 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.746505065 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.742583634 seconds)
  done (took 15.837149196 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.744111111 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.743773353 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.742638273 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.742680805 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.742286495 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.740025085 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.739497277 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.738209417 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.740036753 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.740780522 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.740588267 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.742273414 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.741285114 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.743101704 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.744272862 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.74347887 seconds)
  done (took 29.547112599 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.74218012 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.741181887 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.740421931 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.741039687 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.740848834 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.74246162 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.742146879 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.740170953 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.74084145 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.741012032 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.742190008 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.741116694 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.74212844 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.741154543 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.741161739 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.741892256 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.740680457 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.74126879 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.746180805 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.740967207 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.742541316 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.741209699 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.74275861 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.742012124 seconds)
  done (took 43.478591591 seconds)
done (took 93.952848892 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.661598361 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.145285822 seconds)
  done (took 8.482229685 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.74526567 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.744420309 seconds)
  done (took 5.205568171 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.744050772 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.744748123 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.744962072 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.744915597 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.746624585 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.746825348 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.747872067 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.746061821 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.746742571 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.746388692 seconds)
  done (took 19.136034724 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.746203324 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.746044199 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.741449958 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.744801369 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.744791192 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.742774545 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.74974976 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.749608918 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.749419261 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.74625764 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.749907273 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.747077776 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.749626451 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.747445955 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.748953301 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.747119432 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.747327761 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.747119947 seconds)
  done (took 33.124662894 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.749761776 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.749645993 seconds)
  done (took 5.182263199 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.747293314 seconds)
    (2/7) benchmarking "second"...
    done (took 1.748417384 seconds)
    (3/7) benchmarking "month"...
    done (took 1.746953472 seconds)
    (4/7) benchmarking "year"...
    done (took 1.747784621 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.747446674 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.747567093 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.746656512 seconds)
  done (took 13.914155973 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.750436064 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.901242512 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.970015076 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.419720949 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.752081512 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.753920023 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.711828966 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.752721372 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.755091997 seconds)
  done (took 19.449500301 seconds)
done (took 106.1693169 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.563908099 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.746296305 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.04064525 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.804447356 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.767978156 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.04363585 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.768964803 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.059708041 seconds)
done (took 42.477082189 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.83900658 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.29320218 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.324917677 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.025058954 seconds)
  done (took 12.328107259 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.730687397 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.282879898 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.791209551 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.406646978 seconds)
  done (took 20.094614791 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.115146359 seconds)
    (2/2) benchmarking "read"...
    done (took 2.101907478 seconds)
  done (took 5.906166861 seconds)
done (took 46.852383686 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.753597606 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.751372934 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.749880129 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.75244784 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.749199488 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.750317282 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.752246476 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.75340339 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.752465791 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.753548291 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753924701 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.754008724 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.750861945 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749127801 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753037819 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.75079338 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751245518 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.754185667 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.750152858 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.751902617 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.751422968 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.753720317 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.750595311 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.750621882 seconds)
  done (took 43.72936877 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.753034836 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.751158928 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.754686929 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.755312331 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.75322799 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.75553919 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.753635029 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.75200114 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.755027973 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.753413905 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.751467818 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.751783707 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.753200523 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.751592926 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.75459352 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.751610449 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.753970605 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.751760957 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755795226 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.753235828 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.756168243 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752961019 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.751407979 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.755042703 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.752647839 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.754215965 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.755700478 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.752334654 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.755155372 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.752283583 seconds)
  done (took 54.290183998 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.761125522 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.761754305 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.755210474 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.755599934 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.754774864 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.754514991 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.75590453 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.756029307 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.755914425 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.756014876 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.755445614 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.755069067 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.756219302 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.756345056 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.755294423 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.755460011 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.757096924 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.757220814 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.755163177 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.755896935 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.755736424 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.755672104 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.756409633 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.757053794 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.756819344 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.755219846 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.756354192 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.756530415 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.755847401 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.756408509 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.756733662 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.755946834 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.756089034 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.756465824 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.757872553 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.757226649 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.760519415 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.764382217 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.757376301 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.757451896 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.758771456 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.757345807 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.756631414 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.758343318 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.757406174 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.756558142 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.758472384 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.757966262 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.757904452 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.757997257 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.757880805 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.75793685 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.758136989 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.757762093 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.757786411 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.757680092 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.757416817 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.758626652 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.7592043 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.758447641 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.757261691 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.757920396 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.758117918 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.758838454 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.759823072 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.758097561 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.757261641 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.758500399 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.75953467 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.758449306 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.759306272 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.758413602 seconds)
  done (took 128.217520058 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.758280556 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.757509129 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.757412636 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.756580804 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.756293538 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.758930822 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.757573785 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761098657 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.756624332 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.759329866 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75853843 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.756365786 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756893728 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.760409078 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.759148261 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.757276544 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.76143311 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.756957352 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.760512425 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.762237454 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.760902905 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.758184275 seconds)
  done (took 40.379693747 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760990013 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.760879523 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.757629869 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.760210343 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.756677168 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.761087322 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.759962362 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.761755798 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761576315 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758307144 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758192901 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761031854 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.759069974 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758378427 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758350732 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.75837793 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761087954 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.758836211 seconds)
  done (took 33.365331701 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.758390036 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.758098708 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.760221986 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.758089919 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.759590847 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.76157896 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758278885 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.761449669 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.760949257 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.758762217 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.762991732 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762234836 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.762009487 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758279688 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761220498 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.760223661 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.761977001 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759070839 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.762058539 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.758607794 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.75933104 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.760844591 seconds)
  done (took 40.417763458 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762906309 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.761719315 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.759429803 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.759059557 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.759700596 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.762750482 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.763188596 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.75949206 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.762982835 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.762362843 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760390783 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.762827269 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.760005403 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.760731313 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.760065122 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.760596972 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.76405121 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.760895708 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.763521754 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.760430437 seconds)
  done (took 36.921787958 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.764411614 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.763688908 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.764311066 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.763135797 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.764343574 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.763734324 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.764074874 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.763572817 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.763565226 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.764602601 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.764548409 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.763941601 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.763799198 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.764976166 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.764532022 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.765194851 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.76400401 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.763603118 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.763996923 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.765295209 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.76458984 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.765093104 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.764705042 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.764549502 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.764089354 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.764533271 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.765528793 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.765640849 seconds)
  done (took 51.097503027 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.765548984 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.764305728 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.761984893 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.761901898 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.761828348 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.762514151 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.763963109 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.763359299 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.76513618 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.762197369 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.764922411 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.765667743 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.764906205 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.765034015 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.766971596 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.768063502 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767300262 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.766611094 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.767154457 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765687313 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.768043673 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767858806 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.766974411 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.762603495 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761999267 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.765957946 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.763360524 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.763711332 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.767022333 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.764464003 seconds)
  done (took 54.64342319 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.784504488 seconds)
    (2/2) benchmarking "in"...
    done (took 1.784136291 seconds)
  done (took 5.265309878 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.764143411 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766663336 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.766651834 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.76420506 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.76448382 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.766497 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.767340473 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.764675833 seconds)
  done (took 15.821678938 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.765269548 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.766040289 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.76763885 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.767320904 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.765989208 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.766098217 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.772806544 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.767203612 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.767818599 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.768415923 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.772342425 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.773756118 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.770832708 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.766818055 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.766555209 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.768800609 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.767013074 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.767226807 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.767902202 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.768439175 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.768647321 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.769623663 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.770007953 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.765474557 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.768685037 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.777721537 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.772823253 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.769143648 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.768396729 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.770916095 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.768270027 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.766406145 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.768638892 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.768864164 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.768205189 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.769620603 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.776364062 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.767890724 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.77438059 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.769035305 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.769754931 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.766693682 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.770041879 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.77138664 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.770029409 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.77007617 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.76855283 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.76680223 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.769530516 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.771096747 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.772513088 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.768923804 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.766049963 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.773604971 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.770731593 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.774903201 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.76985035 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.771446805 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.776619617 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.778681822 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.782380484 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.776448571 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.771372248 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.770225097 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.780131675 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.792989716 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.775770664 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.767739391 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.767362637 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.770941783 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.776056997 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.78138546 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.778462103 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.770152911 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.771113355 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.770592526 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.772126377 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.771411138 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.776810972 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.773691733 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.771125828 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.771112392 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.77947103 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.791607679 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.7706604 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.771197697 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.771852524 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.771564898 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.771828681 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.78061895 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.771438415 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.77236878 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.771059925 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.771168239 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.774069083 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.772495281 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.771345928 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.773243058 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.769280374 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.772590104 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.772494111 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.774906354 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.781025547 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.772374509 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.771603346 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.777984883 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.772612268 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.771862914 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.779314189 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.772667073 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.773765002 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.773714556 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.778872565 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.770749925 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.775359079 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.781039915 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.773181169 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.773039149 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.773119631 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.77327262 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.781897767 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.797073094 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.7727257 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.773324657 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.777739155 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.783824969 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.774450335 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.776599001 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.773098647 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.770013874 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.769671509 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.774433542 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.773471391 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.775278669 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.774520344 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.774029971 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.770351194 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.773368421 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.774074509 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.775593983 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.776281937 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.77501635 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.775218808 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.776931668 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.774358659 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.776150321 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.779826417 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.775186489 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.774860425 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.775635081 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.772532144 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.77452193 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.774306604 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.775471432 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.773504876 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.774750872 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.774946232 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.77579095 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.775407027 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.774989659 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.775684847 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.776023821 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.779132634 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.775757577 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.778031066 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.774112872 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.772263566 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.774495428 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.775480143 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.775375151 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.775292335 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.774438534 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.779410767 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.783411787 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.77579639 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.775985085 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.779086681 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.778880107 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.776831434 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.777871265 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.780484641 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.785840621 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.777458309 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.783428782 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.777809943 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.778026354 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.777063118 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.776638088 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.77513915 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.777183363 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.780048302 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.783103857 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.788446684 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.784221022 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.778385092 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.779918496 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.777731677 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.780853195 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.781371952 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.778274576 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.777604297 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.776563119 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.777257327 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.777395506 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.778626724 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.778406609 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.776816893 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.778761813 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.778725088 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.776862708 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.777898475 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.778638295 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.779210706 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.774927212 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.778519965 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.778602679 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.777706684 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.775264329 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.776589522 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.778297531 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.778358666 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.779189636 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.784770106 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.776276902 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.779167177 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.780825951 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.77893294 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.776973972 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.779561953 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.780641062 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.778403201 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.783821002 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.778523676 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.779183078 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.783703531 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.777978685 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.778289588 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.78157279 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.779589416 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.776714988 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.781616544 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.786437883 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.779557008 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.779615332 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.779283888 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.77927749 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.781263017 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.784617651 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.776705522 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.779107863 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.779969005 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.78056657 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.776968463 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.781661507 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.780353851 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.780471516 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.782393559 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.780906969 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.780436487 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.780633505 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.780562552 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.781136431 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.78045695 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.782857709 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.78778042 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.785210106 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.781200688 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.781694547 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.781874362 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.783305117 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.780662958 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.782359973 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.780452406 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.793635878 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.788764951 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.785710759 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.782593746 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.780567272 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.78593046 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.782098272 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.784291189 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.780566357 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.78220622 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.780526192 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.781034374 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.778903075 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.781964356 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.781550259 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.781880842 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.784342399 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.785665742 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.782685447 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.781365224 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.782470189 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.78186881 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.781929892 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.781633209 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.781718503 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.784082914 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.784011343 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.782253045 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.781756298 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.78895285 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.78288716 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.783061588 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.782171423 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.782907663 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.78243152 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.783135731 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.782557321 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.7852685 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.790701001 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.786710902 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.790472354 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.783411259 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.791803224 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.784601611 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.786506871 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.790729126 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.78044981 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.78189983 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.78380066 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.784573681 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.789719476 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.784073823 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.785463836 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.788015408 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.784123968 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.785129902 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.784205443 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.783864298 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.783932999 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.784124706 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.79087301 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.784313259 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.786514805 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.785672295 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.780874382 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.784186119 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.784208671 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.784076883 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.78797262 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.785539979 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.784282319 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.783992162 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.784610968 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.78500042 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.784905115 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.784613711 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.782286024 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.784268773 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.790425383 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.785762423 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.789588156 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.784766896 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.791679871 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.78536859 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.791154977 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.785852732 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.785746392 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.78597089 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.784234204 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.78739169 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.785079888 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.785964014 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.785676424 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.789053671 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.790856093 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.788838448 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.790048419 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.788273956 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.788524118 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.787688195 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.796738831 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.809403792 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.787342458 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.789611521 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.783428839 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.787799296 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.791826818 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.786515407 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.785256498 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.788984399 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.796789218 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.794087502 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.787586647 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.787876686 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.787178234 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.787961589 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.786907732 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.788620869 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.787589288 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.787934116 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.788375152 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.788110361 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.789342717 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.787090221 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.787306896 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.788019259 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.788218484 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.796253715 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.787475424 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.788123272 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.787876039 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.787167797 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.788631044 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.788115725 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.787973203 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.789419241 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.788244394 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.789931737 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.794095335 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.793964983 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.791708065 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.787476535 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.788786866 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.787614024 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.788266052 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.790051924 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.787758447 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.78933625 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.789063683 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.789080621 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.790627905 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.788174833 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.789291336 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.788992567 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.78979382 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.790967871 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.795360997 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788889099 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.785395767 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.788804373 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.78843371 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.788680831 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.789392081 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.796491657 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.792123365 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.798177704 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.797767988 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.794477991 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.790014931 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.792024216 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.79681181 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.791286903 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.790587533 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.789535885 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.790347722 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.790709567 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.792574084 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.790468463 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.795820285 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.790612175 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.789567254 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.796726432 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.79243736 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.790566672 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.792001435 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.794374156 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.790931428 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.788493471 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.79040168 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.790301603 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.795790082 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.79238253 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.790427319 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.792598699 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.788814297 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.791626929 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.795167981 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.791420211 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.791903231 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.788898305 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.792078477 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.791657814 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.790989668 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.788651648 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.791201788 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.791265191 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.794938817 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.79847218 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.788640885 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.794134783 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.792043147 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.791701562 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.794183073 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.793296544 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.78877431 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.789938312 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.793094543 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.792317304 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.794283901 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.795282785 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.792759624 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.793176246 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.79261606 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.794487679 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.796691577 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.802461734 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.799961345 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.789158761 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.791329055 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.794448476 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.795154845 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.793079901 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.793648819 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.794835435 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.795511964 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.793505043 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.792836871 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.793238921 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.796476414 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.808322215 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.793110461 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.794006758 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.793538637 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.797815575 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.792811329 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.790513793 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.794452789 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.795869926 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.797405304 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.802184818 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.79453439 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.800131838 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.79379284 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.794445182 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.797966359 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.796771005 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.801898676 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.797299358 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.794357695 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.794705587 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.79899906 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.810098025 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.794023759 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.803237465 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.822898686 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.794950064 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.796582712 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.795105543 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.79517836 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.795497663 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.797060993 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.795143888 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.79626003 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.795267786 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.795583927 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.795909089 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.801406426 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.796519752 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.795175531 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.796856847 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.79512691 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.79678918 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.793338764 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.796420574 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.796422618 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.796272201 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.795734716 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.795149827 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.796425989 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.807170614 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.80577584 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.796427767 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.796619903 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.793635281 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.799525641 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.798916241 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.805829355 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.803828064 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.797024632 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.796659181 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.79956584 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.79790008 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.794304138 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.795749975 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.796369854 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.796131871 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.793821982 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.809183584 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.804920411 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.801243944 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.796289959 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.798253462 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.797347273 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.797642171 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.797260222 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.79762502 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.798455721 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.798381489 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.801245822 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.797299441 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.796566966 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.799700608 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.80487263 seconds)
  done (took 1064.972515201 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.795342082 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.794695414 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.794516855 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.79567667 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795652233 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794472666 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795861584 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.795255316 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.795305514 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.796049899 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.796274167 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.795287945 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.795576284 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.795601614 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795358815 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.795296411 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.795718855 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.795106788 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.795428841 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.795622503 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.795913426 seconds)
  done (took 39.432064152 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.798661221 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.796000466 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.796794921 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.798852084 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.796441217 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.798357185 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.796426051 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799183414 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.798511179 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795991909 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.7996014 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799997459 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.797591473 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.796595955 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797142874 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.799049915 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.800037973 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.796656713 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.798246844 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.796682484 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799480813 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.797552248 seconds)
  done (took 41.283739789 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.800305268 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.80096373 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.799344353 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.798383944 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.800611209 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.798228571 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.802157247 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.800471424 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.800790544 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.801038172 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.799011336 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.801365402 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.807975418 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.804384968 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.802719103 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.801793671 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.944900033 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.800744952 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.801283201 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.801300046 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.798625185 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.805751272 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.799125471 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.7984749 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.799923784 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.801457764 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.801731978 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.801277092 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.801795487 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.803750312 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.805335466 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.801113513 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.801869495 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.803939552 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.80122694 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.801702079 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.805075685 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.801590645 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.799476315 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.801678087 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.810286614 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.820689619 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.802878767 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.808489859 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.802478463 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.801857685 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.805014711 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.808882791 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.799954417 seconds)
  done (took 90.195259623 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.803522014 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.802315497 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.799169461 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.801686598 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.802058179 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.802434387 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.802237933 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.80214973 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.799123322 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.799857958 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.803115157 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.798632325 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.7988403 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.801427665 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.802312781 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.799225045 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.800600072 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.799332398 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.799275628 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.800633375 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.800064539 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.802992478 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.803386895 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.801318182 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.803138426 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.799478931 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.799725834 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.803529335 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.800624146 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.800398758 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.802716991 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.802662872 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.803344957 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.799890727 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.799265418 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.802757213 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.802695517 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.800013961 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.802725243 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.801729087 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.802760392 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.803114446 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.803611318 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.803849833 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.8010597 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.801156424 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.801290883 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.800769261 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.8018127 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.804573068 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.804168361 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.801723724 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.804663753 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.801065307 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.804573057 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.804699668 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.801413964 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.801166425 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.805156889 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.802290521 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.801832264 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.804362398 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.802611978 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.80415414 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.80437339 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.802399 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.803848646 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.805514959 seconds)
  done (took 124.269926714 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.805585006 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.805905123 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806700492 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.806826028 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.806442629 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.806643708 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.806949598 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.806994868 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.806423689 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.807981481 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.806582916 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.806445623 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.806339358 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.808587904 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.806831333 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.807696981 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.806578574 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.806987 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.807017179 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.806633153 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.807284162 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.807367152 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.80609887 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.807315341 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.807596072 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.807941834 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.806983405 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.806972053 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807644424 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.807544805 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.807990764 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.807839973 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.807866637 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.807706082 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.807795834 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.807959899 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.807473814 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807678309 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.807832144 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.807913921 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.807707542 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.80890954 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.807955451 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.807890755 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.808302199 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.808818543 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.809676476 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.808920571 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.80905681 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.808811252 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.808723478 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.808646017 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.809603158 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.808523061 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.809430726 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.808694751 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808970398 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.809310439 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.810683718 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.808772372 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.808620267 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.808316383 seconds)
  done (took 113.818777311 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.809545604 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.808967501 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.806215025 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.805732323 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.809417783 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.806408071 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.80875398 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.808576768 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.808920318 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.808434055 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80938706 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806585203 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807665538 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809080618 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.80699001 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807769489 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.805908301 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.807772793 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.808578889 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.808021552 seconds)
  done (took 37.898341934 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.807345651 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.811064603 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.807075288 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.807745105 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.810646356 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.807813986 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.8112597 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813001127 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809539196 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812001013 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.812404845 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.812629605 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810474746 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.807542016 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.80983749 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.807579341 seconds)
  done (took 30.698133221 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.808122825 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.810916546 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.810277421 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.810675859 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.808406788 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.808272908 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.810524443 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.808912589 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.808850686 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.810519357 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.812103328 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.81120813 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.812389912 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.812001478 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.809245339 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.811527943 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.808848701 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.809224147 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.812142403 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.812156063 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.809856013 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.80879489 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.812127511 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.812400094 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.809732875 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.809164165 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.809299432 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.809854371 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.808962182 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.812776446 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.809346942 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.810034262 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.809157357 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.809106196 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.812705736 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.810687249 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.812524598 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.812691371 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.8126595 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.812799927 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.812126289 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.810418923 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.812017264 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.812963738 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.810115658 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.814027071 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.810906672 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.811175963 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.810734721 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.809841116 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.813753689 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.813530449 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.812952488 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.813774378 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.813738384 seconds)
  done (took 101.34517855 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.812966502 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.813205132 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.810323583 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.813001725 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.813911313 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.810951884 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.814718234 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.810299688 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.811334676 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.814605749 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.812257731 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.814402642 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.811553008 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.814180179 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.81277075 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.814438285 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.812142309 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.811763583 seconds)
  done (took 34.373081608 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.811886282 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.812310131 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.814902778 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.813351975 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.812740857 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.815469709 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.811467417 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.815312579 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813712462 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.812420006 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811819254 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.815833612 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.814374605 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.815334348 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.812487947 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812413152 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.815026457 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.814707503 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.812771531 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.812947607 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.816047632 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.815435252 seconds)
  done (took 41.648286585 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.815044944 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.814607364 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.8306702 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.835964408 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.836136272 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.849530102 seconds)
  done (took 12.726459418 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813071628 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815598564 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.81314687 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816256852 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816801222 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813256824 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813156976 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813577276 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816708472 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814203962 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813890585 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816287588 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816828259 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813858045 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817033896 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816179093 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814300579 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81370793 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813795425 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816733878 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814095875 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817336559 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81527135 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815643832 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815779465 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815154471 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817390607 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815311476 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81408981 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817292072 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818191947 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813853946 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818497486 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815032642 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81748326 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818739708 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815116552 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817059613 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817913724 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816213158 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.818520322 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817557579 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818268802 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815993728 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818174588 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815653265 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817318898 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816075631 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815507374 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818283895 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818616994 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815647246 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8185283 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818612881 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81904342 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818603772 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816811494 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817277742 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819281798 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816198708 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816632359 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819223431 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816502883 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816646846 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818720676 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816602668 seconds)
  done (took 121.626249639 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816739226 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.817246087 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816618061 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816647659 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816927598 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817289418 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817138792 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817834648 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817808525 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817624593 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820463326 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818049813 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818040263 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818361318 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817294526 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817852602 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81676808 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818757923 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817150254 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820342386 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818023544 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817812003 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817822422 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818865732 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817606987 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819634662 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817818615 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819004029 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818837265 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817634316 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819605641 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818040434 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817863811 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.81817764 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818074866 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81783299 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818714079 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819268903 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818741641 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82159611 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819472417 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820646398 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818956566 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818600003 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81903455 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819084733 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819432052 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819230075 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818922211 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819237439 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819590673 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819170318 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819916016 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81901365 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820246109 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821072273 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81970066 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820177517 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820915394 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822982359 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820444888 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819823649 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82475633 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819778608 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820083472 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820339342 seconds)
  done (took 121.797860827 seconds)
done (took 2481.917870232 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.867020797 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.809448028 seconds)
  done (took 15.429370604 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.984913081 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.936004858 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.820910303 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.860067777 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.821190621 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.838781667 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.837876328 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.822308746 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.822278157 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.821398975 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.82124751 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.007682061 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.820971713 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.821875675 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.821474806 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.914431187 seconds)
  done (took 51.532946082 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.82464407 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.825284407 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.836016104 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.827206913 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.82409187 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.837445779 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.859564909 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.827506033 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.868417863 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.839051129 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.896817258 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.83409243 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.822552756 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.872900404 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.83620867 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.838007249 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.920499817 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.901035315 seconds)
  done (took 35.04324306 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.901330887 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.827712818 seconds)
  done (took 10.487719333 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.853996765 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.86521498 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.848117538 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.829205087 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.837345567 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.825554033 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.853582198 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.858740435 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.822669404 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.837615717 seconds)
  done (took 70.186854836 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.828323429 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.825253416 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.827876105 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.826040451 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.819085732 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.820581201 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.822865825 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.822519574 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.487960595 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.860969165 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.831917963 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.829788558 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.824001654 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.824430447 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.82229127 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.847210969 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.948566921 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.821010094 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.820333461 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.829041895 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.824053908 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.891363099 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.839426188 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.827122943 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.854899388 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.493112814 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.832838036 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.831062065 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.943445702 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.822115817 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.823370274 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.825069297 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.826695431 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.221173498 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.114401562 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.825171023 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.838535764 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.832990212 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.822068311 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.951081008 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.825435931 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.830250999 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.707543356 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.099856112 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.939833961 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.872231148 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.183130202 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.846294826 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.827194361 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.856955434 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.829421337 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.825920957 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.838463731 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.339356854 seconds)
  done (took 130.160896205 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.819854843 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.091801886 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.977520511 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.822596958 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.113236183 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.027701968 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.821818385 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.871134447 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.821615588 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.051802127 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.984034132 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.931754002 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.821835282 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.818382216 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.820871123 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.81943602 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.982998681 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.896598115 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.824683957 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.819991963 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853756546 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.06775724 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.955699245 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.823302368 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.845203025 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.036246489 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.957795574 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.931059819 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.101047256 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.820313842 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.888283659 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.823562904 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.820294582 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.819261351 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.979082714 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.920700796 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.913796322 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.825226152 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.822414438 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.82113568 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.49699831 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.019116982 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.921248492 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.967342819 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.071277924 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.028317546 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.608972153 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.820867651 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.558166627 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.985253174 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.059609321 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.057026507 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.950190547 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.824878847 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.08958771 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.821414944 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.821273589 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.058513705 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.050025153 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.926726986 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.826065489 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.822362522 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.821205318 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.071309225 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.823392025 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.919752397 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.824991431 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.821744098 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.920852487 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.92827372 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.05592011 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.037928621 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.857633845 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.130305048 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.289131374 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.072244463 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.892979058 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058184535 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.826306705 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.822371838 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.909915438 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.778256869 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.982480447 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.07755458 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.079996468 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.862746212 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.544967211 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.823066905 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.055510068 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.048355888 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.080911263 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.065275335 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.977831503 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.951250309 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.823434315 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.823410734 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.066519156 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.964241754 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.82559932 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.190088556 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.062235334 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.390708452 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.855935161 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.171211921 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.96142428 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.827630109 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.467823408 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.82547508 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.054875017 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.86923465 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.826521717 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.825438777 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.047445363 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.815942654 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.823699007 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.643480828 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.889978955 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.829311036 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.06145064 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.828213923 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093994719 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.828068869 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.063890196 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.136314066 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.862233403 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.000419906 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.069015763 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.828557181 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.074347804 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.073172778 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.945850055 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.10309168 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.753741567 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.827849799 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.117303205 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.827511212 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.824933037 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.000069777 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.828937168 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.975715814 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.830674003 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.117948954 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.855285235 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.983135686 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.830300971 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.086421976 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.864837345 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.881188661 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.828391621 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.962014708 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.828608444 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.698447698 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.981519217 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.829535953 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.825719269 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.36130505 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.826736632 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.986010154 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.062524734 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854767882 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.904310288 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.49665509 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.827042797 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.915390251 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.856423725 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.167913562 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.826955493 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.984114883 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.829263511 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.36931113 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.826719282 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.070540105 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.066923428 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.831217043 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.82723418 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.744689768 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.827560172 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.827653579 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.990888196 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.317087307 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.828968295 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034301233 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.832404712 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.971983155 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.830910191 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.904171422 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.183191098 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.827288499 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.828605554 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.828380586 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.828665705 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.828607863 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.039467835 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.861580125 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.36297829 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.972053648 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.106065198 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.149607161 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.08050496 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.876708784 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.831770044 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.071961317 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.828824015 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.886503592 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.823053493 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.843116001 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053911723 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.823590678 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.031302935 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.100972038 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.749164508 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.867158899 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.816900951 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.81200271 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.731862847 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.968114091 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.902965892 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.811718235 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.806734223 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.929248242 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.936794008 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.018738936 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.807363265 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.13820077 seconds)
  done (took 893.908950641 seconds)
done (took 1208.50092668 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.798142748 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.804728901 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.78448285 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.796523753 seconds)
  done (took 28.922921607 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.800510207 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.796601144 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.798297659 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.796279192 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.800610277 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.797131016 seconds)
  done (took 12.519576539 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.818580333 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.789795055 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.791138978 seconds)
  done (took 21.126436607 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.866820261 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.177418013 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.908270432 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.216520809 seconds)
  done (took 9.891732106 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.793312893 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.792286612 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.792578535 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.795146903 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.792578622 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.793878577 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.792715889 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.792884651 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.793894823 seconds)
  done (took 17.862836043 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.170755263 seconds)
done (took 96.23121815 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.828985669 seconds)
    (2/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.03064327 seconds)
    (3/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.84540326 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.814678055 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.323421963 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.886288345 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.072768027 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.990496051 seconds)
    (9/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.163295923 seconds)
    (10/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.859620225 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.067861349 seconds)
    (12/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.854335942 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.786079377 seconds)
    (14/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.907416933 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.876657316 seconds)
    (16/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.956255449 seconds)
    (17/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.01221693 seconds)
    (18/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.935928297 seconds)
    (19/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.01776825 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.854068074 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.928159595 seconds)
    (22/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.175387096 seconds)
    (23/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.830859643 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.009116296 seconds)
    (25/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.933773016 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.973059895 seconds)
    (27/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.884392339 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.098892618 seconds)
    (29/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.920866458 seconds)
    (30/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.001912597 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.046051848 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.128340229 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.85093094 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.831855658 seconds)
    (35/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.80854375 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.521092948 seconds)
    (37/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.052275677 seconds)
    (38/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.921299204 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.942503312 seconds)
    (40/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.831647644 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 3.408116729 seconds)
    (42/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.343873433 seconds)
    (43/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.944026081 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.169794842 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.855347106 seconds)
    (46/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.817942473 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.033972357 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.945322573 seconds)
    (49/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.833144493 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.594255651 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.062575786 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.0907962 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.102906521 seconds)
    (54/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.027509834 seconds)
    (55/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.924512306 seconds)
    (56/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.206251727 seconds)
    (57/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.218166734 seconds)
    (58/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.019702165 seconds)
    (59/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.865130689 seconds)
    (60/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.822880213 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.906736876 seconds)
    (62/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.160220557 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.133264808 seconds)
    (64/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.900011034 seconds)
    (65/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.831704818 seconds)
    (66/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.91478542 seconds)
    (67/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.976402356 seconds)
    (68/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.016634598 seconds)
    (69/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.837933933 seconds)
    (70/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.200980995 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.954331551 seconds)
    (72/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.075543197 seconds)
    (73/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.973015736 seconds)
    (74/309) benchmarking ("sort", Int8, false)...
    done (took 4.806881773 seconds)
    (75/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.90208281 seconds)
    (76/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.92016812 seconds)
    (77/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.898260385 seconds)
    (78/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.399358745 seconds)
    (79/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.042691043 seconds)
    (80/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.219439174 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.840002345 seconds)
    (82/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.091900972 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.524106487 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.110677049 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.911248833 seconds)
    (86/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.012922377 seconds)
    (87/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.927775577 seconds)
    (88/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.843548307 seconds)
    (89/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.971033111 seconds)
    (90/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.736619744 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.838414449 seconds)
    (92/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.018508443 seconds)
    (93/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.519293208 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.826834417 seconds)
    (95/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.919991234 seconds)
    (96/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.731300781 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.871764098 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.929002754 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.220262575 seconds)
    (100/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.308639888 seconds)
    (101/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.262286924 seconds)
    (102/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.918530077 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.171320466 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.93331201 seconds)
    (105/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.823428255 seconds)
    (106/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.218387935 seconds)
    (107/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.121961529 seconds)
    (108/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.200452204 seconds)
    (109/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.547838344 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.043068435 seconds)
    (111/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.962147362 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.077823705 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.835270947 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.837993782 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.090853301 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.76954538 seconds)
    (117/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.868590009 seconds)
    (118/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.036837701 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.839610285 seconds)
    (120/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.151236874 seconds)
    (121/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.313342095 seconds)
    (122/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.927862575 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 2.284821239 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.860143737 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.837132497 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.110308616 seconds)
    (127/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.928050441 seconds)
    (128/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.074392594 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.220641769 seconds)
    (130/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.150768176 seconds)
    (131/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.31835028 seconds)
    (132/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.09381286 seconds)
    (133/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.85141386 seconds)
    (134/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.117004703 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.056303174 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.83797772 seconds)
    (137/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.908557987 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.103167585 seconds)
    (139/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.000909623 seconds)
    (140/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.989658106 seconds)
    (141/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.944436729 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.157154566 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.949286454 seconds)
    (144/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.833030283 seconds)
    (145/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.642008336 seconds)
    (146/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.537326554 seconds)
    (147/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.857801106 seconds)
    (148/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.137785244 seconds)
    (149/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.003093259 seconds)
    (150/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.866068863 seconds)
    (151/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.288255458 seconds)
    (152/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.977279896 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.075616846 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.863216926 seconds)
    (155/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.957807309 seconds)
    (156/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.937010359 seconds)
    (157/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.758057723 seconds)
    (158/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.138138489 seconds)
    (159/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.424290952 seconds)
    (160/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.14669572 seconds)
    (161/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.098686002 seconds)
    (162/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.8885347 seconds)
    (163/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.96234103 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.851694845 seconds)
    (165/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.859571348 seconds)
    (166/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.851035718 seconds)
    (167/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.816272222 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 3.378935353 seconds)
    (169/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.299711046 seconds)
    (170/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.924470662 seconds)
    (171/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.211647898 seconds)
    (172/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.83535623 seconds)
    (173/309) benchmarking ("sort", Float32, false)...
    done (took 5.68462188 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.842599021 seconds)
    (175/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.941532405 seconds)
    (176/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.962066872 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.638195369 seconds)
    (178/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.973355761 seconds)
    (179/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.867462169 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.126909711 seconds)
    (181/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.840944449 seconds)
    (182/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.86814977 seconds)
    (183/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 3.154027319 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.126482704 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.840631096 seconds)
    (186/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.372387419 seconds)
    (187/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.003181375 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.836429568 seconds)
    (189/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.003556296 seconds)
    (190/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.001437954 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.859133102 seconds)
    (192/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.317468064 seconds)
    (193/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.035165743 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.948458359 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.903557674 seconds)
    (196/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.006532878 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.867131393 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.180599432 seconds)
    (199/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.367752842 seconds)
    (200/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.026327465 seconds)
    (201/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.815399777 seconds)
    (202/309) benchmarking ("map", identity, Int64, false)...
    done (took 3.198084584 seconds)
    (203/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.954745273 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.47247173 seconds)
    (205/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.867237579 seconds)
    (206/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.797243457 seconds)
    (207/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.002898376 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.754215006 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.834161056 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.889114341 seconds)
    (211/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.829258528 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.010628733 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.740039411 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.83300279 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.834849076 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.8334332 seconds)
    (217/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.884756408 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.791337233 seconds)
    (219/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.840409301 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.736401547 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.040336619 seconds)
    (222/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.445196338 seconds)
    (223/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.841086276 seconds)
    (224/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.152540003 seconds)
    (225/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.18209552 seconds)
    (226/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.928487653 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.911660253 seconds)
    (228/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.678988321 seconds)
    (229/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.924119565 seconds)
    (230/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.069663324 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.142529138 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.042384176 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.083926538 seconds)
    (234/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.145846989 seconds)
    (235/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.381513911 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.862247399 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.836538697 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.031441391 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.887962374 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.855992037 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.821679076 seconds)
    (242/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.933503901 seconds)
    (243/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.922385856 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.979680914 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.937841491 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.837585499 seconds)
    (247/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.188933777 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.515105913 seconds)
    (249/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.012210655 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.945292296 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.452058165 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.022627412 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.517998367 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.146843055 seconds)
    (255/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.421931931 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.82873098 seconds)
    (257/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.753290488 seconds)
    (258/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.858897288 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.927094245 seconds)
    (260/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.842727292 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.293200096 seconds)
    (262/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.192632372 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.219578115 seconds)
    (264/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.94132863 seconds)
    (265/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.051321705 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.876116625 seconds)
    (267/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.935207501 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.401218785 seconds)
    (269/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.945088427 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.205715325 seconds)
    (271/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.984353573 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.756909772 seconds)
    (273/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.875445759 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.769736295 seconds)
    (275/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.442632272 seconds)
    (276/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.91575655 seconds)
    (277/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.824189241 seconds)
    (278/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.054496365 seconds)
    (279/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.979401784 seconds)
    (280/309) benchmarking ("sort", Float64, false)...
    done (took 5.596824237 seconds)
    (281/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.228112608 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.805379712 seconds)
    (283/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.843965891 seconds)
    (284/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 3.336506381 seconds)
    (285/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.051466061 seconds)
    (286/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.82779038 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.454632056 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.923993007 seconds)
    (289/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.122417748 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.924178011 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.006333907 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.599782279 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.84268023 seconds)
    (294/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.855408015 seconds)
    (295/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.276260498 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.87862012 seconds)
    (297/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.918252015 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.184573605 seconds)
    (299/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.975764588 seconds)
    (300/309) benchmarking ("sort", BigInt, false)...
    done (took 6.844292688 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.204527652 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.870025959 seconds)
    (303/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.827812913 seconds)
    (304/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.764790497 seconds)
    (305/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.934580644 seconds)
    (306/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.374967339 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.178705952 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.357760919 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.849162901 seconds)
  done (took 998.599371385 seconds)
done (took 1000.424895834 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.872497768 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.873312167 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.849606823 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.870778718 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.963476668 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.882305584 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.859613766 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.853608393 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.896055314 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.897157092 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.849649529 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.880736864 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.854345272 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.849322616 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.845494028 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.86309279 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.159133096 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.876925312 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.863342739 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.852998419 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.864131819 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.846485017 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.892885107 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.877204509 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.844394179 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.844478243 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.847266204 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.863837937 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.957066072 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.845852471 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.841913343 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.854616611 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.15199747 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.864689242 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.831756429 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.859097999 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.850861861 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.846412517 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.84045516 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.873020077 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.240484094 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.873045486 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.839906186 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.834996907 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.83643724 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.837099716 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.837697264 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.838786852 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.850912425 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.851754321 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.233824722 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.88659962 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.838415596 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.832879013 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.844412677 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.834143723 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.834047165 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.850106219 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.85371003 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.850979078 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.134446715 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.859296513 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.829837254 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.848711414 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.839392275 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.267446016 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.856183758 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.829058364 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.229684728 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.8654239 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.266157059 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.870385193 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.825744991 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.841650354 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.858570218 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.137680898 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.842913088 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.820130229 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.832333744 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.823348268 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.830726374 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.83752812 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.824007367 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.819741153 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.836645563 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.853328671 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.830504815 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.822106322 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.827479942 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.839396964 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.827805167 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.832135481 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.821761346 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.813323077 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.826664351 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.82037116 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.823537791 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.823712273 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.822679562 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.828092189 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.219565298 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.872119478 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.814396646 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.814231401 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.816692554 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.835127128 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.221163809 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.855664959 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.840016333 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.865108399 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.819639751 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.121841662 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.851512988 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.83727429 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.827418022 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.821807339 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.814048878 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.121490195 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.248461117 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.87152782 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.820199892 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.81959587 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.837943052 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.82026629 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.816353442 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.579688681 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.845958773 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.835449049 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.94358366 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.829875552 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.853395033 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.820847424 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.82243821 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.853261707 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.838009571 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.854624768 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.822783882 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.838034772 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.838293414 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.815921348 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.834309583 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.829912806 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.82061512 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.825087654 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.813719625 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.854385173 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.835555011 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.835294385 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.840809205 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.944439172 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.816902591 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.123368066 seconds)
done (took 288.303172035 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.886443417 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.812958357 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.916645369 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.817041995 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.897403393 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.901690728 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.812151621 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.813748185 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.813627517 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.18855944 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.814000016 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.814303205 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.808070379 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.813070635 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.898926362 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.816786683 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.813464313 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.151821133 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.817241831 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.888450124 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.809957054 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.813873212 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.816547884 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.1881526 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.814031996 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.817326694 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.889280841 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.816803528 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.153222026 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.810486299 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.815701523 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.153313771 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.908588526 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.835790218 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.82742916 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.824991353 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.899828478 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.821954723 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.898897931 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.898793781 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.918952093 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.857280554 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.815605647 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.813960266 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.821570466 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.818967978 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.815435967 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.845871152 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.81791071 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.815809512 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.153106897 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.827373156 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.825491301 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.816172338 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.815471556 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.839508617 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.816117995 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.820102825 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.908955957 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.820029868 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.884048922 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.19067246 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.237378473 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.818324315 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.813013472 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.816139681 seconds)
  done (took 180.800942483 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.885712687 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.891792258 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.886279701 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.822688573 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.867113341 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.886993513 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.82261095 seconds)
  done (took 14.810195373 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.825431014 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.819035391 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.869494039 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.868533427 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.818300348 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.986866589 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.820257434 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.830731628 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.817268857 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.872278468 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.821528991 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.820227804 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.827492448 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.819426496 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.868840482 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.831127521 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.935703371 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.82080224 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.821127952 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.971139357 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.817834126 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.827517415 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.880419136 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.831481048 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.82189873 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.825991034 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.404693635 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.821184136 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.818259548 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.821122297 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.818169966 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.862533462 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.820124077 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.819409628 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.818191219 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.935650941 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.821475091 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.818068091 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.82143449 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.817982371 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.821531564 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.821466538 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.822151158 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.819418467 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.820999936 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.844795182 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.821047142 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.821713483 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.821160685 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.822548353 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.879506241 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.823109607 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.819247142 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.820507118 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.876835626 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.830105169 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.823209757 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.819582374 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.823004871 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.8205478 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.972568266 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.86979743 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.822216745 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.871431643 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.822748244 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.823250062 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.823306597 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.823744436 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.917530665 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.82394235 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.870590947 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.820763456 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.982588767 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.845564023 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.823837732 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.825723645 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.825528338 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.823257261 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.815122594 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.828549896 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.819411065 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.821646937 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.82642494 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.82807006 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.817838069 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.932735482 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.925712696 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.8160146 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.831255128 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.82561901 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.817202999 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.876226212 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.816497192 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.813262689 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.870126813 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.932123181 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.871238622 seconds)
  done (took 201.085987546 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.818325685 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.822029077 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.815970303 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.831522454 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.812035027 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.811887638 seconds)
  done (took 12.65470322 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.81351139 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.81491155 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.812512667 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.810591667 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.810184946 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.812133749 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.810577112 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.81434568 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.81367875 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.807289087 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.810024638 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.810240079 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.81131427 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.808533013 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.807860031 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.807354126 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.808099848 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.805479767 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.808755019 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.807670444 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.958313776 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.807247643 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.807698315 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.809659883 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.814183372 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.807718588 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.815679357 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.808257046 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.808242941 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.815873729 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.812004554 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.810324623 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.808826709 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.813399459 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.812302632 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.809974979 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.812742594 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.809861707 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.806152275 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.810362661 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.809958134 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.809072465 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.808897495 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.810829095 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.811135309 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.813563905 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.812871153 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.816345919 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.809043592 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.809970132 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.809465809 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.808836266 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.81107415 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.80947484 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.812023136 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.814597684 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.815067462 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.809979443 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.808793802 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.810379753 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.810882511 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.811641881 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.811239099 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.814889347 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.816242624 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.811163701 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.810131003 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.814177192 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.810378296 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.809783864 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.811976198 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.807443464 seconds)
  done (took 133.26921933 seconds)
done (took 544.380034832 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.002899188 seconds)
  done (took 8.74223269 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.968783981 seconds)
  done (took 8.752626554 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.097179324 seconds)
  done (took 9.838478028 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.811305563 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.83362963 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.815199479 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.806007329 seconds)
  done (took 29.026875919 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.029114726 seconds)
  done (took 8.765135219 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.825539325 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.800617416 seconds)
  done (took 15.397358727 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.980078148 seconds)
  done (took 8.717569519 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.866651356 seconds)
  done (took 8.632425318 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.810458653 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.833119127 seconds)
  done (took 15.393659732 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.785527646 seconds)
  done (took 8.522179438 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.367994626 seconds)
  done (took 11.203229701 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.811977108 seconds)
  done (took 8.65507718 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.799097203 seconds)
  done (took 8.533188526 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.794902755 seconds)
  done (took 8.527714955 seconds)
done (took 160.445752375 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.794910737 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.792542354 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.789948292 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.789263294 seconds)
  done (took 28.898319215 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.829517979 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.830591417 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.83187571 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.840977733 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.832685268 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.830132279 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.822193344 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.82200884 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.841120188 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.832244628 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.831726995 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.831867755 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.831554852 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.821537254 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.832248553 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.831343017 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.840894919 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.832011849 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.822291809 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.832829944 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.796609284 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.841069348 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.838256002 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.80032086 seconds)
  done (took 45.624289115 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.999025219 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.870631379 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.953448534 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.852134581 seconds)
  done (took 9.40303736 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.851466829 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.853255813 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.864508352 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.904443299 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.926051109 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.861400511 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.826634724 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.821283066 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.808360125 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.853547487 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.928706708 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.848514015 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.937841835 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.800636721 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.987154529 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.799647479 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.800221966 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.852738845 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.904910827 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.918146306 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.801788666 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.852326817 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.855289277 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.849475577 seconds)
  done (took 46.436928496 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.799062484 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.808201802 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.806173874 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.801411225 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.799853996 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.800700616 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.806049096 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.801547437 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.821371087 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.801985006 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.799279291 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.800632175 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.798615905 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.799907004 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.799643558 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.812061634 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.814125325 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.800192846 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.804563267 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.806447381 seconds)
  done (took 37.811517376 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.794490684 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.648669348 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.146642662 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.051624665 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.795149615 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.79408806 seconds)
  done (took 30.960837171 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.81489986 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.807644561 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.800701058 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.859577537 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.940422297 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.809036386 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.802235444 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.815518642 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.848576377 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.866159754 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.821229356 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.831541394 seconds)
  done (took 23.748029989 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.798988906 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.808255267 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.79833035 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.825417254 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.812523981 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.809348903 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.808969488 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.796633319 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.81648572 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.820024907 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.809519003 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.813999849 seconds)
  done (took 43.453354428 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886276581 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.684882338 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.846379692 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.527700417 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.269068117 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.008906959 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.325553765 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.136495494 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.801177341 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.071484325 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.801769397 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046085807 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.052373556 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907185846 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.797624179 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.287895463 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097978901 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03564025 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.828266847 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.540315973 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991205989 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.348005763 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.64392135 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.993672172 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073595039 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.997071088 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.123652275 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.8258832 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99993139 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901605933 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87373563 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.862949228 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137944711 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244218205 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960857981 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873716438 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.517806814 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.583795436 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.865670041 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.590264605 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.812353056 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.00144299 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874330777 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865622214 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.800658362 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381202476 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205084647 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.871139093 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.576733651 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.865546533 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87610487 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953599446 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.869619618 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.680980696 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818157281 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.146485028 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.863780932 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872235869 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.437415768 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.985490565 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.459863457 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.802899609 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.060149846 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.606929155 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.348316208 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.020974191 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.873755894 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.873030379 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80427347 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.62054722 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996756417 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.014349929 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.888831495 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.517077043 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182646873 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.92364495 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.956070964 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161937777 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.631897987 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.803228742 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096443942 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.819718519 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802621258 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.728271114 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.803993589 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170409804 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907495568 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.512173276 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911745319 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.205637641 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.879462024 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885054175 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87590661 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.092623523 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.750737971 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869235189 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.669145545 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.16583636 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892172394 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.207367838 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803547769 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.873813952 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125259867 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.081687047 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.954853701 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.454310818 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030238614 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870187616 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.954882521 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.651523695 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.976076151 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.15123799 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934214893 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.967132578 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016401899 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.831170835 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189484516 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91225924 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.051347349 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.898096102 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151314937 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.219912273 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.172127329 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945191461 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.880663105 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.880717334 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.686084355 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.509497304 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.147552827 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.882409126 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.227490126 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.987503433 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.881703455 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815926635 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.478197957 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.895422996 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.005793224 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.106598832 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.674091786 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.252538611 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816227053 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.028900854 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.996098241 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.104256923 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.536185673 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.97066881 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139982571 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.225357888 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.060416045 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988834501 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901751004 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972704868 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90470775 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.165909922 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.233209754 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.886952712 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.886388906 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.748373707 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.958371671 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883915835 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.888764528 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.679414045 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173693427 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.915037518 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.887190171 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.771523853 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.896982766 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950567304 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.88940063 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.893460748 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.407038554 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.643081808 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.8971464 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.469294661 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112865834 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894510443 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.646797562 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072102461 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.967244853 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.172958379 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949700085 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.817808099 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.596339368 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.577961279 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885392781 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.819433176 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.884597621 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895319 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.896382655 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.267638523 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.171650526 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934838236 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.700564954 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.004976601 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895764122 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.889589795 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885824115 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.409246895 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.006571391 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37500933 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.992050746 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022516706 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.899268906 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.81952957 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.889369352 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.890288647 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.886839693 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.842783623 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93900227 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.631578014 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341852798 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143158804 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.579516532 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903918953 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.66691723 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.021325396 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.910097962 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.693165696 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822854581 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.982168649 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9593665 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.897349217 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.665186203 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.674398298 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.455272395 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201481997 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.209571916 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340469776 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.225561933 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.250070887 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.226482123 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123870663 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.418477132 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.948208298 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.230986876 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831722541 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972253786 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.539998566 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248068271 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902186318 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11524748 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.285063915 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.742682026 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054080854 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099948976 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923584181 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.648705182 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.911335316 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.093700881 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02950171 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.72314733 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115768041 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224128712 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.689886258 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.002610346 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.887356823 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.601417078 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975065703 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.598803955 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.251092359 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.381380562 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.890272836 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386468804 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.892107687 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.334009285 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251934328 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.174519841 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.973915558 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82426411 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.900986618 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.89991819 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.889441088 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.863891633 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.797225689 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.162693673 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900789645 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125233056 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.134795995 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157312648 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.80144916 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.895402484 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890787298 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211010795 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.540393497 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122137562 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.196126052 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.461111364 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897334178 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.82360784 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823709975 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.583264631 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.897822871 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.867261585 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128735357 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.082570471 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.844293958 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.252636181 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196720744 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.145370984 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.905345325 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.172940062 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.170366402 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.62554823 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919753519 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.992530558 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.677239135 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.014613365 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.159695518 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.126405974 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.690492137 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.122776672 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.953422317 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.712148081 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.891454911 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106075153 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.161353524 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.901188953 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148750747 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.61444867 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.906805103 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269787042 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955338765 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.927993731 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.070792297 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.090497584 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903474367 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977515485 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902665643 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.903732916 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.902978782 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940134902 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.944588897 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.034953744 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.909008603 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982366296 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.992242439 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.482244446 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.90328249 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179356058 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270585652 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.231834368 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958414802 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.894253002 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893897971 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827651042 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029111017 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.339737711 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167175683 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.025248796 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.194888203 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918570501 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.715317636 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.146940513 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198388054 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169644594 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.789383305 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883464729 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.998481145 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.161875314 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905962131 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.105714732 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139468752 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223363982 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369188717 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.987249427 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.325716072 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168254558 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.265050273 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895755162 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.484600586 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.901323219 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.667095557 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.938896474 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.909879247 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186290628 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906688144 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277865072 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.91833491 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.092948772 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.412260896 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.668957501 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.264095865 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.888467073 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.962891635 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181166547 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.297064667 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211096328 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968237908 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907453151 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.603942663 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033672196 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.830235038 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.199896841 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.897425687 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108253463 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.608255684 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.906630534 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182582518 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209235559 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.894555084 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.854877382 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949847524 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.906791452 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.121131231 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177521525 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.154752005 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908608034 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.905753928 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.714324797 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18197978 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962371341 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832104242 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.900939034 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997145817 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.145058242 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933360715 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.414647557 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.608409822 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20342619 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.818759705 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920673486 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.265759774 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.339210024 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237836805 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.427121509 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13877791 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.459959055 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.707189689 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.265030452 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.903800501 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.276422883 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.269679558 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.902960509 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.366522671 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002184749 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.180014483 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222456303 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.916100196 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.721346146 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.946928069 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12402135 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.495934324 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84206287 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.899815251 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.961686692 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.899922859 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.028181956 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910774218 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.886485356 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.740015556 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.718401702 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393274732 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.905545484 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.887270166 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.761852543 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.422441025 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999474072 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043188322 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904599986 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.613071679 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.194363208 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.154478658 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.391643445 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.967395428 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.906778786 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902927312 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828768075 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.099830543 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.282053349 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209285721 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.220872351 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.004423003 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.90584078 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.118000949 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113416229 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.918797239 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064799097 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.24452283 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.007586148 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.633748606 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.581105487 seconds)
  done (took 1693.79112083 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.905823444 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.179941338 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.91132129 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.947791087 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.920323821 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.982889463 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.938322165 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.962727907 seconds)
  done (took 57.583399295 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.901653149 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.11032831 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.913143483 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.90441111 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.940481645 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.904597717 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.154178067 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.921294078 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.941010789 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.914728259 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.904270429 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.906642712 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.274680806 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.931234713 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.905264465 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.91711522 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.912986353 seconds)
  done (took 75.20295525 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.905873666 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.227725683 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.945360503 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.929407837 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.858933431 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.910282325 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.86985434 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.927477299 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.910577331 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.143728953 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.2468217 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.921862556 seconds)
  done (took 90.636260177 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.919437855 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.912047466 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.912295493 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.911398044 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.911842666 seconds)
  done (took 11.413411566 seconds)
done (took 2196.707109077 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.157253115 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.133016021 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.147508484 seconds)
  done (took 6.117850276 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.054218771 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.10117919 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.221212513 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.225847405 seconds)
  done (took 10.443772901 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.198658263 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.283115357 seconds)
  done (took 6.319794925 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.283269309 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.928752302 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.313397407 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.907484019 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.908467037 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.910192773 seconds)
  done (took 22.569675248 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.909611372 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.91273299 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.910681489 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.912447218 seconds)
  done (took 9.483429216 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.890742513 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.648744153 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.88990175 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.909408973 seconds)
  done (took 21.177192347 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.657217878 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.308834639 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.653994498 seconds)
  done (took 9.459454705 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.418079747 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.748632917 seconds)
  done (took 9.005920775 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.168975247 seconds)
  done (took 4.008258549 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.938862496 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.180354088 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.433657653 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.439884657 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.517882787 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.763833338 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.219465319 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.149941543 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.360036385 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.370611364 seconds)
  done (took 25.21422642 seconds)
done (took 139.31913312 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.280324411 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.287396817 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.112689565 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.293367388 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.147243663 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.112839453 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.124155937 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.278124293 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.754742782 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.747522129 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.295933465 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.147434848 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.077938563 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.281198836 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.080515697 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.280028465 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.142227992 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.303171343 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.946356342 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.149698278 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.136709794 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.877494366 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.132756771 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.894081035 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.145643611 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.062921779 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.452562889 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.283668732 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.096185571 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.466760511 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.067538428 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.298119086 seconds)
  done (took 170.598792325 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.640289362 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.909820695 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.910857292 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.910570603 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.291439571 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.91175949 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.909362616 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.910357605 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.282781107 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.245123252 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.921834381 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.318805675 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.92725336 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.910370026 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.927056187 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.911051022 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.476198719 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.796975339 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.932786694 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.933973439 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.934874252 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.193449055 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.933568268 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.239825548 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.45683413 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.934053719 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.893074477 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.932510392 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.935353508 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.933264078 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.933210568 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.913111303 seconds)
  done (took 210.056628658 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.880410264 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.913773984 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.91233563 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.912792492 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.917758314 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.922453861 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.912065684 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.911890271 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.521099839 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.561201246 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.933418482 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.917200147 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.928789855 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.912908357 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.931363537 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.913043991 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.93387279 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.934583496 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.932093561 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.932385035 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.932210977 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.695736013 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.929656902 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.650441184 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.914552897 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.917207193 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.912955823 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.921712399 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.92335541 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.92611984 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.92929215 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.914461396 seconds)
  done (took 222.074008345 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.118728838 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.920548252 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.922416235 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.848678902 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.921357195 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.919888667 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.867862195 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.110079082 seconds)
  done (took 19.496642685 seconds)
done (took 624.073560203 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.352579 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.212017928 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.09832903 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.944815139 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.180959454 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.977893171 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.941679088 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.010291644 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.66959984 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.015239033 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.633211671 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.963213779 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.725790955 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.968338571 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.062749571 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.001134565 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.493737577 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.589020076 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.122168475 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.001133782 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.119761514 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.909394576 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.026600231 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.689449392 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.746134292 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.954687707 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.123993745 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.501496491 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.952800648 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.105187135 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.71248596 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.340663101 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.957051396 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.94044329 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.998459446 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.976811626 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.296827532 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.955616979 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.065612242 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.711697538 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.009560926 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.550639598 seconds)
  done (took 105.455809419 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.910980165 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.909401171 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.909300994 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.909665215 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.911026895 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.910144644 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.908740996 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.90865164 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.91063818 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.909519625 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.90930707 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.911498226 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.909838962 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.910442653 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.909549652 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.909430797 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.911189248 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.912288329 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.910071435 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.909223486 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.910423225 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.910269459 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.924421242 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.909720161 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.911072253 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.911198236 seconds)
  done (took 51.535958977 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.924932634 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.090332972 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.182756224 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.945820254 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.924274777 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.926719615 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.943547473 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.93087888 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.927494819 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.927280772 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.020690574 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.931470295 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.943608317 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.183302542 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.943069748 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.925688196 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.924802517 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.925843671 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.097786166 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.941441849 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.945014414 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.931464017 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.945592843 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.938639034 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.927276142 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.925173359 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.928426846 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.395457236 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.935574345 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.018702579 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.969512558 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.949687683 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.353718511 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.19487399 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.984378322 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.938511857 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.927224913 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.024096008 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.93253837 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.92653753 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.945135182 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.932079671 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.182258089 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.420489984 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.942103978 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.927312751 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.41879111 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.034280996 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.967338362 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.937858161 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.185737193 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.945737855 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.928550297 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.925951956 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.963042706 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.937121425 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.926156801 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.247842876 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.938247309 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.946918963 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.932313496 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.927143804 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.105218597 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.937930469 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.091520136 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.937429292 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.934653096 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.928494217 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.185882326 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.946595055 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.428828231 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.942836539 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.928561175 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.022342978 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.095994668 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.438767391 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.941458877 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.107726786 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.373038719 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.954602351 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.935338819 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.390956971 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.959384534 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.938394169 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.933094005 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.932119157 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.928854734 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.973887536 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.94569938 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.351099481 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.433196687 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.268165485 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.956430028 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.943640001 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.928966703 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.251940301 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.938623272 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.928313241 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.17810524 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.441529932 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.944210245 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.936516277 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.410350019 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.946355417 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.949219384 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.937776876 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.193099174 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.948070423 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.974230646 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.930673929 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.937270503 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.932714119 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.948971448 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.937220432 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.930375453 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.403804186 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.045221614 seconds)
  done (took 239.186153947 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.926327785 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.928296833 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.926017932 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.927460096 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.922699732 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.92936378 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.923228136 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.923819124 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.928628404 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.923776887 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.923779211 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.923445068 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.926236079 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.927006688 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.548981707 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.93182608 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.579980535 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.926458346 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.924933712 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.928774294 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.605370531 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.933800624 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.925108028 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.931196237 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.925089301 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.924518202 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.926498457 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.051046467 seconds)
  done (took 169.883367369 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.93164276 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.111705988 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.954456881 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.970439246 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.940444289 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.931104173 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.95649083 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.955770107 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.937746588 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.931156898 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.930025443 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.994354957 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.948679287 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.071713583 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.96451161 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.964377062 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.041076893 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.940141426 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.930617986 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.93098485 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.961890227 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.927107329 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.994970791 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.061815885 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.954990559 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.051077448 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.937200418 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.933477825 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.932587029 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.052519163 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.952793516 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.994901679 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.965304441 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.950756975 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.055584097 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.048572428 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.038742459 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.962711396 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.937226062 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.930877827 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.931366697 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.91944898 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.049215699 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.952354139 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.934096834 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.040040791 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.95224071 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.933906079 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.942843667 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.931676817 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.947345386 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.951934248 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.002704897 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.06734504 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.968490588 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.959131124 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.958499689 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.222016449 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.944033967 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.032811212 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.92643988 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.053951231 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.955107417 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.922034517 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.934182339 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.938855499 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.962727629 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.966288497 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.041495118 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.941157347 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.033848579 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.970625071 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.943110307 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.934113503 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.93786054 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.052277257 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.051204055 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.969026216 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.972331175 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.967391983 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.930062627 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.934780834 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.923382557 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.952641456 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.938575451 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.05062187 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.052343647 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.942840779 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.936608922 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.936915587 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.936720908 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.960708541 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.060956487 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.970492571 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.029636076 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.004422721 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.011608507 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.951838535 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.948173867 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.939620916 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.000841323 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.950435673 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.946702764 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.268549883 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.009270342 seconds)
  done (took 209.547579612 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.38719816 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.988509855 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.996090791 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.248433953 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.361851093 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.791690457 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.983868732 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.987922132 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.009059511 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.17637579 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.059936008 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.006098643 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.974328953 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.958838137 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.986920322 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.006616476 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.997232191 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.327400055 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.106757864 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.06847302 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.96706802 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.251414347 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.308401293 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.379590447 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.022180649 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.318866869 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.665608075 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.131342379 seconds)
  done (took 63.33771593 seconds)
done (took 840.790397778 seconds)
SAVING RESULT...
DONE!
